(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    123451,       2481]
NotebookOptionsPosition[     98925,       2028]
NotebookOutlinePosition[    112381,       2322]
CellTagsIndexPosition[    112338,       2319]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Diffie-Hellman Algorithm", "Title",
 CellChangeTimes->{{3.700774153171832*^9, 3.700774159196458*^9}, {
  3.716902403353675*^9, 3.716902404538095*^9}, {3.7392670595955343`*^9, 
  3.739267069590203*^9}},ExpressionUUID->"755e0098-9782-4df5-8299-\
7f54266c54d6"],

Cell["\<\
Diffie-Hellman Algorithm is an algorithm of securely exchanging cryptographic \
keys in the modern internet to ensure the Transport Layer Security.\
\>", "Abstract",
 CellChangeTimes->{{3.700774172671139*^9, 3.700774220850109*^9}, {
   3.700778895632181*^9, 3.700778896308676*^9}, {3.716902409622859*^9, 
   3.7169024154226503`*^9}, 3.7354828213821573`*^9, {3.73548464781948*^9, 
   3.735484648712131*^9}, {3.735587270504136*^9, 3.735587272381384*^9}, {
   3.7392670740897217`*^9, 3.7392671406623573`*^9}, {3.7392674169416046`*^9, 
   3.739267419856814*^9}},ExpressionUUID->"db4efd27-b72d-4835-a486-\
b18956bba0cb"],

Cell["Siyi(Raymond) Guo, Jun. 24,  2018", "AuthorInfo",
 CellChangeTimes->{{3.7360942820567207`*^9, 3.736094285334813*^9}, {
  3.736098860672957*^9, 3.7360988944763517`*^9}, {3.7360990983398457`*^9, 
  3.736099107824772*^9}, {3.736099251923992*^9, 3.7360993016054573`*^9}, {
  3.7368685297868023`*^9, 3.736868530751481*^9}, {3.736868726576907*^9, 
  3.7368687285334053`*^9}, {3.7368690514137907`*^9, 3.736869059546919*^9}, {
  3.736869099634509*^9, 3.73686915397053*^9}, {3.7392674219794908`*^9, 
  3.7392674298654585`*^9}},ExpressionUUID->"59a63784-4e95-46b9-9a1d-\
2c013f47161b"],

Cell["", "Text",ExpressionUUID->"85271f44-5b04-421c-bf31-0395fab10c35"],

Cell["\<\
Modern internet security involves the usage of RSA. In particular, we use a \
pair of Private and Public key to encrypt and decrypt the message. However, \
the disadvantage of RSA is that if one part lost its private key, all the \
past communication can be decrypted. Therefore we need to find a way that \
both parties can share the information, and past communication can still be \
protected if one party lost its private key. And this is the motivation for \
Diffie Hellman Algorithm, an algorithm that allow both parties to calculate a \
shared key without having to ever explicitly communicate the shared key. \
\>", "Text",
 CellChangeTimes->{{3.700774312865305*^9, 3.700774350341485*^9}, 
   3.716902427754265*^9, 3.7354828504054613`*^9, {3.735483653472313*^9, 
   3.735483683917967*^9}, {3.7354849519274273`*^9, 3.735484958639419*^9}, {
   3.7355873998710403`*^9, 3.73558761257386*^9}, {3.736099062603284*^9, 
   3.736099062938388*^9}, 3.738588402126446*^9, {3.738588473865753*^9, 
   3.738588479696198*^9}, {3.738588515044569*^9, 3.738588515882841*^9}, {
   3.7392677855642033`*^9, 
   3.739267973547201*^9}},ExpressionUUID->"99ddfba3-f2e4-48aa-a886-\
7472bbc581ac"],

Cell[CellGroupData[{

Cell["Simple Illustration", "Section",
 CellChangeTimes->{
  3.716825484342502*^9, {3.7354837120026693`*^9, 3.735483720370885*^9}, {
   3.7354849131442633`*^9, 3.735484915566925*^9}, {3.735484977664678*^9, 
   3.73548497936073*^9}, {3.735486235411076*^9, 3.735486260084824*^9}, {
   3.735587708401764*^9, 3.735587719552019*^9}, {3.736094321292815*^9, 
   3.736094380388455*^9}, {3.739287184284725*^9, 
   3.7392871903302517`*^9}},ExpressionUUID->"35feb7e4-4e93-4e64-abc0-\
7b0b86e8128f"],

Cell["\<\
The idea behind Diffie-Hellman is that, both party have a common tool, each \
of them adding its own secret to the tool that explicitly communicate the new \
message over the internet. And we can find a tricky way that both party can \
recover the received message with its own secret. \
\>", "Text",
 CellChangeTimes->{{3.7354837220663652`*^9, 3.735483751473709*^9}, {
   3.735486262485011*^9, 3.735486288116446*^9}, {3.735486386471116*^9, 
   3.735486438104398*^9}, {3.735486495412992*^9, 3.7354864964790583`*^9}, {
   3.735587802145555*^9, 3.735587813514737*^9}, {3.7360943822773247`*^9, 
   3.736094388427802*^9}, 3.736868570517212*^9, {3.739268000939412*^9, 
   3.7392680035874777`*^9}, {3.739268195365199*^9, 3.7392682003404026`*^9}, {
   3.739268239894349*^9, 3.7392682958630733`*^9}, {3.7392683285861692`*^9, 
   3.739268419363644*^9}},ExpressionUUID->"7bdcf8b5-db13-4113-a6ce-\
6b533e48ca47"],

Cell["Here is a visualization of how the algorithm works. ", "CodeText",
 CellChangeTimes->{{3.7354837283947477`*^9, 3.735483762505471*^9}, 
   3.7354839554661007`*^9, {3.735486453399912*^9, 3.7354864557440453`*^9}, {
   3.735486518874126*^9, 3.735486528166209*^9}, {3.735587823291749*^9, 
   3.735587914389967*^9}, {3.735588066119091*^9, 3.735588068495346*^9}, 
   3.736092052574951*^9, {3.739268076937811*^9, 
   3.7392680850923624`*^9}},ExpressionUUID->"6047e34c-4783-4ed0-b0de-\
5328517365be"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Import", "[", "\"\<illustration.png\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.735483764882769*^9, 3.735483804136156*^9}, {
  3.735486531590019*^9, 3.735486538965722*^9}, {3.735486839352989*^9, 
  3.735486841416996*^9}, {3.739268133513857*^9, 3.7392681860582037`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"6a57f104-ade9-4e69-9c46-f4f2c59d53ab"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
9Qsld0agHHoAAADcg/gNed4gY2zy7EGe/Uj/SJ4/SGwy5tIAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADO
E0NGzvn6Su2UeisN9UrWxZrg1WQy1iP21QxLmbGWY4codVVqplSDjLXKAADA
LcB2hoeiSslkrIc8TulJpVeUtsXExOxVOhkdHS3rn+R1bbGQ5fF4UtT7no2N
jT2o/pa1x2QtlyVkfGbyGbUlY71MAABwCtjOyFBKqZPSA0orVRvulmsin2tV
29KrVauW0r59+/T+/fvz6NGjefr06fzEE0/wsmXL+LXXXuPNmzfzJ598wp99
9hkfPHiQDx8+rPXDDz/wuXPntFJSUtjk4sWLGduPHz+eUX7v3r36HNu3b+f1
69fzqlWr+Nlnn+XHHnuMJ02axMOHD+eePXty48aNU0uWLJnqW9eoqKhr6jOR
9Yo3Kj1FxmdRj3JeiwwAAEIFtjNyyPpe4j9lHcq/qLb9zlrPsmXLpnTv3j19
4sSJPH/+fF6zZg3v3LlTt0VqairnVy5cuMD79u3jjRs36s/+4Ycf1p9Jo0aN
0uR7Yl6fut6rSv8gY73gO5Uq2Nz+AICCCWxn5G3nTUqTlN5S73WBjP5genJy
cuqIESP4mWee4S1btvDp06edbraIcO3aNf7888/5pZde0vcy3bp1S09ISEg1
20HdR8ga979W6kFG3x0AAATYzsjbznJK09S5viCvX6xevXrq+PHjee3atXz2
7Fmnm8FR0tLSePfu3fz0009z165d01WfN42MewcZQ15FRr8eAFD4gO3MhTDa
zipKS1Q7/yTHt2rVKm3x4sX87bffOn2J+ZorV67o+6MxY8ZwfHy8vm9Qbfi5
+n9wBH4LAID8B2xnHsij7Zwivi0mJiZNjtu/f7/Tl1Eg+emnn3jlypVcp04d
3e6qTT9Q/ydF/qcCAHAI2M4wEITt9JDR9+LevXunSywIuHGkr7t8+XKW8VnV
5hLb08KB3xAAIHLAdkaAXGynzBPjOXPmOF1FVyLxozVq1JA2P0bun1MHQGEC
tjOC+NpO8VvdunVzulqu5qOPPjJjU+c4+ssCAIQN2M7IY7Wdqr15ypQpTlfJ
1Ujsj7e933X21wUACBewnZHHajs9Hg+XLl2ajx075nS1XMu0adNkPoG093KH
f14AgDAB2xl5fGwnFytWjKtWrcq7du1yumquQuIx77vvPmsOkrlO/rYAAGEF
tjNC5GA7+f777+datWpJXDuPHTuWDx065HRVCzTXr1/XOVKSkpL0PcGjjz4K
XwWA+4DtDDMBbKeOY7l8+bLO5RQXFydx7Txo0CDesGGDPhYEx5EjR3jevHky
T123b7NmzXROL4HgqwBwG7CdYSJI25kl5vLMmTM8a9YsTkxM1GXKly/Pkrtq
9erVfOLECYeuJH8i+a4kH/Hs2bO5TZs2+j5A7q8kD/GmTZs4PT09oyzBVwHg
NmA780gebaff+QGSP/6dd97R+eerVKmSMW7YoEEDnjp1qs5tdeDAgXydAzjc
nD9/XrfvokWLuE+fPpITRLdJbGwsd+zYUeeizOk7SfBVALgN2M4gCZPtDGou
21dffcXPP/+8zM/OeB9R8eLFuXXr1iy5GZcuXarrc/LkST33uKBy6dIlnede
vlPi9/v168c1a9bMsk5LcnKyjleVvr6sBRMIgq8CwG3AdvoQYdsZ8rxrGYfd
s2cPv/zyyzxjxgzu0aMHV6hQIUt9xF/Wrl2bu3Tpou8v5D2kLyx5CiXPruQj
EV9rJ1evXuVTp07p786OHTt43bp12s9LXOSAAQO4efPmso5Mtuto0qQJjxw5
khcuXMhbt27l77//PuT3JvgqANwGbKe9tjNsOUJkHRapz4oVK/Q6kqNGjeIO
HTro52XyzNF6HaZknLJcuXKSr1CPW8pnN3ToUK1hw4bxhAkTtCR+cebMmdkk
66KYZeRzNY/t27cvd+rUSdav1DGlElvq7/1FCQkJupwcM3nyZN2ub775pl57
RcZVwwHBVwHgNmA77bWdtuSzkvuJo0eP8scff6zXkJT7CukXP/744/zAAw9o
39urVy9u27Ytt2zZUo/tyr2FSJ5VlilTRkt8tdlOJUuWzNguMY5m+RYtWuhz
yH3J4MGDdSypxOksWLCAX3zxRd0/3bZtG3/55Zd6DWc7IPgqANwGbKcNkM2+
qrBD8FUAuA3YThsg+CpbIfgqANwGbKcNEHyVrRB8FQBuA7bTBgi+ylYIvgoA
twHbaQMEX2UrBF8FgNuA7bQBgq+yFYKvAsBtwHbaAMFX2QrBVwHgNmA7bYDg
q2yF4KsAcBuwnTZA8FW2QvBVALgN2E4bIPgqWyH4KgDcBmynDRB8la0QfBUA
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
nVliLs+cIZ41izgx0ShTvjzp3FWrVxOfOOH8NeUnSb4ryUc8e7bMUzfuA+T+
SvIQb9pEnJ6eWZbgqwBwG7Cd9tpOv/MDJH/8O+8Y+eerVMkcN2zQgHjqVCO3
1YED+TsHcLh1/rzRvosWydw/yR1stElsLHHHjkYuypy+kwRfBYDbgO2013YG
NZftq6+In3+euHfvzPcRFS9O3Lo16dyMS5ca9Tl50ph77HT75FWXLhl57uU7
JX6/Xz/imjWzPOfj5GQjXlX6+rIWTKBzEnwVAG4DttNe2xnyvGsZh92zh/jl
l4lnzCDu0YO4QoWs9RF/Wbs2cZcuxv2FvIf0hSVPoeTZlXwk4mvtbMerV4lP
nTK+Ozt2EK9bZ/h5iYscMEDypRCXLZv9Opo0IR45knjhQuKtW4m//z709yb4
KgDcBmynvbYzbDlCZB0Wqc+KFcY6kqNGEXfoYDwv8+bJyCYZpyxXjrhOHWPc
Uj67oUMNDRtGPGGCIYlfnDkzu2RdFLOMfK7msX37EnfqRNy4sRFTKrGl/t6f
dD56o5wcM3my0a5vvmmsvSLjquFoG4KvAsBtwHbaazttyWcl9xNHjxJ//LGx
hqTcV0i/+PHHiR94wPC9vXoRt20rOeGNsV25txDJs8oyZQyJrzbbqWTJzO0S
42iWb9HCOIfclwwebMSSSpzOggXEL75o9E+3bSP+8ktjDedIXzt8FQCuBLbT
XtuJ3Iv2tjcAwB3AdtprO9He9rY3AMAdwHbaazvR3va2NwDAHcB22ms70d72
tjcAwB3AdtprO9He9rY3AMAdwHbaazvR3va2NwDAHcB22ms70d72tjcAwB3A
dtprO9He9rX3Tid/WACAsALbaa/tRHvb1977Hf1lAQDCCWynjbazVCnP/+bO
db4+btaFC0YeFNXezzv82wIAhAnYTnttp8dD6xMSKPXYMefr5VZJfkfVzumq
vZs6/fsCAIQH2E7bbWdSdDRdrFSJUnftcr5ubtKVK0beSDL6sIuc/WUBAMIM
bKf9trORavPvxH9JrsJDh5yva0GW5Jpcs0bnSE5VbSv3BE8reZz4MQEAIgps
p/22M15pYVQUXVdKHzTIWAtLjnW6/gVFR44Qz5un1wKVduaYGNqn/u9g828H
AGAvsJ3O2M5KSgvUvcJ/5JgyZSh1xAhjra+c1hgurJL1WWQtT1n/slUrSpP1
ZOT+Suk91Xa9CX0pAAoTsJ3O2M4YpT5Kf1Rt/z151z2pV49Spk411jE5cIA4
NdX567ZLshantK+sh9m7N6UXK0ZpZKx5lqLa6GP190ylauH9+gMAChiwnc7a
zkZKD6pzv6v6uT+Z7V+0KKW1bElp48cTL11q1OfkSeK0NOfbJ6+6dIl43z7j
OyV+v18/vT5minnNZPRRD6r/lyj1UyoZpjYGALgP2E7nbGesUjOle5SeU5/B
NuUb/+tTn/QaNSilc2dKl/WRZc6c9IW3bCHevZv48GHD19rZjlevEp86RfzV
V8Q7dhCvW2f4eYmLHDCAuFkzSi1VyhgvNSV+X12LzOF9VelhpduUEiPcvgAA
dwLbmT+oTEZ9JijNV1qj6vuxqu9p9b/u8/lKxilLl6bUWrUoRcYte/QgHjrU
0LBhxBMmGJL4xZkzs2v69Mwy8rmax/btS9ypk17POTUxkVLi4vy/v0h9Vy6r
Ov5L/b1RaRkZ7TpcqblSEVtbEABQGIHtzD/I/USSUnulvmTcVzyoNE9pKRm+
91117Z+qa/9C6ZvYWPquSBE6Ls8qlS6IxFdTZjtdMber8ie8ZY+pv/fIOVSZ
D5XWKf1BaaHSLKWJSkOVuis1USpjZyMAAECIwHYCAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAQHhhpysAAAAFENhOe0F7AwBA6MB22gva
GwAAQge2017Q3gAAEDqwnZHFbz56HwEAAMgKbKezoH0BACB0YDvtBe0NAACh
A9tpL2hvAAAIHdhOe0F7AwBA6MB2AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAABgLzFKFZXqK7VT6q001KuRShO8mqw0049mWMqM
tRw7RKmrUjOlGkol7LogAACwAdjO8FBUKVnpNqVxSk8qvaK0LcZDe5VORnvo
MgW3vkpY5CFKUe97NtZDB9Xfu9S2DUpLyPjM5DNqq1Qpgm0CAACByNF2eqKi
9nqio0+q/221neTxpKj3PeuJiTmo/i6otrOUUielB5RWKv+zW/wB+Vyr2pZe
rTiltK9A6f2rEY+uTTw9mfiJpsTLWhG/divx5q7En9xO/NnPiA/2Iz7c39AP
Q4jP3WEoZQQx32Xo4tDM7ccHZpbf29s4x/YexOs7Eq9qS/xsc+LHGhFPqks8
vCZxz0rEjUtRaslYSvWta5SHril/dlj9vVHpKTI+i3pKUfY3LwDApWSxnR6P
Z7f4A/K9x46OTi9esWJKxWZN06t16sA39enFDe4azs0mjuM2Dz/EHZ6cw90X
/4Z7rV7JvV9ZzQPXvcmD3v6z1tCtm3j4+1u0Rv3fDr77079r3bn9vYztgze+
nVG+7+sv63Pc9uIy7rxwAbf75SxuOXUyN773Hq43eCAn9ezOldu25tK1a6XG
Fi+ezXaqa7im6psfbGc0Gf5zttJflF/6zlrPskUopXslSp9Yh3h+M+I1yv/s
7Gn4kVSLj8lvuqB83j7l3zZ2Nvzmww0Mf9aoFKWJjzWvT13vVaV/qL+XK92p
VMHm9gcAFEyy2E5lz7PYzrhSCSmVW7dKF3/Q/L6J3H7e43z775drPzLqk50Z
Pia/6c4P/8b93ljDXRct1H6z0d13aX+mfFma+Fjz+lQ/8Kp6HWnbeZPSJKW3
lJ2+QMZYWnpyAqWOUPb8mZuJt6j+0OlBzvucSOjancSf9yJ+6RajH9gtkdIT
vH0xaQfVB9uj/v61Ug8y+u4AACBk2E5lqw3b6fGkJyTVTE26rSe3eOA+7r5k
Ed/x7gbHfU4kNPLv27nPmpf41sdn635gpVYt02Pj482+WLpqk3DYznJK05Qd
/sJ7Xq5enFLHq/7S2g7EZ4c470OcVJrqI+7+GfHTyk93Vb4rNorSyOh3yRjy
KjL69QCAwoe2ncoOZ9jO+MSKqXUH9udOTz/Jw95713Ef4qSkj9j75VXcfPIk
5btapEfFxGjb6X3+FortrKK0RPmon+T4VmUpbXFL4m/7Oe8f8rOuDDP6lmNu
Ut/LGKPPpdrwc/X/4Aj8FgAA+Q9tO5XN1bazXIPktNYzHuSB6/7kuH/Izxqx
433dt6zTvy/HFCtmjFdFRQWynVOkXxCj+ghic/f3cd4HFET9NJx4ZVviOiUN
n6Xa9AP1f1LkfyoAAIeYIv2CqJjoNLG5/f/0muM+oCDqrp0fcLvZj3LJ6tUM
n+Xx+NpODxl9L+5dhdIljs5pe+8GyTjh8tbE8mwr2oiLbOHAbwgAEDkybGfV
9u3SJY7OaXvvBsk4YdtHH2Z5tqXuAay2U+aJ8Zwmztt3N0pi72vEa391jNw/
pw6AwoS2nU3Hj3HcvrtREnsfXykx1RMdfUy1cwm55++W6LxNd7M+6pERmzrH
0V8WACBsyFyoSq1bOm7T3azbVvw2w3YqX8VT6jlvz90siZv0tve7zv66AADh
QvkqTh52h+P23M2SuEny2k6P+r90EeJjA5y36W7VtPp6Lpa093KHf14AgHDh
8XCREiV48F/XOW7T3arkO4dJfifTdnKxaOKqxYl33ea8XXeTJJb9vrpZcpDM
dfKnBQAIKxwdF8fFK1Tgn61a4bhdd5Mklr3ekEG+tpPvV/a0Vgk9J4jH3kR8
CLGAN6Trdxr5pZLijf7Uow3hq3JBcs9MU9qrdFHpmtIxpc0O1slp3qOsedZA
/oTr3TGIS1SpLHOC9ByhgevXOm7nC7JG7vpI55cqUbmy7k81Hn13Fl8lMYCX
hxl58OKi9JwgHlSdeENnw+46bfsLio4oHz+vqc7xodu3WRkjH6LsI/iqnJAc
0tI2s5RKKlVX+j3BRsNX5X90DOCIj7bpPHjRRWK1z6rRpTN3/c1CbXedtv0F
RYP+8hY3mzBOcnzo73yZunV0PkTZRz6+yrS3ZwYTz2pEnFjU+J2UjyOWvH+r
byE+MdB5f5CfJLkCJZf7bNVebcoZfSjpm0oO901diNMtZQm+KifMHJ7FLNvq
Uv6y0XFK35K9dYKvyv9kiVe/Y/MGbvzzu7lo2bJGPtrSpVjy/t36q8d4yDtv
O+4P8pMkV6Dkcm9y72gu36ih7kOJn5cc7t2ef47v/sfHGWUpB19lStbeeKeL
sXZHlWKZv5sGCcRT6xt5AQ/0zd/508Ot83cYvmlRC+I+VXQ+Jd0msaov2rGi
kcc3J39O8FU58T8y2uZpMtaOE2SO5c2O1Sg788h+vwFflf/xO7dK1t7o9vyz
eu2OYhXKZ3yOpZKSOHn4UJ0XcMCf38jX+dPDreHvb9W+qdWDU7lq+1s5plhR
Y/2lmBiueHMzncc3J39OAXyVr77qQ/x8C53bIsNGi4qrv1urPoXktV3ayrDl
JwcaeRuc9i151aVhxhoh4o+lz9SvKnHN+KzrtCQnGLH+Mk4q62gFOifBV+XE
dsps11NKC5Rq+yknfkzWwzmqJHku5ZlOTZ8ydyn9U0lysv1H6WOlBDKef5nv
cYSMtXSeVboU4Nwyd3u3Ujpl9R3bA1yTv3pYGW3Zf1XpC+82Kzn5qkDHbvZz
7Os+24JpkwZK75PRHvIc8UCAay6MBDUPuN+br3Kr6WKj22XYaFFM0aJcrmED
lry2bX7xkLblQzb9pUD7sBHbt+k1QsQfS5+pWsf2HF+5UhbbWSqppo71l3FS
WUcr0DkpRF9llTzD2tOL+OV2xDMaEPeoRFwhLqstl75G7RLEXRKNvpm8h4wj
So5XyVEuuZykn2KnD7o6nPjUIMPv7lA+dV1Ho48kMeUDqhE3L6PX4Mp2HU1K
E49MIl7YnHirqv/3g0N/b0t7g6w0VvJdX05yLy9WirWUm2vZ38/7/18t+4dY
9i8lY32cM5b95j7xHb+1vA7m3KH0cQLVY6xlv/i0cZbXAwO8540cm9s2f21i
5gmX9dFlvddPg7j2wkbIOSvkGVbf117m9nN/yQ1HjuDKbVpz0TKls9gc6WuU
qFqFE1s2130zeQ8ZR5Qcr5KjXHI5ST/FTh9018cf8h2b/qr97u2//x13/vUC
3UeSmPLqnTty2fr1OC4hIdt1lK5zE9f62W3cYspk7r70eR66ZWPI70034Kty
kqxhJbZ8RRtjDd5Ryr53qGDEGki8BlF2yTOecnE616t+5iN+b2gNQ8OUJtQx
JLHfMxtml6wpZZYRn2ge21f1hTpVJG5c2ojHl7h8f+8vSog1yskxk+sZPunN
9sa6VdfCFFtiaW+QHclRvUxJr/Fj0TxLmW8s24t5/z9v2f+pZX+yd9sWy37r
eaUPVd2yP9C5Q/FVgerxmWV/aaWKlte7ArznjRwbaJtvm1zxbp+jVDyI6y6M
hC2/kqxhJbb8llmP6DV4a/e6nSve3FTHGshzHPJnuzwejitVSnK96mc+4vdq
du9mqEc3rjtogJbEfje6Z1Q2yZpSZhnxieax1Tq058TmN3Ppm2rreHyJy/f7
/nIvHx+vy8kx9YcO0T6p4/wn9LpV8kwqHG1DEfBVgfpiRwcQf9zTWH9X+mQy
pvh4Y+IH6hn9ll5ViNsqf9WyrPFcTPplIonzKFPEkPRzzHYqGZu5XeLDzfIt
yhrnkD7d4OpGHL7EOC5oRvxiG2Nsb1s34i97E5+zqW9naW+QM7Le2milk2S0
1/eWfdco+28l3bL/J8t2a5yGSW7+JtC5Q/FVgerxo2W/jLvFWF6fC/CeN3Js
sNtMPrLs+zdhTTZ/2JILUPpig/76Ft++crlef1f6ZDKm2HTcvVx/2BDdb6l6
6y1cvnFDLpdcXz8Xk36ZSOI8ipQsqSX9HDJ9TPHiGdslPtwsX1YdL+eQPl2N
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
AAAAAAAAAAAAAAAKKjFKFZXqK7VT6q001KuRShO8mqw0049mWMqMtRw7RKmr
UjOlGkol7LogAACwAdjO8FBUKVnpNqVxSk8qvaK0LSYmZq/Syejo6MsUOAdw
2OTxeFLU+56NjY09qP7epbZtUFpCxmcmn1FbpUoRbBMAAAgEbGdkKKXUSekB
pZWqDXfLNZHPtapt6dWqVUtp3759ev/+/Xn06NE8ffp0fuKJJ3jZsmX82muv
8ebNm/mTTz7hzz77jA8ePMiHDx/W+uGHH/jcuXNaKSkpbHLx4sWM7cePH88o
v3fvXn2O7du38/r163nVqlX87LPP8mOPPcaTJk3i4cOHc8+ePblx48apJUuW
TPWta1RU1DX1mRxWf29UeoqMz6KeUpT9zQsAcCmwnZEjmgz/OVvpL6ptv7PW
s2zZsindu3dPnzhxIs+fP5/XrFnDO3fu1G2RmprK+ZULFy7wvn37eOPGjfqz
f/jhh/Vn0qhRozT5npjXp673qtI/1N/Lle5UqmBz+wMACiawnZG3nTcpTVJ6
S73XBTL6g+nJycmpI0aM4GeeeYa3bNnCp0+fdrrZIsK1a9f4888/55deeknf
y3Tr1i09ISEh1WwHdR+xR/39a6UeZPTdAQBAgO2MvO0spzRNnesL8vrF6tWr
p44fP57Xrl3LZ8+edboZHCUtLY13797NTz/9NHft2jVd9XnTyLh3kDHkVWT0
6wEAhQ/YzlwIo+2sorREtfNPcnyrVq3SFi9ezN9++63Tl5ivuXLlir4/GjNm
DMfHx+v7BtWGn6v/B0fgtwAAyH/AduaBPNrOKeLbYmJi0uS4/fv3O30ZBZKf
fvqJV65cyXXq1NHtrtr0A/V/UuR/KgAAh4DtDANB2E4PGX0v7t27d7rEgoAb
R/q6y5cvZxmfVW0usT0tHPgNAQAiB2xnBMjFdso8MZ4zZ47TVXQlEj9ao0YN
afNj5P45dQAUJmA7I4iv7RS/1a1bN6er5Wo++ugjMzZ1jqO/LABA2IDtjDxW
26nam6dMmeJ0lVyNxP542/tdZ39dAIBwAdsZeay20+PxcOnSpfnYsWNOV8u1
TJs2TeYTSHsvd/jnBQAIE7CdkcfHdnKxYsW4atWqvGvXLqer5iokHvO+++6z
5iCZ6+RvCwAQVmA7I0QOtpPvv/9+rlWrlsS189ixY/nQoUNOV7VAc/36dZ0j
JSkpSd8TPProo/BVALgP2M4wE8B26jiWy5cv61xOcXFxEtfOgwYN4g0bNuhj
QXAcOXKE582bJ/PUdfs2a9ZM5/QSCL4KALcB2xkmgrSdWWIuz5w5w7NmzeLE
xERdpnz58iy5q1avXs0nTpxw6EryJ5LvSvIRz549m9u0aaPvA+T+SvIQb9q0
idPT0zPKEnwVAG4DtjOP5NF2+p0fIPnj33nnHZ1/vkqVKhnjhg0aNOCpU6fq
3FYHDhzI1zmAw8358+d1+y5atIj79OkjOUF0m8TGxnLHjh11LsqcvpMEXwWA
24DtDJIw2c6g5rJ99dVX/Pzzz8v87Iz3ERUvXpxbt27Nkptx6dKluj4nT57U
c48LKpcuXdJ57uU7JX6/X79+XLNmzSzrtCQnJ+t4Venry1owgSD4KgDcBmyn
DxG2nSHPu5Zx2D179vDLL7/MM2bM4B49enCFChWy1Ef8Ze3atblLly76/kLe
Q/rCkqdQ8uxKPhLxtXZy9epVPnXqlP7u7Nixg9etW6f9vMRFDhgwgJs3by7r
yGS7jiZNmvDIkSN54cKFvHXrVv7+++9Dfm+CrwLAbcB22ms7w5YjRNZhkfqs
WLFCryM5atQo7tChg35eJs8crddhSsYpy5QpI7k0uGHDhnzzzTdzu3bttNq2
bav7h6Y6d+6cTZ06dcrYf+utt2Yc27JlS27atKnkQeRKlSrp2FJ/7y9KSEiQ
dS65b9++PHnyZN2ub775pl57RcZVwwHBVwHgNmA77bWdEclnJX7466+/1u0v
uXOl/SU+Rtrhptq1uEL5clysaFyObRAJRUdHcamEkly9WhVu1Kih/rwmTJjA
zz33nO6zyhrQ8nw0EljaGwDgDmy3nbVr38TlylfgokVz9h+RkPjLhIRSXLVa
dVnz1ynbeUPt/eOPP+qcTTLeOm7cOG7TpjUnVqyQ7VpjY6I5qXIp7tAkkfvf
WoNH316Hpw9txE/c25yXTbuFX/tlZ97869v4k9/15c9W9OeDa4bw4dfv0Prh
7RF8bsNIrZRto5k/vFfr4qZRGduP/2lYRvm9qwboc2x/oRevf6Ibr3qkAz87
qTU/NrIpT+qfzMO71uKerapw05vKcemSRbPVtajyofXq1tH3CjLmKp/FN998
c0PjyJb2BgC4g7DaztZt2nCFionZ/URMLJevlMQ3Ne7ATdr157a3jeauQ6Zz
n9FP8NApy3j0rNf4vgWbecbST/iR333Gj//xIM955bDW02/9wL9++5zW4i0p
vPQ91nrurxcztj/x+vGM8o+u2KvPMe0323nc3PU8csYqHjjhWb5txGPcoe8k
btFlOCe37MnVajfl4iVKZ6trXNGiXKduvUjZzqDbW+JWxH8+9dRTeoyyVlLW
Z2YVy8Rzj5ZVeGK/+jx/XEte81gn3rmkt/Yjqe//PMPH5DddUD5v3+qBvHFB
D+03H76zifZnTWqX0z7WvL744sX4FtW3njRpEr/xxhv8ww8/5KW9AQDuIM+2
MympVtaxtDIVuX6LHty+70TuN2Y+3/PoGn7w+Z3ajyzemprhY/Kbnv3rBX5s
5T6e+ORG7Te7D3tY+7OqtZtoH2teX/Hi8dy27S03ajtzbW+Zhy1riQwZMoTL
lC6lj4uK8nCjWmV5RPfa/MyEVrxl4W18+q3hjvucSOjae6P589/355dmdtD9
wO4tqnAZb19M5gM0v7kZP/LII/zee+/pvjt8FQCFhqBtZ+nSZYxnTMpmVElq
xC27juD+457h+5/ewvP/dNpxnxMJvbD5Gs9c/jmPevgl3Q+s37w7x5csk2E7
b765eai2M1t7S27bF154gVs0b57hF5MqJ/D4vvV47ZyufPavdznuQ5xUmuoj
7n6xHz89viV3U74rrkiMcW9UsoRei1n69fBVALieHG1n8+YtMmynjN/d2ns8
j/nVWn5m3VnHfYiTWvK3NH74t7u5/9inle/qxrFFjJiFkiUTgrGdGe0tMYkS
9x5fvLje36ZBRV48pS1/++oQx/1DftaVLXfrvuWYXnU5Id5o+5YtWui4Tvgq
AFxLNtspY12yPSm5Dd9x/2J+/OVvHfcP+Vm/eeeK7lve8rMxXCw+QbddixYt
c7Kdur2XLFmi+wVFYqO1zd3/x0GO+4CCqJ+23MMrf9Ge69cw+rrdu3Xjo0eP
wlcB4D4ybKf0C2Jii2ibO/sP+x33AQVRi975iUc8tJIrVa+v7WW3bt19bafq
r96sX/e5pbqOo3Pa3rtBMk64fHo7/WyrYoXy8FUAuA89B1b+b9y2j46jc9re
u0EyTjh82nL9bKtChYpZfJVozuibHbfvbpTE3teqnMDRUXq9sAUO/q4AAOFF
285ed89x3L67URJ7X76yrLeiY7EXREd7uFuLyo7bdDfro8W9zHuDD539aQEA
woXY0HrNuzlu092saYs+yrCdcr8/ZXADx+25myVxk972/tbZXxcAIFyIr+o8
cIrj9tzNkrhJ8tpOj4e4dIkifOzNoY7bdLdq2pCG7DHae7fDPy8AQJiQfHzF
4kvzvFePOW7T3aoug6Ypu+kxbScXi4vhquWL865lfRy3626SxLLfNyDZOj99
u5O/LQBAWOHYuGJcunxVfmjxLsftupsksewd+93nazv5fmVPa1UuwVHqPmFs
73p86DXEAt6Irr83WueXSqpUgqXf+uiIJvBVALgPZU/v53KVaqnfeRS36zWW
57x8yHE7X5D1wubrOr9U2cQknUe+552PZvFVEgN4+d1R/PDwxhwXG61j1gZ1
rMkb5vfQdtdp219QdOT1O3jevc25ekVjPmCzm8ryzsW9mD/4OXwVAO5DxwD+
ZuNlnQcvJjZOx6w1az+IJz65Qdtdp21/QdHcNUe49+h5XKZCdW0rq9ZupvMh
yj7y8VViT0Vn3hrOs+5qyolljJzz5UsV1Xn/Vj/SgU+sHea4P8hPklyBkst9
9qhm3Ca5gu5DSd+0Z8sqvOnpHpz+/s8z2pXgqwBwG1ni1ef/6QzfNmIWlyxj
5EovUaq8zvs38her+cnXTzjuD/KTJFeg5HK//a7ZXDO5je5DSd9UcrhPmr+J
l/wtPaMs5eCrTKW8dw+/s6CHXrujSrniGeOGDWqW4qmDG+q8gAdeGZyv86eH
W+c3jtS+adH9bfS86fiiMd71TqK4Y5NEfmZ8Sz7xp6HZ2hK+CgBX4ndulay9
Mempd/TaHaXKVcmwnZVqNODOg6bqvIC/Wn0gX+dPD7cWvn1e+6bBkxZxo7Z9
uEjR+Iz1Tm5q0lHn8c3Jn1MAX+Wrr1YP5Ocnt+Hebatl2GhR8bgYbp1cXue1
XTr1Fm3LT/55uM7b4LRvyasuvWusESL+WPpM/W6tzjUTS2TJ4Z9coxRPGdSA
N8zvzhffGRmw/Qi+CgC3EdQ84MdWfsWD73ueG7XpnWGjRUXiinPN+q11Xtuh
DyzVtvzJN07qvA1O+5a86rkNl/QaIeKPpc/U+JZ+XDYx69pRidWTday/jJPK
OlqBzkkh+iqrrv/tHt6zsj+//GhHnjGskV6zqkLprGsWSl+jduWS3OXmSrpv
Ju8h44iS41VylEsuJ+mn2OmDrm69h0+9NZy/emkQ71jcm9c90U33kSSmfED7
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
lTn32Hy+luxctQAAAOSC5I7wF1cn8eHin0o4V7WIU4tyj1sEAADgHDJfKafc
EYV1vlJ1ypwPhpwZAADgDP5yRxynzNwRyAORCdoKAADsA32FGwd9UAAACD9J
hGcwkSLQsz3kzAAAgJxBbJv9FIaYSQAAuFEwZyj/4Ka5aAAAcCMgF0PBwPo5
FYQcHwAAcKMgx13Bx1/uRPR/AQAFHeQOdy/W54p256QHAIAbBWsyFT6SKPJr
fQEAwI2CtW6BSTjXUAYAgBulPGXPh/AdGTZJ4p/zcz6EJkpvOV2JQoC/nBkn
KDNnRqxzVQMAuJgaZIz1SPxyQc0dcZ/Sl2RcC7CP0oScGQCAyJFT/u65ZKxZ
WJC4V+l/SvWdrkghx5oz40cyvlPnqXDkwwcAhA8zNlnWcvfNHVFQ7XwiGc/S
XnK6IiALcZSZM+N7yp4zo5RzVQMA5ENM/3SAss6dkT5VNeeqFTZ+ScZ1jfCz
71Ol/5IRCyBzXgda9jVX+jsZ9vOi0t4A+yQOcj9l+nhB2vZbyzaxz195/5b3
3EPGeJiMq8r46iyl3Uo/eLfJM547LO8rzwKfIuP5oPRL/qRUIeiWyL/4y5kh
/WAzZ0aic1UDADiEmZNA7ILYQt+cBJWcq1pE2EnGNdb1s0/GomSu1y3eMict
+0y/04qMePvfB7nP6qty2ma+lr6qPK8Z7H0tflPiP2SsrA9lxiSY/Mq7TcY0
+3r/fi2H6y6oyPdTxpjnEnJmAFDYyC13hIy3lHauahFH+ihyvSUDlPP1J2Yc
QBs/ZXPbF4qvMonyvk73s81azuz7in+No8w4BTdj9vvN+wPp93/m3ebv/gMA
ULCw5o4w7bU1d0Qg2+0WzLk+vrH0Nyt9SMZYWipl9wurKPMZyguU9flJbvvy
4quC3XbNso1zOMbN1Kac430aOlctAECIWHNHyHMUc1ypMOeOMH1VlM/2PZT5
HKsI+e/r3K102Lv93SD3RdJXmf05xHkT1aRMvyV9LWkX+TwK0jwKAAoTgXJH
FPZ5l2Y+Ql8/bfZRTLufUx+lDmX2SYPZZ54nys+2nF4Hu82My2jipy6FGYkv
Mecem/cmxyjTb/nepwAAbgx5rhTM78qaO8L8bRaU3BF2s4OM9rnJZ/tR7/YW
Sq0pu19YRoZ/M+Mu9ge576R3m8Q+iB+s7+fcefVVD3lfS3ycrJ8SSwV3LkGk
KEuZvw2JJZT2kjHwUO7d0G8FIGdkvH1RLvv95Y7AmEdgZpPRVkN8to8iIy7h
DBl5w7/0lttHhj2T2HHpp8ozKYltb2s5Nrd9w73nlL7WdqVxlDke+y1ljWGX
OLf+lBnvZm4b6LNN+lMyviv3IL8mI65bvgOSO2RBXhqlkGAdEzfHT80xcdke
l8NxHcl4BhYd+SoCUGCQfpTk/BTb1sVnX27Pkgta7ginMOcCv+J0RYCj+MuZ
YY018s2ZIXE3nxDWOQFAkHGpj8j43WzzbnNj7ginkflI8nwKdgcI1jkc0gc2
YzqtOTPaU+bcjpmEPhYonJh9KTMWQrSaMufPWOc+VnWojm7DzF3r+9wKFG6s
fst81mj+/szfo+j/lJIdqiMATlBPaRdlnyPj5twR+QWJn1vvdCVAvsYc1/iG
sv9GpY81gxBXCNyNxD4spMy4CF9JPJ+Mpdd2qoIAAP07leda5vw7fzpGeF5c
2JC4popkPIdpp9SbjDmropFkjJOJJpMxZuyrGZYyYy3HSsxXV6VmZMTPOb3W
gOSCkT5TTt99qyRmbB65O+8RAPmRLpSZPzKQ5PnWg+RcH6uw2M5II/l9ZGz3
NjJidp8ko8+wLSYmZq/SyejoaOuzmojL4/GkqPc9Gxsbe1D9LWNwG5SWkPGZ
yWckcceRGHuT+GeZayP5svt720TuySTHj/Sh5Psg83nd/p0AoCAhvkB+l+IP
5Hcq9kx+t7eSYc/lNy12I9zxTrCdkUHiZTopPaC0UrXhbrkm8rlWtS29WrVq
Ke3bt0/v378/jx49mqdPn85PPPEEL1u2jF977TXevHkzf/LJJ/zZZ5/xwYMH
+fDhw1o//PADnzt3TislJYVNLl68mLH9+PHjGeX37t2rz7F9+3Zev349r1q1
ip999ll+7LHHeNKkSTx8+HDu2bMnN27cOLVkyZKpvnWNioq6pj4TmbckMUGy
/oJ8FvKMCWPUAIBwAdsZOSReRvynzK38i2rb76z1LFu2bEr37t3TJ06cyPPn
z+c1a9bwzp07dVukpqZyfuXChQu8b98+3rhxo/7sH374Yf2ZNGrUKE2+J+b1
qeu9qvQP9fdypTvJHesGAQAiD2xn5G2nxPdOUnpLvdcFMvqD6cnJyakjRozg
Z555hrds2cKnT592utkiwrVr1/jzzz/nl156Sd/LdOvWLT0hISHVbAd1HyHP
XyWPgOQ1KhqB9gcAFExgOyNvO8spTVPn+oK8frF69eqp48eP57Vr1/LZs2ed
bgZHSUtL4927d/PTTz/NXbt2TVd9Xp3j2TuGLGtFdLrRLzkAoEAC25kLYbSd
st7mEtXOEt/CrVq1Slu8eDF/++23Tl9ivubKlSv6/mjMmDEcHx+v7xtUG35O
xlqvBRnJ8XCIMscq8jMSu7XD6UoUYgp7+8N25oE82s4p4ttiYmLS5Lj9+/c7
fRkFkp9++olXrlzJderU0e2u2vQD9X9S5H8qEaWg+KqdTleiEFOY2x+2MwwE
YTtl3pte47R3797pEgsCbhzp6y5fvpxlfFa1ucT2tHDgN5QX5P7wos+2cPgq
f+d1kvxWn4IE2s4AtjMC5GI7ZZ4Yz5kzx+kquhKJH61Ro4a0+TEqGPOnZL1G
X78UDl/l77xOkt/qU5BA2xnAdkYQX9spfqtbt25OV8vVfPTRR6atn+PoLyt3
ZJ0f3xyFJ7375G/JUS75p98nI9/uMaUBPueQdZxkbSDJFWWuwZTbea3IOkLm
mrdyvMQIyT2V5KOS9bpmkbFm1A/ebSfImFtdnbLmbSNvOfO15KpPosw1oz73
U59zZOSxt56jEWVdZ8pav/94z/l77/UKMm9U5pNILLKsN/EnChyX21zp72Tk
P5B+yl7LvtzO94m3HvI5vKx03ltG1n/0XUfQ32cS6FpyOs7fZynybX9B+hzy
mR0lY71Dad/JlLnGmrlWmNRdcixso5y/V/kS2M7IY7Wdqr15ypQpTlfJ1Ujs
j7e933X21xUU/vpQ5jax37Jean/v62M+5WRufQJlrpVr9UnB9s3McvW97zXY
+1rspuSdlTWI+ni3ncjl/G8oSYxRB+9rySmzMMjrzG2b/C3zRn5Bhv1+z7v9
V959svZIX+/frwW4VtM/tiJjjeHfW/YFOp9ZL8mnIHNKX/e+nu7zHoE+E3/X
EsxxgdppjPe1tLms07vC+/rnfo4xv1dDyP/3Kl8C2xl5rLbT4/Fw6dKl+dix
Y05Xy7VMmzZN5hNIey93+OcVDMHYIU8O5XI7JlRfZRJFmTbVd1tu55fcOGJf
5b7+bqW3Kevc+RvxVf6uw1w7Qux7nPfvs37KWTHXqW2Th/P51qOR97W1b+ZL
uD6TYNrJXHuthvd1Pe/r3bkc4+9zzbfAdkYeH9vJxYoV46pVq/KuXbucrpqr
kHjM++67zzpWMtfJ31aQ5NWGS27DD8kYi0r1sz+vdjHYbf7KyBxD8XHfU/Zn
heH2Vdcs+ziXclZWecvIGOALZPSPgj2f7+ti3tfWmIe8fiZ5Oc53m7nurjkm
afrb8yGeJz8D2xkhcrCdfP/993OtWrUkrp3Hjh3Lhw4dcrqqBZrr16/rHClJ
SUn6nuDRRx8tDL7KXD9hBBnjOfnBV8nznX97tw+M4PsIZh+piJ99OSH9COnz
HfYeax0jDnQ+33qUpOx9r7x+Jnk5LidfZdbf9KWu8lWwneElgO3UcSyXL1/W
uZzi4uIkrp0HDRrEGzZs0MeC4Dhy5AjPmzdP5qnr9m3WrJnO6SVY2ju/k1cb
bvYDiuSw325fJffz8ry+u9K/yIjJqBjkOXMbK8zpOsxYhSZ+9gWijvfYKyGc
z7ceLb2v/27ZltfPJC/H+W4z41uSvK/re19/GuJ58jOwnWEiSNuZJebyzJkz
PGvWLE5MTNRlypcvz5K7avXq1XzixAmHriR/IvmuJB/x7NmzuU2bNvo+QO6v
JA/xpk2bOD09PaOspb3zO2Ivpa5i+8z1s4KxKUe9r2UuRGs/+/2d1x/h8lUv
Kk30/i3PgyTO4u0A9THXL5dYBrHTpn0Nxr4/5N0u8QmVyfCVgdaKkLg9iakw
4xf2h3A+sx4J3vqv976+y1Im0GeS07Xk5bP0LXOv9/VzZDw7XOl9/fMA71/g
fJUJbGfw5NF2+p0fIPnj33nnHZ1/vkqVKmZ5btCgAU+dOlXntjpw4EC+zgEc
bs6fP6/bd9GiRdynTx/JCaLbJDY2ljt27KhzUeb0nbS0d37nMTLGn2QMR+aN
m/f3oq/J6ANY47u/9B43iozxpzNkxNyZMcn7yLCz1vNu9vO+1jhqkcRJ9/f+
b9020Geb6N+Wv49a/pa6JCkd8TmH73Wa9RnuPUZs8XYy1g666D3uW8oawy7v
09tSf4kxlzycp8iIqZf3XODnOq1I30PitOV5lfQ32oZwPqmDPIs77d0vfvZR
n/Pn9JlIG1jjzH2vJZTPMp2ytrn8fTsZ8TdS7ri3fsfIiGH3jVnP7XuV39fg
ge0MkjDZzqDmsn311Vf8/PPPy/zsjPcRFS9enFu3bs2Sm3Hp0qW6PidPntRz
jwsqly5d0nnu5Tslfr9fv35cs2ZNq23k5ORkHa8qfX1ZCyYQlvYGIBzI9ynN
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
4/H+4PF6qwaOLqHTrnxU+67T3t9adPn2d6lo+QZKTsuSOpPHG/Ea/xxj82sH
AGAv2ju9Hs8PXq+nqmRMV3p04xTtu057f2vRu/fOpw0nFVBW+zjtnRFeT2O8
M5O1idtZ/5J94hJSKwZPXERLLriDrrz3Q8fzoCXpxicP0+rr99Fxiy+lLr2H
VHL868+luH26h2tXpNCWAqAtob2T21naO1MToyoWTe5Od1w4hj7cscDxPGhJ
Osw5vu/G6XTp0nwa0qd9JbdL9edSR+mdEawZrF95vL7PlLlvSB069S4fX3IO
nfyjHfSjO96krU9VOJ4Zdmnzw1/pbJq7agvlDS+qioyKrZSacH3LPR7ffv59
HatzeP/9AQCtjGrv5Nyq9s7enZPKz5nbj3asn0hv3jWXKp4+0fHMsEtfPbZE
Z9OWM4ZR0YjOVbHRvmrv9Hk84fbOPNa5HHe7PF7vd4H6R0bFVGb3Glw5quhU
Kj3rJu3lV973EW37baXj2XK0uu7Rb+iS217TeSxtpv4jiimlfafywDWLvN6I
t/nnNlYxKzFMNQYAuA/tndxQ2OX1eqq9MybKVzm4d1rlqTN7003njNBe/tGv
y6iyFWfYN7uW0mt3zNF5LG2m4lHZ1Kl9XA3vjPB67PTOSFY+axnrOs7GvV6v
79/W8/H6IqpS07uU9xw4vmr4tOX6+8ZyH/GMq3fT2p+8ROvveke3U+zMoC1P
fE9X3f8x59DrdO6WZ2nF+p26jSR9ygeOmk2duudXxMYnV1ivQ3Kfc0m+w3s3
ay1rGiujmesLAHAntbxT7eW2Vw3vjPB5qrpkxJePz8+sWn5cT/19Y7mPuHvz
NHrpZ8X0zr3zdTvFzgz6/qll9PGDZfT6L0vo2a1FtPOKSbqNJH3KZ4/uQvk9
2lUkx0fV8k5VzrnUUr2zozLns5K1kbWdvX4/59YnyuPRbb468ngoNj6lol1m
t3L5zKdP4RQqGFeqVTh+AY2esVJL+n5PLVtXRxPnraneRjIxsG//ETOpx4Bx
lNGlb0ViakZ5RGR08OfXbSTft5xHf+PfH2PdrExdy1gFrChbKwgAaIsE8U61
n3PrE/4Z1LvkM56UhKiKbpkJ5fKZz5TBWVQ6IUdrwYRutHJmHy3p+71u0YA6
WlOaV72NZGJg35kjs2ncwEzq2zWlIiM1tjw60levd3LOfst55DbvlPcTOazR
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
1/bRimTcvztGKPpwjvN50JIkYwXKWO6Xcr2GpZk2lLRNZQz3JyYoqrJsq5BV
9SFjeq5mvcr6mnWYdYD1pIPn5DR7VM3xq0HLpEZ/9flPPkr9TzyBYtq1M+PR
piSTjPs36keX0LzHH3Y8D1qSZKxAGct9wEnLqX1eP92GkpyXMdwn3XAdnfDH
/dXbqnqyKiCZe+PxCWbujqzYI6+bvkmKzuljxgV8c2bLHj893PpqvsmmLYWK
ZmTp8ZR0TSK5LTo23YzjW1+eK2RVfcjcPFKbi1mJrGzWzxU8GlnV8gn63SqZ
e2PSDdfquTtiO7Sv/jsm5+RQblmpHhdw9q/va9Hjp4dbZU8/pbNpyLnnUKfR
oygiNsbMvxQRQemD8vU4vvXluQqRVbX1+gxFNxTqsS2qPVoUx78P5TaFjGt7
0xDj5R/NMeM2OJ0tR6tvFpg5QiSPpc1U3ElR1/ia87TkJpm+/nKfVObRCnVM
hayqj8DcCLGWZb1Uy/LoaNbflb3nhKxq+TTqe8DF999NQ9aIR4+s9mhRREwM
pfXrSzKu7bALztNePu+J37TqDFu0b6+eI0TyWNpMnceOpviOmTW8Mzmnq+7r
L/dJZR6tUMdUTcwqq+QzrFemK7pzpKLz+yqakqmoQ3RNL5e2RvcERRMyTNtM
nkPuI8oYrzJGuYzlJO0UOzPo+zJFH5eY3H2WM3XnWNNGkj7lszsrKkjVc3DV
uY4BKYqW5CjaXKDoKT7/z+Y2/bkVsqo+/qtMba5WZk5uQcauGeTYGdVlg7I/
N5BVLZ8mj1khn2HNvOdOGn35/1C/JYuo47ChFJOaUnOuV25rJHTKoozBBbpt
Js8h9xFljFcZo1zGcpJ2ip0ZtHj/MzT/iUd07h7385/S+Gs26TaS9CnPHj+W
2vXpTdFJSXWuI6VnD+p2/DQqPPtMmnzTDVS6+7EmP7c6hqyqTzKHlXj5rcPM
HLxL2d/HdDB9DaS/hlJ1JZ/xpEXrsV71Zz6Se6VdjBawVvY0kr7f6/rVlcwp
FdhGMjGw70xuC41LV9Q/xfTHl375wZ5flBRptpN9zuxtMun+0WbeqsNh6lui
kFX1sU8d+Vt8zNrE6h5kO8kxmWf0PZbMHyCf6XSttc1i1p9ZMtb1v1j7WUnK
fP4VeI53lZmj9FrWNyGOLWNivcSqUjX/Z/aFuKZg52FluWX996yX/cus1JdV
ofZ9Msi+99Za1pia9GU9rUw95HPEN0Ncc1skbOMryRxW4uUjLr5Qz8Hbffpx
lD5ooO5rIJ/jqGDe5fFQdHKyjPWqP/OR3Os6eZLRlEnUq2S2lvT9zlu2tI5k
TqnANpKJgX07jxlNGQWDKKVHd90fX/rlB31+eS8fH6+3k336lM7TmTR24xV6
3ir5TCoctVHNkFWh2mLvzVa0f6qZf1faZHJP8bL+is7qbdot07MUDee8GtzO
fC4m7TKR9PNIjTKSdk6gTomRR5ZL//DA9oXtzDGkTTc32/TDlz6Om/IV/WyY
ube3d5KivxYp+tKmtp2l3qAm/Vm15+2WOW22siIt211uWV/s//mIZf08y/qb
lJl39FPL+sA6yY6fWB435thNaeOEOo9TLOsl01ZYHs8J8ZzHsm9Dy4LVJDD/
Uh9WJuvFRlx7W8OWsQClLVbyyIN03G236Pl3pU0m9xQHrjiJ+iyYp9stnUaN
oPb9+1Fabh/9uZi0y0TSzyMqMVFL2jkqkDFxcdXLpX94YPt2vL8cQ9p0XSaO
1/3wpY9jwRmr9Hiycm9v6k+2UvG9d3HbbrctbTplc1a1dVnqDeoic//czNJz
p1q0wbLNW5blsf6fX1nWv2hZn+tfttuy3npcaUNlW9aHOnZTsirUefzJsj6F
lW55/HyI5zyWfUMtq12TQ/7l61lxjbjutgjGrUVWuU6WeoP6kXms5X7WR8rU
6zPLusOq7j2IKsv67yzLrf00AjSUN6GO3ZSsCnUe/7Gsl/tuEZbHX4Z4zmPZ
t7HLAvzesu6fCnNdBwNZhaxynSz1BjV5gZVca5m0R6Re31qWfa1q+nRtrG2y
yCDrG/LlUMduSlaFOo+vLOt9/m0Cj/8d4jmPZd+mZpV8ZvicZf1rwS+3TYOs
Qla5TpZ6g5pIXSbUWpbmX/6yZdmr6ohvZgQ5zp8t64P1zWjIl0MduylZFeo8
XrKsr30f739DPOfR7OsNsqwp17XAv/5QA9u0VZBVyCrXyVJvUBOpi3wOM16Z
e4CdWdv9y0+2bHemOuKr0ldQvvPUzbJ+mWX9T1Xdz1ga8uVQx/7Usn6gMv3o
6iPUeZxsWV+7f8SJIc63sft+YFk+WZmaNjWrJBfbs/L86//QwDW3VZBVyCrX
yVJvUJNrlLkPKPewKpS5Hyf3nubX2k7aB9LX4kNl+gkG81jJnP9j/eA/jvTf
rt0/W/SJqtmWC3Xsacq0vb73n+cTIa4p2HlYkf58f1Xmu2Xy+ZZk9XLL+j/U
Ot8/NmFfYbYyeSXr97FKVc28fVaFrolkldyDPeTfvl+Ia26LIKuQVa6TQlYB
4DaQVcgq10kdub8EAHAHyCr7skq8E1llX1btcPSVBQAIJ8gq+7JqR3KkOnQ5
sqpZdbDUjCGlzPcqAQAuIDIh/hCyqnlV9sxTlNi5s/ZOj1IPJUWqigOznfd0
t0rGxvWY75YOdPr1BQAIEx7PQ5Hx8RVzH9npuKe7VTI2Ltc54J05Po/6OjNG
VTw/zXlfd5MOLTBj7irTht3i7AsLABBmcjxe79exaWkVx99+q+O+7iYtevZp
PeauquudeZxX78t7fxnn9R+znPf51iwZp3f7KD2+vPTBlvcEMt+Fx4kXEwCg
WcnjvHpf3vvLOK9zHtrhuM+3Zsk4vaM3XCbjyzfknfGszV6P+oFVVZJt5hH8
IUxzYrQFvcsZv2GgnkdZ6kwRHj0uzRibXzsAAHvR3unxeH7g3KrqMmGcnkdQ
fNdp728tKvnNg5S/cgXFdWivvZPr2BjvlPH/N3E7S+YJkPk2KhZ1NfMk1jc/
e1uVzG0l8yDL3MFD2qlKmYtL2qYej57/qEihLQVAW0J7J/us9s6oxMSKnGlT
9TyJ9c3P3lYlc1vJPMgyd3Ba39xKmYtLae/0HI13yhjOM1i/4tyS8a71vcPe
iar8nD5mDqg3ZyqqaMVz1TdVMo+xZJPMJVyUpapifWaMAy5qOddI5tNbp8x4
NgCAtku1d3JuVXtnUnZ2eW5ZqZ4Davav72vVc9U3VTKPsWSTzCXcafTIKl90
tBkfxuMp53wKt3fKuGDnsi/v8nqOzHsQw349mNsUp/ZUdNMQ4+UfcfurshVn
2DcLFL1WZPJY2kzFnfTcwuXKMiZNhEe9zT+3KTM3X2KYagwAcB/aO9mXd3F2
VXunLyqqsl1un8pec2bRsAvO014+74nftOoMW7RvLxXft13nsbSZOo8dTXHp
HWp4pyfCa6d3ylwE+cqM03kd59deblf8W9X08qou8ap8fLqqkrnl5fvGch9x
90RFLx2v6J1Zpp1iZwZ9X6bo4xJFr89Q9Cxn6s6xpo0kfcpnd1aUn6IqkiPN
Z03VdeU2E1/LG/z73ay1yowNF2wsbgAACEUN7+T82uvxeWt4p8fnq4rPzCjP
KCyokrnl5Ttcch9x8rYtVHTn7VTy8K91O8XODFq8/xma/8QjVHz/3XTcz39K
46/ZpNtI0qc8e/xYSu3VsyIyIaGGd+o2k9fbUr2zozLns5K1kbWdvX4/e/0n
nppjglqzgFKiVEU3zjX5zGdKpqLSLkYLWCt7Gknf73X96mpN7pFtJBMD+87k
ttC4dEV9k1RFRowqj/YFf34R5+y3fI5/498fU2Z+WqlrGauAFWVrBQEAbZE6
3slev59z6xP+Gdy7PB6K4nxIyOpYLp/5dBw2lLpOnmQ0ZRL1KpmtJX2/85Yt
raO+i8uqt5FMDOzbecxoyigYRMk5XSti2rUr90VF1uudnEXfstzmnfJ+Ioc1
mjVTmfcV5yozvvVNymTvLs6NFzk3Xma9FelR70d51QfSz4N1UCTtHHUkYw4F
lkd41Yf+bQ/wvq/IMXibZ1g7Wb9gbWZdzDpNmXGnZa6EAaxUO4sAAABNpFHe
6fF4XvRERLzM2fEWZ9z73kjfB9LPg38/KJJ2jjqSMYf0cq/3oNfn+9C/7QHe
/xVPhBfeCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAGoTdOxEiwAAANQF3gkAAAAAAAAAAAAAAADhA/dcAQCg6cA7AQAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
ANBaiWCls/qwRrKKWKV+LWGt9OtM1rogOt+yzSmWfeexJrLyWV1YCXZdEAAA
2AC8MzzEsHJZ01grWFey7mLt9XjUq16P+oh/fqtCjwEcNnmUKufn/YL1Nv/+
PC97lLVNmb+Z/I2GszKbsSYAABAKeGfzkMwaxzqLdRvX8CW5JlXrWnlZVWK8
Ku+coap6dVE0oJeiYf0VjStUNG2kolkTFJUdp2j5LEUnzVZ0Wqmi0xcYrV6i
aM1So3UnKbr4FKPzlx1ZfubCI9ufUmKOsWSGonlTFBWNVTRpmKJR+YoKchX1
7a6oWydFHVJVRVSkqqh9rnwNh/l83+HfH2NdpczfojfLa395AQAuBd7ZfPiU
yc9LWb/hc3rfep6x0ao8J0tVyTWNH6KoeLyiE2aaWlx08pE6tTSdx3+3FXMV
lU41f/sRA8zfpH2qqpT/E8vf4XvWH/n3W1gLWR1srj8AoHUC72x+7+zBWsV6
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
Tub/Afv6opo=
    "], {{0, 641}, {427, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{427, 641},
  PlotRange->{{0, 427}, {0, 641}}]], "Output",
 CellChangeTimes->{{3.7392681818698635`*^9, 3.7392681878015137`*^9}, 
   3.739286814232232*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"40b8c521-eb30-4ceb-b6de-14185f7c0e9a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["A small example of application", "Section",
 CellChangeTimes->{
  3.716825484342502*^9, {3.735483919282419*^9, 3.735483930584803*^9}, {
   3.735486467547221*^9, 3.7354864678234043`*^9}, {3.7355877724233932`*^9, 
   3.73558779245604*^9}, {3.73609433900439*^9, 3.736094368339192*^9}, 
   3.7360944021880836`*^9, {3.73926842803702*^9, 
   3.7392684369067154`*^9}},ExpressionUUID->"69c2789e-757d-42de-8e7a-\
aa67a7c35b9d"],

Cell["To illustrate the algorithm, here is a example. ", "Text",
 CellChangeTimes->{{3.735483932944489*^9, 3.7354839472643557`*^9}, 
   3.735486472511282*^9, {3.735587929314433*^9, 3.735588040172488*^9}, {
   3.7360944038458967`*^9, 3.736094409443921*^9}, 3.736868574101507*^9, {
   3.739268444608924*^9, 
   3.739268466395241*^9}},ExpressionUUID->"0ed2d935-e8ff-4c05-9e95-\
1dd6631482fc"],

Cell["Alice and Bob Started with a common paint.", "Text",
 CellChangeTimes->{{3.7392685067459607`*^9, 
  3.739268530942769*^9}},ExpressionUUID->"a02e14d9-5972-4e74-9442-\
0f9b41354228"],

Cell["\<\
This is a pair of integers {g,p}. p is a prime, and g is a primitive root \
modulo p.  For now, just think primitive root modulo as a special connection \
between g and p such that made them a good friends.\
\>", "CodeText",
 CellChangeTimes->{{3.7354837283947477`*^9, 3.735483762505471*^9}, 
   3.7354839554661007`*^9, {3.735588048797143*^9, 3.735588078242901*^9}, 
   3.736092055787822*^9, {3.739268533430559*^9, 3.739268568523379*^9}, {
   3.7392686174436464`*^9, 3.73926866664125*^9}, {3.7392689346551332`*^9, 
   3.739269001609612*^9}},ExpressionUUID->"7a9ac988-03a4-4c18-9dca-\
ea7cdc6e168b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", " ", "=", " ", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", " ", "=", " ", "23"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7354839684812403`*^9, 3.735483992816681*^9}, {
  3.735486827194744*^9, 3.735486831464959*^9}, {3.736868703273498*^9, 
  3.7368687066462917`*^9}, {3.739268669775483*^9, 3.7392686823111253`*^9}, {
  3.7392687764178486`*^9, 3.739268776536209*^9}, {3.7392691045446763`*^9, 
  3.7392691236710525`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"e3998e4d-7b72-4f12-ab60-8520725af581"],

Cell["Now Alice holding the private key a:", "Text",
 CellChangeTimes->{{3.7392691285024266`*^9, 3.739269191915592*^9}, {
  3.7392692329680805`*^9, 
  3.739269232969081*^9}},ExpressionUUID->"78b9a3b2-6d4d-4adb-9fdb-\
ffc7c967579a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", " ", "=", " ", "5"}], ";"}]], "Input",
 CellChangeTimes->{{3.7392691285024266`*^9, 3.739269191915592*^9}, {
  3.7392692343762717`*^9, 3.739269251794649*^9}, {3.739282728079035*^9, 
  3.7392827281850634`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"53129263-ec0f-4fd7-bea8-4dd0460286bb"],

Cell["\<\
To generate the message that will be sent to Bob is g^a mod p:\
\>", "CodeText",
 CellChangeTimes->{{3.7392691285024266`*^9, 3.7392692065427494`*^9}, {
  3.7392693087339234`*^9, 
  3.73926932727461*^9}},ExpressionUUID->"37caa5ff-c3fb-4d77-9894-\
aeb2eb1597b8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AliceSecret", "=", " ", 
  RowBox[{"Mod", "[", 
   RowBox[{
    RowBox[{"g", "^", "a"}], ",", " ", "p"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.739269210503235*^9, 3.7392692438464956`*^9}, 
   3.739270440926982*^9},
 CellLabel->"In[10]:=",ExpressionUUID->"fdc2beaf-97c9-4596-a86a-a5c57a4fc405"],

Cell[BoxData["20"], "Output",
 CellChangeTimes->{{3.7392692452675066`*^9, 3.739269254492808*^9}, 
   3.7392704433012285`*^9, {3.7392827305490065`*^9, 3.7392827420010085`*^9}, 
   3.7392868144330587`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"ff46498c-143d-4cee-8a22-aecf144d47a3"]
}, Open  ]],

Cell["And Bob has the private key b:", "CodeText",
 CellChangeTimes->{{3.7392692622685165`*^9, 
  3.7392692845959115`*^9}},ExpressionUUID->"28acfb1c-1bb9-4613-82f1-\
4bc29b16ba73"],

Cell[BoxData[
 RowBox[{
  RowBox[{"b", " ", "=", " ", "3"}], ";"}]], "Input",
 CellChangeTimes->{{3.7392692622685165`*^9, 3.7392692933698187`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"a249e1d2-cd3f-422c-8dbb-b6f80a04b85d"],

Cell["\<\
The generated message that Bob will send to Alice is g^b mod p:\
\>", "CodeText",
 CellChangeTimes->{{3.739269300582189*^9, 
  3.739269332593705*^9}},ExpressionUUID->"609525f5-8bff-4fa2-9668-\
cc2fc6d7b5ab"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BobSecret", " ", "=", " ", 
  RowBox[{"Mod", "[", 
   RowBox[{
    RowBox[{"g", "^", "b"}], ",", " ", "p"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7392693349083786`*^9, 3.7392693461516843`*^9}, {
  3.739270436968407*^9, 3.739270437349685*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"90757b60-f0cb-42a8-b618-d1204af314f4"],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{3.7392693465612183`*^9, 3.7392704381473274`*^9, 
  3.7392827541540103`*^9, 3.7392868144748793`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"6fe7169d-3238-4f21-a177-f231ea6b4eaf"]
}, Open  ]],

Cell["\<\
Now Alice and Bob will sent g, p, AliceSecretToBob(g^a mod p), \
BobSecretToAlice(g^b mod p) to each other in PLAIN TEXT.\
\>", "Text",
 CellChangeTimes->{{3.7392693543566074`*^9, 3.739269390164856*^9}, {
  3.7392694409158573`*^9, 
  3.739269462379084*^9}},ExpressionUUID->"7c29e1c4-5f2a-44af-b60c-\
fcede180fc76"],

Cell[" Alice to Bob:", "CodeText",
 CellChangeTimes->{{3.7392693543566074`*^9, 3.739269390164856*^9}, {
  3.7392694409158573`*^9, 3.739269462143799*^9}, {3.739269530913389*^9, 
  3.7392695341229105`*^9}},ExpressionUUID->"b9dad3bf-b331-46b2-bc25-\
c69801c86d46"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Labeled", "[", 
     RowBox[{
      RowBox[{"\"\<Alice\>\"", "\[Rule]", "\"\<Bob\>\""}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<g=5\>\"", ",", "\"\<p=23\>\"", ",", " ", 
        "\"\<g^a mod p = 4\>\""}], "}"}]}], "]"}], "}"}], ",", " ", 
   RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7392693543566074`*^9, 3.739269390164856*^9}, {
  3.7392694409158573`*^9, 3.739269462143799*^9}, {3.739269530913389*^9, 
  3.7392695505777025`*^9}, {3.739269594813307*^9, 3.7392696720438805`*^9}, {
  3.7392699788438253`*^9, 3.739270177012657*^9}, {3.739270213658168*^9, 
  3.7392702251383314`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"590002bf-636b-421c-986d-efeb01cf6ca0"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{"Alice", "Bob"}, {{{1, 2}}, Null}, {
      EdgeLabels -> {
        DirectedEdge["Alice", "Bob"] -> {"g=5", "p=23", "g^a mod p = 4"}}, 
       VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
        ArrowBox[{{1., 0.}, {0., 1.2246467991473532`*^-16}}, 0.01273], 
        InsetBox[
         RowBox[{"{", 
          
          RowBox[{"\<\"g=5\"\>", ",", "\<\"p=23\"\>", 
           ",", "\<\"g^a mod p = 4\"\>"}], "}"}], {0.5, 6.123233995736766*^-17},
          ImageScaled[{0.5, 0.5}],
         BaseStyle->"Graphics"]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{1., 0.}, 0.01273], 
         InsetBox["\<\"Alice\"\>", Offset[{2, 2}, {1.01273, 0.01273}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., 1.2246467991473532*^-16}, 0.01273], 
         InsetBox["\<\"Bob\"\>", 
          Offset[{2, 2}, {0.01273, 0.012730000000000123}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{{3.7392701153886075`*^9, 3.739270177659254*^9}, 
   3.739270226444355*^9, 3.73928275684501*^9, 3.7392868147923536`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"afb623d4-8709-4081-a7cc-2d201059a9da"]
}, Open  ]],

Cell["Bob to Alice:", "CodeText",
 CellChangeTimes->{{3.7392702343394184`*^9, 3.7392702371249447`*^9}, {
  3.7392703068831997`*^9, 
  3.7392703202317705`*^9}},ExpressionUUID->"3b083960-fa8d-4270-9012-\
3e97b816aecd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Labeled", "[", 
     RowBox[{
      RowBox[{"\"\<Bob\>\"", "\[Rule]", "\"\<Alice\>\""}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<g=5\>\"", ",", "\"\<p=23\>\"", ",", " ", 
        "\"\<g^b mod p = 10\>\""}], "}"}]}], "]"}], "}"}], ",", " ", 
   RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7392702343394184`*^9, 3.739270257123322*^9}, {
  3.7392702928945503`*^9, 3.7392703131069636`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"dd73ee0e-c3ad-4ef5-bcad-bfa1af9b6e2c"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{"Bob", "Alice"}, {{{1, 2}}, Null}, {
      EdgeLabels -> {
        DirectedEdge["Bob", "Alice"] -> {"g=5", "p=23", "g^b mod p = 10"}}, 
       VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
        ArrowBox[{{1., 0.}, {0., 1.2246467991473532`*^-16}}, 0.01273], 
        InsetBox[
         RowBox[{"{", 
          
          RowBox[{"\<\"g=5\"\>", ",", "\<\"p=23\"\>", 
           ",", "\<\"g^b mod p = 10\"\>"}], "}"}], {0.5, 6.123233995736766*^-17},
          ImageScaled[{0.5, 0.5}],
         BaseStyle->"Graphics"]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{1., 0.}, 0.01273], 
         InsetBox["\<\"Bob\"\>", Offset[{2, 2}, {1.01273, 0.01273}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., 1.2246467991473532*^-16}, 0.01273], 
         InsetBox["\<\"Alice\"\>", 
          Offset[{2, 2}, {0.01273, 0.012730000000000123}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{
  3.739270257887671*^9, {3.7392703015806174`*^9, 3.7392703216913548`*^9}, 
   3.739282759830039*^9, 3.7392868149351463`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"6ece3c52-b56e-42b6-95b6-cfe2373824a8"]
}, Open  ]],

Cell["\<\
After the Communication, now Alice has g, p, a(Alice\[CloseCurlyQuote]s \
private key) and BobSecrect:\
\>", "Text",
 CellChangeTimes->{{3.7392704136388197`*^9, 3.7392704583933945`*^9}, {
  3.73927074468145*^9, 
  3.7392707520040426`*^9}},ExpressionUUID->"15f23ad2-a233-4326-8f66-\
0986d8749079"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\t", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\"\<g\>\"", "->", "g"}], ",", " ", 
    RowBox[{"\"\<p\>\"", "\[Rule]", "p"}], ",", " ", 
    RowBox[{"\"\<a\>\"", "\[Rule]", "a"}], ",", 
    RowBox[{"\"\<BobSecret\>\"", "\[Rule]", "BobSecret"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7392704136388197`*^9, 3.7392706087200155`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"7a8cd761-8503-4f22-9711-63f0f4495116"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"g\"\>", "\[Rule]", "5"}], ",", 
   RowBox[{"\<\"p\"\>", "\[Rule]", "23"}], ",", 
   RowBox[{"\<\"a\"\>", "\[Rule]", "5"}], ",", 
   RowBox[{"\<\"BobSecret\"\>", "\[Rule]", "10"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7392706526098995`*^9, 3.7392827620620413`*^9, 
  3.7392868149717875`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"f51a06e6-451f-47a0-ba01-515068784761"]
}, Open  ]],

Cell["We can then calculate the Common Secret: BobSecret^a mod p", "Text",
 CellChangeTimes->{{3.739270613339176*^9, 3.739270643524373*^9}, {
  3.739270769353986*^9, 
  3.7392707843928385`*^9}},ExpressionUUID->"f915f25c-ef56-405e-8650-\
0beeb71e26b4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AliceReceivedCommonSecret", " ", "=", " ", 
  RowBox[{"Mod", "[", 
   RowBox[{
    RowBox[{"BobSecret", "^", "a"}], " ", ",", " ", "p"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7392704136388197`*^9, 3.7392706087200155`*^9}, {
  3.739270844574492*^9, 3.7392708519860487`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"43ef5876-3771-4379-8068-2602f38cfaf2"],

Cell[BoxData["19"], "Output",
 CellChangeTimes->{
  3.7392705100834136`*^9, 3.739270547561937*^9, {3.7392705968028345`*^9, 
   3.7392706041452136`*^9}, 3.739270655498702*^9, 3.7392708524333067`*^9, 
   3.739282764831009*^9, 3.739286814998258*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"3995668a-c844-4b29-a80a-083865f1a924"]
}, Open  ]],

Cell["\<\
So how about Bob? he now has g, p, b(Bob\[CloseCurlyQuote]s private Key), and \
AliceSecret:\
\>", "Text",
 CellChangeTimes->{{3.7392706674817657`*^9, 3.739270681912356*^9}, {
  3.7392707329893875`*^9, 
  3.7392707370046*^9}},ExpressionUUID->"92c503b1-d44b-462f-8db5-1fc60095bf6e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\"\<g\>\"", "->", "g"}], ",", " ", 
   RowBox[{"\"\<p\>\"", "\[Rule]", "p"}], ",", " ", 
   RowBox[{"\"\<b\>\"", "\[Rule]", "b"}], ",", 
   RowBox[{"\"\<AliceSecret\>\"", "\[Rule]", "AliceSecret"}]}], 
  "}"}]], "Input",
 CellChangeTimes->{{3.7392706674817657`*^9, 3.7392707296934724`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"7526038b-be12-43b4-aba2-49353a81565f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"g\"\>", "\[Rule]", "5"}], ",", 
   RowBox[{"\<\"p\"\>", "\[Rule]", "23"}], ",", 
   RowBox[{"\<\"b\"\>", "\[Rule]", "3"}], ",", 
   RowBox[{"\<\"AliceSecret\"\>", "\[Rule]", "20"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.739270708964052*^9, 3.739270756339469*^9}, 
   3.7392827669220448`*^9, 3.73928681502382*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"dff064a5-2fa4-438c-a428-0edcacf34e53"]
}, Open  ]],

Cell["\<\
We can therefore Calculate the Common Secret: AliceSecret^b mod p\
\>", "Text",
 CellChangeTimes->{{3.739270758804736*^9, 3.7392707907033873`*^9}, 
   3.739282768506008*^9},ExpressionUUID->"0d6f8098-f997-4c7c-8d35-\
5eaad955a6c1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BobReceivedCommonSecret", " ", "=", " ", 
  RowBox[{"Mod", "[", 
   RowBox[{
    RowBox[{"AliceSecret", "^", "b"}], ",", " ", "p"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.739270758804736*^9, 3.739270803804247*^9}, {
  3.7392708549984255`*^9, 3.739270859093132*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"af8fac10-dfaf-49c6-8ff2-1e15a8898023"],

Cell[BoxData["19"], "Output",
 CellChangeTimes->{3.739270804175705*^9, 3.739270859695013*^9, 
  3.7392827705260086`*^9, 3.7392868150542355`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"a692b99a-56ed-4727-a733-645ea27353a9"]
}, Open  ]],

Cell["\<\
We can find What Alice Decoded equal to What Bob Decoded, and therefore, this \
number become their Common Secret.\
\>", "Text",
 CellChangeTimes->{{3.73927080667266*^9, 
  3.739270861405368*^9}},ExpressionUUID->"de99e448-4fa4-4b69-ae0c-\
149676ac070c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AliceReceivedCommonSecret", " ", "\[Equal]", " ", 
  "BobReceivedCommonSecret"}]], "Input",
 CellChangeTimes->{{3.73927080667266*^9, 3.739270872481984*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"b64ef6ac-b894-4ad1-90bf-a982f4aa4362"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.739270873119972*^9, 3.7392827724260435`*^9, 
  3.73928681508564*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"e8a589da-471c-46b5-8fad-976fa2dd3c8e"]
}, Open  ]],

Cell["\<\
And this Common Secret can be used as a key for the Symmetric Encryption to \
transfer the information, without the concern of key being exposed at the \
beginning of the Communication.\
\>", "Text",
 CellChangeTimes->{{3.73927080667266*^9, 3.7392708416365967`*^9}, {
  3.739271042842457*^9, 
  3.7392710877437415`*^9}},ExpressionUUID->"51d45590-476e-43f2-b9e5-\
0b5e70a416bd"]
}, Open  ]],

Cell[CellGroupData[{

Cell["The  Mathematical induction", "Section",
 CellChangeTimes->{{3.73927080667266*^9, 3.7392708416365967`*^9}, {
  3.739271042842457*^9, 3.739271115886406*^9}, {3.7392713031003914`*^9, 
  3.7392713082241154`*^9}, {3.7392713634038286`*^9, 
  3.7392714098316317`*^9}},ExpressionUUID->"d7c128dd-0f04-4a41-a0b8-\
a5c09fd4b2f7"],

Cell["\<\
Here is a formula proof of how Alice and Bob end up with the same Result\
\>", "Text",
 CellChangeTimes->{{3.739271374592696*^9, 
  3.7392714185901074`*^9}},ExpressionUUID->"c51ac006-2dbd-4e53-a595-\
7702a96fa127"],

Cell["Alice And Bob have:", "Text",
 CellChangeTimes->{{3.739271374592696*^9, 3.7392714686397543`*^9}, {
  3.739271584877557*^9, 
  3.739271590473442*^9}},ExpressionUUID->"e4f64714-e0fb-4591-894d-\
2b98c8af50e3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"g", ",", "p", ",", "a", ",", "b"}], "]"}], ";"}], "\n", 
 RowBox[{"\"\<Alice\>\"", "\[Rule]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\"\<Common Pair\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"g", ",", "p"}], "}"}]}], ",", " ", 
    RowBox[{"\"\<PrivateKey\>\"", "\[Rule]", "a"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"\"\<Bob\>\"", " ", "\[Rule]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\"\<Common Pair\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"g", ",", "p"}], "}"}]}], ",", " ", 
    RowBox[{"\"\<PrivateKey\>\"", "\[Rule]", "b"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.739271374592696*^9, 3.7392714550697436`*^9}, {
  3.739271485637801*^9, 3.739271554854904*^9}, {3.7392715929088297`*^9, 
  3.7392716133351355`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"319af84e-5f03-4d5f-b766-7365fd98e14d"],

Cell[BoxData[
 RowBox[{"\<\"Alice\"\>", "\[Rule]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\<\"Common Pair\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"g", ",", "p"}], "}"}]}], ",", 
    RowBox[{"\<\"PrivateKey\"\>", "\[Rule]", "a"}]}], "}"}]}]], "Output",
 CellChangeTimes->{{3.7392715093241816`*^9, 3.7392715554104967`*^9}, 
   3.7392716138598814`*^9, 3.7392827762760334`*^9, 3.7392868151207533`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"13ad5bd8-eb8c-4c0e-a405-62a63d9d076f"],

Cell[BoxData[
 RowBox[{"\<\"Bob\"\>", "\[Rule]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\<\"Common Pair\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"g", ",", "p"}], "}"}]}], ",", 
    RowBox[{"\<\"PrivateKey\"\>", "\[Rule]", "b"}]}], "}"}]}]], "Output",
 CellChangeTimes->{{3.7392715093241816`*^9, 3.7392715554104967`*^9}, 
   3.7392716138598814`*^9, 3.7392827762760334`*^9, 3.7392868151259594`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"f5d55cea-c2ec-4f3f-9002-039fcf3851b6"]
}, Open  ]],

Cell["Alice and Bob Encrypt Message:", "Text",
 CellChangeTimes->{
  3.716825484342502*^9, {3.739271572133668*^9, 3.739271580609105*^9}, {
   3.739271618813908*^9, 
   3.7392716296704335`*^9}},ExpressionUUID->"380e10d5-03c7-4331-84cc-\
772f18bd0c83"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"A", "=", 
  RowBox[{"Mod", "[", 
   RowBox[{
    RowBox[{"g", "^", "a"}], ",", "p"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"B", "=", 
  RowBox[{"Mod", "[", 
   RowBox[{
    RowBox[{"g", "^", "b"}], ",", " ", "p"}], "]"}]}]}], "Input",
 CellChangeTimes->{
  3.716825484342502*^9, {3.739271572133668*^9, 3.739271580609105*^9}, {
   3.739271618813908*^9, 3.7392717383246346`*^9}, {3.739271806084321*^9, 
   3.739271817915494*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"273d022c-e281-4f18-bd10-40c172f2ce77"],

Cell[BoxData[
 RowBox[{"Mod", "[", 
  RowBox[{
   SuperscriptBox["g", "a"], ",", "p"}], "]"}]], "Output",
 CellChangeTimes->{{3.7392717245441065`*^9, 3.739271738793172*^9}, {
   3.7392718141269*^9, 3.7392718194924984`*^9}, 3.73928681515666*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"dd21faae-3760-4950-9596-e0263b44158d"],

Cell[BoxData[
 RowBox[{"Mod", "[", 
  RowBox[{
   SuperscriptBox["g", "b"], ",", "p"}], "]"}]], "Output",
 CellChangeTimes->{{3.7392717245441065`*^9, 3.739271738793172*^9}, {
   3.7392718141269*^9, 3.7392718194924984`*^9}, 3.739286815172276*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"ff8f88ee-4ee4-43ac-bf41-08097ed1d6f7"]
}, Open  ]],

Cell["\<\
But in fact, when Alice use B^a mod p and Alice use A^b mod p to decrypt is \
basically doing:\
\>", "Text",
 CellChangeTimes->{{3.7392717444066477`*^9, 3.7392717596645036`*^9}, {
  3.7392718416472716`*^9, 
  3.7392718875949354`*^9}},ExpressionUUID->"adc87950-e116-4531-843f-\
b4768d4a7d20"],

Cell["Alice", "CodeText",
 CellChangeTimes->{{3.7392717444066477`*^9, 
  3.7392717722947454`*^9}},ExpressionUUID->"61f804ba-2c8a-40ef-a993-\
fafcbbc99dcf"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Mod", "[", 
    RowBox[{
     RowBox[{"B", "^", "a"}], ",", " ", "p"}], "]"}], " ", "\[Equal]", " ", 
   RowBox[{"Mod", "[", 
    RowBox[{
     RowBox[{"g", "^", 
      RowBox[{"(", "ab", ")"}]}], ",", " ", "p"}], "]"}], " ", "\[Equal]", 
   " ", 
   RowBox[{"Mod", "[", 
    RowBox[{
     RowBox[{"g", "^", 
      RowBox[{"(", "ba", ")"}]}], ",", " ", "p"}], "]"}], " ", "\[Equal]", 
   " ", 
   RowBox[{"Mod", "[", 
    RowBox[{
     RowBox[{"A", "^", "b"}], ",", " ", "p"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7392717444066477`*^9, 3.739271799080645*^9}, {
  3.7392718920226755`*^9, 3.7392719551735716`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"0ff13924-1c1f-4e8e-9160-f1757a17ba96"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Why it is secure?", "Section",
 CellChangeTimes->{{3.70077612322993*^9, 3.7007761320921593`*^9}, {
   3.7007787731699142`*^9, 3.70077877480995*^9}, {3.735655649442748*^9, 
   3.735655649665411*^9}, 
   3.739269048363526*^9},ExpressionUUID->"9da19663-7179-45c9-8160-\
ad35832309c2"],

Cell["\<\
Modern Cryptography are all based on the problem that considered to be \
Mathematically Hard. For example, RSA based on the problem of  factorizing \
the prime. \
\>", "Text",
 CellChangeTimes->{{3.7392797190380583`*^9, 3.7392797428647757`*^9}, {
  3.739279871985839*^9, 3.739279878763262*^9}, {3.7392803940437217`*^9, 
  3.739280409851396*^9}},ExpressionUUID->"b8f6e9e1-3238-4993-9f9d-\
2b5cce51d88b"],

Cell["Whereas Diffie-Hellman is based on solving the discrete log", "Text",
 CellChangeTimes->{{3.7392797190380583`*^9, 3.7392797428647757`*^9}, {
  3.739279871985839*^9, 3.739279878763262*^9}, {3.7392803940437217`*^9, 
  3.7392804728591475`*^9}, {3.739280508687306*^9, 3.7392805178734236`*^9}, {
  3.7392806351876564`*^9, 3.739280657499648*^9}, {3.7392824890023804`*^9, 
  3.739282492691395*^9}},ExpressionUUID->"5702987a-fc50-4d2a-add6-\
688f56c76aed"],

Cell["THe discrete log problem is simple:  ", "Text",
 CellChangeTimes->{{3.7007765492418337`*^9, 3.7007765636102467`*^9}, {
   3.705104213701561*^9, 3.7051042224510612`*^9}, {3.7051697227932177`*^9, 
   3.7051697367862177`*^9}, {3.7056847753333597`*^9, 3.7056847788413363`*^9}, 
   3.705685608918363*^9, 3.716902605618763*^9, {3.739269059182247*^9, 
   3.739269063473222*^9}, {3.7392825152260275`*^9, 3.7392825352880144`*^9}, {
   3.7392828455630417`*^9, 3.73928284556404*^9}, {3.739282885195046*^9, 
   3.7392828907850432`*^9}},ExpressionUUID->"cf95ec46-d50b-492c-b645-\
fe4d61434ff7"],

Cell["Suppose there is a secret number a:", "CodeText",
 CellChangeTimes->{{3.7007765492418337`*^9, 3.7007765636102467`*^9}, {
   3.705104213701561*^9, 3.7051042224510612`*^9}, {3.7051697227932177`*^9, 
   3.7051697367862177`*^9}, {3.7056847753333597`*^9, 3.7056847788413363`*^9}, 
   3.705685608918363*^9, 3.716902605618763*^9, {3.739269059182247*^9, 
   3.739269063473222*^9}, {3.7392825152260275`*^9, 3.7392825352880144`*^9}, {
   3.7392828464440327`*^9, 
   3.739282920043005*^9}},ExpressionUUID->"284b988a-6dfc-46c7-8050-\
0f7f23ce1e67"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"a", " ", "=", " ", "5"}], ";"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7007765492418337`*^9, 3.7007765636102467`*^9}, {
   3.705104213701561*^9, 3.7051042224510612`*^9}, {3.7051697227932177`*^9, 
   3.7051697367862177`*^9}, {3.7056847753333597`*^9, 3.7056847788413363`*^9}, 
   3.705685608918363*^9, 3.716902605618763*^9, {3.739269059182247*^9, 
   3.739269063473222*^9}, {3.7392825152260275`*^9, 3.7392825352880144`*^9}, {
   3.7392828464440327`*^9, 3.739282932512042*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"560ee415-796f-4fb4-9e0c-9e9dde4988cf"],

Cell["And the only clue you have is g, p, and g^a mod p:", "CodeText",
 CellChangeTimes->{{3.7392829357040405`*^9, 
  3.7392829557530036`*^9}},ExpressionUUID->"baf428a1-462f-4b66-8b14-\
9984af9b1443"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"g", " ", "=", " ", "5"}], ";", " ", 
  RowBox[{"p", " ", "=", " ", "23"}], ";", " ", 
  RowBox[{"\"\<g^a mod p\>\"", "\[Rule]", 
   RowBox[{"Mod", "[", 
    RowBox[{
     RowBox[{"g", "^", "a"}], ",", " ", "p"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7392829357040405`*^9, 3.73928297589804*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"e937b967-93dd-47f3-a5a5-30f4d58399ae"],

Cell[BoxData[
 RowBox[{"\<\"g^a mod p\"\>", "\[Rule]", "20"}]], "Output",
 CellChangeTimes->{3.7392829763720093`*^9, 3.7392868152560806`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"8b6377f9-58ff-410f-9fde-8e48075d6e72"]
}, Open  ]],

Cell[TextData[StyleBox["How can you find the value of x, such that g^x mod p \
== g^a mod p?", "Text"]], "Text",
 CellChangeTimes->{{3.7007765492418337`*^9, 3.7007765636102467`*^9}, {
   3.705104213701561*^9, 3.7051042224510612`*^9}, {3.7051697227932177`*^9, 
   3.7051697367862177`*^9}, {3.7056847753333597`*^9, 3.7056847788413363`*^9}, 
   3.705685608918363*^9, 3.716902605618763*^9, {3.739269059182247*^9, 
   3.739269063473222*^9}, {3.7392825152260275`*^9, 3.7392825421980066`*^9}, {
   3.739282992354041*^9, 
   3.739283034756042*^9}},ExpressionUUID->"14ac6677-0d77-4e4b-8c08-\
a1dbb4226692"],

Cell["\<\
To do that, you need to go through all possible combination value x from 1 to \
p\
\>", "CodeText",
 CellChangeTimes->{{3.7007765492418337`*^9, 3.7007765636102467`*^9}, {
   3.705104213701561*^9, 3.7051042224510612`*^9}, {3.7051697227932177`*^9, 
   3.7051697367862177`*^9}, {3.7056847753333597`*^9, 3.7056847788413363`*^9}, 
   3.705685608918363*^9, 3.716902605618763*^9, {3.739269059182247*^9, 
   3.739269063473222*^9}, {3.7392825152260275`*^9, 3.7392825421980066`*^9}, {
   3.739282992354041*^9, 3.7392830583240104`*^9}, {3.7392831006810074`*^9, 
   3.7392831015370116`*^9}},ExpressionUUID->"9d1a644a-a628-4bd0-9cc5-\
cb149f0c3d39"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResultListofAllPosibbleValue", " ", "=", " ", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Mod", "[", 
      RowBox[{
       RowBox[{"g", "^", "#"}], ",", " ", "p"}], "]"}], "&"}], ",", " ", 
    RowBox[{"Range", "[", 
     RowBox[{"p", " ", "-", " ", "1"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7007765492418337`*^9, 3.7007765636102467`*^9}, {
   3.705104213701561*^9, 3.7051042224510612`*^9}, {3.7051697227932177`*^9, 
   3.7051697367862177`*^9}, {3.7056847753333597`*^9, 3.7056847788413363`*^9}, 
   3.705685608918363*^9, 3.716902605618763*^9, {3.739269059182247*^9, 
   3.739269063473222*^9}, {3.7392825152260275`*^9, 3.7392825421980066`*^9}, {
   3.739282992354041*^9, 3.7392830828860593`*^9}, {3.7392832141197014`*^9, 
   3.739283233998734*^9}, {3.7392855106612897`*^9, 3.7392855129471226`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"999d950d-7764-4852-a840-556e90eb6aa1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "5", ",", "2", ",", "10", ",", "4", ",", "20", ",", "8", ",", "17", ",", 
   "16", ",", "11", ",", "9", ",", "22", ",", "18", ",", "21", ",", "13", ",",
    "19", ",", "3", ",", "15", ",", "6", ",", "7", ",", "12", ",", "14", ",", 
   "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.7392830785780125`*^9, 3.7392830834220085`*^9}, 
   3.7392832349727063`*^9, 3.7392855183521338`*^9, 3.7392868153320417`*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"c4671915-52a9-4628-bca5-9cd07fd89117"]
}, Open  ]],

Cell["\<\
And you spotted that 20, at the fifth position, equal to the value you get on \
and, which is g^a mod p  = 20\
\>", "Text",
 CellChangeTimes->{{3.739283121996045*^9, 3.739283156669006*^9}, 
   3.7392832425957227`*^9},ExpressionUUID->"cc99a975-7d1a-4555-a2d6-\
a3e314a84040"],

Cell["Therefore, the value of x = 5 = a", "CodeText",
 CellChangeTimes->{{3.739283121996045*^9, 
  3.73928316777204*^9}},ExpressionUUID->"66e20bc4-5623-43d2-ac56-\
d7a83d019863"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", " ", "=", " ", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Mod", "[", 
   RowBox[{
    RowBox[{"g", "^", "x"}], ",", " ", "p"}], "]"}], " ", "\[Equal]", " ", 
  RowBox[{"Mod", "[", 
   RowBox[{
    RowBox[{"g", "^", "a"}], ",", " ", "p"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.739283121996045*^9, 3.739283195339733*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"73da266d-613f-4953-aab4-d902c6cdb538"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.739283195772701*^9, 3.739285522819497*^9, 
  3.7392868153563786`*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"45b9f7ab-93bf-4687-b5e7-a03f7eaffa6d"]
}, Open  ]],

Cell["\<\
So you have successfully recover a from g, p, and Mod[g^a, p] , by looking at \
the position of Mod[g^a,p] in that list.\[LineSeparator]Therefore, we can \
see, the problem of solving discrete log is equivalent to the problem of :\
\>", "Text",
 CellChangeTimes->{{3.7007765492418337`*^9, 3.7007765636102467`*^9}, {
   3.705104213701561*^9, 3.7051042224510612`*^9}, {3.705105582902875*^9, 
   3.7051055862950687`*^9}, 3.705685620863511*^9, 3.7169026105308657`*^9, 
   3.735483436579891*^9, 3.7392690893926473`*^9, {3.7392827824770045`*^9, 
   3.739282785919032*^9}, {3.739283249568734*^9, 3.739283267378711*^9}, {
   3.7392833607347383`*^9, 3.73928338610296*^9}, {3.7392834359105053`*^9, 
   3.739283438807502*^9}, {3.7392848973054523`*^9, 
   3.7392849414444275`*^9}},ExpressionUUID->"974d1d02-3f81-4f9f-a141-\
4f1608fd9d6a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
     "Given", " ", "a", " ", "sequence", " ", "of", " ", "number", " ", 
      "that", " ", "is", " ", "nearly", " ", "in", " ", "random", " ", 
      "order"}], ",", " ", 
     RowBox[{
     "can", " ", "you", " ", "find", " ", "the", " ", "targeted", " ", 
      "number"}]}], "\[CloseCurlyQuote]"}], "s", " ", "position", " ", "in", 
   " ", "this", " ", 
   RowBox[{"sequence", "."}]}], " ", ";"}]], "Input",
 CellChangeTimes->{{3.7007765492418337`*^9, 3.7007765636102467`*^9}, {
   3.705104213701561*^9, 3.7051042224510612`*^9}, {3.705105582902875*^9, 
   3.7051055862950687`*^9}, 3.705685620863511*^9, 3.7169026105308657`*^9, 
   3.735483436579891*^9, 3.7392690893926473`*^9, {3.7392827824770045`*^9, 
   3.739282785919032*^9}, {3.739283249568734*^9, 3.739283267378711*^9}, {
   3.7392833607347383`*^9, 3.73928342706548*^9}, {3.7392849744381647`*^9, 
   3.7392849800638523`*^9}},
 EmphasizeSyntaxErrors->True,
 CellLabel->"In[31]:=",ExpressionUUID->"a568bd7f-a814-422b-9455-97f2b8b11e5c"],

Cell["\<\
However, find the position of a particular number in a list is not a easy \
task. Because the list generated from Mod is almost at random order. \
\>", "Text",
 CellChangeTimes->{{3.7007765492418337`*^9, 3.7007765636102467`*^9}, {
   3.705104213701561*^9, 3.7051042224510612`*^9}, {3.705105582902875*^9, 
   3.7051055862950687`*^9}, 3.705685620863511*^9, 3.7169026105308657`*^9, 
   3.735483436579891*^9, 3.7392690893926473`*^9, {3.7392827824770045`*^9, 
   3.739282785919032*^9}, {3.739283249568734*^9, 3.739283267378711*^9}, {
   3.7392833607347383`*^9, 3.73928342706548*^9}, {3.7392849744381647`*^9, 
   3.739285093893285*^9}},
 EmphasizeSyntaxErrors->
  True,ExpressionUUID->"38a3ca4f-2bce-487e-a74e-71467779e343"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", "ResultListofAllPosibbleValue", "]"}]], "Input",
 CellChangeTimes->{{3.7007765492418337`*^9, 3.7007765636102467`*^9}, {
   3.705104213701561*^9, 3.7051042224510612`*^9}, {3.705105582902875*^9, 
   3.7051055862950687`*^9}, 3.705685620863511*^9, 3.7169026105308657`*^9, 
   3.735483436579891*^9, 3.7392690893926473`*^9, {3.7392827824770045`*^9, 
   3.739282785919032*^9}, {3.739283249568734*^9, 3.739283267378711*^9}, {
   3.7392833607347383`*^9, 3.73928342706548*^9}, {3.7392849744381647`*^9, 
   3.7392851863029785`*^9}, {3.739285267518847*^9, 3.739285296769119*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"af084a9e-64ba-4bf9-9af4-e0a1896024e3"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7CG0iANUAI3mgNIqUFoAjYbpM4HSElBaAUrL
QGlDNHEDKK0EpdXQ7EEXN4PSGlDaCEprQWlTKK2DJq4HpY3R7IX5yxBNHcxc
mD9g+mD+gPkT5g50e2Hu/GAPALuEFJw=
      "]]}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 22.}, {0, 22.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.739285104790081*^9, 3.739285121626896*^9}, 
   3.7392851620179462`*^9, 3.739285198560644*^9, {3.7392852744597454`*^9, 
   3.739285297655218*^9}, 3.739285525344905*^9, 3.7392868160587296`*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"68904814-27cc-4b87-9db8-26fdd92c9933"]
}, Open  ]],

Cell["\<\
Moreover, the length of the list that you are going to look up is relates to \
the choice on p.\
\>", "Text",
 CellChangeTimes->{{3.7392854145927644`*^9, 
  3.7392854575804205`*^9}},ExpressionUUID->"4f9873ef-5aa2-4aa6-8f16-\
2de25a3ef0cd"],

Cell["\<\
In particular, the number you need to look up is equal to p-1\
\>", "CodeText",
 CellChangeTimes->{{3.7392854145927644`*^9, 
  3.739285476233824*^9}},ExpressionUUID->"3b2532e8-16c0-4672-8bac-\
7ab2de7026b3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Length", " ", "@", " ", "ResultListofAllPosibbleValue"}], " ", 
  "\[Equal]", " ", 
  RowBox[{"p", " ", "-", "1", " "}]}]], "Input",
 CellChangeTimes->{{3.7392854145927644`*^9, 3.739285491532942*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"9954ca70-1566-44ee-9799-dff18a4fe492"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.7392854872255087`*^9, 3.7392854922338195`*^9}, 
   3.7392855270510693`*^9, 3.739286816109539*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"5161aee5-9b62-4985-83cf-dd2e3706307b"]
}, Open  ]],

Cell["\<\
In practice, the value of g is usually small integer, like 2 or 3. However, \
the selection of p is usually a prime with hundreds of digits.  Says:\
\>", "Text",
 CellChangeTimes->{{3.739285538143162*^9, 3.7392856171633987`*^9}, {
  3.739285654893371*^9, 3.739285688547818*^9}, {3.7392857194062624`*^9, 
  3.7392857210562286`*^9}},ExpressionUUID->"857af62d-ae92-47fc-9847-\
d4312175e769"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", " ", "=", " ", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"p", " ", "=", " ", 
  RowBox[{"RandomPrime", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"10", "^", "600"}], ",", " ", 
     RowBox[{"10", "^", "601"}]}], "}"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.739285538143162*^9, 3.7392856171633987`*^9}, {
  3.7392856552959967`*^9, 3.7392856991314077`*^9}, {3.7397488948163743`*^9, 
  3.739748896640742*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"a5d3395e-a1c7-424b-b5f7-31310ce1e4be"],

Cell[BoxData[\
"29184464178105314387973388311726627129004648440444162425609407154039486686070\
201596293570021941239002085796629887328092725542657958360850092608345422131497\
661015457412827653437751488422348387624782694266527040286628382503130682600766\
779332153863692594401497825329612071159199061877334334255959224329912012367430\
394095880297298432399973666522228190128333414960065127907837222085579053273914\
932470844034457318567854158022037648651883120315935509153209498256247594928885\
200230629277437305396521000337302769171612005014584595237953245831404880671512\
84595979332802884045697008863143885851021608406165282791"], "Output",
 CellChangeTimes->{3.7392856997692757`*^9, 3.7392868161946535`*^9, 
  3.7397489001552477`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"a3dee00a-4fb3-4310-a6f7-66f36997c18c"]
}, Open  ]],

Cell["And Lets say the private key and the Secret  is :", "Text",
 CellChangeTimes->{{3.7392834289595118`*^9, 3.739283430057515*^9}, {
  3.7392867606434774`*^9, 
  3.7392867889267726`*^9}},ExpressionUUID->"476ce9b9-acd2-4167-bf5f-\
f059a5a71e12"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", " ", "=", " ", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"secret", " ", "=", " ", 
  RowBox[{"Mod", "[", 
   RowBox[{
    RowBox[{"g", "^", "a"}], ",", " ", "p"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7392834289595118`*^9, 3.739283430057515*^9}, {
  3.7392867606434774`*^9, 3.7392868034171925`*^9}, {3.7392868343476353`*^9, 
  3.7392868359631796`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"e0888b97-3d72-47ec-935a-af5b48023d7c"],

Cell[BoxData["64"], "Output",
 CellChangeTimes->{{3.7392868040185966`*^9, 3.7392868374614162`*^9}, 
   3.73974890374778*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"da37ed17-b350-40f7-b176-dcf923882f0e"]
}, Open  ]],

Cell["\<\
However, if you only know g, p, the secret(Mod[g^a,p]), it gonna to be hard \
to recover a from it. \
\>", "Text",
 CellChangeTimes->{{3.739286824066309*^9, 3.739286870278428*^9}, {
  3.7392871053794384`*^9, 
  3.7392871053797235`*^9}},ExpressionUUID->"80d5729e-03d8-48b1-9227-\
4d41dd851f53"],

Cell["Try the following command (Endless Loop WARNING):", "Text",
 CellChangeTimes->{{3.739286824066309*^9, 3.739286870278428*^9}, {
  3.7392871074662733`*^9, 
  3.739287113317355*^9}},ExpressionUUID->"9ffe918e-935c-4e2f-8c7f-\
8392a7a0a652"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"i", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Timing", "[", 
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{"i", " ", "<", " ", "p"}], ",", " ", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{
          RowBox[{"g", "^", "i"}], ",", "p"}], "]"}], " ", "\[Equal]", " ", 
        "a"}], ",", " ", 
       RowBox[{"Print", "[", "i", "]"}]}], "]"}], ";", 
     RowBox[{"i", "++"}]}]}], "]"}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.739286824066309*^9, 3.739286896223011*^9}, {
  3.7392869487170978`*^9, 3.739286985201043*^9}, {3.7397489769553957`*^9, 
  3.7397489801961975`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"7d34d366-3857-4b5c-93d9-201eb39dc2e4"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.739748971993967*^9, 3.739755193193837*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"05865a0d-1994-48a4-9fe6-d9c498d606cb"]
}, Open  ]],

Cell["\<\
You can see the program runs into endless loop. In fact, if we use p such \
that is a prime with more than 600 digits, the even the fastest computer on \
Earth will not able to recover a, given g, p and the value of g^a mod p.\
\>", "Text",
 CellChangeTimes->{{3.739286992484123*^9, 
  3.73928707720028*^9}},ExpressionUUID->"8eb63a7e-c426-4b9f-9981-\
1e260be40e20"],

Cell["\<\
However, Such encryption can be still cracked by a quantum computer. \
\>", "Text",
 CellChangeTimes->{{3.739286992484123*^9, 
  3.7392870951272583`*^9}},ExpressionUUID->"8ead9068-fd37-4aac-bd96-\
e15bfb98cbd1"],

Cell["", "Text",
 CellChangeTimes->{{3.739286824066309*^9, 
  3.739286877413148*^9}},ExpressionUUID->"e2d6eec1-fbab-4c33-8055-\
6cd471e9a578"],

Cell[BoxData[""], "Input",ExpressionUUID->"1b25744b-381b-4920-8be8-794862a9505c"],

Cell["", "Text",
 CellChangeTimes->{{3.739286824066309*^9, 
  3.7392868790855103`*^9}},ExpressionUUID->"1d7c71ee-6ef8-4222-b4a7-\
31be851aa1c5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Author contact information", "Section",
 CellChangeTimes->{{3.736868777412567*^9, 3.736868791070746*^9}, {
  3.739269021598527*^9, 
  3.739269026119873*^9}},ExpressionUUID->"a78f6e4f-dbdf-4763-a44f-\
16569b36e665"],

Cell["guosiyi1997@outook.com", "Text",
 CellChangeTimes->{{3.736868810717331*^9, 3.736868830235566*^9}, {
  3.7392690348122697`*^9, 
  3.739269040583856*^9}},ExpressionUUID->"44146aed-2d19-4c66-bfba-\
1e67f1c1dfb3"],

Cell["\<\
(We recommend using your wolfram ID, but any address where you would like to \
be contacted about this publication should work.)\
\>", "Text",
 CellChangeTimes->{{3.736868838667325*^9, 
  3.736868890391745*^9}},ExpressionUUID->"a4e585e2-fad1-40ff-85de-\
7b4c754eae54"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "Chapter",
 CellFrame->{{False, False}, {True, True}},
 CellMargins->{{27, Inherited}, {10, 100}},
 CellChangeTimes->{{3.73565601123527*^9, 3.735656013113811*^9}, {
  3.736090596218631*^9, 3.736090610128833*^9}, {3.739280550891071*^9, 
  3.739280551267851*^9}},ExpressionUUID->"a91b0c22-4606-4122-bf19-\
3d4bcd746f4c"],

Cell["", "Subsection",
 CellChangeTimes->{{3.736090438961504*^9, 3.7360904406539497`*^9}, 
   3.7392805491203747`*^9},ExpressionUUID->"962879f3-9b11-4b56-8992-\
fa4001376df9"],

Cell["", "Subsection",
 CellChangeTimes->{{3.7356560569996862`*^9, 3.73565606688798*^9}, {
  3.7360900717675047`*^9, 3.736090079428916*^9}, {3.739280580106738*^9, 
  3.7392805806764035`*^9}},ExpressionUUID->"f46ef323-e1f9-43b8-b626-\
fa17b9c9a91b"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1484, 917},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
Magnification:>0.95 Inherited,
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 7, 2018)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["Title"], PageWidth -> WindowWidth, ShowCellBracket -> False, 
    CellMargins -> {{0, 0}, {0, 0}}, 
    CellBracketOptions -> {"OverlapContent" -> True}, 
    CellElementSpacings -> {"ClosedGroupTopMargin" -> 150}, 
    CellGroupingRules -> {"TitleGrouping", 0}, PageBreakAbove -> True, 
    CellFrameMargins -> {{20, 50}, {6, 78}}, TextAlignment -> Left, 
    LineSpacing -> {1, 4}, LanguageCategory -> "NaturalLanguage", 
    CounterIncrements -> {"Title"}, 
    CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {"Figure", 0}, {
      "Subtitle", 0}, {"Subsubtitle", 0}, {"Item", 0}, {"Subitem", 0}, {
      "Subsubitem", 0}, {"ItemNumbered", 0}, {"SubitemNumbered", 0}, {
      "SubsubitemNumbered", 0}}, MenuSortingValue -> 1100, MenuCommandKey -> 
    "1", FontFamily -> "Source Sans Pro", FontSize -> 44, 
    FontTracking -> -0.8, FontColor -> RGBColor[255, 255, 255], Background -> 
    RGBColor[0.71375, 0.20785, 0.17255]], 
   Cell[
    StyleData["Abstract"], PageWidth -> WindowWidth, ShowCellBracket -> False,
     ShowSelection -> True, CellMargins -> {{0, 0}, {0, 0}}, 
    CellBracketOptions -> {"OverlapContent" -> True}, 
    CellFrameMargins -> {{30, 40}, {24, 2}}, TextAlignment -> Left, 
    FontFamily -> "Source Sans Pro", FontSize -> 16, FontSlant -> "Italic", 
    FontColor -> RGBColor[255, 255, 255], Background -> 
    RGBColor[0.71375, 0.20785, 0.17255]], 
   Cell[
    StyleData["AuthorInfo"], PageWidth -> WindowWidth, 
    CellFrame -> {{0, 0}, {8, 0}}, ShowCellBracket -> True, ShowSelection -> 
    True, CellMargins -> {{0, 0}, {0, 0}}, 
    CellBracketOptions -> {"OverlapContent" -> True}, 
    CellFrameMargins -> {{30, 40}, {10, 4}}, CellFrameColor -> 
    RGBColor[0.988235, 0.403922, 0.0313725], TextAlignment -> Left, 
    FontFamily -> "Source Sans Pro", FontSize -> 17, FontWeight -> "SemiBold",
     FontSlant -> "Plain", FontColor -> RGBColor[255, 255, 255], Background -> 
    RGBColor[0.71375, 0.20785, 0.17255]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Chapter"], ShowCellBracket -> False, 
       CellMargins -> {{20, 30}, {10, 45}}, 
       StyleKeyMapping -> {
        "Tab" -> "Subchapter", "Backspace" -> 
         "Title", $CellContext`KeyEvent[
          "Tab", $CellContext`Modifiers -> {$CellContext`Shift}] -> "Title"}, 
       CellGroupingRules -> {"SectionGrouping", 10}, PageBreakBelow -> False, 
       LineSpacing -> {1, 4}, LanguageCategory -> "NaturalLanguage", 
       CounterIncrements -> "Chapter", 
       CounterAssignments -> {{"Subchapter", 0}, {"Section", 0}, {
         "Equation", 0}, {"Figure", 0}, {"Subsubtitle", 0}, {"Item", 0}, {
         "Subitem", 0}, {"Subsubitem", 0}, {"ItemNumbered", 0}, {
         "SubitemNumbered", 0}, {"SubsubitemNumbered", 0}}, MenuSortingValue -> 
       1150, MenuCommandKey -> "2", FontFamily -> "Source Sans Pro", FontSize -> 
       34, FontTracking -> -0.5, FontColor -> 
       RGBColor[
        0.21176470588235294`, 0.21176470588235294`, 0.21176470588235294`]], 
      Cell[
       StyleData["Chapter", "Presentation"], 
       CellMargins -> {{67, Inherited}, {10, 15}}, LineSpacing -> {1, 16}, 
       FontSize -> 48], 
      Cell[
       StyleData["Chapter", "SlideShow"], 
       CellMargins -> {{
         0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.04 
          FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 15}}, 
       LineSpacing -> {1, 2}, FontSize -> 48], 
      Cell[
       StyleData["Chapter", "Condensed"], CellMargins -> {{18, 10}, {5, 7}}, 
       FontSize -> 14], 
      Cell[
       StyleData["Chapter", "Printout"], 
       CellMargins -> {{10, Inherited}, {10, 15}}], 
      Cell[
       StyleData["Chapter", "PrintoutGray"], 
       CellMargins -> {{10, Inherited}, {10, 15}}]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Section"], CellFrame -> False, ShowCellBracket -> True, 
       CellMargins -> {{20, 30}, {10, 25}}, Evaluatable -> False, 
       CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> False, 
       CellChangeTimes -> {3.716825484342502*^9}, Hyphenation -> False, 
       CounterIncrements -> "Section", 
       CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
         "ItemNumbered", 0}}, AspectRatioFixed -> True, FontFamily -> 
       "Source Sans Pro", FontSize -> 28, FontTracking -> -0.5, FontColor -> 
       RGBColor[0.71375, 0.20785, 0.17255]], 
      Cell[
       StyleData["Section", "Presentation", StyleDefinitions -> None]], 
      Cell[
       StyleData["Section", "SlideShow", StyleDefinitions -> None]], 
      Cell[
       StyleData["Section", "Printout", StyleDefinitions -> None]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Subsection"], ShowCellBracket -> False, 
       CellMargins -> {{20, 30}, {6, 12}}, 
       CellGroupingRules -> {"SectionGrouping", 50}, PageBreakBelow -> False, 
       Hyphenation -> False, LineSpacing -> {1, 1}, CounterIncrements -> 
       "Subsection", 
       CounterAssignments -> {{"Subsubsection", 0}, {"ItemNumbered", 0}}, 
       FontFamily -> "Source Sans Pro", FontSize -> 23, FontTracking -> -0.5, 
       FontColor -> RGBColor[0.71375, 0.20785, 0.17255]], 
      Cell[
       StyleData["Subsection", "Presentation", StyleDefinitions -> None]], 
      Cell[
       StyleData["Subsection", "SlideShow", StyleDefinitions -> None]], 
      Cell[
       StyleData["Subsection", "Printout", StyleDefinitions -> None]]}, 
     Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Subsubsection"], ShowCellBracket -> False, 
       CellMargins -> {{21, 21}, {2, 8}}, 
       CellGroupingRules -> {"SectionGrouping", 60}, PageBreakBelow -> False, 
       Hyphenation -> False, LineSpacing -> {1, 1}, CounterIncrements -> 
       "Subsubsection", CounterAssignments -> {{"ItemNumbered", 0}}, 
       FontFamily -> "Source Sans Pro", FontSize -> 18, FontTracking -> -0.5, 
       FontColor -> RGBColor[0.9254901960784314, 0.49019607843137253`, 0.2]], 
      Cell[
       StyleData["Subsubsection", "Presentation", StyleDefinitions -> None]], 
      Cell[
       StyleData["Subsubsection", "SlideShow", StyleDefinitions -> None]], 
      Cell[
       StyleData["Subsubsection", "Printout", StyleDefinitions -> None]]}, 
     Closed]], 
   Cell[
    StyleData["FurtherExplorationSection"], CellFrame -> {{0, 0}, {0, 0.5}}, 
    ShowCellBracket -> False, CellMargins -> {{20, 30}, {4, 24}}, 
    CellGroupingRules -> {"SectionGrouping", 30}, 
    CellFrameMargins -> {{0, 0}, {0, 22}}, CellFrameColor -> GrayLevel[0.8], 
    DefaultNewCellStyle -> "FurtherExploration", FontFamily -> 
    "Source Sans Pro", FontSize -> 18, 
    FontVariations -> {"CapsType" -> "AllCaps"}, FontColor -> 
    RGBColor[0.2784313725490196, 0.2784313725490196, 0.2784313725490196]], 
   Cell[
    StyleData["FurtherExploration", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{20, 10}, {2, 4}}, 
    ReturnCreatesNewCell -> True, FontFamily -> "Source Sans Pro", FontSize -> 
    16, FontColor -> RGBColor[0.71375, 0.20785, 0.17255]], 
   Cell[
    StyleData["AuthorshipSection"], ShowCellBracket -> False, 
    CellMargins -> {{20, Inherited}, {4, 22}}, 
    CellGroupingRules -> {"SectionGrouping", 30}, DefaultNewCellStyle -> 
    "FurtherExploration", FontFamily -> "Source Sans Pro", FontSize -> 18, 
    FontVariations -> {"CapsType" -> "AllCaps"}, FontColor -> 
    RGBColor[0.2784313725490196, 0.2784313725490196, 0.2784313725490196]], 
   Cell[
    StyleData["Authorship", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{20, 10}, {2, 4}}, 
    ReturnCreatesNewCell -> True, FontFamily -> "Source Sans Pro", FontSize -> 
    16, FontColor -> 
    RGBColor[0.4392156862745098, 0.4392156862745098, 0.4392156862745098]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Body Text", "Section"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Text"], ShowCellBracket -> True, 
          CellMargins -> {{20, 10}, {6, 8}}, ReturnCreatesNewCell -> True, 
          DefaultNewCellStyle -> "Direction", FontSize -> 
          15, $CellContext`DefaultReturnCreatedCellStyle -> "Direction"], 
         Cell[
          StyleData["Text", "Presentation", StyleDefinitions -> None]], 
         Cell[
          StyleData["Text", "SlideShow", StyleDefinitions -> None]], 
         Cell[
          StyleData["Text", "Printout", StyleDefinitions -> None], 
          TextJustification -> 1.]}, Open]], 
      Cell[
       StyleData["CodeText", StyleDefinitions -> StyleData["Text"]], 
       CellMargins -> {{23, 10}, {3, 8}}, CellFrameLabelMargins -> 4, 
       MenuSortingValue -> 10000, MenuCommandKey -> "8", FontSize -> 15, 
       FontWeight -> "Plain", FontColor -> 
       GrayLevel[0.45], $CellContext`DefaultReturnCreatedCellStyle -> 
       "Input"]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
      "Styles for Input, Output and Graphics", "Section", 
       CellChangeTimes -> {3.7168930720372066`*^9}], 
      Cell[
       StyleData["Input"], CellMargins -> {{82, 10}, {5, 6}}, 
       StyleKeyMapping -> {"=" -> "WolframAlphaShort", "*" -> "Item"}, 
       AutoNumberFormatting -> False, FontSize -> 13], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["InputOnly"], CellMargins -> {{82, 10}, {7, 7}}, FontSize -> 
          13], 
         Cell[
          StyleData["InputOnly", "Presentation"], 
          CellMargins -> {{100, 10}, {8, 15}}], 
         Cell[
          StyleData["InputOnly", "SlideShow"], 
          CellMargins -> {{100, 10}, {8, 15}}], 
         Cell[
          StyleData["InputOnly", "Condensed"], 
          CellMargins -> {{50, 10}, {2, 3}}], 
         Cell[
          StyleData["InputOnly", "Printout"], 
          CellMargins -> {{49, Inherited}, {Inherited, Inherited}}, 
          LinebreakAdjustments -> {0.85, 2, 10, 1, 1}], 
         Cell[
          StyleData["InputOnly", "PrintoutGray"], 
          CellMargins -> {{49, Inherited}, {Inherited, Inherited}}, 
          LinebreakAdjustments -> {0.85, 2, 10, 1, 1}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Code"]], 
         Cell[
          StyleData["Code", "Presentation"], 
          CellMargins -> {{100, 10}, {8, 15}}], 
         Cell[
          StyleData["Code", "SlideShow"], 
          CellMargins -> {{
            0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.01 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {8, 15}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData["Code", "Condensed"], CellMargins -> {{50, 10}, {2, 3}}], 
         Cell[
          StyleData["Code", "Printout"], 
          CellMargins -> {{49, Inherited}, {Inherited, Inherited}}], 
         Cell[
          StyleData["Code", "PrintoutGray"], 
          CellMargins -> {{49, Inherited}, {Inherited, Inherited}}]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Output"], CellMargins -> {{82, 10}, {10, 5}}, FontSize -> 
          13], 
         Cell[
          StyleData["Output", "Presentation"], 
          CellMargins -> {{100, 10}, {15, 8}}], 
         Cell[
          StyleData["Output", "SlideShow"], 
          CellMargins -> {{
            0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.01 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {15, 8}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData["Output", "Condensed"], 
          CellMargins -> {{50, Inherited}, {3, 2}}], 
         Cell[
          StyleData["Output", "Printout"], 
          CellMargins -> {{49, Inherited}, {9, 3}}], 
         Cell[
          StyleData["Output", "PrintoutGray"], 
          CellMargins -> {{49, Inherited}, {9, 3}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["PlacedGraphics"], CellFrame -> False, ShowCellBracket -> 
          False, CellMargins -> {{82, 21}, {8, 10}}, CellGroupingRules -> 
          "GraphicsGrouping", CellHorizontalScrolling -> True, ShowCellLabel -> 
          False, TextAlignment -> Left, LineSpacing -> {1, 1}, 
          InsetBoxOptions -> {
           BaseStyle -> {CellFrame -> None, Background -> None}}], 
         Cell[
          StyleData[
          "PlacedGraphics", "Presentation", StyleDefinitions -> None]], 
         Cell[
          StyleData["PlacedGraphics", "SlideShow", StyleDefinitions -> None]], 
         Cell[
          StyleData["PlacedGraphics", "Printout", StyleDefinitions -> None]]},
         Closed]], 
      Cell[
       StyleData["CellLabel"], LineSpacing -> {1, 1}, AutoNumberFormatting -> 
       False, FontSize -> 9, FontSlant -> "Oblique"]}, Open]]}, Visible -> 
  False, FrontEndVersion -> 
  "11.3 for Microsoft Windows (64-bit) (March 7, 2018)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 264, 4, 132, "Title",ExpressionUUID->"755e0098-9782-4df5-8299-7f54266c54d6"],
Cell[847, 28, 625, 10, 44, "Abstract",ExpressionUUID->"db4efd27-b72d-4835-a486-b18956bba0cb"],
Cell[1475, 40, 581, 8, 42, "AuthorInfo",ExpressionUUID->"59a63784-4e95-46b9-9a1d-2c013f47161b"],
Cell[2059, 50, 71, 0, 32, "Text",ExpressionUUID->"85271f44-5b04-421c-bf31-0395fab10c35"],
Cell[2133, 52, 1187, 18, 74, "Text",ExpressionUUID->"99ddfba3-f2e4-48aa-a886-7472bbc581ac"],
Cell[CellGroupData[{
Cell[3345, 74, 487, 8, 68, "Section",ExpressionUUID->"35feb7e4-4e93-4e64-abc0-7b0b86e8128f"],
Cell[3835, 84, 911, 14, 53, "Text",ExpressionUUID->"7bdcf8b5-db13-4113-a6ce-6b533e48ca47"],
Cell[4749, 100, 497, 7, 29, "CodeText",ExpressionUUID->"6047e34c-4783-4ed0-b0de-5328517365be"],
Cell[CellGroupData[{
Cell[5271, 111, 501, 9, 44, "Input",ExpressionUUID->"6a57f104-ade9-4e69-9c46-f4f2c59d53ab"],
Cell[5775, 122, 51037, 841, 624, "Output",ExpressionUUID->"40b8c521-eb30-4ceb-b6de-14185f7c0e9a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[56861, 969, 424, 7, 68, "Section",ExpressionUUID->"69c2789e-757d-42de-8e7a-aa67a7c35b9d"],
Cell[57288, 978, 389, 6, 32, "Text",ExpressionUUID->"0ed2d935-e8ff-4c05-9e95-1dd6631482fc"],
Cell[57680, 986, 186, 3, 32, "Text",ExpressionUUID->"a02e14d9-5972-4e74-9442-0f9b41354228"],
Cell[57869, 991, 608, 10, 29, "CodeText",ExpressionUUID->"7a9ac988-03a4-4c18-9dca-ea7cdc6e168b"],
Cell[58480, 1003, 556, 10, 44, "Input",ExpressionUUID->"e3998e4d-7b72-4f12-ab60-8520725af581"],
Cell[59039, 1015, 231, 4, 32, "Text",ExpressionUUID->"78b9a3b2-6d4d-4adb-9fdb-ffc7c967579a"],
Cell[59273, 1021, 325, 6, 25, "Input",ExpressionUUID->"53129263-ec0f-4fd7-bea8-4dd0460286bb"],
Cell[59601, 1029, 270, 6, 29, "CodeText",ExpressionUUID->"37caa5ff-c3fb-4d77-9894-aeb2eb1597b8"],
Cell[CellGroupData[{
Cell[59896, 1039, 321, 7, 25, "Input",ExpressionUUID->"fdc2beaf-97c9-4596-a86a-a5c57a4fc405"],
Cell[60220, 1048, 282, 4, 29, "Output",ExpressionUUID->"ff46498c-143d-4cee-8a22-aecf144d47a3"]
}, Open  ]],
Cell[60517, 1055, 180, 3, 29, "CodeText",ExpressionUUID->"28acfb1c-1bb9-4613-82f1-4bc29b16ba73"],
Cell[60700, 1060, 226, 4, 25, "Input",ExpressionUUID->"a249e1d2-cd3f-422c-8dbb-b6f80a04b85d"],
Cell[60929, 1066, 217, 5, 29, "CodeText",ExpressionUUID->"609525f5-8bff-4fa2-9668-cc2fc6d7b5ab"],
Cell[CellGroupData[{
Cell[61171, 1075, 349, 7, 25, "Input",ExpressionUUID->"90757b60-f0cb-42a8-b618-d1204af314f4"],
Cell[61523, 1084, 227, 3, 29, "Output",ExpressionUUID->"6fe7169d-3238-4f21-a177-f231ea6b4eaf"]
}, Open  ]],
Cell[61765, 1090, 324, 7, 32, "Text",ExpressionUUID->"7c29e1c4-5f2a-44af-b60c-fcede180fc76"],
Cell[62092, 1099, 261, 4, 29, "CodeText",ExpressionUUID->"b9dad3bf-b331-46b2-bc25-c69801c86d46"],
Cell[CellGroupData[{
Cell[62378, 1107, 806, 17, 25, "Input",ExpressionUUID->"590002bf-636b-421c-986d-efeb01cf6ca0"],
Cell[63187, 1126, 1643, 35, 45, "Output",ExpressionUUID->"afb623d4-8709-4081-a7cc-2d201059a9da"]
}, Open  ]],
Cell[64845, 1164, 216, 4, 29, "CodeText",ExpressionUUID->"3b083960-fa8d-4270-9012-3e97b816aecd"],
Cell[CellGroupData[{
Cell[65086, 1172, 608, 14, 25, "Input",ExpressionUUID->"dd73ee0e-c3ad-4ef5-bcad-bfa1af9b6e2c"],
Cell[65697, 1188, 1651, 36, 45, "Output",ExpressionUUID->"6ece3c52-b56e-42b6-95b6-cfe2373824a8"]
}, Open  ]],
Cell[67363, 1227, 306, 7, 32, "Text",ExpressionUUID->"15f23ad2-a233-4326-8f66-0986d8749079"],
Cell[CellGroupData[{
Cell[67694, 1238, 438, 9, 25, "Input",ExpressionUUID->"7a8cd761-8503-4f22-9711-63f0f4495116"],
Cell[68135, 1249, 429, 9, 29, "Output",ExpressionUUID->"f51a06e6-451f-47a0-ba01-515068784761"]
}, Open  ]],
Cell[68579, 1261, 251, 4, 32, "Text",ExpressionUUID->"f915f25c-ef56-405e-8650-0beeb71e26b4"],
Cell[CellGroupData[{
Cell[68855, 1269, 380, 7, 25, "Input",ExpressionUUID->"43ef5876-3771-4379-8068-2602f38cfaf2"],
Cell[69238, 1278, 325, 5, 29, "Output",ExpressionUUID->"3995668a-c844-4b29-a80a-083865f1a924"]
}, Open  ]],
Cell[69578, 1286, 291, 6, 32, "Text",ExpressionUUID->"92c503b1-d44b-462f-8db5-1fc60095bf6e"],
Cell[CellGroupData[{
Cell[69894, 1296, 421, 9, 25, "Input",ExpressionUUID->"7526038b-be12-43b4-aba2-49353a81565f"],
Cell[70318, 1307, 451, 9, 29, "Output",ExpressionUUID->"dff064a5-2fa4-438c-a428-0edcacf34e53"]
}, Open  ]],
Cell[70784, 1319, 240, 5, 32, "Text",ExpressionUUID->"0d6f8098-f997-4c7c-8d35-5eaad955a6c1"],
Cell[CellGroupData[{
Cell[71049, 1328, 371, 7, 25, "Input",ExpressionUUID->"af8fac10-dfaf-49c6-8ff2-1e15a8898023"],
Cell[71423, 1337, 223, 3, 29, "Output",ExpressionUUID->"a692b99a-56ed-4727-a733-645ea27353a9"]
}, Open  ]],
Cell[71661, 1343, 263, 6, 32, "Text",ExpressionUUID->"de99e448-4fa4-4b69-ae0c-149676ac070c"],
Cell[CellGroupData[{
Cell[71949, 1353, 259, 4, 25, "Input",ExpressionUUID->"b64ef6ac-b894-4ad1-90bf-a982f4aa4362"],
Cell[72211, 1359, 200, 3, 29, "Output",ExpressionUUID->"e8a589da-471c-46b5-8fad-976fa2dd3c8e"]
}, Open  ]],
Cell[72426, 1365, 387, 8, 32, "Text",ExpressionUUID->"51d45590-476e-43f2-b9e5-0b5e70a416bd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72850, 1378, 325, 5, 68, "Section",ExpressionUUID->"d7c128dd-0f04-4a41-a0b8-a5c09fd4b2f7"],
Cell[73178, 1385, 224, 5, 32, "Text",ExpressionUUID->"c51ac006-2dbd-4e53-a595-7702a96fa127"],
Cell[73405, 1392, 212, 4, 32, "Text",ExpressionUUID->"e4f64714-e0fb-4591-894d-2b98c8af50e3"],
Cell[CellGroupData[{
Cell[73642, 1400, 904, 22, 62, "Input",ExpressionUUID->"319af84e-5f03-4d5f-b766-7365fd98e14d"],
Cell[74549, 1424, 490, 10, 29, "Output",ExpressionUUID->"13ad5bd8-eb8c-4c0e-a405-62a63d9d076f"],
Cell[75042, 1436, 488, 10, 29, "Output",ExpressionUUID->"f5d55cea-c2ec-4f3f-9002-039fcf3851b6"]
}, Open  ]],
Cell[75545, 1449, 250, 5, 32, "Text",ExpressionUUID->"380e10d5-03c7-4331-84cc-772f18bd0c83"],
Cell[CellGroupData[{
Cell[75820, 1458, 536, 13, 44, "Input",ExpressionUUID->"273d022c-e281-4f18-bd10-40c172f2ce77"],
Cell[76359, 1473, 323, 6, 29, "Output",ExpressionUUID->"dd21faae-3760-4950-9596-e0263b44158d"],
Cell[76685, 1481, 324, 6, 35, "Output",ExpressionUUID->"ff8f88ee-4ee4-43ac-bf41-08097ed1d6f7"]
}, Open  ]],
Cell[77024, 1490, 301, 7, 32, "Text",ExpressionUUID->"adc87950-e116-4531-843f-b4768d4a7d20"],
Cell[77328, 1499, 155, 3, 29, "CodeText",ExpressionUUID->"61f804ba-2c8a-40ef-a993-fafcbbc99dcf"],
Cell[77486, 1504, 750, 21, 25, "Input",ExpressionUUID->"0ff13924-1c1f-4e8e-9160-f1757a17ba96"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78273, 1530, 287, 5, 68, "Section",ExpressionUUID->"9da19663-7179-45c9-8160-ad35832309c2"],
Cell[78563, 1537, 412, 8, 32, "Text",ExpressionUUID->"b8f6e9e1-3238-4993-9f9d-2b5cce51d88b"],
Cell[78978, 1547, 454, 6, 32, "Text",ExpressionUUID->"5702987a-fc50-4d2a-add6-688f56c76aed"],
Cell[79435, 1555, 587, 8, 32, "Text",ExpressionUUID->"cf95ec46-d50b-492c-b645-fe4d61434ff7"],
Cell[80025, 1565, 542, 8, 29, "CodeText",ExpressionUUID->"284b988a-6dfc-46c7-8050-0f7f23ce1e67"],
Cell[80570, 1575, 619, 10, 44, "Input",ExpressionUUID->"560ee415-796f-4fb4-9e0c-9e9dde4988cf"],
Cell[81192, 1587, 200, 3, 29, "CodeText",ExpressionUUID->"baf428a1-462f-4b66-8b14-9984af9b1443"],
Cell[CellGroupData[{
Cell[81417, 1594, 414, 9, 25, "Input",ExpressionUUID->"e937b967-93dd-47f3-a5a5-30f4d58399ae"],
Cell[81834, 1605, 220, 3, 29, "Output",ExpressionUUID->"8b6377f9-58ff-410f-9fde-8e48075d6e72"]
}, Open  ]],
Cell[82069, 1611, 597, 9, 32, "Text",ExpressionUUID->"14ac6677-0d77-4e4b-8c08-a1dbb4226692"],
Cell[82669, 1622, 646, 11, 29, "CodeText",ExpressionUUID->"9d1a644a-a628-4bd0-9cc5-cb149f0c3d39"],
Cell[CellGroupData[{
Cell[83340, 1637, 935, 17, 25, "Input",ExpressionUUID->"999d950d-7764-4852-a840-556e90eb6aa1"],
Cell[84278, 1656, 526, 9, 29, "Output",ExpressionUUID->"c4671915-52a9-4628-bca5-9cd07fd89117"]
}, Open  ]],
Cell[84819, 1668, 284, 6, 32, "Text",ExpressionUUID->"cc99a975-7d1a-4555-a2d6-a3e314a84040"],
Cell[85106, 1676, 178, 3, 29, "CodeText",ExpressionUUID->"66e20bc4-5623-43d2-ac56-d7a83d019863"],
Cell[CellGroupData[{
Cell[85309, 1683, 459, 11, 44, "Input",ExpressionUUID->"73da266d-613f-4953-aab4-d902c6cdb538"],
Cell[85771, 1696, 201, 3, 29, "Output",ExpressionUUID->"45b9f7ab-93bf-4687-b5e7-a03f7eaffa6d"]
}, Open  ]],
Cell[85987, 1702, 836, 13, 53, "Text",ExpressionUUID->"974d1d02-3f81-4f9f-a141-4f1608fd9d6a"],
Cell[86826, 1717, 1068, 22, 25, "Input",ExpressionUUID->"a568bd7f-a814-422b-9455-97f2b8b11e5c"],
Cell[87897, 1741, 728, 12, 32, "Text",ExpressionUUID->"38a3ca4f-2bce-487e-a74e-71467779e343"],
Cell[CellGroupData[{
Cell[88650, 1757, 690, 9, 25, "Input",ExpressionUUID->"af084a9e-64ba-4bf9-9af4-e0a1896024e3"],
Cell[89343, 1768, 1618, 42, 234, "Output",ExpressionUUID->"68904814-27cc-4b87-9db8-26fdd92c9933"]
}, Open  ]],
Cell[90976, 1813, 249, 6, 32, "Text",ExpressionUUID->"4f9873ef-5aa2-4aa6-8f16-2de25a3ef0cd"],
Cell[91228, 1821, 217, 5, 29, "CodeText",ExpressionUUID->"3b2532e8-16c0-4672-8bac-7ab2de7026b3"],
Cell[CellGroupData[{
Cell[91470, 1830, 314, 6, 25, "Input",ExpressionUUID->"9954ca70-1566-44ee-9799-dff18a4fe492"],
Cell[91787, 1838, 230, 3, 29, "Output",ExpressionUUID->"5161aee5-9b62-4985-83cf-dd2e3706307b"]
}, Open  ]],
Cell[92032, 1844, 398, 7, 32, "Text",ExpressionUUID->"857af62d-ae92-47fc-9847-d4312175e769"],
Cell[CellGroupData[{
Cell[92455, 1855, 539, 12, 44, "Input",ExpressionUUID->"a5d3395e-a1c7-424b-b5f7-31310ce1e4be"],
Cell[92997, 1869, 817, 11, 84, "Output",ExpressionUUID->"a3dee00a-4fb3-4310-a6f7-66f36997c18c"]
}, Open  ]],
Cell[93829, 1883, 246, 4, 32, "Text",ExpressionUUID->"476ce9b9-acd2-4167-bf5f-f059a5a71e12"],
Cell[CellGroupData[{
Cell[94100, 1891, 480, 10, 44, "Input",ExpressionUUID->"e0888b97-3d72-47ec-935a-af5b48023d7c"],
Cell[94583, 1903, 202, 3, 29, "Output",ExpressionUUID->"da37ed17-b350-40f7-b176-dcf923882f0e"]
}, Open  ]],
Cell[94800, 1909, 303, 7, 32, "Text",ExpressionUUID->"80d5729e-03d8-48b1-9227-4d41dd851f53"],
Cell[95106, 1918, 242, 4, 32, "Text",ExpressionUUID->"9ffe918e-935c-4e2f-8c7f-8392a7a0a652"],
Cell[CellGroupData[{
Cell[95373, 1926, 805, 20, 62, "Input",ExpressionUUID->"7d34d366-3857-4b5c-93d9-201eb39dc2e4"],
Cell[96181, 1948, 177, 2, 29, "Output",ExpressionUUID->"05865a0d-1994-48a4-9fe6-d9c498d606cb"]
}, Open  ]],
Cell[96373, 1953, 375, 7, 32, "Text",ExpressionUUID->"8eb63a7e-c426-4b9f-9981-1e260be40e20"],
Cell[96751, 1962, 221, 5, 32, "Text",ExpressionUUID->"8ead9068-fd37-4aac-bd96-e15bfb98cbd1"],
Cell[96975, 1969, 142, 3, 32, "Text",ExpressionUUID->"e2d6eec1-fbab-4c33-8055-6cd471e9a578"],
Cell[97120, 1974, 81, 0, 25, "Input",ExpressionUUID->"1b25744b-381b-4920-8be8-794862a9505c"],
Cell[97204, 1976, 144, 3, 32, "Text",ExpressionUUID->"1d7c71ee-6ef8-4222-b4a7-31be851aa1c5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97385, 1984, 220, 4, 68, "Section",ExpressionUUID->"a78f6e4f-dbdf-4763-a44f-16569b36e665"],
Cell[97608, 1990, 215, 4, 32, "Text",ExpressionUUID->"44146aed-2d19-4c66-bfba-1e67f1c1dfb3"],
Cell[97826, 1996, 278, 6, 32, "Text",ExpressionUUID->"a4e585e2-fad1-40ff-85de-7b4c754eae54"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98141, 2007, 327, 6, 163, "Chapter",ExpressionUUID->"a91b0c22-4606-4122-bf19-3d4bcd746f4c"],
Cell[98471, 2015, 175, 3, 45, "Subsection",ExpressionUUID->"962879f3-9b11-4b56-8992-fa4001376df9"],
Cell[98649, 2020, 248, 4, 38, "Subsection",ExpressionUUID->"f46ef323-e1f9-43b8-b626-fa17b9c9a91b"]
}, Open  ]]
}, Open  ]]
}
]
*)

