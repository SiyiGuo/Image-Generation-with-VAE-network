(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   3121847,      62081]
NotebookOptionsPosition[   3029981,      60374]
NotebookOutlinePosition[   3088476,      61575]
CellTagsIndexPosition[   3084979,      61472]
WindowTitle->Wolfram Summer School Lecture Template
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["", "SlideShowNavigationBar", "FirstSlide",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"60bc568f-b20e-4b9a-b496-b94f48bda20e"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3T9M3EyfwPFXd1dceVX6a9NScGWygPJnwwaWhH+bB4lX99zLNZxETjqh
SGlokBAFSBSkiBDFFigpghRpCyIkkCKQHhqaNDQUNBQUaSgofre7BLBnxvZ4
157xw/O19HmiJ9m1vTPjmZ/H45l///v/VP/rn/72t7+9/dfmf6rT//d4bm56
fuTfmv/zevbtf/9j9vf/fDb7v7//4/e5//j7Pzf/crrppPn5f2n+KWxsbGxs
bGxsbGxs+W1//AYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAIAC+7lXC7H7XvOzu3ffuTy0PN5hTS4Cx7pKcZ4X
jVHZX3spG+/Lsjp/bX2hIo0Pr+R0x/a8g97c/YbdFL/Bdp+d+P6mq31eHpq+
n96V1XmlTItWGmd1PtblNG35qoTK18ZiRb7VR+V8L8XvPwyfZ5oyfuPSOu19
pbHPvM3jGku336yuM2dlMi79v0/Ij3pVthcHb4+xOv9C6ivDcvx1wnI/3del
9mU+Kb2ybCN8HC+PdgmAb1dfKvLg4aOAJ3JicX2ff3gW+l7P2xGL49XkU+1R
6HvbX5Pq1ZocrbyQqd5HynnqespPpP5x1Dq+OV7oD32/f/5V1+mp7jO13rL8
7HafvSWZmn4mGysjcv69g99xOCoz2j6fy3kGaTGzMtZBuo7JnPY7++RoL5tr
4HSzYlW+qtNl2f8ymfy73/eFvrdaT/5OyPdXUrUsl77S2Gfe5nGNebnOHJZJ
k4svVVma7kv+naWBdr0aW+a7rUuVMv+g9MKYR2b5tRE+jpdHuwSgAJr13FSo
jijJt53k732bLSl1clkuEo83LkuhOqpfjmLaqaudEZmzqNM0I2U5sWj/jt+H
67VqFvH2+y5jgbLeznS3z8eytPI61W+4qJeN+0m+N7I4b8PvS/Jz64XhfPrk
oOt4e1I+zZRSp+nU26HY36D+7k7i7eA1GVcufaWxz7zN4xrzcZ25LJPqMbZn
LeJsRU9tUM4i+mK6rkvVdsiyLOXdRvg4Xh7tEoAimJT1UrhuSI4PxmVBq3P6
ZH834Vh7I1ofRlSMfvl1SPq7aVMfDshBwvkUMt7u1e9but5n+7fZPH9oeSON
mcfmNn0hXTxhPu/H0miki9u1e7tf5a27/u3o32mlXJYzy9/tPN52kMY+8zaP
a8z9dea2TN46HJPVcjdp91R+GPIm83jbon/bRRvh43jE28D9dfA23OZNvU+I
qxpD0mOoT5Y248f6XSp9Wf1RY1B2quG4PNAOry5X2+Pirlr9LK2x4I1R+bb4
PKIefCLHMX0KTuLtkRdytPVKDjZtjDQ/O649e1T32TNdaabBuJx+Hbt11hiT
k+ZxthfLMlMypcUjWbeJ+74bxpLctrXpxpRExS+p4nbT2JZfZaGbePti09SH
3y8ba6/k/Nf44aub8rVcNpTHAflh2dfnPt7OP4195m0e15jz68xxmbw2ERlr
z72tyNGX8dtx05d7k3JSH5KFETX+75P9Hf2eynm87aiN8HE84m3g/jpTxmI/
qFVi3306W3tqrLMj4+dfThYHQp9f+DBu+FxNNgxtQqvti431vo/J+oihfpt+
GTl2zkW8XU26d8lpn+dbL/X2weIZ7cXm88B3SrIwG86zTynGlNyet/ospPdZ
cj+c8XyyircNZSyxb7Am+++f/Pp8a2xN9LtQXuJtx2nsM2/zuMZcX2euy2TL
wbxhDEnpmRzvxl/TJ2t3+VT/bD6G23jbXRvh43jE28D9dfX1Zbi/OrbNDDzz
1NrauP7P1veC/ejm8cA/6/p4zp5m/WQ398GksX6rf8mpjSj4PvW0TBrz3Myj
6UB/VqnZ3jeGQ2UjTWwT93x+I6LdVs9nezrq+XoX8fb310q/6mNpWLyz0HL2
sSKfEp7jFKF/O+809pm3ecUj7q4z92VSdgzPJG3Gn/xy0byvqH+Mfh/WZbzt
so3wcTzibeAe057r9sWMMxuTd4HPTk0H64a4dy0nZDX0/HVAfmjP1WpSV+um
Zux/mua3aO1Wqz9hyOr58X2Lt1vpua70y8TGfs20C7Z5188rJsPvuKYYUxI6
71K/VHuD+64m70Md759ZvK3MhZC2jKXML2fxtsM09pm3RYu3U19nHsrkvjZO
fsBuHEXuaWcu89Hxtts2wv3xiLeB+02vU9a3zPffV41gX3ifNOpDoXZi4WNE
P4vanpQH9frU0AcTub8YJ8tPwnVbxP1DsWLjPPY5KavKM4i4OODiY/j5/urm
9WcP3oafQ3+K6ZuJPu9+WZgJ7id53snQuKXeAVmd7Q/laTfxdnhOnv5cYw93
/dvu0thn3hYv3k53nTkvk3vqvh/JXEdzN+aYJ7bxtuM2wvnxcizfAIpBnTN4
ZtE83+rpSrCdfCbnh+OyEPhe/6y5b+vy82BiHXKq1Ul2c4FrDH1nprHixYqN
89hnLcXcM+rz/bu5GtU522yPHz7vAdmvV0Jt1008H3XuGyPBcjUsR6Hx/1nG
2834I6K8Z5Ff7uJtd2nsM2+LF2+nuc7cl0l1rYSs+7YzyRPLeNt1G+H6eHmW
bwDFoL4b3zNjet6ljO+dftn+++1a4O96nxvHBJ6uhOutJa2PQJ8Lq/O5tfR9
md7lLFZsnMc+J2QpFAfEzKGttne1yl3+q+ONLN+JU/tAj/eUMUVx7w3tDIfe
71/fmlD62bt7X1J9/t+ObxaqHa+RGJdfLvu3XaWxz7wtXryd4jrzUCb3lfmn
ovpE/KSducyb423XbYT7NinP8g2gIJQ20DxONzx2+6YP/Eeob8o8hjs8ftA0
T68+D3jUmBYb2hwqhrm+ixUbZ79PfR6Z6DjmXBlL8m4t2PeitxVx7/uYz7t5
7MPf5GQhHKdFnc/JcrBMPZFTbY6ALucDNK7p86g9tuHTx9GuYhx/8ba7NPaZ
t87mJ8nhOnNfJvU4fr2e/brmep6k7Js/fG0Rb7tuI9y3Sd2UQwB/FmPKGjZ6
m9GaxyRYD9zMQ6COFdGfk6n1luGZnOF5ajd1mzrXt2m8eJFi46z3ebY5qM9H
EDnP4xvZrgU/W9LWLlLjcZtz0GKy1jNsZTxkOK6/Ky/BvtLr/rhs4+3ktUX6
ZGmxKmcdPHf3Gm87SmOfeavNjdL7ROorFakvJliuploXNPvrzEOZNMynn7o8
dlDmW/cI64uDsrFgaV6PRbW8ct1GeGiTOi2HAP5M9Pm5NpS6JTwmJDAGUJnX
omdmOLxv5d8fjBjaI61u6y6e+qn1FenzobhaX7K/3CfVWCXpKT0zzNdi3mcr
Rrlq5tfl99ovb9rrYPzcHZfjjy/lnbZGxbXI9xz3LN5lVT/zMHlMiRaTtfNT
ia0MZcF8X6f203Ubb1+fS8NiXeuZ2UE5bti3s17jbUdp7DNvO18HspRqnfjM
rzMfZVK7bjuYq7CDMt81q3g75zbCQ5tkSkvibeD++aGsRzO3HHwmqMTjobZU
md9EGd97+aUSrj9Mz38zrtu08TGGdqZY67lHt4NZtGXvlqOf76rvU5nfldXn
sEmaZ9kck6nPVfXxR6Hv3ZalrPu375zVX8pcxFqBofIx04xxdtKOo/ERb+ef
xj7zNo9rzMV15qVMZl2v5ph2IQ7i7cQ2wkObZEpL4m3g/rncCo8Lac0bcPvv
h6MyF/i3qYVwu/IjNHYzPD5bXb/SGH9kXLddfg7H+MWPt6P73rpryx7Lesw6
Fa1Y51Mt/PltbWz9tdDcNA+T1xONisnUd/XD8f14aFzT3frg+cXb197IaT26
zzJoISGmKkK8nXca+8zbzq+H+Hk58r3OPJVJ4u1IiW2EhzbJlJbE28A9pM5Z
FHifQ12DUu3bjBvDfRRaR1gfG3x9bPW5Z/Nzluurmahz2JnmTXETb/fL0nxZ
lt4+j7UwX5GziHmmOmvL+mR1cVjOk8Z6GvI8coyrNqfV09h1HyJjMvVZSal8
V85Cz0KC9215x9t3Lr6+ko3Z+DSfi4m5CxFv55zGPvNWG/eRcN93c17pr90M
rzNfZdJQr0avSda5zvIkeJ4W9ZDrNsJDm2RKS+Jt4D5S14C8W3PhbO2Z8e9v
qWsT3s45pbSlUWtzKf3nHcUpAVrdZqi/nbzbmPY9fYt9Phh5IcefR+V463Xb
j62qvFPW22itX2azb/XZQ8vU9IDM1AwM/WxxY0qiYzJ1/sm7PvWj4Dzw5WCe
uYu3b1ztjcn2vDr/bjBetMuv1PNBNIZCz507i7fzTWOfeetqPsAsrzNvZTLj
ejW3PLGZD9B1G+GhTcqzfAMolm/KvH0388iG5vMzvletjO+96ddS66xa1Ly8
apubtGZGPHUsuundraLMJZJ6n4bx7/q7ODZxnmGt4pTi+rHiYjLz+KSJ0HiD
8Bp47uPtW3ujsl4zPNOPmGNaza+plPPVqXnZabydZxr7zFtn829ndp35LJN6
vbrURb2aW55Yzb/tuo1w3yblWb4BFIs6Rve6bg7P4RUVP/xYCK8R1x6btlsN
9dWp476DDuaV9/KDa66kEl6/Lqrt/NPG28Z9GmLniOeVtwxrnqUXPaYkNiZr
5XdwHY5m+3oaGrOkjm30GG9HlKmo+XOPlLVa05aBNOt5+kpjn3nrd72bDq4z
z2UyvJbQoy7mK8wxTyzXl3TdRrg+Xp7lG0CxXGlziYy21yIIxmVRc5CqY7jX
t97I1ecXyt9F9wWpczx3PHdV46U2J66pD+p+xdvm3z0TM85YXX+hp/zUYq7c
skwpz9Sj8jQpJrtUxvP2lwL9ddpzEN/xtv4OQ9SaLtp7pSnXpNPmOn/febyd
Vxr7zFvv60umvM58l0l9PfeId2hcpF0Uy3jbdRvh+nh5lm8ABaPOlT39Us5D
bWf0unGt7wbXVmjNTXASmrM7oa5Sj/0wvj88yoGyfrFxfZ0/7mG8bfztUfml
99PZruVwrPTfRq0PnRSTtdfBVsfD/qI/8/Yfb+vl01ye1fvOqPJnps4XE/8M
21ca+8xb7/F2quusAGVyT1+3Jas1OTPLE8t423Ub4fx4OZZvAEWjrD1RLktj
MRAzR6yJdfPdYAzXMz0o2/PB+XZNa8SHhdd9v24/0vTF6P090fWV79g4l30a
1kTrmR3WP6eM82mvvWAZE9rGk8kxmTqP5N3+9HPJNt4+/VCRRsL84Ylp1vtU
Ti3baOsxs7vqHL3x80n4SmOfeVuEeNv6OitImdTr1fTzlFzuTESOQ3EWbxt/
S35thI/jEW8Dfx3h+fvCz4Ljnm23hMZw95akP9DH1TMzlDz2rTGkr49ceh47
79ytZpyjvk8e9+zUe2yc0z5PlvX5C9Q179QxD628sT+nMXmn7D95vE5EDLWj
57e5vzy7ePuifjPG6bGsb5rWHLe5LuJiAn2tVnUNKDPDet5l8xhx32nsM28L
EW9bXmeFKZOmevXh08g1bfXzu77H7n9r8ywr33jbZRvh43jE28Bfhz5m7c5q
wrv4et/no9u6ynaM47727K1Vvz2T493oOXQvG9XQWBab+wMXc/f5ieHD64rc
xG2h+deUsSRLmxOpzknt8zH17VnFZIY5AMxzDGYTb19+MfQ1zVbkdC9+fuaT
Nf2auFuvxXCcLf06eFAbjJxjvfX79uf1/uDgPPbJZcNdGvvM2zyu23yus2KV
Se3dv7YB2f8aV6fX5GgxfG8+s5jDu+dp4u0/3LURPo6XV/kGUEDGvhDLGEcZ
w53c1pqMy1LEWsYzs4NysDUm5zsTbSf1YVmfiVgHYmQwRd9gU+8TqS9XpL6Y
rPXuYGNLj1GLEW+b5y27jd20sST9cpRyvY4Lbf/6mBK7mEx9b/NZxJijbOLt
sw/R95JT02VpfHwtp40J+blXk4vdcTn+WJF3ZdPn49f6McWaN+e9ujwsP76O
N/c/KeeNUTlYq5jX7raY98JXGvvM226u2+trtyLHO3qclPl1VrgyOSGrxu81
f+v0c2lsvpazncnmcZrl8uuofFt+ob0b3WYYU+g63nbVRvg4Xh7tEoCCMszz
f1MHJtdNUXM6p4yPmuewEFG/WSm/SBmrpNdjmHu6KPG2OR+uY+LTFeU5eCdz
XBnGKKtrQdjGZHJYk7PGeNv5btQ9WXbjSc7rgxH3k/bqNveOzfuazudbbM19
n3wMX2nsM2+zWDvcNJ4+6+uskGWyGTdGxdxWSs/lxHBv7j7e/s1JG+HjeHm0
SwCKqtmG1PTr2LYO1eb1b9efZct+hKAJ+TRjegYab+rtkNUzXXWejbRM6aHu
M5t4u7N9Gt/TeV8Nvw/b9G4tXX/cNX2Msjo+P3zeHc6jFSiT60pM1tX+dl/L
qmm9kET90kgzRndnROYi5umI1md9DF9p7DNvu71uW0zrBGZ7nXVw3bsqk830
bhjGLiXWdzOVyDq863rv+yttPXe79iLfNsLH8fJolwAU17FhbgHbtWwvP1e0
70a9Z2Pj/HNVVqeT66CpmRdyYNEneMP0vlOqOtQwVlLdZ9x4yk7PM80+tbUu
Hg7IROj/m7FNh3PxauP8m/dU55Hn3e18aeo94IAcpxwDY/wNX0ZkfXYguW+x
t0+WFqsd3DO2TMr+4nOpJsbdJXk3/1LOUvwuX2nsM2+7vW5bNgxzX2Z7nZnm
YSlSmfxNfn59JRsWx+mvPZdvn+PHKHRd76nPy0bi5sEypFlObYSP4+XRLgFA
Kt8n5fTzK9lfG5LGh6rsf7j+8/jLuPzssG0D2g5r7TGrBx+HZXtlSPY3q9Jo
//laTneyWv/6jfzcGZPj231f//lt85WcNCY7XLcO95aTMnl9nLMvreMMyfba
8O2fR1ujcp7wzmbhuG4jaJMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAMBfARsbGxsbGxsbGxsbGxsbGxsbGxsbG9ufcPt/3USN
BA==
    "], {{0, 97}, {732, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1: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
tS6evSR+6VgLa8u+Vqg1uXW2LaRt7LLX5UftNu3dHbodLVcUrpzuFO4sv8p+
9eA1+mvZ11avp1yfvxF9Y6YruGui27f7+U3Pm497nHr6b9ne6r1tcfvmHeM7
13v1ezvv6txtv6d1r+2+xv3WPvW+lgfqD1r6NfpbH2o+vDygPdDxSO/RtUHD
wa4hs6Hbj60f33/i8OTRsNvwyNNtT8dGAkemR8NHvzxLeLb0POMF5sW+l8wv
i17xvap6Lf26eUxj7Oobszd94y7jzycCJj6+jX37azL7HfFd0ZTgVP20ynTn
e4v3Ax+2fpj8GP1xaSbnE8unY5+lPl/6y+ivvlnP2ckvtC+rc/u/cn89/U3t
W/e84/yr7xHflxb2/eD+UbeotXjnp8fPqaXEX7hfJcvSyx0rtisvViNWV6PJ
NPL6UQCFXHBQEABzpwEgegHAOgAAPeNG7rVZUNBayrGmS0TOMHrISasQ9EMk
yBOqg2E4Ap5AUVBz6DyMEmYMW4ELxZvRSdAzEmAGFJGFUZbJmpnGcpL0kk2A
3Z/jAhea24/nBp8gf67AFyEf4fuiOmKnJNgkM6SmZBxkm+UZFQIULyotqeiq
xqodV+/ReKO5qM2gw6Mro6elb2bgYOhtFGKcYJJjWmRWZ95hcc/ymdW09YIt
2o7Zns9Bcouyo46TibO1i4Ors5ubu4eHp6eXl7e391bvbd4+3ts9fd39nMn2
/hYBBoHqFJkgwWDWEFzIEvVz6Juwx+F3kFV5Jqoi+kBMMo0caxzHHfc5viuh
ODEqySZZNHk55emO5p17U/3SNNMZkbV1JbMgK2SXfjZr9vTuazmFe0L26uVy
5C7nofcbHGg6qHXowuHlQsEjskcVipSKlUtUS9XK1MvVj2lU6FRaHKecKDk5
Us1eY3zKpzbydEpdTv3hhvIzpxqbm9rP3mwePPfpgvDF6EsDrdJt4ZdL2ls7
Hl6Z6ly5xnFd+YZ7V0H3dI/VrfLbD+686Z29h70v3mf5ILA/9mH4gNsjzUGB
IfqhxccTTx4MX3/aMdI5ev1Z1/NrL5pfHn4V/tpkjHts7s3AePtE3dvyyUPv
dk8lT0e89/tg/1F1hjTz8dPtzzV/5cyGfnGYU/sq8k163uf7tR9Ki0d+vv7F
vey5UrO6uuYngAB4kVOiM5LnNIJ3kCQUBd2AeeEseA4VjfqB3osRxtzCxuEU
cF/x3XQV9KmEQAZPogujJ5M/czxLHqmOdYDtB4ckpw9XIfdDXiKfHf9+gX4h
orCTyGHRAXGChLlkglSt9COZb3LM8lIKaoraStrKqirSqgJqzOqQ+jeNSWS3
6tVu16nXLdPL099hEGq41cjB2MRE01TBTMycx4LZEmu5ZDVrPWkzYttnd83+
nEPVlkLHbKdYZ7KLo6uBm6w7lwfG44vnC69e74tbj2/L9Ynd7uNr7idHZiX/
8H8Z0BVYQ9kbFBZsH6JIZaF+DX0S1hpeEpEc6RmlEU2Kfh9znVYYGxinHo+J
H044lRifZJ7MljyRcmFHxk6HVL7UD2kd6QcyQjOds8wQz9DZrZGjtEd2r3iu
4D7uPNJ+wgH0geX87we/HJo7vFiIO8J1VKpIs9isxLF0a1lwOe1YasWeyoLj
x06cPnm5arB68ZR07bbTeXUt9c8aVhqFm8zPhjQfONd2/vNF9Uu7Wx61ES/r
t1M7Sq/c71y9pn49/EZN14ubLD1Gt6i38+409PbefX+f2Kf6wLs/62HjwNNB
7JDaY98n2cM1T3tG3j2jf674wvVl8qvK13fGFsaVJ2hvL07OTclNB7+v/vB6
hveT5+djf81+SfgqP09aoF+Ef378dWWFujn/9IATyAErJNspBvcgLGQJHYYm
YH34JIqI2o3GoQswEpgb2EAcCXcXv5fOgV6QfpHwmOEy8RRjKVMB80GWAlIZ
6ym2VvZejleci9wkHnleCz4y/06BYsGzQt3Cj0UmRT+JzYnPIqemEalu6VMy
u2S95RTlIflBhRrFRCUbZSHlBZV+1Vq1NHU3DTlNWHNEq0k7S8ddV0Z3WW9A
v9og0dDGSNBo3rjP5JRpmpm7uYIFxuKF5SWrfdZ+Nhq2BNsxuxb7XAcfJFJg
HEedGp0zXFxcxV2/u/W6l3mEeep6Ebyee5/ZmrLNyofD5+32877pfrZkTvKE
/9mAlEALCgvleVBtcEyILhVN7Q8tDvMLlw7/EnE5MiPKIpouui9mP80mFh97
Ky4r3iB+KaEtMTZJIel9ck2K7w6eHY935qdapcFp19LTMqwy+TOXssZ29Waf
312ek70nYq97rsE+iTxi3vz+Fwdu5jccPHIo83BiAa0w+ghyLCiKKY4piS6N
LKOW+x1zqbCptDvucyL5ZEXVrerPp9hrNU/b1TnXOzVsPbOj8VLTUrPlucLz
ry/KXkpo6WojXHZpL+l43il8Nfza1RusXaHdN3t4b8Xd7u+VuJt673GfzIOs
/okB90fDQwGP54f3jvCMNj03ejH8KmPMftzl7aF3C++PzNz64rowujb/G7/B
rRWsBgCnLABwPwKAizaC8wEQr0P2Dz0AHIkAuGoDmLsUQFejAbRN6s/+IQCM
kb1jF6gBt5DogUXihzUUBh2AmpFc7xvMCevCvvAuuA7uh7+ieFDGqBDUIST7
HkcT0BpoMvoAuh09hWHHmGPikaxrBMuANcYmYs9ip3EiOF9cJe4VXgQfgj+H
X6azoztB953ekb6JQCREEgYZtBhOEgnEBOIEoxNjF5MKUw0zN/MhFjqW3SSY
lMWKYc1lY2YrZRdnv8hhxjHCGcWF56rhNuV+y7OHV573CV86vxz/C4F8QTPB
ZaEO4RQRA1GM6EOxY+JhEvqSJMkPUj3SVTJZshQ5O3ltBQVFRSUDZTeVcNVd
SMhv0RjS/K7Nr2Opm6BXr//akNvIw7jU5LWZlHm8xW0rHutgm6O2xXYJ9kb2
qw5dW/Y7hjpRnbNdzrm+defxcPHM9+rbStzm5FO0fcSPiazqbxngFhhISQ86
EzxNVQ7NDBuKkEI871mMJq0o9ke8R0Jj4qdkzhSlHSY7vVLT09oz6DJDsh5k
a+yu2sO0Ny13Ks94f/aBlvyxQ4yHHQrOHVE7eqvYoeRBmVX57Qqnyh8nequu
1VyoLa5LaaA2bj1rfI79/JuLTS3pbdvbva/svNp2fbFbuyfi9r7e0ns1fc39
1wYeDU49wT/VHz3w/Nsr77GWCcIkearjA35G8jP4q+KLwFzJN7751oWIRfWf
v361rviuxw8xYAtiQBHoBOMQHlKAXKEUqArJ9L/A3LAJHAYfhW/AH5Gc3RTZ
TSpQfagltCx6Gzof3YWex8hgyJgSzCMsAWuJ3Y3twWFxNriDuBG8GD4Wf4uO
jy6Rbphem/4EgZ6QSJhi8GR4QDQldjJqMbYyaTC1Mxsy30Zy1FEShTTHmsXG
xlbHbsg+yhHPycbZyuXNDXM38njx0vF28sUicz0tcFqQKqQg9F24S+SgqK+Y
qji9+FuJbskaqVzpWBk/WSc5c3k9BU1FdSUNZR0VE1V7ta3qkRo5mrVaD7VX
dNX0ovTPGswZaRtnmwyZSZqnWzy30rWusFm2c7QvdLi35ZeTgnOgS6XrM2SO
t3me9PqwVX3bLp8hX3G/WHKn/0qgPiU1qCuEjuoeeipsIcIusjrqV4wX7XIc
d/zOhGdJSsk7Uq7u+Jmqk5aZ3p8pkpW8a2i3Uk7+ns+5Dvsa8pYOGOXvPNhy
aL7ArLDqKF0RrXik1KCs+hi+Iqpy+IT+ydpqtprcWuzp/HqBhkuN9k0TzUnn
CReOX1Jrudfmd3m+Y28n39WW6x5dcHdLD/U2353+uxn31fo+9FcPbB1kGbr+
JOApGCl/pv385cs9r1XGXo/vf6s7OTNV+d7hw/zM3k+Lf1nP7v5yfq7/6/S3
1e9cC6o/XBd3/mxY+rCstXJ0ff6lgStIB/VgCKxA0sjsZ0CN0AiMhdVgf/gw
3IWcIkRR7qhc1FXUV7Q02g9dih7CMGHsMHmY+1gi1hlbih3HyeNScQ/xEvhM
/Bs6S7oL9GL05QQOwlEGDoYyoiCxllGJsZPJjuk1ct5gYmkk2ZO+sJaymbHN
sVdzuHMSOLu4Urg1uL/ztPOm81nzcyJzfVXwqBANOYGoifKIoZG9Z0JiVHJQ
6iGSmT+RfSX3Uf6XIklJTtkGWdGFatfUP2kKaXloF+gM6rHr+xg0GC4ZO5o0
mNGZR1g8tbKxvm1rZzfiQHUETuUueq7j7vmehl7zW8/70Hw1/Ob8ywNlKU3B
MiG1oRJh9RGKke3RljEjsRHx2ISqJOPk1zuSUrFp+RlsmaW7RLKbcnT3PMgN
yIP2n8nfdgh7uLxQ4MjRIlxxYslUmXf5UIVn5bcT9VWUGtypfbXf6zzrW86w
NcY1DTdrn6u8gLkYeWm01bKtvV2po6FT7Gr5dcYbqV0fbnr09NxWuXPyLule
9v2FB+H9bwd8Ho0OeTx+Ouz69O6oyrOC5x9fGrzKf/3yjfx42sTApOi7pKkH
70U/JHy8MbPyWfkvm1mvL15zDl/1vonO4+bHv3csZPzQ/zG7mPmT9PPEEt1S
zNLoL5Nfpb+mlzWXdy8/XhFdoa40rcyuqq0mrV5Zm//YIFWV9e0DYjABAPNq
dfWrBAC4AgCWD6+uLlWtri5XI0nGCwBuhG/8r7O+1zADcOzmGrqdMpHx7/9X
/guSk9IK
      "], "RGB", "XYZ"], Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{669.59765625, Automatic},
  ImageSizeRaw->{732, 97},
  PlotRange->{{0, 732}, {0, 97}}]], "WSSBanner",
 CellMargins:>
  Dynamic[{{0, 0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.01059602649006623 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.11986754966887417` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{
  3.730589179683115*^9},ExpressionUUID->"3bb2d191-b234-4a2e-a519-\
8cc81e1dbc97"],

Cell[CellGroupData[{

Cell["Probability and Statistics", "Title",
 CellChangeTimes->{{3.720193284509671*^9, 3.720193288595942*^9}, {
  3.726941915180914*^9, 3.726941915962871*^9}, {3.730588827776165*^9, 
  3.730588847572877*^9}, {3.735569843753702*^9, 3.7355698462454*^9}, {
  3.7385086235627728`*^9, 3.738508631881575*^9}, {3.738509862141605*^9, 
  3.7385098770459414`*^9}},ExpressionUUID->"a2952f0e-0dad-4d25-91aa-\
a3ff0c5ccc18"],

Cell["Tuseeta Banerjee", "Subtitle",
 CellChangeTimes->{{3.7201933391803827`*^9, 3.720193342066636*^9}, {
  3.726941908757318*^9, 3.7269419228992167`*^9}, {3.730588124959963*^9, 
  3.7305881263738823`*^9}, {3.730588160038538*^9, 3.730588163188789*^9}, {
  3.735569856249476*^9, 3.735569860554181*^9}, {3.739123707350473*^9, 
  3.739123713260292*^9}},ExpressionUUID->"c97091a6-7ff3-40b5-9254-\
93eb0ab364a3"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJxk3Xc8lf8f/3EjDYoUlVISLYoiGoSiyCgjqxCZkS2zYYske2dTIqGSymho
aUkp0qQ9EWmp3+f2/Z3X8/273X7ff66b++3z5YzrPDrndb2v60hu9zR25OHi
4nKZzcXF+9/WS+9r379/Uy/QNkVuV1Tr/eWqXdXWuhLTmessNnZ7aLlcde2U
W8Vqy6bAR+evOiIZq6xaEbJqxHqjKHxD0i3Nm1+VVEVeHjXb4yICb7z6Y8OZ
HUtV96yfWp0bPhne8Xd2d8EZedU3FVHjGnInwQ0tqi4Vmc1R3SQ8uL27Thju
Ffht7APJ06vr/bc3/GqbCJda4658ePur1WvrC2WXPRSCy1UqifBHCamJROx9
5sMvCK+PrzKRWLhM7Y3B1qQatfHs/la6beHbaqpWP22FVp8PPzx3gnudSbOP
WlyvyLDckbHw6U3JqRs2HlCzquovd+8eDV9vd3vpYESBmlzQHatKIT643rCV
2rjD1WpcWhVCHzV54UtXH+VW6Tiv1i64/9LCQG74r8UxIWrel9U2nLzxoc3i
XzN5yErnlHtVV9W+6EQYbrz4G94Q665yavZVtZRnqnU3F/6A35bsLD8hfElt
hd/3GRuSB+FbNzY+O1xfr/Z0XHXY1V998Af1G65UWFSq8arfvxNz9QO8Y3Nr
30q1HDV91/XZ4Rm9cJ4eWe6cvig1GVnfm7/aOuG1srkNXFnuakG8J1tevG6B
/5t6U0XonKHa/tXcym0WJ9TJnz0QnNkusURt1r0uT+kN7fC+Ka8D0n2E1dY3
Bu3MMHkBt3KeLrX/2US1kaTRhbnhb+Fvl4XeWuA6R+2UU0pHYc0XuGoU3xu+
+wpqp2dOjDLpG4DbqFTPCZDTUJu430ziYcx3+P3SE0db12iruQ3knrWQ+AV/
I3H15eohPbWrVr0m3XUj8Hez5O5+namvlvS//YRLg3ya6B3XR2Xaas3/2694
4GN3CUzqLNRQ+/y//XAUfMGxLMXmWEW1Gf/bb0fD239fUlScJ6W24X/7+Ri4
w+GEudu1hdQCPrcEDhWOg2uZtMklrB1aXTrn3ZU6dwG43801TdF8navvmwtM
Dlw5AW7LE7gpbn/dau6DcrYr+YTgcxMP8GbFJK2e+r/X9UT48O8rtaJZTqur
/tcBYbjs27aRPd3Kq9f9rxuT4Fyc/z35X2cm/3/+f39m3jRDgEdJ+54K/Ux9
6u3OvDgqLW81/UzbnSevzI7wv7yaekW+pH7d4s6QV6upV+RBOlV3/nZwq1Gv
yOd25VkYnRFTo16R33vmdt/mrJwa9Yo80ntGUaGPmhr1ijzDIX6kTXODGvWK
fPzQoGr/gJEa9Yr8QY5nlGiYBXpFXv9xpVTbiCN6RX5rX+Ip9fy96BV5sdXr
D9O1M9Er8k/Ppx3gN6tBr8hdrbn/zXnfgl7h70oFN14Q6ECvyPdZ+R2xP/IS
vSI/NE7+lMrpd+gV+VvNpqBNvZ/QK3IZ6zMB+Rqf0Cv8XUWpizVSb9Er8jj+
hSGzrjxHr8jVJp495Kfbjl6RS0nIRf85dhG9Ih+o13ueXlyJXpFbPLezvron
Bb0iX9Ps22pr749ekd/OubCwrsAMvSL/G/bkXtNaNfSK3GnMMzPJW2vRK/Jo
O9VTVZ82o1fk70+I6fEbOqJX5OJSQ7+u6vmgV+SvN56feHtDMHqF50XTUSQl
ax96RV7OvWOT77V96BU5z4yVrj7ng9ErcgmdG+8db/mgV+RLO8LmLRF1Qq/I
VUYcfleWmKJX2H9E8iqlj69Br8jPdToluoxZoEa9Ir803DBh1zwBNeoV+YJT
2q1dAe/RK/ICTbutk9suo1fkbebupw7FZaFX5DqFgtblHTvQK/IAjXd1xzwW
qFKvyD8O5z27eWKlKvWK3CHrjLkE1xpV6hV16MWOLbWZ2o/QK/JV0z8OJBaO
oFe0XWl+o95dXkKNekUueiWex2e+CnpF3nuPr90ixQS9Il+2ZteUdfbO6BV5
/Img0TsXB6BX5B88TfJT50SgV+QeUqf+PkmJQ6/Ida4+aU0zS0SvyJ+NxH4e
XZyGXpFnL0i0X7i/FL0it7Tc0Zz8shG9IjdvaNg6cuYBekW+aa7yacfed+gV
eeFLgcWlIj/RK/IpB4fFFKfxqVOvyCdGzl1enj9BnXpFvsO2sNHKXlidekX+
wIVnRcIUYXXqFblxvu3j2Pnj1alX5J8uV29JCOBVp16RR363ECsq+I5ekTsf
r5w1VeYNekX+RLu/WmdnO3qF31NWGlMSew69Ih++cF/xbn4hekWex+3SHGAT
i15hf2jsmfLYMAS9Il+q/3RAXnEvekWuVVGmf3rVAfQKj8+8ZvUrw1noFbnw
wc2TVL+Uolfktn4vshfZn0CvyB2Wp2XGd9WiV+QRYl8tR32vRa/IFxzZIyn+
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
n2R2zjqpV4Ze0fbzn/E+seMq0Cvyvxtez8q6UIVekUfPPvhTOqQavSL/Wu6/
3/JsNXpFnhZpdD5KpBq9Itc2fqYeYXYcvSIPHsunWnysHL0il20NyXQWL0Ov
yA+87Ui961SMXpHHvDM8mJVbiF6R7zuwSPeLagF6Rf7M/5t4guth9IrceeuK
JqfqLPSKXE/hvFP9/TT0ivyw/N5Ne3KS0Svs52fEp942T0SvcDsfK7tNsTmI
XpFPqzv96e3PWPSKPFz8/Ja6xij0ivxGYXaO2dtQ9Aq3xy24tCQ3EL0iF2tc
vkFZmfUK77tLt7qcTXFGr8hbWz98Pqm1Db3C83Wtx6ND3wS9wvWKJK7lNq9e
h16RtxgdfzWydBl6Ra5RI/z46Xo2bycXCLSTzuYZjV6Rb38zRVWy/R16RZ51
2qPtnfo19AqPv1tEpe/0IvSK9vemK6NTP2wpRq/IG2N8nVVe30avMC/Zd/Wt
w2K2XhT/vXCX569QEfSKfH78kutNmgroFfksfr/s1oV66BV5fFnvjL73tugV
uY9zf8SKM97oFXnb4jk39Rz3oVfk+xPiZ/w4F4Nekdtsu3b9Kdch9IpcwEZY
df7nJPSKfKnqetVlyinoFXnQiYa5PzNT0Svy0fV3dsu8yUCvyGOz7kcKb81D
r8izJ529Pv5xMXpFrqTf+VJmajleD+Q3qzyfe148jl7RdkLm7YkvoqrRK/J1
zSbbRlvVoFfkSyqnT+Nzr0GvyIO/VjU/uMJ6hed3rW5M8I8q9Ip8dsv5t9Pz
KtAr8vOn9sXx6RxFr/D7xe6/KC8oRa/Ir16dOPzwUjF6RX5o5b/CKM0i9Io8
vfrcp+D/3o9Rr3B/VXI0pTMPo1fk1pk7XgY9ykKvyKM0rtlFHklHr/B4nlFN
b1RKRa/weE8oefBkdjJ6hb97duM2rpxD6BW5xF5/L8lbsegV+b2+8UKJqhHo
Fflk8/F3W4WD0Su8ThfECnzTZ8cHyZ8bFag6b7NHr8grJYorF9maoVfkZ2WV
xz15y9ZfkT/J2bM+snElekVuZySlnXJ8PnpFvjF34jSfG5PQK/IL2Tsc7VV+
Yj0DuVGSUY3vtifoFV7XJV9v7os+h16Rbwl3Hxx9PBW9ov2aO2nvhTyPMvSK
XOOlYvySqLvoFblSxNTBG//P+nbyI/vivvm1sV6R8169/9kghfWKvDz25gXe
66xX+Byj+CbosocdekXumb1eisvDB73C7ck9YfU3LBS9In+/2ij3nFYsekXu
HRWn638hEb0in6OQtmn62RT0itxjcGqKUWYaekV+WOWKYFdxBnpFvjw5NzXu
ZA56RT5ooBlgvKsQvSI3dlE/+9umDL0i/3Zu7vGGAxXoFXlYV6G53A32Oicf
e7FGYZJyDXqF857zLE3ULrBekSv0tko317Jekbfw6Tpny9agV7i+8pH2pPuK
1egV+ee2x9sO3DuOXpGPGkrtuDm9Ar0iNzp5YK7tlaPoFfntgf414z+WoVdY
9zql+5iRWil6RZ7kePeHpWsxeoX7FcXnPmZ7IXpFnu0c3KxanYde4Tr3d6yl
xPhy0CtyIY+zXUKPMtAr8jz5XV3WXanoFblw47Uentwk9IpceZ6W6Mf2A+gV
ecO/FOtErkj0ijx+1KGjrReC0CvyWrE9lStOuKNX5J/EpG+kyLH1ouTB+XWL
su5uRK/IjxWcHVW4YzV6hdddRu2EcQJsfTv5wItbjr+kpqJX5C7LOjWXlHOj
V+S6MvaG49a9Ra/IX016X3bu/Q30itzN7mPDP8Gj6BVeX6bSV3Quh6NXtP/O
SHqhae14Er0ivyLuV9Ihy9aLkl+P5S4vn8rWi5L/+/HX7CUv6xV5taHMc4GE
pegVefI5s6HO9broFXnpKxUvmUL2/grrhr7eMhx3h72/Ir9f1H/otyLrFXn+
YbnDW3RYr8jlu8ITnBYkoVfkUn23Hk1vTUWv8HcHH1a67M9Ar8hbfad38SRk
o1fkatKlCw7sz0evyG+M2yF+vaoYvSIflSldI5x/FL0iv9QUolAceBy9Ip8X
HDygfrAavSK/u7tF/nE06xX55LTsey5trFe0nS672jTgFOsV+aQ3PHXFW1iv
cN33j6q7bjWzXpF/T3hgKnH9BHpFXsw95s23/zpGvSJX2NFhkNtXgV6R93lv
VVmveAy9Ip+583vgX7uj6BX52BCVp8G6ZegV+W3ZE84/vxejVzgPKcbA71RW
IXpF7pR040z3qTz0ijx7wLazbE82ekX+riZjrKp9OnpF/jFWyDNVLhm9Is9T
/Df/bSnrFbnGayXZzfPZ+ytyxb5oO7fyAPQKz5vOFsVRl3agV+TxY1J1lZos
0Cvy3UoOpQ0W69Ar8pjBWV5SU5eiV+TLVvSn8GlMR6/I++8s7XkRxIteYX9L
Kb0nOfcjzschF+ST7ZzIew+9wn6yxjfBwL0WvSIPveg/P/xaInqF/UTznWzt
Ylf0ivbTfa2fL1492IZekdeOnfZac+Fr9IrcQv2cR961P+gVuXOlw4eOJlH0
ilx5vovNnS42vyLfFnZ+g5aCDnpF7v/8ubaluw16RT5llHrLCzcv9IrcbuEh
00zLvegV+cbcwXEvZfajV+TJ7evOVN1n76/ID6R2n7o+Lg29InfvtebrPJaJ
XpE/Lo5NX1KTi16RdzhZ3HmlXohe4fcHbEm7a1aKXpE3Ziy9bTPrGHpF3nBH
sHN2RBV6RZ4mvXNA+BrrFbnsz8tHlu1jvSK/esqwz6CU9Yq8rvz58NsDrFe0
VZ1S+O+aBesVeXxZrqHTP9Yr8j/cxeVVntXoFXnliy3r7nqeQK/I9WU/Kfm/
Po5ekZd4fasJ0apEr8hzW0IrH1kdQ6/Ic15l3d4seBS9Ir87bW8sr18pekUe
81h3/cFrRegVueeSZWsy5QvQK/KXhoG/Dexz0CvygunVH9UiWa/IB48FF9Sf
YO+vcL8OWjreHGCfB8nLM7bv+G4ahl6Rzx1Xm+GWz44Pkr+/Mjx6T4gjeoV1
KFrO+9I82PmD5KV/vVVr0tXQK+z/mxOE+HTmolfk/SrRaYO8AugVuV9jxdzl
Wn24PgM5H1/01Q1/29Er8r7IkG5NydPoFfnoj2+m71ychl6RawhkLniu54Ne
kYtrL3PfFa+PXuH4T5fGyN6uPvSKvGDr75WC23hwPX1yX1We3h/Gk9h1tzku
OH5gw0SHOegV+bVbzpX31y5Dr8jNx7q9Dp3CeoX11MmBqycLW6FX5Kpc/rZ/
y93RK3KnlE+fQ/eweTv5rnOdAX8Vo9ErckeL+uGwDDa/Ij89JfbdRgP2/or8
Q0/bl29xrFfk4he3W7avO4xekZcaDvwRbGG9IrdUUhXXv8t6RT5UFmMlo8F6
Re5Ts35zvzTrFbyz6KqFDesVeYDejd+Hh9n8irxTPNhVYCbrFfl3Z09/i6ms
V+Tu46RvmnOxXtG2iXvo383LrFfk0T/mHHqrz3pFvlhieHiyPusVefJmo63l
d1mvyKvvRm45LcN6he/nyVwSYqrAekX+KynSyeLmEfQK+8Md+3CbKaxX5Idy
rkXHmLBekRf7zbX9ZJmPXuE8b+fAvR567P0VeaSOrvh4qzT0inzZs7Zj8bsT
0SvywINa+vfyY9Arcu7JRpPjK/aiV+THkkIak8u80SvyWQYrJ6vU2aFX5J4e
9ldlyzaiV+Tr7qYYWF5URq/IH7+RCP4hMhO9Iq8tevmnfiUXekV+4NL5skqd
F+gV+ahFi0+nNzShV+TySqFu9zTZ9a/IG96s6FL1D0SvyO/5fbBtHGLXv8Lf
5UmMl/m7DL2i/U78ceUBrjkC+F4i8juTt9RcyhRHr8ijGx0qOibJoFfkY3jq
RIZ2KaFX5Dq6irlmWmvQK3KN4mb/mPsG6BW5zZSHtRNXsF7hdvq0ml2Z7YZe
ke9c3vHrrUMgekVuVLmO+1dtBDtvn+NN6pN2G3rEs/Nd6fzdFT57lKuS0Svy
kylLPh6ayz4Pkp9OGWNmKsneX5H3L136+NMC1is8noYxKwNfl6BX5Bc6ZIZd
7rLPg+Rhw39bsxZUole4jovUgnZulyr0Cv5UZcaBg2weRJ74fGNHNQ87Pojv
4zLp3qI+kx0fJJ/c9blo52w2byfnmx7eJ9p7Ar2i7R+J+8Kdw1XoFbmjWXPf
2iz2eRDXUd48z9KBpxK9gvMmZfprs8+D5Mb9yfxrN7DPg+RfL3vHzPhail7h
73a7D2Wass+D5C6qzgNZZwvQK/LdZ97yHojJRa/IlzffznJ7zeZX5N+S965Q
sUlBr8gt+Pnaw08dRK/I5c1XLdHmYccHcT7T4JSKNU3B6BUeV/MW/qvcHugV
+UHeN65uytboFXn176ctE3fooFe4nuKtpvyjzkvRK/LnFmfza2TZ9a/wOo1d
vW/a3O+4Xh/5zJwLJzLdHqBX5KN+CPWItNagV9jPR5QcXVYloVfkorHz/Hjq
/dEruP424cZ7TugVXhcZo1N/1VmgV7R/nZBqOKKgJYlekX94VfbGYYICekVu
vK9q62xRDfSK3O9CmLD7Cx30CseLzmQsqLY0Qq/gwQ6H1vqZo1fkD/jm9Z55
xOZX5Cc/Zzwrz3NFr8j58jbc7bvF1l+RD2XE7lUQC0OvyJOWxYV/PbMfvSJ/
9enZ9t///ftIvSLP+rZ95o3bqegVeXIvn3d6WhZ6Re4j+qx2UJHNr8gLCmtP
T71dhF6R/zm9eNWmcWzeTh4cPvXt9ltH0Svy0xIf+8UuHEOvyNs2Khpu+czW
X5G/jhna21lQiV6R1+pNeTxz+nH0irx8/sxPN4yOo1fk/icbyswE2XoGcs3D
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
K/fu4sV5B/yYuJsD2wgP+qHu2NFLhXc48LrQXsU9dMaSp+y0+xiP9eT7OYG7
JX3JvMbzLiPXzzfm4mNpz/Hd4Y/vJV70D/Akc6PsBENe9GSrEh/fihE2vC60
T/V490bKiY02fk5jPdmWcTD761niN+CS+7JV3Mz5WNobmvQmlXbwooeB+/Cq
81sk8uK6ADym1HffE4oX1yngWaev/FD/wYPrZqD4Wy0Rx3EG5AnxZxY9VvHX
HGP8Oz6TqOJDV+VKRUeRQ/w9enHS6r+GGf+Ot/Pk73cLLypf30nWL+BS71LL
JimR9RT47A3XgsLe87LEWTR6Q6n3KC/znM94W6L/BeTLTt0p9VoI4+oieT5Q
LT2w7O/n7VI8ofjJ/BL14c+u7oQXQ5gnxKnJLh0Pjxtk/DueL1I1+1RFAr0G
kEMcfE6jR/rj7m2kDgGe/9yB/70iH8YHHhMZpa9bQ/IE7uqcvynhOC9L/Jkz
xs72mMC8SEXe0brgjWMfD1Pq9Lly37JUauzb9+72kn7Gv/MilRqP06yRUOpD
Du2hjnWU4zh5N4DkiedKn14jd02ZD/MEXirw5F5yDckT+PFgKeNTUSRP4Db9
20qi/84X+nX5/d66h3byMNP+m3eXKc8+uXS+392YJ3Cob3PjPFfejSJ54t9D
m74YaOiSPIFbaK+Rz/hM8gQeEVLLpRNB8gT+tsLtR6YmydNz36O4NXPaWfKB
undQZgtn6XaSD/DHB9xnBQmSfIDvblxmpZxG8gGubUltqvif+wu865Zm9KH/
uV9YDy/LUu48z1pvHxWdynPmf8Yb8Oflh79Rt8l4A96b0Jzfqk3yuffyckTg
t1qW8bN6srhUfOJXlvEDdbLflMbAS2lk/gJvnWFkZzOdtT5fr3hWsT+BzF/g
9bP7Bi4JkDxXz968WdCinGXeQZ3c0/5zQexW4hPgv/Y52ol+4mWpzzt4H62P
tSQ+0S7eUX/97RmK7oEp7PwvNp5+zuIBqJ/bI5i3Zu8gfgYe3uDYu7Oa+Bm4
nP5Xg1wD4uePN9SdIje/o+j+zBVQ8mh68YKi+xPq5zmWHTu65ck6BVxI59bK
K4FknZo/v3/hYeUGir7uuJWdLev4/Ymie95S10qjNvk9Rfc81NWnwgPerXUh
6zjwuZOCpE/HknU8cN/KkltLWyj6urwtkDPapq2Zoq/LG/beX9IR1UTR102o
q8v8JHSe/eLF+ge4+G+jUvs2Ui89/L38TK9DB0Wvcy71bg4/+vYHRa9PoN6e
OXhDrESd1NU3T0RMDc/poeUZQt2otIxXle6m9Wc45aAjJJHc2Enrt0j8/bDn
s0vXVuqTOpzneWTJTqs+Wj6HqNhMzz5+t0FanED8+7U19532C389BnXvOX2+
Cgcmlwm9Hr5Rff3t8k4+k3/j+OJ7S1UTxRR8Z5D6PEY65or/F0Fae1K3h3+a
xlSv5Eb+4UuZ9pcX4kyoN+nPX1323mdUYE3y+bn6e9vqPDFae1/K5uhe/2Rh
wvE5YfeU8sYGEVp78vvhJWv2cw+IkPviX5/M+eqhMLaH/txh7hldFiVEix9C
3dOUD602F0TOUs93xbBVPyH38eXKhZ8VP/LT8onE+/TspGJJrBkZb5N8Bt2F
LPiwPXA8PzT8uMn9+WQcAhc9WDx/rgc3zpcHng9P9WXx0D5XDGXu6KdsF8yN
HNrje4YVtk09G8zDwn9v3tte18mN8w64WebhHPk13DjvRE4ZHzkRyUXrt3hK
00K/KSGTEzm0h/o8pvmu0OBxHhZ+kLtk41QF4h/gfsodL40ecaN/gLtbCc7w
XMqN/klfld2mPcJBu1+nqXRN9mK5dYRDnHQe67tCb9hp9ysJ6/bqdTcVpT4S
7wGfTnV/TT/Cw9J+3RT9q8vmED8Dv9UXvL6tghv9DLyrrEgpYj83riPAF9wR
+6aoxI3ryAX7G25rjEmeEH+G1+xuqZdstPFznkrZmRZZvJhwiE/x2ZjwJYwz
/h0nF7HOVzZ6v+LXObKuAf/Nt6vXxI6Hpf3LKrG4eHayzgI/eemeenMmN9YD
wD38bIv1fLmxHgA+d2Hbpoip3FgvRV3rmKp7bQzzhPiLJcou3Hg6yvh3PP+t
Vw89lJteNoIc4j9tT0yN+zaMHOJDna8gYlW/4RKpW/D7769jJ81yJXUL8DPh
NTZfRXlY4jiZKoSkFnIzF/LcOPzH/Qpy4dFN2WsPczPf/DfOryIvyn7QOX3B
33323kfzjv64Smn29CtL1w1hnhDnwQ27hT3Fg8ghjt7atKWlzweQQxyo8+2X
LTztfZvkCZzvT7nMCm8ejA/8xaUt56wm82B84PutuacvKmONr/v7YsrcCG5m
53/z6xryzgsLZ8oZczODW1/WSu1Jo9QOOSmOe/3BPKH9NM7OJp5bfcihPdT5
72V9q8RTSJ7Ac+YsWK9mT/IEnmrI89tinOQJPMLufajHfXJd4H6eVyUD15Lr
Qj0fqvuEU/oT6z7iYP2DVYFBJB/8vXrUnYxPU0g+wHfqpfEZ5ZB8gG9tSFmb
sprko2PyaM5Ztg6WfoB6/pbnDJ51Hqz7iBeW5lHmjWScAK+Z6yuitJ6Mk/4w
/k2BGc0s46R53Swf40mtLPcFn6tUdbjueYfMC+DMyQERYmys+4sG/qSNTGcy
v47p9y4pv1THMp5Fu2/8Gt/TyDKeoZ7fXRt0UNmK+AT4+wuK9Qt9yHwPYLo/
S2SWsMx3hZZ7McvZqlnmO9Tz9bXX+36eJn7D7/UcbZcbPUN8WKPe+kkjchdF
94+6JI/dvOHnLP6Buv1hZ6/VuQPE/8ATcvJs1xwhfv50JH6rGE8JRfdznFsO
48C+XIruZ6jbtXxvV8x9S9ZH4OVNmrtSq8i6tkFfv3DTyXqKvq5VLuea5q38
iaKvIybb321f9ayKoq8jeF7txxx19jxSJwBPUrdWDs4l6/50HbMDhi++U/R1
3662u9FidzNFX5cPh6ZaLVNtoujrMtTtm06EzI58Ruqic8cfU9kZP2n9E0M9
8LAoFvBqp/69L3HUW81y1zViP5BDnlDPT7/K3+x7i9SHwG2X5G2wVCT1XtVn
Snbv6W5af0ZSzB03apepdNH6LZq8z/ZZ0YezdaTOtDFRL5+t1UfLJ4S6r74v
95NgL61/wvH5kJ3trZ7f1pM635//ZZd4zx9aPxyidiYmhizqHqHlGUhNcjX5
oT6X24ReP5+dypSwsuA3+be9L7VI/W1gmJ4QjbtSp8VF2odUJJhQD+Lv4Se+
z+VaPClxRgUXxgl9VxrzQUec1t6XymqZJUwFiyGHfOD5EJ4zwl+0/LnwczlX
py8yKBKlxQmkYhVmvj6bJoIc2ivcqcn5tFeYFj8Ef58vKCblZ/meE+9jjVja
96yFQtge+p/Hb8P82iwB2nUjsf6PmfFZd8CEC++7u9LjATYFfmyPfKL+j9R6
GvSjkgvHrUu81xHpUl5a/qTOV3bREL23kQvHLfCCZXc2zfTkxPl1JeKX/Vg6
D8aB8d84m4r51cZN64d4Sr4oprhBiXCIAz+r/Fk71P6KC+cp8KfWI/VX1bhw
ngK3vZhUsOYkJ3rm0tZGnY2JXLT+PE1RJhsfnBEhHOJ8kfipWXSUk9bPSVjn
L7irFnvvMxf6CviNBrcsjZ1c6Cvgk6UiP6fzcKFXgUdbZXFpn+dEr4adGNjS
JEyuC/HzfY4K7brCQbuP5ykuY6m7nPqEQ/zF0peXnSplp93Hi1jPn1tuXSpd
yoXrCHBZ00L3nYFcuI4AT5xn0V4ykwvXNeBSU17sUy3hxHUNeDyPMV/4Xk5c
Z1vZ+sqmbSD5wHUFp1cHKvGw08ZJKqWu/1h+bhobcriu04qkIh1LwuG67U09
DXuKxxnA4br494U3bqljfz8vnfdtmP/kQAgXrvvAwzkly4f0uLA+AT7p0q/W
wB+cWJ/guTaGxWx/kjmxXgKu+/GG7G4HTqbEf+PqOsVr/eRGOh/JE667xrYp
bgo1hhyu+9BOcH/Y7lHkcF0BR931nbdHkMN1PZ3XLHNtGkYO14U6/32Hz9or
P7kwDvC4+Rc/pF/mwjjA7YKr7XNXcrHEEXgjUvRWiIt51a3s2BWOG8hfSVqZ
fHzByZz/33whPHTN4ezve/7O6zefF2jH3qQk7J2Ubn8fwjwhDkP/w9q5jYPI
IY6fkvv5u7UDyCEO1PkKKn9k0ntInsBfq/rXyF4heQLfofYt6YgzF8YHPnme
u1sbJxdL/JfqlZOdMzmZq/6bj7eQb9a0/pSznpPZYdD+jTn1NpVYNo0SCv6D
eUL7lHPTTdS29iGH9lD/R69Sijzx16OQPz63Y1z+ee1Dkj+ehzvzkI72SpI/
8K/case4hkn/AL/948OX6osknwUiphoLZbtZ8oF9Qev8As45f7hY9iN5F9cq
sgeTfgaewjNkVsNH8gQe5H/K+34cuY9vFvDyWNS0s9zHZ23bzJd0dLL0G+wj
jr1mRklUk/kI3Mf/i2KxEhnPwE0kR56F7yLzYsZe8SGOWd9Y5sX2jEfaOyxa
WMbhi3a3LfXrfrCMQ9hfzD48+zaXC/HJfKXbEYGLP7LM6z9fZ7jMiPjMMq/r
HJdKeDc3sMzrZ1qhg7rcX1nmNew7Flxbn1SSRXxoZj1+7axXCYPuwysyPw0n
CVSx+BDf+ySXIsOfTzw8LUte03vtRQbdw74l+89P+fOCQfcw7CNuW+Y5tJSR
dUdlRVNSk/Nrir7uZMWX/741nEnR/Q/7BbnJ25lvs7hwnXVp3H1AI6Me28M6
+HvSWN/+rI/kHMWJdTDe+ui2opxK5JAP7AtcI+Y4GZ3iwrpCRzW8KdO0BdtD
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
B4pje8jf5O3rbP9xMVocsp/6vChqtD6QDfszfa7epYtxpD30m/KgWeXVOWK0
+CG4n2qv0S1y3UnuI3DnT9vXd61hw3Fie3rGnMWHRTEOtLdeXLrJNFmElmck
7rNmHTop7PGcDcct8HcioW1TVkOeMZT60s7a9DhhjAPtFzNkA6abCNE+Vwx5
r9cIx+bTUWw4H2GfJWlbtYzdhQ3n4xbGwXDXan6MAxz2WQEmc9uEDMg8Bf6k
ZWVAjRgbef7q2bhdmxofrT/jqR0/zjzQ1eRFDu1hX3bKfk7emeXEe8BfR71z
1znIht6bNL3y2cEIHlo/n6a2c8jz/uQjHOIUt/g5ukdx0/o/CfdfNVfTh+tl
iP+Be3LF+BoHs6H/gZcVVt/SL4f+SaWKyp/1SAqT+Lj/2nNy+dpsLtr9Ok8V
TV2fdWsd4bAuFDIXyPaLcNHu40Wq0EcwyPQpJ3LI55VAfe1xH07a/SL7r7P3
dYIFt5J1E/iKYN63J/rZcN0ELu5YO0ns7+eFdR94icJ9z3h+Nlz3j1W/bIqQ
JdeF9TRpcFtyfBkHcljHr0+b7nIhknDI5xH1RvSGCeGQT7733tcPBtiRYz7h
SqHP0wmn78viMp1HPtqSugI4v2S8kE0TG9ZRwI/sKJv2bC8b1lHAB9+JzJsn
zIZ1VHuOts00X3JdqHO+rFA7yzGdcKhzyn8ptrSWsyGHfPKPTdN7d5RwyOex
4qTQRwaEQz4r9k+9vKBxnAGcvs86XqGg52RK6lLgz9NnmvJUsWFdCrwzRnHZ
0w1sWJcCpz4teVDXM86AujqpQHuurhW5LtSNm34/ZwZHjCGH6y5SXLqipHAU
OVxX0Knqx2Q+wuG6tcFrD21YMoIcrgv7qSYVr1nu60idD9xKpuHzUAsb1vnA
73KvTTzrx8Z0jZXs8ntxH/ms1pwL25vGGX3/zZd0Sv0Jp5Si9zBeF+JsZ75M
+CA3hBziPCw8Inn88wByiAP7ptUM9/PBP8h1gWvt8xFZ78rGpLcX3VDHERsz
zjAOFns3mpZOLTmiV3g9tQ/jA4d90JUO6esGrqQfgB/u93h5+R4by/5rNdv1
z/zcJJ+wjVmb3nH0sOR/9kTRlHq13yzXhX3Q1Kv6zPJpZFwBX8Rh2JXpSsZV
oNzHmnec7Sz3N++Gf27QSAfL/RXR5ro6q6+Tpf/vfC62aN3TxdL/sD9qLUz3
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
I8dztw6dvx5mSXPIk5Ofh3C9n0Zz8Oe75xEP1VQ+5JD/lY9/VhOxoTnk/8Cl
I61FC2kO+V9xcKvXx2Je5LCu+SZ6ado405zUq5rdln+sh5tQbxwty6qVW0O3
h/Xusfyjx75lPMhhvU48qae+xJ7mqCs+yHZGzKM56IqFbfmvNqVyIyd/51d9
M+uranwb6jSqwCRn1lm6Pfjp5TQam1LNhRx0Ua+qR+DFfTQHnfYm33C1qu8o
Gzj5O38T14UI37gm1JO4X8KyxE/hJq0/89K8dbjeDqMdct+Qx921X7dwt2H7
1IGcE5cH+rE9uT8otauobaJwO+N9sKBjw6OSbrQ/y5bLLBK262TY8T2mo9on
1Mjw55mkmrV6WSmbjMNv9bIjMUrVjDgs5/YVrr+byibjPGXtTbkb8XlsMs6x
i043v3e/zCbvr57jn1sznKPY5P0FHfhBQe258X5aR8X0hNpXaWVR5HgTC5Xf
zNmURJHjTZX7s/CO7jCKHG+g9yLeNqpu3kfrorqkfaHXDpRT5HwpbZCY5v+9
iCLnS67wD/vMifkUOV/ywjIHzjbVUuT89WgXzFlXWk2R81d/PvVRNKOSIucv
6LEVJ8Y/FmprxTwzeupFfR1PK7YH7rDk92/B0SbkkH9Euvo+Kw42Iof88yBs
7uMtvfXIIf+YpYezi2d3Iof8qW+xRXjxhA7kkD/XTS7StRVpRw55En4X1fWV
Frkl1IR5Povnde63GxxsD7zh/P57fMY9yCH/j5SM09izrRs55H9Z7dTBt0pd
yCH/w++oF08Mct9Lb8Z1akfIRoNjVf3YHnhhwjWHhLg+5LB+HcmN+DLHpxc5
rF/w3ksHR9xxoVwrrqerlqqXX98+TMTHlXoR9mm68oIh5LDO8rLkDjXwD9Lj
5986C/synFercfIPtOK6X7l49Yyp57hYpB5wmuy468bHUSJuztT2P0+P/7o6
QsSH3q/RZtj38dyeJtQnPOx7aTtP87DGtrelDhvPPWEdw80a678dFSUZO/RW
huagW+B32s+15h/rRVpQL83ltB5zm8ZH2DGnZn04UvFDjZe4Liuq/9qSyY92
8RPchPKVlVFLHxYguAF1eK2Mi1ShTCzU98DjhGaar62QJjj9+2pgfdXTB9dr
sF+Zt2sjlbfS7clzvLfsCV29RacRr5dn2+NLIylShH0r6o0ld7GkKc0hnpu9
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
WWs7cV4Cz6/i/5RtxUJ5CXz6Pnc9/TMT5UW//6tP6/2kxZyX9yJzlmGeiOf7
11s3jgzr/UL7RuwP4d/K4jhivsfjOgl821EaPUyWjeok8HeLqI1Hw3CdBK5e
SXZXFGahOgk8wYckPOKN6yRwOb3Z13mz8/1w2DTb4PbF+f7w5PGyj/sv4joJ
3Cq4vD/uN95PAjcs+i46aY7rRL8jPFyx0TAf7yeBr5StOhyigOskcDHzH3c6
Hk3P82/mT69bRRzA+0ngm6KZ399F434j8NWJl42b+nGfI1+XOVk0vR73G4HT
3rlvkvLA/XZpi+JW+fqxefcR+bnx6fVNr/G8IPB43aIH+gl47hD4PV+fzsQ4
5jwe+1qLzQtjsW6s8rcvCqRO0/+dR178i/buTp2cdx6Jv6uZDtca37HQHCRw
hv3Il/hVTMRz3X3X9jUmLPq/c5PwVy+OmedddWaiOX6D+YZPp2yG/u98J3zU
ig88DbVUJvIJ+wp0+NcPk3T/9Q+Ej7r/qHzU3Bn7mZGX1/UPk2m6//oc4v1J
PXNBr44L2OcQ70NSzvgWP//LRDjxfcCeeGlf2k2ME5+LtuJRk7QOwDjxeYz8
d/Qb6Qtw3tsvLvWpxwnMq4fwdduPS5Rsj8b+yo+SZ7U2XXRePPE555VryXmT
PDMIP9hlx/SKE4HEfiP8f35MmyTNc0WawLHvUuR4BzP2zaD998n+9ZSvj+Mf
Hnvkr6R/TKpUc5J0iXjCR/kfv1B9K2g+zticXbgIzMzzUTDruHcoY3YevoBf
bOfLRtyf00pWtUCNjOoh+AlfdOeawc7Dt4k6LyH8/cGW3lfSs4iH8EUnuWL1
bg/Pxz17y0DsmhnU//4trCerDk6D/7sPl/DnE/JDQKoUSZfgIXDFSOUyEx/M
g/zPcy3BtdM4L4F/WfLsuZ81jid8jtuOD0rdATgvgS+LcPI5cBPzoOdXRFu+
62rF53cVXbiz/fTAvPoJ//OXmyPe78B8XNavQhHwYH7Cz/w4W/ls1UYcT+Ar
U3fWsvJmUDzhW/xkk8eurcLxBJ7X+Oyo7gscT/gQ/2Tjqu0rcTyBc01cCLv7
EccTvkLWyj3trSaOJ/ATEcpV7JWz8+Lv+7noB7TO9xvr3HIun9iHeQhcNbu5
oiMK8xD41F2jlJkAfL/Q/525N5kbXsQ8BM4dNLzPj4L7hMBbNc0KY+b681+e
5J25VarqM/PmexbcEDbjjfkJ/NnJHU9o/+lD9L6QZP5Gsf2Yn8Drj//eJHcN
86M5u3F20a/LmB/Na/aj/i8cmJ/ABe7uvWknj/kJ3EzIc5WGzsy8edor5EB9
vB7zE/iop/6twr14n9H/TTvesK10Z+bNO0N14x3PjLEOEHhMtZ+euQzWk9uc
kuGB1ybp/+oGoafqi5Qke45ifSPwZNuo+GE/rIcT708pvr7Lov+rh8Tfsafv
1JmunkHziJhf0sz2tcxHs0ifDU0XkHqWkXX/1Wfic3rPEhJ/WungeOJzeraJ
5e84tuB44nN6k/D9g6c7MU58Tu9SznbOW5aYh/i+zMlqTjN+No6H+kLXa/+K
QKJeAifmQr/N+yNZXOR5+v/WtNGgJBLjhM6fbJ4ty5CnIJzQ8/LX70uqN5DR
/q/lusPT60P6J6890u2f3rTH+i04ntDn852HpPYZUebhwR2yGYvG5+tzd3VQ
mPxeHE/gMksejsqJkVE8ocMhD45NxCzE8QS+l1+kpv7nfB1u3V14jz8H10no
J/VCl0u1I8bRc+b1sy/93opxQg9VZU45KtvjfUCvEzm3txYr4Pjqs5tyq5ZU
gX/3jdDJ1bd0JIrN5uNWMnkFTqKYh9BDK9FzM6XqOJ7ACz3O+h3gwvGE7u1P
UZutWYXjCbyLXLtOUwLHo++xZm9XFlTD8Qh37urcpoXjCV3iy7+aF6mD4wl8
ILHEjm2O4wmdyfzKE/xABccTeIke7yNnHRxP6MleEcHPgYO4b9HnAOREJu40
zNeTY8++Ne21Js/Th9fOQXoseXxeLkyNW11WZtH/PUfEOedl2CycIZF1/z2P
D4qGtutMURGue2jlguLXIpDws8jv/e97Zzpq/FZR9Ti+7uLSVdlVvPPiiffl
+H58XFXWj+shfOB6rYTKZOb88/76eOI+PmvMT5z3EDa8zl+O8ccNbS/zx8nz
8hLnXWzZh8fZTfPP9anXVIX6ZCrCifO7ysPi6I6VNIQT5/R2sdadzSswTpzH
VYJL3vQBzEOcR4e34dPtqhgnzmPdg8WPDd/jetDvnYVo0Ao8MU7cd4eX8vSU
i/h6j9HTT7ZITNHn3RfiuYUXit8e/8GB8EibqnvNnsKQeJ3x7/uo1LJrTeut
cfyx1co7o58LzIsndDWuSjRk3dX5+1xNXj589CLmMTXvKPoYzwL/8hD7E0pO
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
p+cX
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1: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
vp+1+lus1V9nrX4Cn+YQYGuguiLGQMfCU/BvB4wADgE2AzYHjgcGZ5xJGW8b
4NAM3wI4CdgWGAqcmOH6JydtGHAQsCnQG9gdWANYExgHrJNnX3unux6wOmXr
6DqWsu2RvGsBuwKrGQ6MBVZN/y7AKul/vYz+BTwD7Ja85jclyzIcOA4YlP+t
gbzakVcNeY3GvwKwYtYBQYXK/K+6bgl2yvCV8v9Lo8oLfQG6coFmKfRJmv4t
AZqt0BXol+H6x2QaKwM7p+t/2LMm9pgv0J6HZ7rGOwYYCGwFHJuu/+GwLId5
TkzXOEdkPPM/CugPDACOTJr+o5Nmuvtk3a+f7dQp//9K/HSgfpqpnwPwbwxs
Yvwi/hPQDdgS6JL+fkDn9G8IdAA6AiOApYClge2A1vQPB1rS/577SfrqLmS+
ffIuAwwFegLNwAZA+0y3A2Urcm9FvHXxFwHFwDpAIf3rJa0d0CvLUgL8QB5/
k9fXxJ0P/hf4l+A/gS8B/w78LyuB9H8FXz/TMO+RWa5lgR3SXQ4YlmX0/+yb
dbkBsF+6GwLvAzcBNwMfArcAtwIHZ73b75bmf7X3DJM6H5/xegH7AxtlG0xI
mv6tya8RaAI+pcyLKP8HlHkI/oYMGwTUAfXAgGy37sC2QI+s34FJqwW+Jp0/
SOcz0tkqacb/HPpv0D+Gvk3mafzBmbb5HZh9xG9+o6zv0qLwl2ffsj7o5i4V
Cm8B1wHXA28C16b/GWAacCEwqSbOkd7nu3g7eW8A3gVmADcC7yRN/+vA1cB0
YEl1nJ+cTtzX8F+VYcfnOcl70E/0rMc1PPhswk4uxLg4qxBjh/4HknaqZa+J
NA9y/4T/fGAqcBqwPTASmAtckP/hjSzLNcD/0vV/vgpcmWV6AbgEuBR4Nv/3
RcAX1XGmtH9T+B0T98zw3dP/bXWcKR3SFGnsVYjx9bJCjK37ZLrj0r+gOs6a
jmqKcjue7grMLMT4clyWXdpu+R92y/xeAa7Icr+Y6ZrP88DF+R9eStrlwMvp
GqcD9TWWfM8h3zszH+eZu9J1jro73UnA/YWYS6ZknyrLPnRvIeYb55/70pXP
8b0FaAV2AJYFlss2WRpYphDz3FLp3zHDly/EHNiaYaOS5nzgWFsL1BViDmnO
PJwX+UQLjdney2R+jqndALYi/3679nG2JP+OB9752O8da4vTPzB5zcNvuzT/
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
VhV6HYxjGj3g2R6e85pDj8NnmZ76ICy77a9OCL9bv2N1RkjzO1uKuDsQd6r/
HXyk92vNobvhm/zW1RthPOtFuXbfj/n+QTn3ndOvLLlvA3wHsClplAOdXBMD
FUAl0BeoAToDmyetyrU4UJZxNvbcJf29Mw3jK7Pg3a93u1No3y7Qfu8WckXS
vPftA6068zi6Y+xV3QOvxNg6yf01/29l8BO9UwZfRTkY8EngR3aMfbF74BWh
n2Aa0O/EPU5+99W5zyqvDfmJTbNMK7RE+FHdQ3ZKGSLvl5XD2iD9ymOtn/5d
usUZ1xu4I7vFucFLuEO7xX75Bdz1gMW+U8TdgLTbAx2AU2ibYssD/YRuQf8V
9/BucYbwHe4x3YJnQbf/5MaUQVob/yLfceLu1Rzpr98t5IaUH1JmSRmW1dO/
R9KMvxHplWTbnNQt8MW4G2a5OgITSPMP0hwIfVxznKVsBL5vc4yxm4NPoY6m
+H+ow7PwN4EXQ5tp+2Rd357tdwxwbcdYt3v+2Jz9/BzcJmCE5xu413SMM0n5
lm8J3iOh35J7/BXI63r7EHAIcE/qHFhdep4/LFP7n+yO/781v4Wp3UOmzfZU
bsB29nxmSJbX85ZBWe5BGfZmc8Rdhrgvgg+1n4PXAdvZhrgvNccZRZfuIQNn
2hvnGfQWeSa9YUucG1zaPWS8DG+T+dok+98thB/RMfrvrekeBZzquZJtxv86
N/fXVeC3Zbj1eyNwGDARuBk4PNO6KWn6ZwCHJt8x+T35n/dviTHzU+erlpBj
fBf81ZRpHOw9f+oW2MK9eOqIWB/8FNfx4L/ZF1riPHMx+EktcUa0yPE4z206
w394S+hw+BbacS1xNrsA/I4sk+3wXHO0STvoe3eL8+33cc8Fetjfusd7Id8m
DYxtyr/vf/S3vf/Rv3yOYY5lvpvyDZ7vqHyD1zv9ZUnbOI6b/31rtGEc4/9L
8x1Sh6T5bs83Tr6t8s3TCoV4N2seHocMybx9o+NbnW1iyfzvGyTDlsuyGH+p
QrzN8f2Ob2F9E+v72mUy7bY3W9sn34oZPjqWy/+Wy7L6TnWz/D9t73X1DyjE
G9ejsi58a3Zs1tcxGdb2nla/72J9H+vb2f4ZT3+/pB2e/+34TKtv0nx36zvk
XXMeWSXnEOeS9llnvv3qlmUy7e5ZDv1uIbfIcnfN8LZ3w1sW/ns33K/w3ztj
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
usafCPTJsOOAQZnHsZme/tmZlmWak+U6DZiV5TPs7vzP/j/PzV3nuX58FP9Z
wNnAI77/Sf+dmZ//6TrgoLJYg1yfrmuWa4EDM+yGpLmuuSfzsR0ey7TPAR5P
91zg/mwPy3dv8tpW96Vr2IP5P04HHkr3DODhdC3rE5neecCT6Z4PvAq8AEwF
js76tg2mA/sDB2R9WfcjMp/tgZFlcS6/b86ra+Y87fy8es7NzslrJE1/mz5H
43jHYH91LePdyPgM807FdYzrnd4Zrn+TpLkmUj+peanXdJ2cp523t8m1iGsQ
z+hPSr9nxK7v3Susl+V1/h+aNPm2yHnd78Y7gYnpXzd5zWPzDLfcG2dZXFut
mmsO13reqUzI/3Mp5RwH7A1clq7f3nPA7sC0bINdgLHZBrq7Ahf5H4E9gUuA
vTKti5Om/8JMZ49sc9tkh+yXo4DR2f7SdiwLnXnr5X9qV4j2079R/g/LPbcs
7CpZr/aXMcDO2R93Sv+Zmd6o7LOjM+y85PX/nJr9xb5ydVmMDfana7JP+T3M
yO/gsLLQkaJ+JPW1/FoIXUNt+uFWKPpPp9ryqT9InS7yqkNJfSyrpo4j9cBJ
U79Sm54y9Zapp2WV1IWkLpeVUp+ROqPUU9amw0xXXWjur9RT1qY7TVd9bO4h
TVc9aOo+k9c83JOpS8446upR35m61tQFpD41/ertkWZ+6pnxfxim3ph/dTgV
xd5CHT0fZR6WXV16nxVCz5f6vdTVow4v/V8UQm+X/i8LoatO/zeFiPevXtNC
xGvTB6ar7q5bMx/3lraBeyzH0K8KoS/MtOYVgrdN75euepycS9Sppz485xb1
ten/uhB5Gt901ftkmHswedWr535YHVHqijJ/05PPvbHhhrknNtw6nZV14X9q
04unnrwHsg1sD/fi36f/uUL0D/uCe0v7h+3vXvOP9HuH6v7m9ELsww23Hdw3
2//sd+6nF6X/8aTZB59KXsNGZhqnFeKuVdc545aymJ+c32aWxTzkPHFTWcxV
zmM3Zt/Xf0dZzH/y3Z5jsf7bymIu1H9zxjPdu8piznGuujXzkc+909/5/2fm
Wbt6H9xfqXdAvUjuydQnqA4n9222t33HPaF9xT7iXnRe9sU7kqbfs5OvM47n
IvZ1+3WbHkPDPE/5IdvjoQzX7/7qs8zjnszT/uve6/MMc1+oHgf1ablvtIzq
xHohy+5/c79ouP/H/afhxnks28dv6+5M23Q9a/gpy/pohut3L2c/si62ds1K
PY1Rr1tZnPf7HvhuaCeUhI6M04tCf7F6i88pCp1o6mA7N111rZ2XrnraLm8M
HSmvVNIvikIvs/FPLQqdzvovbQw9JM8p/59pqyPt7KLQv2YelxSFbjh1wg2r
oi7gv1A9IvjHFoU+uQvSVY/dHUWhN029dBcXhY45499eFLrSDLuwKPTfqZdu
WsbTf1HSjDOCvF4kr4vV25HlUj/cWelavkuzXOrruiBlvK+Df3Jd6M77gjq8
sjH0wLzFfzwZ+kHQv3IuS/nt6wk/L+VdrwX/1bnBsaWcMQj4GLwv7m9+P44V
4NOLQl+beVxVFHrZ1NN2ZVHoBdN/eVHoGlM3WJ+qkGU9jfQvy/IaNr8sdM8t
9lsrCv1x1tG3ZaE/bqHzV6ZtfldkeuYxuCrk+s4jzZlZ3+r/u6ExZFmLlV+t
ChtJ86HdmeHqBXws29h+9GjWqf5HiqKu9T9cFH1C/+yqsDnyEOnMyT5kn3o8
07APzgZOBk4BHkhXvgWNISu4B2k8VBV2TB6D9mCmYb++rSpkOO+GvgYLhb+g
/W3/que/47+POn8K//lF0e+eox3/xF0G+t1VIec5SxtqvisrirD7qtKWivK5
mY//566sA/UR3p2u+gi/rQr7UN/D/0rWte35QVXYFvwM+qtJs80vpAzX4v7k
mir7rv392ezf+p/J/q3/haL4luyzzyev/mmkcw3uj6RzQV30re/B5xbFd2X8
+4pC/+BkYBYwJev6x8aQz9xZGekMN+yJbBPHg6ezzkzrp8aQa91Pmdb8H/av
VX3zWRR193lV2o/TvhX1P953kNTzbXURpwS8m7LJ4J8Ci4Ani6J9fsv8LPvC
7B+W5efsZ/a7xckrn2Oqemhce3kPNqBD6PFUsEkdC216LHTVS+F9oTov1Ivw
U/ZX032hOmxu7tDEt1od9v7e1AZjebTligpQUeaXwF8GfsmyPJ59xTazDX/P
sttug6rDzuAHuP2rw27gO7gL8tswb++cLVebTgvdNv0cuurtUM+H79PVyeBd
rmVXZ4b3n+r78P+oG8JzOuUU1GHhu3PfnzsPyKt+CHWI+E7dMHVR+E7d9+rq
pJBX/+95FmBaf2Z66pn4Lc8LDFP/h7orrN82PSOWo03PiH71WLyQfH9lGspf
LM4zCNNalOca+n/N8w792zaFfc81q6M/PZP1e0NVvM25mX51U118D8W0y49F
8X1apysVR3+yjyxfHO1kP1quOPqQ/uNSjno66SxTHO1hX1i5OOLZB8vSFucv
8KxSHDTbdlra3NxKO5DFEc90V/Rdb/blI1M2+2ridqV870PbAHdGY8j/tye8
e3H0/c/8LlPe+xrHWP7Xm9A6wT8T/H+WBfwO8DfAS8GrgHfA18K9qjH0kr3P
3LR0cdSF/6fR96y4XwM9fbOL+x3wV84TtcS9vi7GryXQ5hfFmDsn+WanfwD/
8x/S/8m3CRnuuHtsddim7Kd8fdJsgxnVYft1G+hHVIcty82bIv9Zme43RTHW
6F+qOOJb7ubiyNuyLFUefENxW4qDZv7XpC3UrbWhWhw0438J3APcW1T4V9jR
8a4F97K0mzkY/lerw0btGPX7Mi7t71t1eEaA7wd+O/jjVWHv5hnqtbhz2MPq
14O81H/qe3N4/qkJe22ba68Sfz/fYuOeDvQFfxe3onPY1doanhPxbwH9Fdwd
i6Mv2jdPxt8H93+4OxRHfzLsXPxb+qYD9wTcIcDWQCfKsCHu7tDHFseY63xV
0zlsYA0nr6mE9Yf2NW4X+DcC3xe8Vl3n4PuDn4i7DbCtb5t985F59OgcdrJ2
Jp2RxfFtWKZ36SeluGsS9y3wEt9Sgw8tjr5luw0vD/xi3GFJs922xN8Z9xTc
4Umz3ZbvHHbQ9iGv7ZJmXxiRrn155c5hQ21/ePoQvwbaSbh/1IQtvE2gP1ET
toT6amsp41nupTqHjbA94OnYOWyZDdQOG+XvaL2Rzuvg7a1H8BVyfB+JO7cm
bBUNsP3hWeJYAv2RmrB/tBn0XYpjXFg167LJ+gP+rIs22Q7+nYpjXHBM8r7F
8xjPZS5rCvvLc6pjv+ydnPd13mV5p3Vk7l+kebfWryZ0gM9oir2MNO/ZPB89
NNO9KdP2Ps17K89vPA+5OWmm653XfhnmfZh3Zt6PuY90P7lj7gVHpv/WLIvl
897P+z/vCdvu//SfnWno955q38yj7b5K/zWFOGvy/OuSprBJfV913OdZRs9u
/qqLddv21FspfXUD8F3BxwDrgk933IPeC3wvx4Sa0L99kXpos44dv3ezbxZH
Wt07hw24HWj30fhXyPZY4j0E7o7lsQbSDs12ue4Zln7PnQ/J+r02y+453vQs
r//n4qYY62ZWx72l4W13mwdn/GnwrA3PafBc2BQ2f8+tjnXW0Mxv5yy7/Wnb
8hi7p+Gu3Tls/E2k/AP8nqGfgXteccSxD36P/yjcMamnRPxo56uasB25kbZ2
i6OOjHN+xnP8+Ja4R1oPxL3A+s7626w+wi8lfPP6oF1WHrpPTPsY4BzoF+L+
DX0xMNV2IZ0z6yOt36AdTRnO930O7rnQL4Ku8PmPaZtybcq2CPwZddf3CN0e
pmP8X6DPhb6u9oGJOw3aH6S5X9pIegN3C+i7Q78C+jnF8b35Pz/EPxF3K3W3
gx/qf/JtNPhh4P3An6sKO9qvMs5/Av1wv2Po+2sHF/wJaF8CR/gtQx8KfV/w
Wxw3qsJW8nvE7Qt9D+hXOf4Xx7jpWH5acYxH+k8pjjHOse0sYFRx9Mez07Xc
B9aETeR3tKFWHGOo4+XEmrA1PA/3jEzbOeTUTM88Tk5e87i4PuxTlKv/JO17
rqkNz/qwTbAG9Fn1oRt/RfARNWET9kHcYTVhN/YBdf7XhL3Oyh6h0+XU/E+j
a8JW8pM1oTvG/2y5Hsxw/Y/m//T/qRvmzPSrR8Z2sj/OznJbNw+kax6rdw5b
mQeT7+91sU4aTN1ulXuG88tjvqoHGmxjoBaoAwala9gp+U17TnFJzlW/4l5U
HuP1L+WhR2dKlkOdbq6F1fe0Q03YgH7U/0pdnUT4IvhvqQk7sB0o2/T6sPHR
lTqcXBzp22ZP5P/zG728PuxxVKn7vz5sZzR0Cj075+W3OKYmbFs/g3tHfdj7
aIXnjpqwi1rWI3TwnJ11N6MmbLwWaeu1Jmy//t0UuoX8Lo8Ffi6PeX3XTqFv
SNpxxaH/RrprinuLYx3gf1uYa4LdO4V+HMMnAVfWhM3335tC/9DkrK/d8p7Q
+0J13lln6tRSL6T6tNxjqPNK/WjqPFNPlHr61FumvqnLgMtLQmfU5Rn2VvKq
O009ZepZU2/Z20lTD9lOrcxnunWhf+2W5FupLPYS7i1ezXyuKgm9YepNm57y
975bV7fUrq3hjqv7T3ezupzVJ3ZNlts7+YcyrE2fWpt+NV3PJt/ItI3TpmdN
vlGke5P3yXWhL/ox8L3rQneW/0M9asqHqfeqTV+arnKZyuKr800dcN7lq/tN
vzJl6vkyjvKh6rNr0+mla5hvAIynTjvv/NUjpl407/stt2l5n69eNuvP+3/D
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
sF7On+q42zDnbWnr51y6VsZx3l0z/eMyDeO7nt4454rxmUavnJ/Xz3SV0/V8
x7MKZXidO1vKIg2VSRRlWrrqXHuvNvYqTXWRtzrZCpm3evD0K0/amuP78ExP
v2VUV5t89a1h3+R/6rFL3YNb1oX+/a9zzHDd7DztHOg6erP075zzmPW4U85L
zm3KOLtW8E5Y2eWm9Jv//ByrNmkNfYPdyKt3a+j6q6sLuWa/Ud8Wj0/XNpuf
OuJWrAu56Z5ZRyu2hl67hbWxD+id5Tsw69t576B0e+f6aI1sJ9eAq6d/89bQ
LdlYFzLXjVlu5Zvrs22Ub65L/4RsQ+fStvdR5/2/Ocw5zbdZyr8rBz8kz6w8
29o6z65OyHOtSXnWp45o37f6znXbPPc6Mc/KPBv7qTzO0j0P/6Y89Ferk0Kd
0k/i7w19OXV72yeK4+5gfvd4f+o71L/r4hzYs2jvgDxL9/zcM33P2z17fyXv
AdesjzsKz9Xl+7l7vHv1/av3IJ5pe97+cHncOXr3eHd53N95j/cM+GbgK2kz
MXXi+V72Bc/roa8G/Xjwav+X9ou8OwH/Afxw8Erwb8EP9p4S/Mu6uFfzfu0X
/0d53Pd577c3eBn4B3WhB/LFjqGfUF2FvmNXb+HK+f88e18uz6c9p96PuOW4
H9fFnah3o+tTtu/yXP2L8rj79A50HW2npr443/t+lWfy88rjzsYzcs/KV8p8
9B9AWCfcT+vibsdwz9bVqejbe3Uwzsn3v/ObmQvL497H+x/lsj4qos+Vh34f
9fyo++ehvIv+IeUJFqT/kZQRWJD3zN43fwG8knrnfFvsHeI/yhqUxz30V8n3
YKbXdn/+fd5xqzdK/VHqfb2dMnUojrvImXnH6h3lzXWRpveP3ol7n99aHnfn
3+ZdujqJ1E00qiXu7Of/vzv875JPmZWi4rjjnFEX8lHKPilXofyKchaz8G9C
eFN93Ld571YMfi34euDt6+ONt2+9v+b/Xg99fegdtZlZHnfT3lHPKI/7O+/x
7iiPO2jvom8tj/s77/G8Nx2b34Zl8b7Ob2Juylkob/FYymsoX/FkylYoY/Fo
0myPp/Md9y+U5+3UR+dbcOWDFmccZXQWZlpPZ9qGPZP/2/zUsaktQnWcapfK
80DPBXcrj7bw3rvNxq2yhb/Vhv2ORS0he6TMofKHi2rDft9Cv+XasLXxB/gf
tWFf4zfwR2tjrnfOXyvTM/4vtbGecV2zRqanXKOy4MpGKiv5Q23YbZnf8p+d
Xcuk3bC90++9h/cf3m0uqA07gz+2hPy4cp3Kd66eaZvud3n2+K16iWvDjp76
QrW1q2ybsm7H57pIG5qTcj2mvcU2m8HKDmpHTD1W2j4blvep3nOemmuwqS1h
B1deZTiVXZxYFHZsByZN2UXt3UpXflE5xkPt52VhS3Wf/J9DM+1/ZdpyXXde
S9hicw3pWrLNhrHlOybXeNovO7029EJPawl7bepr03Zbmy3hNtvCk/L/b5v5
GHZ2rhsvVk8efeLAopAR1eauspxtNnh1lbmcmrIc53hvm7IiZ5WHPIRyEb+S
xlO1sQ50PdgmA9EmE6HbJjcxPO+YvM9yDlPWQnmH7TOOcg8j0/9SbZxve86t
jl/Xi55Pj0w5h5fqQletZ0zqmNW+pOfMnje/URffsvfv6l7W7pu6mr2LX8dx
tjzOvj0DVyezel89y/VMd2x5yFcoZ7FTbeg6U+fZsjknWD7lJCy/93DavN03
27W8LuxLlraGHdz9MmxKymsptzXJeaso5G+r6uJMwLMBbeiOzzj/5L7+75aw
czwhw5qz/ryrK64Lez2F1rhHdA3hvWLbPaL3ip/n+b/6qJ+rjXsB7weU6XqP
9DqXx92jvAOL495xcMb/Mu8jvmqJO0fXJReWx77d/Xv71rAVrQ1p5XedY2xL
2985xrbU/0HeZa/HmNnUHPqO1HvUszl0IqkbaV7OlRvA83beca8NPpuwC9Ud
knOf6xPXKQ9Dvwh6Z/WHN4eeIvUVvZk6f17AfRK4GLw74a/nHfoa9aEvRd0y
6phRV4o6U9Q7c23q0rkcd1rqsTk7deyow+di9TekLp2p6pZJnUivqcOJ9A9x
7iP9HcpjfeU6a3T2t5fBh5VHv3m2LvSn3Jz6VIaUR5s97dqyPNpgLvg25dGu
z4BvkuufB8F75fpndl3oblDHiroclkldHw24K6aeipauoSdGfTH+57E5x/l9
3Jf6he7sGnpz1J9zD2476uvJDqFfaAT8a8L/vHcuOVe+Br5zzqev1oWeIvlv
U/dFzpXv1MW841z5pt9RzsWveK6e67pH6kLHi3WvHiD1wagXRn093VMGVlnY
q+Hfy3mfuu2Cf0ugn3owoI+DXgS9K/7+GXYD9H2gd4A+szxkpzuD31ge8g8l
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
UMUnKfzCd0zxwoL3tC+XPFDhW8m7Kt5NYbXk3ow3hW/Kjd81WOE7yQMUX1pn
3vB3eL9rzQ8IT+DNqvMPvkvKs2+d17bwf56m9C+Vvn0mvr8Ky8v9rV0e93CC
zv2seKzi6cr/leQdJO9Z5/6Ez3OG0r9W+o5Kn6WwRvIpigfVeV0MH+k2wT29
Dd915S9KXq48XWttN9iDeYXS15H8H56X5NaSH5a8U8kc1r3hq1R6heRXwaWT
XCb5PslvSy6X/DjvWsnc1jsof9+Sn3V/yZ8pz7qSX1KeFZLbSF6WMS8jtp2d
WQsrvVLymxnfPzZ8jGnGE/aF2B5+X2P71VWKv1H+hOTXM+4zbPsoA88iNqKd
Su5XbAo5x/jF1hC7P8YFMef2jG8l35uPwHpT2vMZj7PaNr42/I7Ypm6iOj/Q
uZLkFYo/VmiibsXpmMO0VvxrwXlWMoeSnJf8juROqudxyd1Lfs+wV8y18ftE
XN/G7yL3Sls7Kv9SxV2VP6F6N5T8h+r5WmE9yZ8pnqL631KZHhlzptPn/WrN
YQmX5WYq+4XONUv+iPYorC/5y4zfYa6JveffOt5A8c+K1yp0kPwt39Kk9bNg
+8yNNowrGucUvNMXq83pBo/bHVnzuMGJdoPiDSqNoXtLzj4n2JzdnDPvG1xv
C7L2dcE/BT+VG4vmJ4WndP1K+3Xga9K20vvV7Fu3rjSG6gWSx+WMDXFws8ok
NF7Zb1PaR5J3Zg8yZ50EuolTJHdS2TLdy0LJHyi9F3tyktep9B4ge4ErE9aJ
oBs5MWc+l7Gqf3LOnHBjJN8avHjw4HWvtI/Sf3S+a6XtG7FzxHYWPFnsarGL
hVMRe89dIsYGubLSuid0UJmwG7xCcjZsFOdhJxw8jPAztsdunr1XfAArjX97
HfbMOfPYHa62VYdd4lylLQreva+ytnXlmtiKNpXMMwvfbGflb602L8pZd4IO
5XLJm1Tanwi/opLkT5V+Y872stSB7XMhbCKvV3qx0likN0huqDRm9TU5c/bA
3TNabbsiOPLOy5oHFj5YeDmxF0OGIxbeXmJ4ZXesMZcinIrnB0ctfK+ZtuaV
hmf65qI5OuHqPDs4YeFe7FNjGZ7YdOSFb7o6YvineyrPcOV5o2juTzhAyxT3
rfG14MVdELyTn5XMS8seEXsx8AjDUw0/9VbKf7Dyv1w0py1pcFcnI6bMJTo3
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
nHKNhrw5UzZI+b06Jvrl/wD+aSC5
            "]], Polygon3DBox[CompressedData["
1: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
snPQf9Xxm7XG2urpsJNjl46xVuGapGuT1s8s9MOOIYlrJf3u7aNMXYhrw/E6
1jW05Xhoczy7a8DdXL+Z+O1sG9BSH2s0rtWMTfntmov5Xp+BQvrhNTh/EX3v
V76v6H//aYm8nRMv8Hml/g6DT9Cfwsak/82xkP011zuSuCPgI+I+hm7EryBu
OaxB/Jv1YRugjcCgTHxT+W3lN3fnTKzf2baubxPrj11aoy3taRnsr8nvl+LI
c23y69wacXtYp8RvQdgfxTGm2Ny+Cb5DL4Z/qmN907yds3Tucm3ivyXuG/iL
+H39FqdsfxE/j7TFrdGWrOP29TEn4NxAE2n6o3PEb2jfDfn6WHNw7t/5fdff
G1qjbfaGTvWxPm+cawCuNV5rPbaJNf5yjtekPF8Xx2+wivIMzsR4/l/iX/db
rDXy6uWaQX3U4cBMrBNat5828gwVxRq761vdMjG+dg7GuRh/Y9eZXZf1t3+8
PtZ6XN/Z3O9q4hrhSOKOgjp0LRzstyt0QXf2u9XvFNgtE2uDfg+8UB9xrXBY
LtKUoLOOI9H7+c6vj3v1nntZf8TVw6HEDcuF9ppeyzDfob5LtWnwe/PDTMyp
OJfSCxpIm3e8ij7Ib/x8zL06B9ujpKCgkrgKx6/EDYGqbISpD4SmbNyz93q0
fXwmvi9c89wFXUNctWNP4gY7pkrfU47B+xJ/AeOVg/mtDnJMzfjpDI6Hog+E
Rzg+tyniDHuc47n18S1mHltkomzljrtzUcYe+VjbdI1zGOVvm4u1c7/5biX9
U/Wxluxv1ofjqZloi3v7DNue4ODC1IZJOy0TdkEdyKdjLtZ4/bbfE6ag78yE
XYx2RO39JkGPg18491c4NxPr1svRK+pjzbc6fR9d4fsULoTfiPu9Psq0JTxZ
H2XdKhP19DT6mfqI876tR9M4v/Bt+h50rHZ7JuxotNspzsV8hd9ufsPtnt6r
H6fnZeNM1MktmbDDsa5uyMRakd+/rp1dx/GhhdHn/83xZr5fMvE7PFYf19AW
xDr22j4DpjHOZ8M2vSh9Pzpfcg/cDVnbdi7mPyyb9+D8iHWoLY15WrfN2Whj
tq1joCUbYepjczGn6lqx62vOtbp+rf2D9jzao6ydifkD56idqx5J/9Cdvn0D
eIm+7hviv7ZPcswFLxPWjbhVtLfjSXsJ7MbxrvBvTazPaFvhNVwfn0D8TsTt
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
HO/iPaDLYR/03lCDroUL0OfDJXBpela12dJWy2d2L/SeUIeub4y83KPQvQnN
cw9t1SwTugr2Qw+AHDqvPZQ2V9AJ3QT7al8GDehGGFIeaYxrhkHogdCCboXB
5RGm7gz9ysO2zDXddhwfwvHB0AW9BhyEHgrroNdtjL7F39jf1j7m1PLoc+xr
NoOjXfuC9dDr20+UR51YF5NTXgdC18bIcxj6UFgTvVZj9GXHukbRGH2a+hjo
1hhhaq9h3oYdVh55eO7a9on2jc4jo7e3fyuPMlq2zWGMbb8o9tDb0f6K49G2
K9sCnFEeYeqtG6Ns1ol1YRnPLI80xvWzP0OfYNu0DdvflUeYuk9jlOVs22Rj
lOk8nxWu/69z0o3xrIx0LaYxnpmxtnniN3Y/xdSW2qA3KYo2Na480hg3Hr4u
jz0e3dvxWPilMfo4+7ZrKqLv953hu8J3wDa8r/tVx74fH8K21RGm/gi2q44w
9cewFbovvOdcD2xZHfuEvO3cCvSpjjD1u/A17+JFvpMJOwguhglQBdXORVTH
2PciqExxhlWmNF7LPM3La16APh9KHBvD5rAZvEncW7Bxdez74L4L82AhfOk8
FGF7wULK8iUMRA9ybFwVYerBCceORxZH3CbVkad5vQpfELYA9iZsH9ihOvbl
+ZS4+dCrOs4x7WtNUbZN4Y2mKKO6d3XsU2HYIvjKeSjC9oWxMMbxNXRI2rGy
czDt0737LeCcjXWwvCrmwhyj/Uw+yzheCj+if2oK7dyUYzLDVlbFXmgz/Obl
eAnHxzr35v8Ec/xbVezF9oBzBhz/UhVzZ44Hl3F8cFWMsRxbTYMNq2NfC/ep
eAl6VEeY+mVYURVzd7fAUo6/43gxfONcJfxQFWXw2t/Bz+ifDDMOriGvqbAG
rAmT4VKohxycA2dDod8YcCVc4XgUmpN+gmtPKI4w83oSfXFx5Om5fks4p2Qe
P1ZFmSzL902xh5J7KQ2DT1LZnJvzm8Eynkn87OKYg/qXuNM5fqQ45nz+roox
gc+gz55jhc8Imw+7k24PuMN3qc8hcdtCge9cn3PfHdDWd7hjK8cAvhtTGuMu
hJWk/d1+wL6kMdKaxjjPKaqIPDx3gu88dMaxEfpyaI9uBxMdQ9ino9eBjaAn
dIQOji2Iu9R3ZEXsVW6feUVjxJmH55qmFH1YUfRpV/rO4LgLrA/doBZqoBE6
QQPkoRU6O/aEg+AZzn0WKtEVUAf1UF4RY9We7unRGHGbpPGmaZpgU/Sx/k8P
es2KKIPX3gCaUxrj1oaWFKbumsrWK43HLON1XONa+2LDYZ+K2GPYvYUf9v1d
Ef9roU32TN8BHI9A94XbOL4BrvddSPjmsCF0h96W0/Ekcbf4rkFv7dgSfZPv
CnTfisjDNMaZ9zT0XY5j0DvCdjCyKP6H4M7GwDa1bYrbCU4siv9BuLsxMI8d
U5zXGJ7s5/977Rt9d1VEGaaj74Gd0bvAANgXHiFsdmNo91h2b2XD9qyI/xXR
xn0GxwdWxJ7R7hX9lOMV9P7wOPqJxtDuOe1e04bdD/fBboTtnjiZvLYpirgd
c7FnvHuQuBeJbcU9p91r2jYzsCL2pHYv6kdhUEWEqec2hg2sc2DOfWlHu38Z
14dhcBgcDAfBMXBsWfQn9hX2Ga7vOC/j3M0lqR+yv74wzc84X+KctXPXzhk7
d+wcy8TUb/vumpLyuDT1Zc6pjEv9kH3ZiDQfYR/zU+pfzk/zHeemNBek+RPP
tUzXpn7Ostpn2i/5Te63uWW6ML1HxqZr2hfaJ1qWfX33pHUH1yYGNEWY2rUL
12BmpveI75a90Xu5LoE+siru6aI0f+W9DiJuYFoXcS1neXr/bJHWa5wTuyy9
433X+345g7id0/rMivQ+2zKt97h+Y5x7qLmXmnPmzp2f77Wroo58rw1Pdfd9
eo84L+Y8j+tortXVpnU+1w/nkdcrxbH+6BqEaxGuO1akdUXPMW19Wod0bbIy
rcu5pujaomt6ru25Zujaoeu6ri27xuhaY2lax3Sd0XVE13jfS2nnJf1+ysvx
hnNWn6bfzHex72R/S9dALUNVWvf8O60DuE5ya3XM4fjuPyG9X52v8V1/fBoP
WBe+W50jtE6c77mvOOrc97l14DWqU934/vJd5jvtrOqYb5xZHPth/ZKu7VqE
azSWwTnFB9P6h+MJ54wcK5yZxg+jq+Nd+Eiav/M361Ic60/+lhNhDfTA4lh/
cU3FtZUJzvlUxRqj64au8bnWN7Up1hldw3MtT+06o2uKhrnm59qf65CuTV7a
FOuir6DnVUWc64SuUZrGdTLXzq6Cq6GPY1rY1XUd2Noxr226Ktb9+jVFmNq1
wElpXuol9MvQtyny8Nzdq2KN0bXGV9O8lmuCrg06z/VGeqZ81l3z81lz/OFc
lnNa9zfFOp/zWt+mcdP0FKZ2LGVeXsO8zdM1RdcNHac4lroPfW8a5zmucfzh
Wqtrrq43imuP81Oc41vXQl0TdX3TMtyXxmmWbQv05k2xZuna5bbobWBv9D6w
PXq7ppg3d+30bGgtjvVF1wf3IG73pljDdC1TvVtTzOMZZhrXEs9K5/ZwjNkU
a7qu7bqG5nqZ61FHNMWan2t/zY7Zm/7Xhi5Obcs1T9c+L4XJVbFu6drmGBhb
Fetv7q/tetfhnN8TNoJtCd8ONk5h6u2hF3qTpli3dm17R/QOMAC9n30Veqem
mIN0nLxLU4SpHTtvht4UdkTvBN3Q69tmbDuwLnod69i6hq7otT3Hc6F3U5TB
a7sW77qqtiKZZOfQnbgNbLO23arIyzw81zyN85peyzSFaZ7edUfXLtXO3bsG
aZhrmP9dh3Tt0T0q3ZvEPZjc3909Mt0rUx8p7nfu/vHuzeEeHf/Z67Nj7NXk
niDuPXkKDOzAuAwOb4394d2Lxz153PvS/dzdW8495txL0/399S1gmPu76/Pn
47RfkPuz63/Avercs8796PR34P447jnn/nU/Jf8A7res75rhhrUPHzKHcP2T
Oe5PWVrhMI4Xce9fwW21jMtrQy+EW2sjzO9iv5X95vU794e0X717ZOjfZYT7
wpD3M+7n3hr+WNzvwzLof0CfMnen/cfc/34kYT+7lxbXP9G93eqjbsxjWGvs
f7VV2i/EvYD1aXBX2v9Nf0zLO8b+StaB/hfWaY095txbrhus3Rp7zLm33Hpw
BEwg7yfgSPRR9VHWS91Tzb3UOH6kffhr2pfjPq2xB5p7n/VzP6368F31kHus
ub9Ua+wx595yW8HOMJq4HWGb1tiD2r2o3WPYvYbdj809azZOe13sXh97d53j
nlXoHepjb65TzcP9nOqjbO6/tqd7w9VH3N2WFz0E7kGPcg894jdpjT3l3Etu
M/fHao09Bt1bcCPrtjX2ZHMvtnWgZ2vsOedec72hR2vsUejehJtAbWvsmeZe
aXVQja4StddojT3v3Ouuj3shNcU8gHMmzp30bo0969yrbgtYoz78j7k/11ro
VvdTQZe7X1tr9LnalixIfbHzLrY525rzIJ80xTyM8yLOxWjjoK2DNgvaLmjj
oK2DdhBdq8NmQdsFbR60ffCb2W9nbRi0ZfA73W93bSS0lXBOxnkXbRS0VXA+
wHe5NjTu9ao9Rv80H+H3tvYX+6TvZ79/nV9wLKBNxKNNYf+wd/o+9nvYc/zO
1o7DvPxG97u8pjrsVPzG97s8Xx12Le3SuqDriq41Fqd1RNcYDbNv0lZCGwn7
KO3XtIV7GGZVh42Hth7axHRKYe6lrI2baV3DbJ/WKV2LdE7CuQnXDF07dM7K
uSvXVF1b1QZNOzNtuLTl0qbFPti+V1sz6865q47/rw4d62hzY906Z+W8jTY2
2tHYVpw7cs7NNuMckHNB2rUdmLTzTAekMOe4nEdyjsm5pgVNsUe0c1DORRnn
vJJzVqZRO9fknJhhztk5j+a8lHNnaufWnJcyTO3cnXNUhjmH5VyW8zobVcc8
mXNnrrm69jo4hamHpbI6N7Z/KrNzWM5baSPUJrFvmr8yzjki26Btr1t1zLM5
d+eckvNIXtswtWVwzsS5E+fMnDvbDb1rdczxOdfntZ27c0xtGXxWfIZ8dnxm
nAN0LlAbP239dqqOuR3neHapjjymFsce2uatzZfr/s4ZOk/4TVXYAmgT4PyX
YzDXIl2TdGzmGrxr8drcaXu3ojrWlv2ma01rpq6LLk9xrpm6dvpTddgZaqP6
dpqvc721WXvTZDOgXUBf6JPsqvpom4fepiZsrrS9+k9csiM1zX90TdiUGmba
fjVhh+U52mhpq7VNsvNzfdi5uveKw77WdXXX4rVT1A5R+wC/dbVJqKgJypPN
gHE12jAmG4OyhN+G2jgY5xq8a/HaIGqL6Hqzc40Li8Ne1/V71/G1YdSWURsG
bRm0If0qxX2UymIa1/Bdy/++OuwitQHWFthvnC7JjnGHZDe7S7JT1c5sp2T3
qNb2TBtbwx6Cmdoh8K4/FB5OYeph8Ah6lrag6AG1kXYGHFwb5zyKngOHo4+A
uc0Rpj4SRhjejmcRniP8SXgCjib8GHjab044Fn0cPNYceXjuUfAs+hnX3dHD
a+Nas+Gw2rjmSegT4S3u6e2asNnVdlebXW13d7Eukl2ndp6boTetCRti7X13
TWmM0xb0VfQ8GO7aP/RCb6L9sDbBNWFTrG2xe1muCV2gMzQku1htkLVFXi/Z
EWtP4tyFNiDaS/dqjjTGaWusTbG2xdosd03X0DZZG2WvbZ0cTt31bBd1pb2N
tjXa2ORrIs9sslnxWtq5ais7Aj2yJuxitaU9Cn007FcTduDD4LBkk6tt7vFw
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
L2SiDKXJr5c+Z/U9qw95fcnrQ15f8qbtrF+mTJyjD3l9yT/pWlAm0hqm9pxM
8rumzzB9h7Xk/ueX/tlM+LTVt60+E/WdqP8wfbHps03fbfon0xeaPtr0J6aP
M32d6SNNf2WV6Ap4AP2g9onorrnwg/xqJrS/gXVvWHd9RMHb6Hcy4ZNNn0z6
YtomEz7b9Mum37atM6H11aYPN8P06ahvR31A6gtSn036buqVfC/pM07fcfqF
Gw/L6sPPu37kxmTCp7O+nfPJH6/+6/xtOyV/ivqQ05ecPn317avPOX3P6Zfu
/Ez4dNK3kz7a9NWmjzZ9telXTt9zan276WPOsJ76vMqF38CPMtE2Ns6Fnynb
yIa5qBPr4t1MpO2RCx+DnlPRGu8U3yWV9eEfsnthtGH96+mfTd+M+mjU97r+
FvVdqg/Td9O96+teH3rWgT4a9dW4P/qATPgv0xe7eepvcu9M+Of7LvnDrM3F
HKpzp7OsK59l+wD7grp4Vg1T+8ye1hJzHM5tDKmLuY6TYXBdzHmsxbf4mk2x
Z5N7N31GWLv2jB3a8czZT0EZzK8lDj4h/m3nvknzKXqB/Rh6AWELSfcKvAyv
Ev4avIR+0W9iv43hA/T78Dr6DfiiLuZWcuSxsC7SvgBP1sU5XrsUPq2NMlTa
18Hnrp1Ae3Q7+BD9kWuSvltgMfq72tAd4NvaCCtGF1kG135qIy/v0XszT+Pa
wnu1kSbbEnma1/dQja6Cn9A/Q01LhKmXQklLnGPaJbVRNq/ptSzj8+jn4HHu
7Ym60M/CY3UR5r2bxjjrINMaPmz1XVuifW9rhKlLDWuNMHUZdNCm2HPQGShC
t4VidDtpDR+m+i7tAKtawgetvmf/hiWWHZagf4Af0T94v+ifHYOhV3oOelVd
XMs8zctreq1CKKqPa/5t3rCatP/A6pYIU/8L76Lfsd2g59lmbDvWiXVTF3oe
PFMXYaZ92zZWF+eo34KX6iLs9ZbIw3Oft421RJj6Ba/ZEj5s9V3bRvvWlvgN
/e2W1UbZ9aGr71zvYbFtB77h3G+hoDXy8NzC+nj2fIf67vQZrPddD4vI62tY
BdfSvo/SBy/hK5rpv+B5wl/wmuilrrG51lYbcYapTWPcz9pF1EaaX5ojD899
0fUY9O8wD/0q/Iv+x/Um9EL4C70K3kC/CX80xzmmfa020q52fas2zvmzOdIY
93ptnGuY2jx+Q/8KH9sXQBvu+TxtM7RnQA/kHveDvo5960IPgD51EaZ2DObY
yzDHXgfC9nUxBiuoi/nUsbBeihsC29VFGsdmjtkcqzlGsy9zzOhY0T5tsBq2
RverC22ZLIth+7dEGuO2sc03Rx1ZN2/VRl3/BE/XRp0/AY/Dva5lQiPnNsCv
1kVt6Dz8UhthnVoijXG/Q2d0KyxHr4BmdJPPFPpHfw+4hns9ErrYNjme2S7W
ONfhONcSbcq29A387Rpuu/DRvbbPFccz2sWaaVeO/62N+WrXBNdNfVkhvFsb
fZq6jc9cbYS9DC/BLHgEHvZ812lhmtekLr52TRl9DzyZ6sS6uD+lnQl3pnMW
u3apzQv6Qfvg5ghTz/Ce0T/AXPRjUNASbda2+pXl4zeZldY317dfSGW0bLNr
49wl8Ght5KH+HubURpg+4vQVp18afdX4P3r+r57/w+P/8rju5FqU+3S7b/hy
3qXL4JwsdQ6/6kMSVqH/gqXon/UTiv49G3Er4M9spPktF+eY9m/4Bv21vjv1
6QmfZsO/w736HEW/B5+h74Eh6IH6noQ34M1shB0A76a05jHPsUVh5P15NnxN
zNBHaTbK9pNlyEYZ9WGhLwv9TOiLwj3c3cvdfeH1PeCe7e7Lflrai17tXu2n
pn3pTeve8+4b7zk/kPcS64i8l2cjzr3qz0z7zLuPvXvrrybun2z4ENGXyAZp
7+T++nKFV7yPbOx57zmm/Tcbe9S7L70+NvW1eRhhs7i3b2E+1/0yG74tDDsc
vdAwOFqfudnk0yQf9+o19Vmi7xJ9eujbQ58Q+obQx4p+VNT6kdBvimH6QPEc
0+oHRT8T+qLQB4i+QPRhoS+LSVzrkmz4AV2VC58W+rbQJ+hfyc+FfjH0caGv
i0tJOzkb2jw81zD9qHhNr6XvFf2pGKZetyR8uujbRZ8r+lc5knNeTP6fPyef
lfA7nE/4BakOXvbbqzDq5k/4Ixc+OPTFsSqFqS2zfmT0NaOPF329qPUbo88Z
w7y2fmb0E9M57evfF1bY9rPhE0XfKDejb8lGWvM0L8/RR4p1bl3ru2Z18ptq
3eg7RJ8D+gnQ54C+B/zt9U3QriTagGu+p6V5P+cC9YesX9vNuNbm2dD6pd00
G2G2qU+592mF0dbGETcW+qG3sb3Ad8Q1tA3/KIuy4UtFnyr6TxmS9tf3Gf0s
G/5Y3J9fHyrzfXbha3Rd2/Dv8kU22maubfhz+Zjjj7Lhd0XfLedw7bNhC8K2
hDHoc6EPum/yu6svXv3s6rv3vFyU2bJumw3/w347vwQTU1r9+G6U/Pyal9cw
b/PUh695mpf+ok/KhR9cffx2T36B9eXbOxt1ptbXb69shJlW37ndkl9gr6Xv
4B7JD3BP7nEj+Mb7TvxB2dZrG3G9oZf7xhO+JBt+KfTboU8NfWvoo0NfHfps
0XeLPlD0c6IPD3156KNDvxv6cdHXjj5P9H2izxP9nBinbw59vJhGHxf6utCH
h7489KFiH2Lf0bEk4vSLoR8Q06gtk2UxTB8i5uG5+iKyLP/1s2KZ9NliGS2b
vkgsu75W9FnjPejTR789+qzQd8Wj3PMc6FUS++pbB6v0BdQ26sa0+vrR9/xG
aT9495Z3j/nnssGz2dgj3jj3e3dvefeYfzkb19b3iz54LIM+OvTVsdLfIRtp
XsrGHvGe+zb6rWz42NDXxmvoV7OxJ7170++Pnk7eowrDP/h/fPjkwyfQf3wD
5cMv0FTSXZONfXLOSfsQubea+264N4d7Hrn3kXtuuPeGe/a4d8/YtK+Oe3Ks
TPt4nJf29fEc8zo77WNknuPTPh3uSeTeRO6jMTHtQ+S+QhelfT5OSfsWXZL2
6TDOvYcuTPuEWBbTeO7FjbGHkXnoY1Jfk9PS3g+laf8M93xb0Bh7un2c9gFx
Lw+1e7W1S/t6VENVRexB535z7oP3ftqHxL1G9Pvn3gzu0XBPinPfuoK0D8mZ
FbGXnHvKZdL+He5dNzXtN2fe7iXnnnJe46x0jmndq+TDdM3CtI+JdaevQ/d9
sg7V+ll0DyjD1PpedM8pw/Qzqa/L7mnvDX1K6ify+rQ3hz4t9SPpHh/u9fFM
eezd4R4e7oNhWvfGcI8Mz9EvpmluTHtl6L9Tv5x3pL03XiwPv53u2eHeHfrt
dO8N9+BwnxfTGnZ72qdDH5vmaV7uvzEm7Qd1WNpfxT1a3KvFfaPcy0o9uTH2
kDLMPZ7c68k9x9x7TD+J+lJ0zy/3/lIPb4w9wgzTD6O+LN1DzL3E9LGoX0V9
ROorUp+W+rHUh6W+LPVrqR9J99Ryby39SupH0j2w3AvLPVfce8U9/75Kcfqa
dM8w03iu55h2WLqH7vquLIp706+Wz6DPnn646tNeL+bl3oIbpL1b3AdwWWPs
Cei+eO6j5j5W7qvoXoz64NQXp3s2unejPjD1hWla99JzzzXP0R/lAVx7UlHs
L+O5nmNa83CPRvM0L319up/W/qSdWBT7l4h7mSxKce6nOJS4yUWxn6HXer0x
fHJ6zSfSvib6ANIXkP4th7h3V1Hs//hs2rdkcSqbYzPHYI69HKPp4+u/fsL0
BWbfpO+yKdnoo/QjZh1ad/oRMy/3QtFnqXl6rmmMMw/tpk5P67auhbrvpHtX
6oNTP5vuQWmYWt+bltGwn1LZtQMbldYpXevVn6l731yQ9nvRX6m+Sx9AP9gY
/koHFIX/YffH6Zz2+nHPQvcuXDvtxeOejD+kvsO9L90DqSDtEeQ+PO6B6F6I
1rH7RP6d6t449+pxD0XTuM/QehWxR6R7Rardm9E9Gg1zX6MeFbEnmvsyuceR
YWr3auqa9gKyLD82hh9T+zj7NvfCcc8b97nRJ4W+KdTuffNJeYTpz3U/92or
iv2B9IFqHp57b2PUzXbEnVoUdWQa9xL6MJ1rngOJG18U17LtuDfOl+X/a0OD
ibu4KNrW2+mZ8FmwTnxWrAPv3WdGfxqDSDuhKPa/EffC0ceGcWr3yvm8PMIW
8078FvZ1TJeNd+QSGJyNd+eB2fiWGw0/ZcJGTzs77Qa1XXTsqu3g9WkdW7vA
4Wnd2nVv02qbp42h5xh3QrKLMI02etrqaZOnbZ42hCPTurlr7dpoaqupDxZ9
sWgnum9D+FDRl4p2WAMbwueIvkc8d0RahzcPbbK0zdImS9ssr61t4uVpXV0b
QG0B9XGiHxN96myfbAq0LdDHjH5lXAN2LVi/Ovrx6ZPWnfXxs0uyadC2QbtX
8zQvfaPoE2hAsknQNkH/MROT/zztU7WJ1DZSm0ntIo9LYWptJU+2XKR9Ktmv
6q/mHPQM2IPjQxvCrlGbVW1XD0IPbQibR20ftWHVllWfMvqW0SeLvln0yaJv
Fv3aLM2HDy59cemXZkU+fLzo60WfMPqG0SeMvmHKkx2DdhKXJTsF7Sb04ZRN
dgyGqfUtpd2Hdqmzkl2CNiCGPZLsFuqS3cPUZJehjxh9xehTR986ZcmO4tJk
p6EdhLY0+qAqTHYb2mroY0q/UvoB2jqt4buWrx9O/W7qF1G/m9rkaZunzxt9
3+izRt81+jjU16E+DvV1qA8z/V7pc0ffO/qg0heVfnAMU+tbzHu3DF7bOtDn
0k7JzkDbBG02LLNl/Y9vrIbw7aNPH337eC9e02t5T9rYWEezk22H9i7awmgT
c0Bp+DM6I/lr1H5aP6L6edQHqH4/9dOnr0d98OmLT599hqn19adfUc8xrb5C
9bGkryV9murbVJ93+r7T56q+V/VLaR1ad/ol1eeovkf1K3pXSej/+ik1TO01
zNswfVqah+fq21QfpPoi1cegvgb1GaXvKH1C6RtKH2L6EtNHoH4BXy4JX1z6
5NLv1ispTK3/KX0O6ntQn1j6xnoR/UJJ+JzS95Q+rPRlpY/C2SlO31X6sDKN
PgzNw3P11XVPKoPX1i/g9BSm1lfgsyXhS0ufWvr5ei6Fqeene9Pvqn4TvUe1
vlj1oWiYWl+t+uQ0TB9K+lLSB5m+yPRBpi8yfXrq21P/p367H5D83emvbve2
0Qfor0p/qH7r75781+kTSt9Q2lQtS2g7pQ2VcQVlYVs/Kvm30geWtvja5O/c
EP6ztIXXJn63hsjrQPg55al/Pn35OWeg/9bPS8JXn3MK+ofV/6tzBbsmf3z6
bbsxHz4T9Z2ozzV9r+nzVt+3+kTUN+L/FXXfYbZUZb7HFbp3A326+3RzTnef
7t3dmxwkXJmLjphJhwySc/YK6ISrCCbuNZGzCEiSnHMGyWEYlaSoOOIwkpyR
Gb0ziM4IjOP8Pv0unvvH+zxvVa1aVauqdu29q9b6fjkBuQEvbOsoy93IIfe2
Z457T849xzlnHi8d1yAPI1cjP61nF1s0v5/PzB5D1WfMZ4mji6uLA44LzroX
LymHozr4BLdq4wH4w/RR1VeVA5HXSx9Y8+RcX/pZ6evG2cbd9vBkrgfvp/O9
eelg5Q8mLh6sed/zLjpxje9Vz9fynXrmMvVM62Tv1SerDutelvh44tEsO90z
sZQ9KMsO9I7ds7XEPsn3Townn0jsO1nz5JOJ/ZPvl7jdu+oVat0DvLMfrDqs
u1di8WDV8WjbB9u+3P/t5I95f5/8av+tJ6sN9v26wdrnkzwjXKHa8pPkP07c
k2X3DlZb1WFdbf6bydqGuq9QRtnEecnPT9w3WfPkFyTun6x58m8n7kp+Z2LN
5GslvpP87sQ5yc8drLrMk6vz4Mk6Zo7VbOJTyT+ZWD35GoOVH5ZYbbDmHZf8
2MRWnikM1rOiv0q8a7CeGcn/MrH2YM072rPJxGaeOSR2Sr5jYkHyocQxk1XG
sqXtN5Zn4UcsU7+99h+sZ9tHJX7r/GT61mWqz8bv9AdIfC357YkTUs9LmX4x
sV3KbT9Y2/pYYnCwtrlr8l0SI8kXep4yWfPko4lPJP9fjnnquHeFavuhiVUH
6xh8fLKOmWM1N1jLDkmsMlhl9ky+R+KmrHuzvgzJt070Z1knsV3ybRMDyZdL
7D5Z+2DbY4N1bfzIORqsa2T7yVpH2eUTWyRf6vlt8mUSWyXfMrFs8r7ET5M/
m3gg+YOJbRPbJB5x7SaeybIfut6T3zFY7z6MzeEo9Q7Eu5LlE3d1652JMTne
kXg3wptq3IyxNfqo66tu3I0ylnGrGpNjHI0xPsb1+G3Bq8sb6zfG1T4riWOy
7WMTVya/IrEk+dRgleXi5Zi1jjFA6lSXsULq1g/emCLb0OdU31NeUu5W/Vj9
ZvJbST9Sfer1rddP31ggjkSuRH0e9X3kAeQG1MdRX0d9RPULvWeo+pG+d6rm
yfUtVZdjoO3q1EdVX1VOUG5QfWjtg23ry3qZe1XiK2nbVwerD6y+sJyc3JzW
NU+uDm1Rp7q06ZGRYplimuKiquuSxJcHq85rJuuYOpbHJW5LfmviG8nPSJyT
/FueCSc/crCW3ZI4fbDK3D5Z6yj7TfeIyVpH2c+5RiarjGVnJp5O/lTi5uS3
DFb+pOt9sOY9kfzxxA3JbxysZebJlXHt/cA2B+savMC9LPGF5F90D5usefIv
Jc5KfmbiM8kPT1w7WW3W1uMHqy03J04brDZdN1llLDvBNm07sVLylRPXT1YZ
y04crGU3JHqDVebi5BclVky+aLC2/c3EpwdrHy6frHPqXH4t8cd8xs/Kvee7
iVMy/8LJaoN9P8o5cC7cI90rB8sZzR3NycnN6dmYc+zcekaGA49jjuOL9Ysz
j0M/3yd+uDjr5s2P0RgurjvuOmY8djwGPW78462fuhxL/vutnzHuvDJPtH7y
nATcBPNjKIaLKY8jz4HAW8CZYZ6cy0BZboT5MRXDxZlX55Ot7719xc5/pPXj
x5y3j/YNK59XgGuAA5zn25gTY0+MwTAW4wutb74xKcamGCNgrIAxBMYSnNzG
Gqw6UuNaOArUqS7u8OPbOAVjUHotjAUxJuT4Vua3yVftq3W/3sYOGDdibAwn
Aq8BZ/m1rS5jH2ZHqk5MfW2eH4MyXEx6bPpnW79tbecSmB+zYD961ZdpSWLl
ierv8non312d6i+iP87vjY3tVP8c/WleS/7bTvW/0X/Hsv/oVH+eXq/qwkzD
Tls70yupO7F+47nNJJ8dKL7dOr1atspA8d7WynRvoNZZL9MrZXo6eTexeqaX
9KovV5952Gy9yvvx2DI93atcn7DZiXIycDNwyHPJ8zIsnC6HPJc8xwLXAqcC
twIHBBcExwPXg2VcDRwMynA0cDVwynPLczpwO3A4cDlgwmHD6WM2N1FjQIwF
GRupcUTeGXp36D2n97AcElwSnPffGa53Qt4NeQfpXSQeoGM1N1B8QGN2jN0x
RslYpcuGy33BgcGncWDigOlyYHBhcLBysXJo8GZwtHK1clZwV3BAcEHMjwEY
Lp/Eyn31DHD/6XJ4cHns4hhM15gs45ZuStw8UmOSjE26NnHdSI3pWrktu6XF
RqlroK+WvWekPNk7pa6dp2ud92VZp6/q4gNZqfG595suZwh3yO7J95iuMU7G
Onnmzv/A48D1MD+mYLhyLogX2jiDVxN/9O405TebLk8J/8jGiT2ny+nA7WAM
g7EM2ybfJnFRyl08Uv4Q6yi713T5Rsay7qaJfadrjJixYpclLh+puj46XWMs
1OnYGDt2TTtGd6qvrz7zxp8JY9HuaMv4vY2dM4aOX/fc4XKvcLDwjJvHvbtu
K3tx8ouGy7HCtfLukXIxczJ/K/MvTVwyXI4W/hP3jNeybJW+updcYbzDstUm
/pSrMv1vy9Y1wCdiXa4Wx+yd7d7DrXL1cN2Dzmv7aN+40O0L1wrnin26YLhc
MZwxvDA86UONb77jdF0L5sldE/eO1Pub5ftqPCDHOa/0Dln2senKFzR+unmu
TXV/pK+uUesYS3jPSNX17eHaB9vmprlyuFwprrH+dm/0HTM/pm+4xlgZa2WM
nLFyPhvuofNjXobLQcJFwhHCFbJer+5dqw4Uf3ID/E73qoHiWeIVnt6f79j+
crHhQZ+c/JT+4rPitcpP7S+eK241lh2mHQ423qtlp/UXTxGn+szGu8O5xnjG
ev5y4rMrVn87rJj9O9U/DD/pNazn/uIr/W6myvJXHpnyv5+pHPMZ+1mfP33/
Dkm8oc9Tlm/bX8zdNzB1Mr1Nf837Q6b3SP0v9xdj6bhFxaXD6sbsxmlbZbbc
FZjUb+IPzpbfzjrHLirmJPakOv899e02W2w5ZY7J8l1ni22HSYVNhW+4d/J9
+ouniK8o37e/+Ih4ifL9+ou3uddssaAwv7C/Vp2rth2aeGtx8Uz24JLuFL8E
/2T3Ts3DN/lupj/YKaYHtsffZvoDnZp3hL5omX5/p+Z9NtOnZ3qV5Ksm5vR5
nC32hDKHZ/qM2Vq2Wqd4QfhCq+sL1yne0Cdy/eyyXDF3PzdR/JJ1s2y9TvFK
8ImUxZzBt8AfUpc68IkO0t8RCzBxU9p7YqbHO+XL/q9MH5/pRckX+/5eVOMx
jkt+fKfGbxj/c2Lykzo1nghfZrdOHRM8GONjTuhUGeOD8LtcW6/3F2/quNny
edvGW5k+Zbb82hgkWCQnzNa27dMfFxWTC5vr1sRbOV8nzda+Tib+lOUnz1au
jndk/WNni21mG28uKv6rz57PHB7s6rNVFwYYFhje3QPJH+wvPt3LczX2/Z8S
L41XH3B9wY1xf368xrgb636D8zVe47d+k/z/dWp8/fFztexG57/1N/51p8oY
36X/7avJ/znxaqb/PtNPJn8q8dNMP6e/b/InEj/J9M/nKlfm2daf+V86Vaf+
y8/P1bpPJ/4u0yfM1bb1oTxyvMa/35/8gU6Nn//zHI81cyzWGii+70a9ytce
KB7whzO9TvJ1E5tOFH/XvWqNgeLdGj9+X6fqNJ4eD9cydeLlGu/2r9raqfFt
xrvf26l1jDfHO/hO8ns6NR4eL+Cu5Hd3ii9gfJx1/YbUH/sf5qpt+ujrq68P
v778P0n8PNP7Zvu3DRTj+C+y/V0zfUzyYxMHZXr3TB83UIxkrOStMv2x5Dvi
IWd6l0wfPVDrHJjpLTO9w0Ark+ndelWXOg6eKIYylvLXE/tNFN/QtfNQf/EY
d+wV+xhTGVsZwxjLGEN5z0zv3Kt1bfOATG/da/uS2DnT2/Rantgl01tkevuB
tk+Z3rNXrGSM5EMzvXev2M23Jj6Z6X16lTsmn5ooxjLW8j6JXTO9Waa3GihG
M1bzppnecqDNy/TGmV6afIvElplemuntBto+TBR/Ulsf7i++4+a9Yh/Pl5ko
RjRWtDqWZnqTXqvLNibqu5FLjFPLd6TfYjxav2jjKnm1uLaeb+NCeU24UTj3
uPeWNk+KfEFiIjHeLWfJTs1xwnXCa8d1tyTLJrvlEOEN2ah5W3ju+P4+2NZR
9h38nRyd3XKYcJnwrnD58Ohx7W3S5smX61ZdXDCceerkdeF+4enj7uM9OTy/
Ja5ILOyW/8Q8+Wjz+nH5fZobt1uOP/Pkh3fLycfN95fJ/6pbjj8evyO5drvl
cOFy4SEc6ZbTzzrK/nXijeR/0O7k7++W38a7+7sSizK97cJ6d31lYqxbvhfv
/u9MrNitPihr9FWfCX1TOGu0Udv6OFOT/+PC8kJ+oeW/XFiOSPPelTJrd8sD
yQ25evLVuuXl5N2Ur9otR6d5yq7VLW+ideaSz3bLC8MlZNma3XIqKrNGt+pU
17yXc6rG6mLY4Nbw7a3eV+/YD5mu+MR0Ofgs+1HWeWZheT0Pa9vQl+T+vv+/
7ZluOWnsA9+nvh4P+L+S+f+R6X9PvJdbNvFrfQ30SeBC5WhN/ouF5RzlHv19
4neJDbPsPd3KX0/8z27NW4/jtVveUB7Tf9NXJrFB5v1Zt7a5crc8o/aFx5Lb
8uOOaWKlRK9bDlMeUnWt0y0HqTpXbmUsUwcmgGPmWGH9nN/qVNcnuuWB5OI8
NPlh3fJscnHu7DPlszear93Ebj4z3XJwKmPZrq7xLFuY2DH5Tt1yJHEl8XD+
Ybocl1yXO7jWuuUA5QLdM/le3XKEmiffu1veO27P/bSxWx4u8+QHuB+M1j7Z
lz2cu+Rdfm/XULe2zfvEAWofLsg1cP5IOau4q85KfuZIeaO4rfj8uKn0seO/
Mk//KI4qZa2jvwrHlLrUzS3FOWob6j4vMbmwtnFV8itHyqHFY3VD8utHytHF
1XVp8ktGymnFY8V3xX3FgXX1SIU6VmnLHDvu0O27dQyH0tYFiW19lhPvSP6n
LP9I8o8aQ5D87r5ywH+1W85S7tIvJT+qW05TbtMvJP9i4uuJryXuzbz7WtnL
+8qhbJ2lqX9z/vPMf6yty5X6+W7VwSHqGnLtfLJb9y4u0iO6dQ9T9rLU9Wxf
rbNJ6to48VDmP5y4fWHdO/8u8X+y/K6Fde/itP9Kpu9YWPcuTvn/m+m3Mv1m
4gPJP5j4z4U1T/6hbvl2uXc3ti336GxrmcSmyTfrlpOVm3Vr92r3+CwbSGyZ
fKtu5Z3EFt2ad+fCule+mvhyt3yy2qytn/JZTdmVEgclP7hbzjjXrGv1wG45
drl2N3csu8WswQ3BHcDuwAzBDsHZwkqzDFsEk0AZTANsA4wUrBSMNqw2TDhc
s2PbPDnWGSYCNgKGC24L5psylmG/YW5gb5yQ/MTEOe35wlUYMkPFd9M3wX/+
K6eK13b9svWM6aqp4q3dmPxFjLepYn5gf5yS+ae2On/a+B+2hbuGXYeBhnuG
c4eNh5OGpYZBh8uGeYYzhGtnnhx7CPfhsaFyfnF/YeJh42F6YHtY1zbUrQ5M
PWUswybCGMMaw9TD1rNtnD5cNfsgt46y5uGqWUdZrD6MNfPkWH94dPryeEZy
3VQxSrBKMGawZnBMfjZUzBbsFowZrJnTE98YKS7R74fLC8qrikv0lufCyU/w
TM6zucQZyb85Ugwj6yjLxYpRg1Xz7cSFI8Xswe45O/Gtkfqt5TfWPHNjuBhB
WEGco19tdXCTcpSqe+uU3SpxTuafmzhppO59nKV4SphJ9tG+ndjagiV0WmsT
xgbWBmYidiKGh2vQtYcdhGeDbYNxgxeDG/N84n8PF+fm7XmfbmVfTf6roWL6
YPv8MvkriS8OF0fn7X06se0rRgguCAYRFpG+kvo86uuoz6RzgkWESeRcvZR4
MXHEcHF68IawiTCK8FgwQrBCOOW45czDatmllcVpwmXCtMOxu9e7uMSdye9y
bSS/b6oYdlh2mE7WURb77mbX6lQxE7ETMaGUsQzXD/MI+2ie8TRVTCRsJAwr
LKt/Ga7nn080nhLmEvYS5hX2FQ6VOtWFFXhj8humipuItXh78tumink20eKh
1PX6srUM4wXrBZcP2w8Hxm8Ivx1w+tyrHp4qJqB7lmOBM4X555jIsacwCM1T
lzqsq07MI1wijCqsKvty61Qx2ewTr98Bra3YXg+6FzrGjvVwMbXUYV2sLPvy
0FQxK+2T72aub85v39G4VVhWuE44V3hXWF+YX3hWQpm3l2HS4L7g6GDtyLFg
MHV+3o7hA8vWM1THFmMHaweTE4cTv1LfQM8Yr50qRgxWDI4SFhMuJ1Ynpszb
HBlsGYwlZTA7lbEMawYjCysLAwvv6h/bNm0L5xPHxzw59ieuDdYO5if2p3N/
/VQxM10DmKbYpphgOFiHtnlybCyMIawhjC6sLkwfbB8MIiwiTB9sH8xS3NB5
5tBUMU/Ns22sIVzRpe3Y/8VwMbWcA4wh3CCMIKwgZdWpLutYhi2EaaTMj5fk
Gkv8mb46Q+Wj2m253C8Th/SKp42TjamOrY7heEgbZ23sNebKgW2ctnHVOPz7
NmYudu4biU07+Tx2ipePuY+9v2HimNliRh7axnEb+40n+74s63SKj++ZF9Y6
hr1nYZj/2P+cDtwOmAHYAU+1cd+Yfth+GIm4iDiA5s3nc8XLx87nEOES8cwW
Gx8D37NcY8qNLX+wjcPHoDmojSN/so0jV8YyY/Vx+fGjMel5IPDkz28M+SWN
f/ueTrWZPwDvfdv2vI4fgWPhwMYdxgLmPDiscYOxhDkFuAU+07jEHAvKfKFx
hHEesR9xL3EyPRPCSsTEPLuNo58fG9/Gzcvnx8bP1TzbPqBxke3D99o4+u+1
cfeY7tjumP3Y/Z9fVF4FnGDs4EfauHzHAqeAw4HL4cjGPcac2btxHLAf+hYX
mxjz/tTW1kMbh1mbH23j9NWFfcA58anGXcZOxnF0Tp1LnEbnEt8ew985ta/Y
+Rj69hnnH/uf44XrBTcfKx8zn3cAp2eLNi7cOHCcni3buHFjwzF9cHGMOzc2
nV/mzf5ixvMHPNdY05jW2NY/axxn3Gvztmjj0ndt49B/0TjQuORcKf/QuNMY
5eYZs27sOm4P7g7G0I5tnDsWkbJY1Tjd1sHkwebZs42Lf7FxqTlauFowkHZo
4+qNk8exxLbEUMVS1TZ17NXG1vMmcC1w5HDl4FbiZmJgzrMwx+scOPbmYXjg
cuBs4lxyVPhM+Czwk9iWa9S1aZuXLSpXBWcFL8rli2qenCuFw4HLgZOFd2W+
7vFieNoGZwh3CMY31jdGBlYGpie2J+eDNth37h9ODW4NThduF04J21A3t4vP
DpYqZqzPkHPqmnGtONfz2x4vpqh9mM/Ha1vmOVfYVBhLzpnPHpYtZq7PIEYt
Vi3GF9YXDv0+jQuCY4Jfbmy+MfrG91uGvY4Zoszx+U9zXOL7+d59fGExvo2F
NyYeD4FTc+vmYeRCxP/GSsBMMN4fPx07AEMAD4Cngk+CA4SXCBPfPtkXbBVM
AWwBnBScE5zYC8aL+Yr9yvnD/YOTgr2CG6uMZViz7n38E5wZ7oHecWCn4YB5
98EJZJu2hbOiLvPk6rRtrAyMFvugbdyjHJPaqC6sNkwxdeKwrTpejDesNwyY
5xtHANfg6vx3vGq0HJZveyu5LNeeKc8kBhkOF6YWttalKXvJaHkhuSM3bd5L
ZXkicd5s07aw5q4ZrW2omxsTww3LDSMOFw7zDPsM8wv7yzsd8+Te9eDS9caL
QYczh1Fnnhx77sbUfcNoOTK5Mm9LfutoOVW5VTlGuUY5SLlIcefsg21j03Ha
8M5gsmOzcwLg7ONAYNt4p4Hji7vrXQcmBTYFhgWWBccS1xLmBPYELvHR48Uk
xib2zgHbGLPYuwj+xIcG8vuy+R55nniYcFVwUNRlnlydnCiHNk4GDgaOM9Y0
ZjJ2MoYulu55c8X91RYuHUx6bZLz7GDkm4cJjA2MKY0bbBkXD6a+Mr67eIAw
7n2H8SfZB9vG4rAvhzSuh33idPGZ8Vnh63KssI8xih0z72Tso33zroYXgYtq
bq44H7jVONS4v1jDPAhcDBhAWECcCObJsYswgbGBMZmxmZ2rXRqnwznzzggX
GWfYuyR1OafOpTqti92M8awO28bCxhy2DxgjWCOYRThFHApcCpjU+CGcFtwW
53vfOVdtwSLBJNGmv15c768xbPBJOCC0WVuxTewbdjMGsn207SvGiyltH1wL
3FwYO66JvixbNvG1zPv64vru5ELgjPAdKudi4LAw78cp+8dse/1cX5O94jDh
OOG+YFnhLmExYXJjc+NRjabsJvor9Yopgi2C44cFiHGDdYMbiOunLmwoDBl1
YpS/zTHHOpdjm2Oam4dphW010isWGH7VRLb1Sqf44POMo/FiKmErYaZjp2Ne
YV9hQmFDYXJhc8m1SVvMw98aSH3v0x+rV0wibCIcc2xzDk4uztHm4Zx/BzlR
DlLvJjk5uTmHGvcSowyrbIXGiRpu3KiBXvU1G2pcqU7jRimLlbl840zZtmPs
2NoHvBnfLS97Zz1Xfdje5j71NS4VVlV/40It3zhTyzQOlRx76p2NE7VM4zBh
Qukr19+4SxhLWEvOnXPmXDmHlmEzYTgpg/GO644jiRupLmwnzCl1TiffMMdy
mcYrUxa3HUfSOnIsd0xJ8zAVsRVxbbBw8NpfSFvHsv5Lc/XOlut0w169y+Vj
vTLLDm++1kMSzw3UPH7WTRL7Jj/N+z7vFjN9U/KjBsr3eljileQ3D5RPdruJ
ehe6TfOj8sl+Pvm13mdm/Q28g23va7f1rn6i3ifqH/hP4+WDvSb53yf26pVP
d7Xl6j/ewb1y7HLt7tR8v/yypw7UPXyPXjlxuXE5efmB+Xm5gTmDuYNXmqh3
n655vDa+X/d+2ziwV/7cOzL9K+97e/XOnBv3vb16l65PIhftu3rVVxFzGXv5
N3PFdfUOHOsVA9a7ce/8fzVeDC59Abzjxh7DhPXu2zt2blnOW+/eXxiv/peY
cnj8+lRim2GW6WuJwY/Fv1zKvDBXjFms2XkGtO/A1LWetnu/3ysfr3PLUctV
q08SN+66veqrpI8Ed+76veo7oY8BVto8Q22u+jho4zyzdq76HHITr9arvoj6
OGDZYqzp+6CPE3fvu3vV90mfTu5izl59Pf038Bvfb3v/EfgJXmm/97Cj+Ah+
2X5fYkFxunC7cCzyknG+mCfnKuN54ZrhUeRpxDDDMsMYxRr910W1jrJ8g59x
L+3Uf3b+F9zQ/zFeDFzcWx4bbkKOQl5GnNX3jRdjFCfNtpSxzDb1weEO4gHS
N4cjiCuIg4iLCCdMHdbFWvvnReWZ4YW8Z7Zy7hmOSPPsu32yL9pgmTZqmzKO
BfckB6VjgkFmG+rGTeR70pfJf3j+GgxFLEUMMNwrTiFuIc4j7iOOSa5JTiVu
Jf/9sMlwz/wHxEjDSsOExYa1rnWUVYfvOm4iHiffefOM2vH674cry7HJtcmZ
xJ3kv57/lP5L+s9nW7hpuGq2+fqietbiO/sRfYky/dqicjhxOWG4apO2YHlZ
F1cNk00dnEfcRxyfXJ+/W1R1quvR2VrmP6f/mspw0vmP7b81t597J/YxJph7
qD5ZXG7fmK2+WraF5YbBa5t8bLxEHH1cfbhpOGqcIrwhcmw1HhLzOKu4qziw
eKM4qHijeAS5OnmkuLE4ArkC1c19xAloG5hstqFubhLLuOUeXlRleOi46zgY
uRi/OF79m/y/wqbzbIxLjqPQMzLrcs9x0KnDMu45nkdlOO3Uqa57FtW+6U/o
eYJ9xAc8t/VfOnaufCH66mC8/Wf7bGiztvqMYHhieeL4YhHLcTxxe83j7eOL
8p+Pp5DXjxvQfzSeSE4/ZSzjMpz3rS0uR5++cPq8cfNx8OkLh5GHlYfBhsWm
Tx2XH4efvnacgbahbj7FycXlHvSMhrdyyeKaJ+erdGy51zxDc4xx+XABcUux
huU+kz6L5mmbZySejWgjfxuXG2cmH6Rz75w7164By7jj9OdTxr7j/mHcacPS
/HfaPLE+p3Pis7m3Hp3vrh0Tn0n+/SWpJ7HaUNo5VFxA3ENcRtxFORYiRqN5
P8Gby3/fDyT2Sn1nZvqbiWu9u+3Wf7dbEu+fqf9wGHpYepx0/HNnjdY6yl7v
/Xzys0fLkcKVwtHH1bd8YgUOvyw7L3Fzyt7i/XT29e7EGQuy3QXlHbxkrBx/
XH/6rGqDfdeX1b6dkbimW/vIwcnFyWHMZXxd8xByCHIJ/iB1P51YJ8di3cRd
ye/EI0o+OlRlr2neQ+vgSmJRYihiKW7kv2qi17wxjh22JK6lY3jPkmqDfT9z
QdV19Vg5FNX5wyW1D7a9XuKO5LfjgSQfsU8pu05iUcounikv30mLy4HGhXZX
8xTyDHIZcqJxo3Fecl8+lWPxZGKnLNu5eQ25Ho9oXsLTs+y0xBU5VlcmFmXZ
iollsmxZ9WXZ8YkLvbtPdLNsOjGQZctxM2bZiYmLs+ySbj17fyaxwVA9g188
VnWqq2+m2vIu25ipNv3Xwvwu1g8i617dLSYjzuJLadvLiWdS9w/1J0nZ3Wfq
3DhGjo1zhGN5/+JiJGIlPj1abdbWXbgUs+zoxeX85P68onksRxNjY8VoxFnk
0dy4bRvr8cXZ2odzU9c5iRuzbzd1a13ey4WtjqM5GhO/TpnfjNa5d424NlwD
GJv20b5hO+Lw4vzikuJC3pC2XI8Bk7YMDBV3EosTkxKbElcXpxfTFLf07ObN
fEfinYlTErvms7mK/tXOZaZPTbyR/M3RYqhiqfLkbdXqwsnEVFUn7iQ2JqYl
juUJHJeJ17Lub0eL6WsfbBsnVV24rVu0Oq8z9h2jRl8A7+SxBxIn5Fo/cUFx
MnE0OVN5UHEyb2g5N+pNbZ58o8W17k2J4xdUHY9nH76f2MGzocSJY7WP9u31
0fIscTVNZdn0TB0bbtE/jdYxcmzto31zjDdsXidluzN1LU8lOjN1TZ/ajqlj
6Riun3w9Hqgsm5ipz+ZtiaGh+ow6VrvwFffXMftQpj84Vtzp1XlGl9Q9wGf/
rAXlAOUC5U3lWuWg5KLEaMVqdW5wS3FonSM5likmrXkYua4p1xLW6J+nrvcm
ZlPX3Ext+wNjxbxerXmsNkgsmalj9OXkO/H/ch5nf78yVvPkvxqttrrnuNdo
831Lqg32/ewFVde7E5MzVad7j3vKkc2jehSHauLl1PXKaHlXbxwrBywX7K1L
6hpxbZy0oJinrkHXHpaqY2MdZR0j91Zt1Db3WAxs16RrEbt3ZqzuSe5Fy8/U
tYktvLRdoy8uKDYAhsar2e5zmf4ZbkHO3f5D9WzVZ9Jn0TNWn00sbsxgn9Gn
ss6TibWNvfXO1VjixEezrY15WrPsocS0sbP6kLiXJu7LveL+bi17MDE1VGVW
zLKxxKNZ9jeJR7PsEQyE7NOFC6rPPA8qR6u+9I82DyynLLfsYanjc2nLZokX
sDBS1736K2XZZjPldOV25WjlatXGw1P2o8tW2zlr3/bU8so+0ryznLi2Ydtc
rM/O1j7cP1rbUPfmM+Vx5XblbOVuvd53e+LhtOWRbh2bOxMfmaljZNm1+m91
q4xtcd1yEtumZ9XcERvO1TPrJ3zmEy/kmLy4pMYY8EJwQBh78N3M+1u8krRr
Vf0sUtfOiQ+lrg/PlGdiwXg5OLg4OHi5eHl9uY8fsa/6byXfKnGR77bE7fqO
deu3gHPuXPtNwLurDutyRfvtZB9s228oz/qwoTGiPfMzBsQxcmyMDeEZ5l7m
WOYVvjttuwvjJOt+KHF5tn1Z4h596rp17Zgndw3Z14f0L5upfeY45jrmWOZa
dmy4Mzg3HCNttU3b0uaLR6uN2nan/mTJH0tsk2XbJr47WvPk283UtfpAYslQ
XbO8G1weHB5cHt9O2QsSa6bsWjN1r74xcdyCumefPFq/CfwWuDSxRvZl9cRI
yi5MjGTZcOKBLHsw8fPkM7kXbZ84eKY8z4+NlROZB/k5/TXbeKKDMr3mWNWp
rtGZctR6/+ydEJ/uZJZNaH/W+1KiP9HnHYO+jd1yFnMXcxxzHfvux1X+SPsN
sJLfconB1L0g8aO06ZnEbvqU6bc2Wm3Utsu6dazuT0wO1THz29VvBr8V/Ib1
2+pU57Rbv7HWGqs22Pcx1+Tiev/FecuPPjtW9zT3shWcv8y7aHE5k7mTOdW9
b/aOjR+YY/vs9ltgmcTKY9UG+z40U2OUuJY5mI1d+t5YebR5prmr/Tbi3vWf
ym+kH6StT+OiYM+0z9pjiZWH6jN3acpcsricueu2Y4dN/eF2DFdp+2Dbw34P
Z93HMX5S51XuP0vqnudedxF2y1j9RvTbsD/xfI7VbM71DomP+0yP1Xeq79I1
ZqotFywux7Q2PTta/1H8N9l7ptrmGnLtaON/A+tcjlI=
            "]], 
           Polygon3DBox[CompressedData["
1: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
xWD2AO09dqyxzpakZ1Q9Sb+HbAWyrj7G2utbA8rcCxqkWTt1D1UGlAXHtF8C
JRQr7f6an6nv6kiLh39XZ13y/qiYLsUVIXsH2VTFEtKGDOBrZPP8O4Fh5B8K
7lOfl7E3SnvcVLuX/sH9nvJ//p1q32msz2Zr2LJsFkurmNqD1Otfj/eN53c2
cMvjUM9BO/m4e0v9Tz3yg98oZy8o7O/OIfgg+cLBFf8O5CT0hOJXFUOM7Sce
x/sC9e6iM4H2Mdi6ova6b+y7UIthjwP7KK+qx5d/i85S0NfHe3doeX5XALsU
66F7S39+m+LNhyY/4hpoKrbSwCf+Xui+qorie8Ba90GuhCagk5hg8c6Ke96P
nce6a4EeJP2AvjVwP5vmipz6/kRnPu23FL+Zw+K8kj3WK5fHfS91/9bXofZd
QDDBvrvQ9xc9wFvYOEbey6kWa7LT9xPaV4ST3o70gVH2Pum92kX9K3vc7iJ+
L85hProAOOtxMAegfaIsnv4E6Vn0PYX2ctRhOHjAeKlOncbAp+i+V/ObxwBf
Vaydj7tJ0Nvkv6O5yueQjooN5XdxUM/vWnXnWUT+M92Fuh/x21D7tkHfOPTw
vepRxY3qGxbNzfATPH67H/hY7yX20tLsuyvFm9/OZvfyvwnYfqRvjaCx7t8K
QhtjvwkYpnhixWdhpwN2J2I/l77T8PkiP3wBff+gMxAoRZ4+2Pgr1M6dOn8W
gs/s55oz4LTOp+h9gOxvvVvgnM4+eobIrsBfBpd0vkL2IbLr8Hs0l7F254Fv
DJqAVchO+p6ilOyCq7TlCrik94a2DYe/6z4R+SaG+PutM9sJUETrDGmdoHlp
SxmfG/S8ikbZOUznsf/p3IZeO/d1nPb9ks5dOn9NR3cOeXPJH+VnYfVbcZ8z
Y+BjQQ2/85QPaJufKar6var8JNr76wzwjc+tOqf2Rt4HhCJr5evQGGyO1TtH
H1UBM33ef+T9q7lrrPfvBe9fjc/x3rfq4/k+7+lc/q5i4XXuSbD1SmvTYT1H
UDLB1qZR/vz0HGf7WiJ/wNvk6wyKJ9i6pjXshI+JSn4vPTjZ9lAbQCH0Kvua
uA/sDzV/8nRkmaCvkv4aeMbYa6k7begg2joYZPL3W+vzcH6P0LqNbDqyLNF2
RtBZ4TbPKNL9YJ/5GvuP+6hq+jurd7eWxxiUZpzk9z1FdY+HVIzu85pf423u
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
6DviPfpOxGND5kVbzMxq8H/iSjXl
            "]]},
          Annotation[#, "Charting`Private`Tag$220724#1"]& ]],
        Lighting->"Neutral"]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0zd0D1AUB+ArUfJXEiVREiV/JVEiURcWFhaWZGHRjrIo57CwsLCwqClK
oiRKoiRKoiRK4jhEi0GixMLCwsKinOMLw3feHd5w3+/el1yzpXhzr4h4zdtE
xL/a+YjZ6nWU8YRfTHdhJQdo4wf5KRHL2UcL30imRpSwhya+kNM7Yim7aOAT
WX0iFrODOj6Q0TdiIduooYtEv4j5bKKKV6SmRcxlAxU85Q9Fel9NO+85RBcv
OcwRSimjnAqOcozjnKCSKk5yitOcoZoaznKO81ygljouconLXKGeBq5yjevc
oJEmbnKL29yhmRbuco/7PKCVNp7RzUPe0MFBVlHIb+9vp5z1zCGFDnlVspF5
pNEp12q2soB0uuVfy3YWkclHc6pnJ0vI5rN5NrKbYnL5au7N7GUZeXy3H63s
ZwUF/LRHjyllbU+t73fMUnc6XzBTPYMiCnv2jgKmMZUpTCafPCYxkQmMJ0ku
4xjLGEaTQzajGMkIhpNFJsMYyhAGk0E6gxjIAPqjxRBriDHEFmIKsYQYwrPj
eeL/f/oLj+Zq7g==
        "],
        VertexColors->None]}, 
      {GrayLevel[0.5], Line3DBox[CompressedData["
1:eJwl1ElzFlUUBuATJg0qKAiSOajltNAfgIoCziRI0ICEjCTgSOYEnECxSpIw
KQt1gwMySlkuHH6BCjstQIIkIQOuAEUQIiSAzy0X7/f0uV/fru7b9/TMmvqS
VRkRUelnzW0RfZkRa3mSb/MPrucZbuOEiREf8jru5338ivdyH+/heBknH6jH
ciszuIVjuId3cjdv5y7ewYNcxBF+wtkzIoZZd0PECulVD7KHQ3wgK6L6xohO
nuQZNtwUcZqNLM6OmDjJ/XE3x+e45mTPykP8hsU3R0zNjfiB6/jgLRHneYzn
eJR/s5uVeRHNUyIq2MhyNvE7nufZVE/1TPkRF7n+1oj35JK8b+wyN3CEHRxl
J6+wi1e5kde4iTEtYjMzOFYOOl7DuwvMYRfbp7sG29jBFm5gKwfZywH2Mb8w
osDa5rGQj8njskRekBdlqf9eYhnL+CyXciGf5KN8gnP4FOfyac7jM+manM8i
WSYl6nJWyMtpTP0Ky/lqGudrrGRVev+s5HOs5vOsYSmXczFr0z2zjiukyvEq
NkijLFc3s1XqHLel89jOlVydnpUtrGUTa1jPaq5M68HFLGYpF3AuH+IczuY8
PsJsTmcWZ/Cwte625of4O4/wOH9jD4+yl93s47F0nuSYn2V+LrOZxxzmM5c9
zjnh/OPsZzObZNReuEu9mu1ywD5p489s5U9s4Y9s5r/217C8K+9IqfF1vGDP
/iON8pe9fM6e/pYNLOMRPfCnXjjMs5zFtfxe70xhEb/WU7/qrWX8hRV8mOO4
Sw/u1Ys7uY+ZnM/rWcR6PXtK7w7p5Q5W8X4O6PV+qZVOvX/RN+GCfCwfSYks
lANpv3KmFMpOdQFDrvl+bVZf4SZe5ZfM99+O1BP8Iq0zP0/rzs/Se+Cn6b1y
e3rPHDV3RDaqL7OLl9jJYZ6WUzIkg/KW8QG+yX6+wRN8nb2Z/393/wOtOdJ8

        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl1FdszWEYwOEXMWq21To2xUGCWBFBakRitPQYLWprL9zVHpGYUftGjAvj
zkUlRkSMazOpCG1EgoSQmBcacVDbc+Li1yffaXN6/t/7tgUVq+ZUNYmIlr7s
SES8zYqo5kfuZgOPslXriAscxPMczHouZR2X8CEX8QHLeZ/zOEBJnXXuz3ss
ZS3L+IsnOLFzRCMPcmWbiOd8zeFdIiraRgxjJQ/yDRu4tp3PynVMdY1o0z7i
HGvYopv37BCxnI94iansiLzuEde5k4U5EWk+ZWWPiE25fhc3cgXXczk38BrT
vMov/MR1HSO+qVHVeRHze0bs4QLuZTn3cSF/+Zkkf7I/f/Ov9vv+IucDPKSm
+RHNVeu1LRzYK+IPN3dy1gu9VIF769U7og97sy+TKtEU5xSnchancTancw6L
OJfFLOUMlnEmR2TmzGEcwpEcylEcztEcyTEcxXEczUKO4QSO4ySOZ4I5zGce
OzPBes/w2LPV8QnXsJqruZc/PHNffmc//mSSa7lGX93VF23XVn12lwXubDU/
ms0nM7rMVSxnFRfzsVk3mPlYbuMVu5DNYp6zI0W8yHo7s4SFbMYzdqrGbrVk
EVuwmFV274MdfGUn93EZh/CF3X1mhytZobTd/qzjOqYf7uEoUyrR3cz9805m
HrydmRNvZebE7zzCRh7mdE3Tzcy8eYOT2UUJnXbO56nMvfMkc3mC2Zn38bf9
Vfud0/yg99rl/I47+Sbr//+Ff+eVl5w=
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl01toiGEYB/BnchqGHZ0PO7DmMIfWrG0WpaRcLBdoCZMLhXFhDksuqE0M
pRRxoSVyIZkbGyW5JFMTF8LYGFl2Mhvl8Fsu/v2+5/vevt7veZ8vc8e+DVUJ
EfFVaqdE9CZGXGDiuIjbXMwX3MZWbufYqRHXOZrXOJINHMGr3CIV8sz6TXzK
zfzDy/zNK1xt/S/Wc9f4iDZ28B0/cfm0iJ0TIs7wI+vZyR5WJ0WUT49Imhhx
izc5ZoZ3Toqo5Es2snxyRPrMiGYeZ1lyxABfc+esiMMpEff5k80cYhN/8B4H
2ccDqdZI9mx7Zg4Pst+zan7nIQ4Mv5M18kdyrYs0PZLTcm74Ot1e5YlnR5k3
J+Ivj2SopU3a3fvADrazU3L0LXNuxHxmMZfZzOM8LmQuFzOP+VzAJVzEZcxn
AZeykMtZxAIWs5ClLGIZi7mKpUxjElOYwgym87m9tdpnC19xH0+wirUc8m1Z
3M/HvrlfD2p5jDXSq09z1FXs0r9uPb/DPdzI3axgqzPrcnZFPMq7zjSJjUzm
et5y5i3OvoIlTGCD2bhhRkZxHfeanS9m6L1ZquNWLuJbM/dGKmW79JnNXikz
jz1cyW6W8htL2MVifuZ5OSuD+nKKa2WNPFKv4kOu5IPhvrKJK5gqyXJJPYkX
h/vMAf9iv5xU97GOPYn//9N/as6KwQ==
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl00tIVFEcwOH/KDI6Y2Nl75cGERIRhARJET0I3BqEC4tIKKg0NxGIKUTh
psxoUauSkOixiMgiigIX7RQp6AGRVJSl0YCaJja9Pmnx45szM+feOefcWVnf
tOtoIiL6dHFhRDoVcYfr+Ir7+ZL1TC+KuMEiXmeS11jAbubzKhPsYvAy/5p/
hTuMp7mdOXbwUDriA7+wcnHEweKI8xzmOX7lOI/NihjjcdYsichkIm7zFguX
umaJ38jX7GHN7IiHeqxTyyK2zon4wUEeWB7RPDfip36puTTihBLzIipWROQx
qQ5dUKf3CudHtKhNa8qsbYGxznrdypP6pCHjIX7mML+pwvpXlZvH1VzLCk74
LOt7YxzlJL9zipOc5hRznOZv5mbubf4f5jPhOkkWMM0iljDDUpZywLwB3+/n
CzawjUd4euZ+1lTGRvZaawOfcsLaR9Wi3cbj9qicTczaw1F7d5eNrOVzezti
j58xyyq28p4zyLCaN51NvzOqZR/ruJl57HaWXcpXtbNtcNaH9d4z8E7tzn+Q
e1Wnt56ZN9qnPcp6pkZU5Xn6yE6d0aR9aOdObVOv8RY+4SY+4kY+4AbeZyV7
uJ4ZFeuScSr1/3/yD/rWfPs=
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl0t9rjXEcwPHP2Wbs7NiZX2MYc+2CNKuVkl9pSem4ORfcEFt+zJWi4UiT
G4b8A66UrbZoSQm5odRSarSIktg569AcndYcm9dy8e71fDtPnef5fJ4NR85k
ehIR8VwPVkZsTkaM8yjf8xgbVkUMMsX7THKAB7iwPmI/F3Afq9nJBPdy1n17
WOFu/mU/T/j9C/Pc2ux/UhFt7OJt5nmTkyzx3OKIg6s9Q0NEhmkOc5B1ayJ2
pSPGNK4R50xjRNPaiKfs444lER/1WcdbInqXRvzRnHqXReRUvTxikfp1R7Ur
Iup1UZe1cX1EVVPEJd1wnWOfvum7c54TLDDPIif5kz/4i1Ms8zenWeYMp1nh
DGdZYcL851jDqlbPxlqmmGQj03zt/lfue8k3HOUYTzPHkmdv5hRb2cMX65y9
41Ve4FkVzaDF+RQLZlQ0myF2M8MuZvnWDAtm2s7zHDbjOg4xzU4O2MGoXWTZ
wTm7umtX91jD0Ek77dbE/P75ya4/6JCy89e+jXc6rKwKvp2vuqXrKnv/ayzx
Cndqu545b+MTdvAx2/mIbRzhFj7kpuT/7/4fCUZ4Qg==
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl0s1L03EcwPHP1qNbU9eTZWX5T1R06VIREUG6yy4drEyjlC5KQtIDQQRl
JBj0BEJ1KclLp6BDl4IsuiVDKiorNl21Fp2GvUaHNy++23fs9/t8v+1d/R19
iYh4qumWiO5URNO6iEfMcII5ptMRB7mcB7iU+7mY+5jkXi7Yv4dhPcIT/MLv
/Mwit66P6FkRMco5Xuc8/3AwE1HlaeZaI7KNEZOcYGpDxK6miMMs8Ak7myNa
NkY8486s7/XX+iOHVkYMq6bkqogzOq8lqz2ermlMDWsiGjXVFnGOibX26Kyu
bvYbjvAiL6ukonWZc/zJH/zNCsd4i6O8yxsc503e4x3e14Jq1klzjy3+k4vY
wGXMMM0sm/nK/pf2v+Bb9nCQR+vPyqpnb2WF7eznc+9U8Y4lDajDumwGbTzJ
0iZr83nMXnbytdnNmuEUS9xWnyUnzTjF3XxQPws+5BtnkecOBsed1W0lVHOO
verWN+faxRlnPa28cnrnThTcjUPMq+QOzWq7z97zii6pag4X+IvDLHOIRQ7w
K0/xE/v4gcc5w2Ms8Ejq/z3/BxPcdFM=
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl0stLlFEYwOG3DLGZ8dJ0z67/QkH+BdUyUCfITVCRo5IDQhgZDTUZRRBO
TSl0o8CEAlHBNrWYjaCboFaJdKFoxIyMoIgg6YkWP54Pzgffd95zdh3NNXev
iIhJzW2M6EhEpDdFjLKBYzzM+mREhik2czUPMsFB9rDEHK+zm0V2cYAn+YmL
bNoc0ZmKuMWvLPEbf/FMbcRPnuWhLf6hzneZ5jhHmWyM2FcfcZxzfMrWhohn
Kqt/q/U1EW/1Qe3bIvLpiGVVrY04p4Kq19mPihpUYr19Kq+CqjZE1KiggR0R
l1jkZd7gVd7kNQ6xyDss8T6H+JC3Ocx7HOEDPuYjTqja3Fft9H3WsI4pTlkr
e6/MGU7zJTt4mid4nj/8ayOzfL494ou9XGAvW7hkr/PK/tMsPpvDEy5wjJ1s
5QuzqpjdHp7ibvZx3EyT3M8Rs54x8wyb+MeZ3HUmw1zJZed2wPNvtuuYKs7z
CGedcb/nNmb02l14pTa1qOKuvdNe92SWV3RR380jzyX2cZG9nGcPPzLH9+zi
G2YT/+/zXzbCcEQ=
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl0k9oz3Ecx/GX8ifz22abzTDkzI0yV4dxU2xTXKRJ83darQm15l9KKTbM
/yiWLWvbQZTDjlZS/hSKiEzZMhd/UnjI4dmjz/f0+b4/7yVb967fMyXJoN7M
TXYXJVXVyRArOMAyDnITZ89KGlnMDSzhRbbxPFvZzRae4T6OcZwfOcFV85Lm
QlLLnTzHL+zmV/7kgeLkOw9x4/yksiQZZj+HOMDCgqSuNHmh17rr3DA7qa5J
Rri6LFmrH87vebA86VQqkhnq0DHNnJOUqksXVKhMyvVoUXKEU6uSZYuT6Zyl
4zrtfIJdPMmzPMUenuZldvMae3iDl3iTV9nL6+zjLd5hP4c5zHu8zxGOcJQP
+YQ7uJ/b2clv7ljDZj5w5wn/cJjtrOekf/yk5n8uTD6bQT+3cR2b2MDHZjRm
VivYxj4znMbbLHANe8141KwbWcvf3uKKt+jRH2/1S3W+fWeTtuiVN32uRi31
pi/twFNtVv2//bBbb7XSfrzicj7jUXVo0l4e5Djb+Ymt/MAWvuOuov/7+xd+
0nFM
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl0j9IlHEYwPHHpT+XZ3rq2Xld6daSNOiQBRER1CIilJFQJNggeS2KKCia
glPQkqU1CC5FSoIXRVHDDUFFtFRLEAgGHmZBLpUOfaDhy4ffu7zv+zy/xu7r
HfmyiHikb3URA4mIhn0RL5nlU9ZxmTV8wsus3RPRxSp2sppzHOZ9DnKG/Zzm
AEv8wTX+5LFMxLXyiFb2cYa/eJeb3OZoMuIvx3ix3nsqIi4wzQKXmMxGnNkb
0cOvfMbzlRGZ/RFFnqqKOKs/zqscSUVMqKw6YpfGNaVETUSlbuuekrXepxua
0s50xOGDEbvZxHKmdFN3nG9xlhm2MM2jrOdx5niCDTykOT10nucCH/AxF1lg
gc/5gkUW+Y7dzPMSh7nh21JcZ469fHXArP3DJIeYV8k/Zp17WcpFfDeDRV5l
O9+azYoZveEaWzjIBTPcwZOcN9vXZtzBZm7ZwawdTGvbjn7rtGebvKIufbbL
STvsZLs+2v17nVObVtypL2p2Lz7xCD9wXCPacC+HWGJ/4v89/QcN62Wm
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl0j1I1GEcwPGfEATna55v6XVxYENBmYENkSDSUg5iQRoJWYKL4NFmOJRR
LW4thVIQ3JCDUdCJUeRwgYMhNVRLIEkvIKISNkgpfcThy+ee447///k9T+Za
9vxQUURMqrouYjoR0cea4oheVrKHVXzCET7iMMd5gytc5zJ/s3V/xFBJxGlm
OcENjvMPt3m7NGKLN/mXo7xc7zllEZdYyzxfsKwh4mx5xAAX+YrdFRGzeqd7
qYhz+yK+6ZduVfpOe5IRJbqjMZVWRST1UI9VUW2fuqsxJWoimg76HY+znCeY
5EnW8hQb2Mo025hhOxt3/q+cpqwn+ZzPmGeer/mGBRb4nv3M8gpHuOpdklxh
moOcTUeseefvyqrTetmeUhxkv37a89MDEVfZwT52cd5Mlsyoidd5jMOcMru9
bGfOTOfM9gJb+M/sJ8z+gXI+3+emM9rQGetV9uqHs/viTD+qS0esP7kDC7qo
Ti25U1/V4n58ZjM/8CjneZhzPMQCM3zLFGdYx5eJ3fv5H68aYl8=
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl0l1ozXEcx/HPLpTGzjYOztmDZUVxIaO4UCsthF2spebCwiyXrF2PPD+U
uHBDeSjaxI2kTnnKzaFdeIgbqYnSopZGnsoNL7l49zrf+p/+v4f/ooF9vXtr
koyqXEru1yZ72Dwr2cUF7GeZYzzIqxzhZR7gF37nZ37lFL+xs5wMz04u8Scv
8hfTlBypS/6Yj3KHuangPSxxO8us8A4bmpON9Uk9N3NC73XPvK3Bf1uSx9zQ
mHTrt/kTD81JTmjG3KROx3RahWJS1AVdUeM8+9RxPV+YnORZFeYnHW3ez1Us
cg1LXMsWdrKN69jOLi7mei7997xu6rb5Fius8AEfssoqn3GQQ9zJEU5bQ5G7
WbGuSWvdzyH2cMpe3mlQk63JR3u9wQF284kzmHAWVX7gCg7zurOq4Rhnsouj
znLcmW7lanbovLM/p2vu4Qx/uKtp9atPr9zlYXfYyy164c7fuPs+9uiU35v4
1jf1WivNL7mcT7mM41zCKtv5iK28W/v/e/wLmoBfAQ==
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl0l9ojXEcx/HPKGX+HnY0Z2eTVhRJ5MIVqUVpK6NE6cQxcYW165GkTSmK
FGFCbXGjpY78S+n4cyGiRFEUS5HmArnzWi7evZ7nnOc55/n+fs/C6oHN+xuS
DKnUnNxrTPayPC2pspkVljjMI7zKfg7xMH/yF3/wD9fNTw5OT9ayj5f4l5NL
ybEZSQMHWGXrzGQnW1hhmbc5yhpvsdCSdM7yXPzEu9w+2z3l5DE3FJIufdE3
7WtNBuckU+aax/FUFjSoUxPHTebSBV1RU9F8Oq4XbckJnlZhXrJqQVLkap7z
2Rvfn+U7nud7XuQ1tbuuw3WLuJ5LJu7TDY06v8kaa7zPB6xzB3u4lb3cxX6O
+80ie1jzP2Oe9RB72c3vZvmoPRoz51czX+dudvGJtfhgjer8zBXs44g1m8Q1
vGwtH1nTTVzJZTpjzU/qtz0aV0Xb9NoeHrWXW9ipl/b6qbq1UQP2v4NvvUOv
tNz5cy7lMy5mne18yDbeafz/3v0DJjBc4A==
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl0t9rzXEcx/GXHxc6fm+2HLMdovyYpPwB00pTayu7EdkFM+1mZO1e6cQs
aopciPlZuFAu6JDIj9YosqaUQjZNSYmLhSsPuXj2+H4uzqfzfb+/K/ce7Dgw
I8mwSkuTJ4Wkl6vmJj2sZxdX8BaP8jqP8CrLnOZv/uQ0v/MXm4vJoXnJFvZz
mH84e5l75iczOcAuNixI9rDE+7zDe7zL6rqkdWFSxTb2cIIPuGtR8lSjOrY8
aV+cTOmbylXJCRWq/VbHderf85KkqPO6opqapE6Det2QnOQYhzjO03zLs3zH
c3zPC/zIi7ypNbVJSylp5DZuYrNuq+Jc4UM+4gg72c0d7OOUO+ZwkrXsZsX9
X/zHw+zjPn3yDkXn/ezUpHe8Vu+ZLdzNdo6awQczaWQv17OfN8xqFpt4yQyf
meV2buZGnTHzIV02/0H+sKOv2qnPdvjGDl+qTeucx+z6uTrUqgH738oymzju
m3qlDc4vuJYjXM3Hhf/f3V8DFF/a
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl0j1I1HEcx/FPUENcjz5lppdGSyFkQ0NNQiBFJj0ghIFD1IXLNRyBS6DE
ESQFQlFDkBoKTdEUR8gR0VBDQwgFQY9CQbQUVCRCL2l48+L3h/vz/32/13Xm
wonyqiS3dLY16SokD3iF93mZs6zyN//yJ5fZtzW5uC45yFFO8w+nuMQ1bcnE
+qTEzg3ezx2c5yM+Zo0t25KBjUkTj3GEnznP05uS9vbkOY9sTo5ryfk7qw3J
NRUak0Zd1a8Oz3hDzU1Jh6Y0p9bmpKjrelVMJrnAm3zD23zLO3zHu/zAaX7k
LB+quyU5vD3Zy37uX1E11Z0HOcSjLPEUK/zit2u5yC0ssea9X33bGCs8p0++
vc35PIe16I5z7jXMQ3zi7q/NoM737GaZ98xo2cxmuNq5lzPOz8yyrj3apUkz
n9APu/mmIZ3USzsbs7sB9umFHT9V/8quVbX3Xo7zAC9xH0fZwwp3s8ydHGGx
8P9/9Q91UlrU
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl0j9IlHEcx/FPS0SW/dW0TLu0CEuohoacokAK7OhoiQIhqAOHbjkCF8Gg
UDiiIsPFIYmEpmgKCZEIghqaEscwi4SWwEEUrl7S8OZ1z8Pdj+f5fq9ws1K6
synJuG61JIcbktcc5SvWWGe2Jatcd73COvtak7vuX+AQp/iXW/YnY9uTzayx
zEKj89nJWb7lO85w34GkuCNp4hUOcomzvLEz+ahPGm1LSruSZf3R2O7ksRr3
OEMPNa7mvUm7nmtarU3Jo/akjYf0RF9dd258ZoFP2cVnPMoJHuMJTWnR9Uu+
UU9zcqkjOc1+nmWJ53mdl1nmNVb5y2+28gdbWOaM85Y92wirvK3vnn1eA1o6
6PvebZoDvMj33nnBDOb4jT2s8IXZ1M2ql5OcM7siT7Jba+bcxZpZ39dvO/mp
q1q0sy92NsIi+/TZbj+of2PHemDf53iPvRzmGQ7xFKs8zgqPcJAdDf//T/8A
Mz5WJA==
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl0k0ow3Ecx/HPTtIwz2bMmtpmeThwcLCTh1qI2lCYkovVil2W2sVBqa2W
p5CLy0iRgxwcFmvJQRzckIuayMpFOSg1bzm8e/X71//X//f7/u0z8745g6Q1
CpmlJqN0hqt4gjE8wgTm0VAkfeMP6y/Mo7dWWuB5H0YxiSqWCi1SHAswgUF0
lUgZTGEaz9FSJ/lMkhlHMISvmMapUslaL91gDP1lUo4+KV4urZOpgndphbao
plJyN7Av2mmPDslaxTl5bsMNbMRNdOA2unAH3dhKScqyPsBTaquWBmxSBw5h
F/qxFwM4jEGcwAi+844RA3jMPpOYwhzf8kSzNMj6hW++p2kao2fOlLSyD/bg
OPbjJWd+5A5cGEQnhnGfu8lzVx7cxQx3l6JmclCCO16mD2bwRqOUZUZ3zOqa
vNTE+pZZXtEDc734myt10xJrDy5iJ0axHSPYgmF0Gv//n1+LNVLX
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl0k0ow3Ecx/HPHBxsmMcwm0iMOIiDg12Mww7L8jCHGQ0Hq0Uuc1ixm6II
JwdcJivPSnkY1g4OcnKQ5KKIXJ2mHbzl8O7V99/+v/6/32/Vo1O9kwZJyxQq
kxqM0hmu4Aku4B4uocqlLJP0w5yNbuYIunAOdzCDMTTkSjkVrIMhrM2TgmjH
FCYwiddosUh9+SyPAxjCD0zisFmyVUr32FMgeSnD/I2LhdIamYukK6tUjFZa
pXWyFEs1tE1DNimOftzFEdzHAB7iGB7hOB7jKTWWSC0Up7e/9/CS2kr5liqp
A/uxG/3owSD6MIxf/NaEfjzg/RfWnMEJdOM73/hEARqkV/YSYx8+7MIEe3xg
rxf4jHYM4iZnkeZsNlDMDtxiTnFmCWqiOkpzvjac54yj9MldOHnmRQ/dcVez
3JULO+mWO76hR+73HJ3koChzO0awFcPYjNNYb/z/3/wC/S9Rtw==
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl0k0ow3Ecx/HPODjMPE8eZsthaZORh+JgF3HYYZkYLqPd/GtTLhxWuCmh
OOHgpKw8lNXKw/J0cJDTDkKLaOLiLFp5y+Hdq2/9/v9+/9/vXx+eHIiaJC3R
VJXUbJbOcB2PcBUTuIh7uIKmaim/UPphLkA/cwx9OIc7mMNtzLNI5hregxF0
FkkGuvAKL9FRKwWLJRuOYhSzGMF3vMCxEtbZpFvsL5WG6ZO+aLmM/ZK1XLLT
Gm2QrUJy23kOnRSnEPMujuM+hrEJW9CNbejBVjqkJDVamSlO2b/n8ZQ6KtmL
Q+rGIezDEAbQwCfW5Fj/gBbmEB4wZ3jnDE6gH9/Y6z2FaYRe+JYMBclbJw1i
L6b41jRncIKP6EIDtziTb86oEzcxxZklqYEctMAZz9MHd/BKAXrmbm64o1n0
YQ9dc7fndMe9HmMaE+ilLooxt+M0esz//8svdI9R2g==
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl0jtIQmEchvG3yyBpdpesLEUQyegCYbQYRNTQUAlluRi5Jegc0VBL1NIg
FEhEZ4kaiiAhKpJuuHShwalACtoamqOQHml4+PkdD4fz/b/jmksE4yWSVind
KG2aJZNdqrBIpViOv1w34RjrJRzFZTzAAu5hWaVkaZKSGEePVYphO97hLTqb
pVCV5MAwJvATb3C2mv9bpCdcx+ka6Yu+aaNWSpGtTso4JDu6aYt2yFkv+Vq5
hh3owU70Yg/6sBe70I/dxTWd0Fnx3gapjw7pkvw2aaJNCuAUjmAEgxjDN+4p
8JxXtLKO4DHrPM9awHkM0wvv9kgzNE559mDw/iEcwEkcxgx7zLFnN0bRhTHc
ZRY/zKYftzHDrE7JS05aY6YrZDDfRfxg9oP8DuI7Z/LA2WRpiAJ0zdleUI7z
TOMzHuE97mMWDbzCFJ5j0vz/XfwBDgxMcQ==
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl0k0ow2EAx/GflrJmNq/NME0rKS8hJZe5KAfJy8HYZeQia3MWDhwclBxW
1A6yG8nQFqHkdQ5ectiJjAMnBzcl4vvP4dun5/k/+2/P88w9Eu4LZUmap6RD
WrZI5lLJkiuZMBt/mDdjD+MZ7MJZ3MAcq2R3SotoxQiGsT5PusJjvMBzdJdJ
PpvkQj9O4Due4bCd5+XSHS7gYL70QV+0VCCNVfBuXCVnoeShFfpkPooxY65I
qnNJ1diANdiEtdiCcdaYcBN3qdGYpwQdGJ8pllppi95Yl8BL8pZIA5VSJwaw
H4P4wrNf1j2ijXEAdxhneNckjqOfHviuWxqiXsqwhxi/24ftuMceb9hzEtPo
wVGswiCucSbfnFEbNtM+Z7ZNbnLQHGc7Ra+c/TN10xN3k+KOprEDvXTK3R5R
mvtM4j3G8RrXMYUxPMEoHmLE8v+/+AOur1B4
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl0k0ogwEcx/GfWonNPPOWGZaVcqNIzWk7KoWnJWWlrXbzmnKRE8XNaYVW
W60U0kZtESKvc/CSgwvCLnJwo6TEtxy+fZ49T8+25/9/GsKj5kiBpDnKVkuL
VqnYKdlskgUN7MMZ7MV5TKGlRFrHInTUSAtoxyiOYbNdusBDPMNT9LikwVJp
At9wHN/xBMMG12ulGww4pCB90C9Fy6QEucqlgzrJjU0Uoy8+x/Ebk/iDK6h6
aRUtuIGFmMYMtVZI7RTh3C62VEpeStEr5zJ4Tr4qqd8tdWIIAziMea4JH9HA
EG5x3zPfNYVDGKQHfuuaBsikPP+tC+95ljjHJnqxB/24zbNeMYMs3mEjRnCZ
mXwyozZcwh1mtkkectIss52mBHOexBd24Oe4G5/YUY6dHZOPOmifHWfpln2n
8RLXMIdJPMIY7mHU+v9e/AFtRlKO
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl0k8og3Ecx/HPDivMzPMYMY+hHeTmslZzmqM42JKUlabcECmX5eSym5PD
tEytFJJZbVEr8t8BuzmMwkUOToiUvJfDu9fv9zz1bM/393TGZsLTNkkJKjZL
aw7JaJHctZIDnWhHA0dwCcOYwF20O6VtrEHTIy2jC1dwFnvqpCs8wnM8Q1+r
NO6S5vEV5/ANT3GinvuWVMJhQ4rSB8nkmbROVoN02CZ1YDel6Jt9Gn8wg7+4
gTavtIl23MEqzGI15jBPAdYBt1SgIiXZBxt5P3phnccLCjVJo+1SP8bwjmvv
3C+hjf0DGhjDHNcfeVYcpzBK9/zWLY1RhJ75j4NY5p3SrCMYxCHsw33e+4ZZ
eCtzQAsncZXZfDIrPybxgNntkY889MWcTVxk1gv0xFmUaaAiZ3XC2cUxhL3U
xdqPBc4+S9d8B1t4iRk8xpTj//v4A/XUUYE=
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl0k8og2EAx/HfdthlM+w1jZm1IgdRorVQdnKw5mCUg1ZIyoGo1W5ODuTu
YPlzeCN/illtp0VhNQfz70BNcnN0wEXxlcO3z/M82/tu7/O8gYm5oVmLpGXK
e6Qtu+Sqk9wOyYFOtKELR3EJY7iCx2irkA7Rjka9tI4JbHVKC9iBV1jEFq80
Vik14Tgm8B0vcaqK9QbpHlcxXi19ksUlrdGMj3vjDgUM6Yx5M7bRNn0zN/EH
d9HaKO2jDfuwxHo3PmAY+ylDWQrxnVCNlKM8dbq5hrL0xmd5LFGkVpr0S4+M
P1i/RSvzETSZxzCDr9zjjuIUYf7Mb9yQh3EBh2mQXvgvA/jEM6UYR7Hrbw17
MM3zF9iLIyyhH+Pow2lMsVdf7F0Q2+mEvdwjLxm0yJ4naZP9n8cyZxNmHMUy
Z3bBGZ5SLwUpx9mn6Zr34ACLaOI5btj/349fB4BQhA==
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl0k8og3Ecx/EPDivbDBsZm79ZWkILy7+iFEsRjXLQagcXRVErubssR3Lg
OkqUfyUXoWWyy/xbVkhuyoHDOHo/Obx7Pc/T8/f7e2rCc2OzOZKiFC+TtsyS
0ym5LZIdS9GKNjShHSdxGYMYxQM0WaU9tKCjXNrACDYWSAvowyTeYEOFNGWT
6jGMEfzGK5wu5LhLesAVDBVJP5RbLK3TjJt74zbV2qUL9j14iV6MYxMm0IdJ
bMcUduEj9mEG+/EZBzBA+ZXSKXZgp4N3wTNsLZF66YQ+jGP4ideYxTvMq5Im
MMZ+EI/xnWvvKUSjdGu8F43TCL3x7CF8xUF8Mr6R7TRu4jC2GedgNx4yhwQz
2ccUVmMI15jVF7NbxV/0YzMdMdMdcpGDsszfgouswTy9sEZpClCGtTtnLZew
B/3kYbsF69CLu/wbMfP/f/IHovVQBQ==
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl0b8rxGEcwPGPUd35cVw4jpQf6RJSGFiURUopKYMupyxioK78AxY2dQwM
Zlkw2SS5cgt1rhT/A4PB4lWGd6++z/B8n+fz9K7vLG3XRURBDR0RmUREnkdc
5QGXechrppIRHZmIEtM8Y5HDDRF7HGeFzxzqjFhrjBhggUV+84mbTda7Iqpc
bY7Y0K/qU/bUVjbiglcabIl48J3jI0dY5jgrnOQLp/nGWb5zjh+s2uOYrzxl
jedc5AQXOMMb/y87UztXmGaeJWf8cuZRnvDWHS6VVVo/7pvkvjvv6tNMaprX
u5ndm92dpjSmPms59rCfGXazlW2J/3f4A77KNhI=
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl0b8rhHEcwPGPxSB3h8vl7giDH0n5kXIGGa6kbCZlOhIlZzFc90cwSF0G
C4vEdIuymOQK+VEo/4OB0eBVhnev53nq+T7fz/fpX91ZKjdFxJpS2Yh8a0SJ
e1zhAa+YSETUmWYuF1FjhsessJCMeOItH3jPkXzERiqiyi9W+MM7brZFDHVH
vHGlPWJdv2rpsKa2eyJOWOYZ6xpNW9/9OBuc4gMLfOEs31nkJ5+9s89HHvKV
R1zgGOc5zUvfvbGXczaY5TIzLLFmj9/2PMFhXZjhVBkl9WPeZu6aeUsfzmTO
s0UWde0Mq85uhpMacD3KPg4yz152sqv1/z/8AdHYNkI=
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl0C1LQ1EYwPFHDJa5zRccexFcEhHBFwRXTIJYbYLFBVEQBcEw/AYGNYgw
DBYtIppWBhaTONiGKDI/hcFFwd8w/Pndezncc85TLB+s7/dFxJbS2YhCIqLM
M27ygnUmByNqHGU+F1FlhtessJSMeOMLW2xyOh+xk4o45jcr7PKVu2nr1dFp
IWJ7KOK3l+f+YWfRjQ7GI+54yEfWNTcS0fC+yBZLfOcyO2xac8JXnrPNS37w
imuc5SqXev+177N979lgjhvMsMyqM/448zyn9OAOt8oopa77DvDInff0ZSZt
rejTzJ7MsKYFzajo2yQLnOAYs4n/+f8B2E84lQ==
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl0L8rxHEYwPFHGQyHOyU/7m44Fl1SymRUtxqMSgolyo9ShkuZTAY/SifD
ZUBKYmG5UlJKd8V1i/gbLCYTXjK8ez19h+/n83lyMysTy00RMa2unoj+RMQC
DznLXU7xgBW2t0bcspOZ3ogjdvOYRY62RTT4xBc+czDtn+0RG/xijXPJiCoX
2dCbdjIR86mI77/MzR0RKZ1qNRtxwTVec503LLLCTd5zi4/cZpV7rLPEAvMc
4zDPnVNxzgkfeMka05zkvjt9uGOeJV65+5nGzWUm1aJP7/zxziWVze92UVdB
r3Z1Z3e3GtGQ+nwbYJa5xP/efwGyNjpX
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl0L8rhHEcwPGPwaAOzz2D/DrluoEukWxuUMofcJuUpJuOTkpJl5hMFpQy
me6klCxueUpJWViwyP9gMdm8yvDu9TzP8Hy/n8/4+la10RURyxociijlIuq8
YI0nXOU5Mya9ER0OsDAc0eIB5/oimpznB985M+If/RFTrHOfv3zlRhIxMRrx
xbV8xKa604hUbW0XIm64wzvu8p5NZjzkI4/4zGO+8JQLLLHCMhc5y2tnZM5s
8Ykpq0y4wjN3+Xa3Mou6ctdL5dWjH3MFG2ar6c3sFd+W+GknD3bU0Z7nW05r
UmPei7n//f4BBUIwbg==
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl0L9LAnEYx/GPS4Nd2tUg/kgQaQhEkHDLQRBamhS3IBJuOn/goDgcUZOT
iwZCky6ighAtttwUgkst1ub/0O5i76PhzQu+w93zPIlKo1j3SSrTXVgaGpKL
5pH0jiGMR6QJPmI2IDl4hT/4jZmoZAWlNNr4gDv8wuqxdBGTtnhvSjU6OJH2
vB1imBbUOpPesINLdNDFJ/zALq6xh584wDyeYw5TWMBLnPMPl+9PcIWnWEIT
b/GZWX6ZLYVJmjLriG54G6KffNRgN4s27J5j12tP7y7c6JXa3GeGTRyjjS9o
Yd/4v+cf6qYwFA==
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl0C1LQ2EYgOFnK4Yd52fwaw5RDMIQDBrE5RWL6B9YWJpTLGIYQ5NpVkFQ
tjK0iQhaTlEE04ra/AE2u8VLDDcX54T3fZ9nrrq31chExI5qkxGXScQTJwYj
UhY4PxXRYZE9HnM1H9HkBj/4zpVpZwxFLLPOFn/Y5+5wxNJMxCerIxENDYy6
tBCRMMsxFnWnI98PbDLlCZ95yle2uc5ZrnGRZZbYdfa9u66YsscXjnObZ97w
5U1tfrPEBV17a0eb/p0zp6z2zVbTm9nLZq38qUe7utWhPd3wgF3WeZH87/MX
hlQvEA==
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl0KuKAnEYhvFXBDGMRzZ4PoCyYUGQhdWkXbAo3oAG0+qCxTSIpm1ThQFF
i2DbIKxlihaTZWebF+AFiMGwD2x4+M0BZr7/l+8OWwOPpDb149LCkA4YD0gO
ZrCQkFaYww1OsRKUTKzhL7r4mpQ+QrzHG07wgWcchKWXlHTBXkQakj8qedJS
AL34hD5MYJG+yeTewRke8RPfMIZlzGIVn7GOJVzz7R3/WqKDQWyigR20mOHK
TEVM04oZ59TgmYVeunOePtmc7Yczn6hOLjvZs6MvGnO9xRGu8R1t43+Pf10/
LWo=
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwl0KtKg3Ecx+GvMDC4gwcM2zxsQREtIsKwCUZBweAFmJY2BL0A0RtYVBgo
swiCwWBdMVm0qGAyewFiEHzA8OHhPfC+/9+vedDd64wk2VW7mlwWk0fWSsmQ
81yoJQM2ecNTbpWTDz7znW9cryeHFc/5zRP+8oXdce/pU+2J5FjlyaQwm0xz
lHWOscFlDXXmepVTXGGVa2xwg0vs+9bdTHLOB15xyAp3WOI+e/795SyLnNPA
2S607V6PBf2Yo62+mV7N+qRNtXRvN7c6spdrdtgv/u/tD9mvK8o=
        "],
        VertexColors->None], 
       Line3DBox[{6511, 3239, 6603, 3362, 6598, 3355, 6593, 3360, 6694, 3492, 
        6690, 3498, 6788, 3652, 6876, 3793, 6873, 3800, 6965, 3954, 7044, 
        4095, 7122, 4209, 7212, 4322, 4457, 4470, 4623, 7429, 4630, 7432, 
        4636, 7436, 4641, 7439, 4646, 7444, 4652, 7450, 4659, 7457, 4666, 
        7465, 4510, 7344, 4506, 7352, 4361, 7240, 4358, 7247, 4235, 7142, 
        4234, 7148, 4135, 4127, 7062, 4120, 3995, 3986, 3845, 3834, 3689, 
        3678, 3532, 6714, 3393, 3384, 3252, 3245, 6517, 3237, 6511},
        VertexColors->None], 
       Line3DBox[{6512, 3240, 6604, 3363, 6599, 3356, 6594, 3361, 6695, 3503, 
        6793, 3647, 6789, 3653, 6877, 3794, 6874, 3801, 6966, 3955, 7045, 
        4096, 7123, 4210, 7213, 4323, 4458, 7312, 4464, 4475, 4631, 7433, 
        4637, 7437, 4642, 7440, 4647, 7445, 4653, 7451, 4660, 7458, 4503, 
        7338, 4499, 7345, 4507, 7353, 4362, 7241, 4359, 7248, 4236, 7143, 
        4128, 4121, 3996, 3987, 6984, 3977, 3835, 6897, 3690, 3679, 3533, 
        6715, 3394, 3385, 6613, 3377, 3246, 3238, 6512},
        VertexColors->None], 
       Line3DBox[{6600, 3367, 6700, 3499, 6696, 3504, 6794, 3648, 6790, 3654, 
        6878, 3805, 6970, 3949, 6967, 3956, 7046, 4097, 7124, 4211, 7214, 
        4324, 4459, 7313, 4465, 4476, 4632, 7434, 4638, 7438, 4643, 7441, 
        4648, 7446, 4654, 7452, 4661, 7459, 4504, 7339, 4500, 7346, 4508, 
        7354, 4363, 7242, 4360, 7249, 4237, 7144, 4129, 4122, 3997, 3988, 
        6985, 3978, 3836, 3826, 3680, 6810, 3534, 3524, 3386, 3378, 6610, 
        3370, 6605, 3364, 6600},
        VertexColors->None], 
       Line3DBox[{6601, 3368, 6701, 3500, 6697, 3505, 6795, 3649, 6791, 3655, 
        6879, 3806, 6971, 3950, 6968, 3957, 7047, 4098, 7125, 4212, 4319, 
        4328, 4466, 7314, 4471, 7317, 4477, 4486, 4644, 7442, 4649, 7447, 
        4655, 7453, 4498, 7333, 4495, 7340, 4501, 7347, 4356, 7236, 4354, 
        7243, 4232, 7140, 4123, 4116, 3989, 3979, 3837, 3827, 3681, 6811, 
        3535, 3525, 3387, 3379, 6611, 3371, 6606, 3365, 6601},
        VertexColors->None], 
       Line3DBox[{6602, 3369, 6702, 3501, 6698, 3506, 6796, 3650, 6792, 3656, 
        6880, 3807, 6972, 3951, 6969, 3958, 7048, 4099, 7126, 4213, 4320, 
        4329, 4467, 7315, 4472, 7318, 4478, 7321, 4482, 7325, 4487, 7329, 
        4491, 7334, 4496, 7341, 4502, 7348, 4357, 7237, 4355, 7244, 4233, 
        7141, 4124, 4117, 3990, 3980, 3838, 3828, 3682, 3672, 3526, 6713, 
        3388, 3380, 6612, 3372, 6607, 3366, 6602},
        VertexColors->None], 
       Line3DBox[{6608, 3375, 6707, 3508, 6703, 3502, 6699, 3507, 6797, 3660, 
        6884, 3802, 6881, 3808, 6973, 3960, 7050, 4094, 7049, 4100, 4208, 
        4215, 7215, 4330, 4468, 7316, 4473, 7319, 4479, 7322, 4483, 7326, 
        4488, 7330, 4492, 7335, 4497, 7342, 4353, 7232, 4351, 7238, 4230, 
        7138, 4118, 4112, 3981, 3972, 3829, 6896, 3683, 3673, 3527, 3519, 
        3381, 3373, 6608},
        VertexColors->None], 
       Line3DBox[{6609, 3376, 6708, 3509, 6704, 3512, 6801, 3657, 6798, 3661, 
        6885, 3803, 6882, 3809, 6974, 3961, 7051, 4102, 7127, 4216, 4325, 
        4334, 4474, 7320, 4480, 7323, 4484, 7327, 4489, 7331, 4493, 7336, 
        4349, 7228, 4346, 7233, 4352, 7239, 4231, 7139, 4119, 4113, 3982, 
        3973, 3830, 3821, 3674, 6808, 3528, 3520, 3382, 3374, 6609},
        VertexColors->None], 
       Line3DBox[{6705, 3513, 6802, 3658, 6799, 3662, 6886, 3804, 6883, 3810, 
        6975, 3962, 7052, 4103, 7128, 4217, 4326, 7216, 4331, 4338, 4481, 
        7324, 4485, 7328, 4490, 7332, 4494, 7337, 4350, 7229, 4347, 7234, 
        4228, 7136, 4114, 7061, 3983, 3974, 3831, 3822, 3675, 6809, 3529, 
        3521, 6712, 3515, 6709, 3510, 6705},
        VertexColors->None], 
       Line3DBox[{6706, 3514, 6803, 3659, 6800, 3663, 6887, 3813, 6977, 3959, 
        6976, 3963, 7053, 4104, 7129, 4218, 4327, 7217, 4332, 7218, 4335, 
        7220, 4339, 7223, 4342, 7226, 4344, 7230, 4348, 7235, 4229, 7137, 
        4115, 4110, 3975, 3969, 3823, 6894, 3676, 3669, 3522, 3516, 6710, 
        3511, 6706},
        VertexColors->None], 
       Line3DBox[{6711, 3518, 6806, 3664, 6804, 3666, 6890, 3811, 6888, 3814, 
        6978, 3965, 7055, 4101, 7054, 4105, 4214, 4221, 4333, 7219, 4336, 
        7221, 4340, 7224, 4343, 7227, 4345, 7231, 4227, 7135, 4111, 7060, 
        3976, 3970, 3824, 6895, 3677, 3670, 3523, 3517, 6711},
        VertexColors->None], 
       Line3DBox[{6805, 3667, 6891, 3812, 6889, 3815, 6979, 3966, 7056, 4106, 
        4219, 4223, 4337, 7222, 4341, 7225, 4226, 7132, 4225, 7134, 4109, 
        7059, 3971, 6983, 3825, 3819, 3671, 3668, 6807, 3665, 6805},
        VertexColors->None], 
       Line3DBox[{6892, 3817, 6981, 3964, 6980, 3967, 7057, 4107, 4220, 7130, 
        4222, 7131, 4224, 7133, 4108, 7058, 3968, 6982, 3820, 3818, 6893, 
        3816, 6892},
        VertexColors->None], 
       Line3DBox[{7691, 5051, 7738, 5179, 7783, 5312, 5429, 5441, 5561, 7915, 
        5568, 7918, 5578, 7927, 5588, 7940, 5463, 7847, 5333, 7795, 5216, 
        5202, 5075, 5065, 7701, 5059, 7697, 5053, 7693, 5048, 7691},
        VertexColors->None], 
       Line3DBox[{7692, 5052, 7739, 5180, 7784, 5313, 5430, 5442, 5562, 7916, 
        5569, 7919, 5579, 7928, 5589, 7941, 5464, 7848, 5334, 7796, 5217, 
        5203, 5076, 5066, 7702, 5060, 7698, 5054, 7694, 5049, 7692},
        VertexColors->None], 
       Line3DBox[{7695, 5057, 7741, 5177, 7740, 5181, 5308, 5314, 5435, 5447, 
        5570, 7920, 5580, 7929, 5590, 7942, 5465, 7849, 5335, 7797, 5218, 
        5204, 5077, 5067, 7703, 5061, 7699, 5055, 7695},
        VertexColors->None], 
       Line3DBox[{7696, 5058, 7742, 5184, 7785, 5315, 5436, 5448, 5571, 7921, 
        5581, 7930, 5591, 7943, 5466, 7850, 5336, 7798, 5219, 5205, 7754, 
        5195, 5068, 5062, 7700, 5056, 7696},
        VertexColors->None], 
       Line3DBox[{7743, 5185, 7786, 5316, 5437, 5449, 5572, 7922, 5582, 7931, 
        5457, 7839, 5455, 7851, 5337, 5325, 5206, 5196, 7750, 5187, 7745, 
        5182, 7743},
        VertexColors->None], 
       Line3DBox[{7744, 5186, 7787, 5317, 5438, 5450, 5573, 7923, 5583, 7932, 
        5458, 7840, 5456, 7852, 5338, 5326, 5207, 5197, 7751, 5188, 7746, 
        5183, 7744},
        VertexColors->None], 
       Line3DBox[{7747, 5192, 7788, 5319, 5443, 7835, 5451, 7841, 5327, 7793, 
        5208, 5198, 7752, 5189, 7747},
        VertexColors->None], 
       Line3DBox[{7748, 5193, 7789, 5320, 5444, 7836, 5452, 7842, 5328, 7794, 
        5209, 5199, 7753, 5190, 7748},
        VertexColors->None], 
       Line3DBox[{7749, 5194, 7790, 5321, 5445, 7837, 5453, 7843, 5329, 5323, 
        5200, 5191, 7749},
        VertexColors->None], 
       Line3DBox[{7791, 5322, 5446, 7838, 5454, 7844, 5330, 5324, 7792, 5318, 
        7791},
        VertexColors->None]}, {}, {}}},
    VertexColors->{
      Opacity[3.0937136786449724`*^-17, 
       RGBColor[0.16791, 4.511540382829477*^-18, 0.301671]], 
      Opacity[3.031860858004413*^-17, 
       RGBColor[0.16791, 4.421340859829658*^-18, 0.301671]], 
      Opacity[2.926008549474082*^-17, 
       RGBColor[0.16791, 4.2669772004364976`*^-18, 0.301671]], 
      Opacity[2.848238315493962*^-17, 
       RGBColor[0.16791, 4.153565428168973*^-18, 0.301671]], 
      Opacity[2.2608801934254855`*^-17, 
       RGBColor[0.16791, 3.2970253077349927`*^-18, 0.301671]], 
      Opacity[2.0590709472618244`*^-17, 
       RGBColor[0.16791, 3.0027283370810984`*^-18, 0.301671]], 
      Opacity[1.1905210115337886`*^-17, 
       RGBColor[0.16791, 1.736128219368441*^-18, 0.301671]], 
      Opacity[4.6032920599210277`*^-10, 
       RGBColor[
       0.16791000015235497`, 6.712947667280003*^-11, 0.3016710003317431]], 
      Opacity[3.5524683953383808`*^-9, 
       RGBColor[
       0.16791000117575905`, 5.180539083149514*^-10, 0.30167100256013896`]], 
      Opacity[2.1971356173897995`*^-8, 
       RGBColor[
       0.16791000727185096`, 3.2040670514630993`*^-9, 0.30167101583398304`]], 
      
      Opacity[1.1242662493041237`*^-7, 
       RGBColor[
       0.16791003720979508`, 1.6395093766432087`*^-8, 0.3016710810219112]], 
      Opacity[4.763605009176714*^-7, 
       RGBColor[
       0.16791015766084444`, 6.946730886926335*^-8, 0.3016713432962451]], 
      Opacity[1.6727280558405905`*^-6, 
       RGBColor[
       0.16791055362213556`, 2.439327280190331*^-7, 0.30167220547622986`]], 
      Opacity[4.872703979376442*^-6, 
       RGBColor[
       0.16791161271688698`, 7.105829129656013*^-7, 0.30167451158623876`]], 
      Opacity[0.000011788681335774337`, 
       RGBColor[
       0.16791390169514622`, 1.71913491134541*^-6, 0.30167949568767716`]], 
      Opacity[0.00002371723474261305, 
       RGBColor[
       0.16791784968369589`, 3.458667266106247*^-6, 0.3016880921762324]], 
      Opacity[0.00003973414754483965, 
       RGBColor[
       0.16792315079491926`, 5.794402127877733*^-6, 0.3016996350014936]], 
      Opacity[0.000055511621835806504`, 
       RGBColor[
       0.16792837265927435`, 8.095219843947942*^-6, 0.301711005271848]], 
      Opacity[0.0000647639369462283, 
       RGBColor[
       0.1679314348943055, 9.44447829483387*^-6, 0.30171767308966657`]], 
      Opacity[0.00006317892059370463, 
       RGBColor[
       0.16793091030207732`, 9.213336501357118*^-6, 0.3017165308241739]], 
      Opacity[0.00005159066714806184, 
       RGBColor[
       0.16792707494246972`, 7.523429844921511*^-6, 0.30170817957782214`]], 
      Opacity[0.00003529179710434681, 
       RGBColor[
       0.1679216805119709, 5.14657736163298*^-6, 0.30169643355590187`]], 
      Opacity[0.000020233565469233193`, 
       RGBColor[
       0.16791669669506992`, 2.9506462842111386`*^-6, 0.3016855816184122]], 
      Opacity[9.72301661875756*^-6, 
       RGBColor[
       0.1679132180229211, 1.4179005129414496`*^-6, 0.301678007035827]], 
      Opacity[3.915154592077245*^-6, 
       RGBColor[
       0.16791129579714928`, 5.709441752513183*^-7, 0.3016738215141011]], 
      Opacity[1.3204211014320187`*^-6, 
       RGBColor[
       0.16791043701924377`, 1.9255605851863827`*^-7, 0.301671951581009]], 
      Opacity[3.7311070224875043`*^-7, 
       RGBColor[
       0.1679101234882999, 5.441046506922966*^-8, 0.30167126888774964`]], 
      Opacity[8.991783619448149*^-8, 
       RGBColor[
       0.16791002976007027`, 1.3112653311399174`*^-8, 0.30167106480061945`]], 
      
      Opacity[2.4324330617067915`*^-8, 
       RGBColor[
       0.16791000805061398`, 3.5471996203689696`*^-9, 0.3016710175296889]], 
      Opacity[2.351804115689154*^-8, 
       RGBColor[
       0.16791000778375667`, 3.4296190089198604`*^-9, 0.30167101694862447`]], 
      
      Opacity[5.1345132835612094`*^-8, 
       RGBColor[
       0.16791001699367808`, 7.48762375292167*^-9, 0.3016710370026299]], 
      Opacity[1.0497454953898464`*^-7, 
       RGBColor[
       0.16791003474338467`, 1.530836297759446*^-8, 0.3016710756514628]], 
      Opacity[1.8047369054196492`*^-7, 
       RGBColor[
       0.16791005973130518`, 2.6318348350677556`*^-8, 0.30167113006103613`]], 
      
      Opacity[2.5938726158991754`*^-7, 
       RGBColor[
       0.16791008584929823`, 3.7826257598829334`*^-8, 0.30167118693126904`]], 
      
      Opacity[3.1181765256178873`*^-7, 
       RGBColor[
       0.16791010320216374`, 4.54721437643758*^-8, 0.30167122471600627`]], 
      Opacity[3.135906020905194*^-7, 
       RGBColor[
       0.16791010378895613`, 4.573069171762694*^-8, 0.30167122599370855`]], 
      Opacity[2.637896730461815*^-7, 
       RGBColor[
       0.1679100873063626, 3.846825809176005*^-8, 0.301671190103932]], 
      Opacity[1.855003616937947*^-7, 
       RGBColor[
       0.16791006139498052`, 2.7051384185545666`*^-8, 0.30167113368358106`]], 
      
      Opacity[1.089548900833559*^-7, 
       RGBColor[
       0.16791003606075638`, 1.588881317333493*^-8, 0.3016710785199541]], 
      Opacity[5.339321199138106*^-8, 
       RGBColor[
       0.16791001767153002`, 7.786293661590466*^-9, 0.3016710384786085]], 
      Opacity[2.1803471801174353`*^-8, 
       RGBColor[
       0.16791000721628635`, 3.1795845942655594`*^-9, 0.30167101571299465`]], 
      
      Opacity[7.4098240034132855`*^-9, 
       RGBColor[
       0.1679100024524265, 1.0805692993444768`*^-9, 0.30167100533999935`]], 
      Opacity[2.093084246459304*^-9, 
       RGBColor[
       0.16791000069274725`, 3.0523296864050285`*^-10, 0.30167100150841214`]], 
      Opacity[4.908524700176724*^-10, 
       RGBColor[
       0.16791000016245725`, 7.158066228889874*^-11, 0.3016710003537401]], 
      Opacity[9.546385721174802*^-11, 
       RGBColor[
       0.16791000003159565`, 1.3921425563212022`*^-11, 0.3016710000687975]], 
      Opacity[1.538313316635233*^-11, 
       RGBColor[
       0.16791000000509135`, 2.2433112337932805`*^-12, 0.3016710000110861]], 
      Opacity[1.9449646543145467`*^-12, 
       RGBColor[
       0.16791000000064374`, 2.8363279516413924`*^-13, 0.3016710000014017]], 
      Opacity[0., 
       RGBColor[0.16791, 0., 0.301671]], 
      Opacity[0., 
       RGBColor[0.16791, 0., 0.301671]], 
      Opacity[3.5052778782297053`*^-19, 
       RGBColor[0.16791, 5.111721491821656*^-20, 0.301671]], 
      Opacity[1.6654530106750665`*^-10, 
       RGBColor[
       0.16791000005512144`, 2.4287181342057726`*^-11, 0.30167100012002335`]], 
      Opacity[8.479366747447491*^-10, 
       RGBColor[
       0.16791000028064126`, 1.2365399476362093`*^-10, 0.30167100061107816`]], 
      Opacity[3.5696434430974792`*^-9, 
       RGBColor[
       0.16791000118144347`, 5.205585331636264*^-10, 0.3016710025725164]], 
      Opacity[1.2432844272881057`*^-8, 
       RGBColor[
       0.1679100041148935, 1.8130727286663681`*^-9, 0.3016710089599133]], 
      Opacity[3.5851707403946285`*^-8, 
       RGBColor[
       0.16791001186582527`, 5.228228677488156*^-9, 0.30167102583706357`]], 
      Opacity[8.566712683007195*^-8, 
       RGBColor[
       0.1679100283532147, 1.2492775425298076`*^-8, 0.30167106173728286`]], 
      Opacity[1.6979331929715838`*^-7, 
       RGBColor[
       0.167910056196427, 2.4760837501914713`*^-8, 0.3016711223640685]], 
      Opacity[2.817816408136429*^-7, 
       RGBColor[
       0.16791009326115694`, 4.109201379707216*^-8, 0.30167120307010986`]], 
      Opacity[4.0037326885967944`*^-7, 
       RGBColor[
       0.16791013251138065`, 5.838614552905347*^-8, 0.30167128853492176`]], 
      Opacity[5.465955805323175*^-7, 
       RGBColor[
       0.16791018090652066`, 7.970963996020988*^-8, 0.3016713939121948]], 
      Opacity[9.810902874892194*^-7, 
       RGBColor[
       0.16791032471106002`, 1.4307169023954588`*^-7, 0.30167170703723584`]], 
      
      Opacity[2.7322438083352526`*^-6, 
       RGBColor[
       0.16791090428964034`, 3.9844114735398787`*^-7, 0.3016729690319377]], 
      Opacity[8.664698816180519*^-6, 
       RGBColor[
       0.1679128677519013, 1.2635667897804574`*^-6, 0.30167724434343945`]], 
      Opacity[0.000024748923336674867`, 
       RGBColor[
       0.16791819114125717`, 3.6091176709624935`*^-6, 0.3016888356778867]], 
      Opacity[0.000059703983972298925`, 
       RGBColor[
       0.1679297602036937, 8.706588995811892*^-6, 0.3017140265596686]], 
      Opacity[0.00012018012244959554`, 
       RGBColor[
       0.1679497759670551, 0.000017525780727136355`, 0.3017576095839091]], 
      Opacity[0.00020162051501030083`, 
       RGBColor[
       0.16797673026120477`, 0.00002940217453718136, 0.3018163008081258]], 
      Opacity[0.0002821834326962698, 
       RGBColor[
       0.16800339413784612`, 0.00004115060681802548, 0.30187435966708737`]], 
      Opacity[0.0003299220782956222, 
       RGBColor[
       0.16801919417828468`, 0.000048112299133954216`, 0.3019087632285705]], 
      Opacity[0.0003226642074233231, 
       RGBColor[
       0.1680167920436652, 0.00004705388905031386, 0.3019035327365099]], 
      Opacity[0.0002642698457447289, 
       RGBColor[
       0.1679974652851382, 0.000038538281330664876`, 0.30186144997552966`]], 
      Opacity[0.00018141872225441413`, 
       RGBColor[
       0.16797004408193705`, 0.000026456161644881188`, 0.30180174208718974`]], 
      Opacity[0.0001044476361205356, 
       RGBColor[
       0.16794456899234778`, 0.0000152315235731597, 0.3017462717347953]], 
      Opacity[0.00005044524805265597, 
       RGBColor[
       0.1679266958435699, 7.356394202940223*^-6, 0.3017073541145988]], 
      Opacity[0.000020442458177684573`, 
       RGBColor[
       0.16791676583220608`, 2.9811089574818532`*^-6, 0.30168573216003414`]], 
      
      Opacity[6.956422348866816*^-6, 
       RGBColor[
       0.16791230236432225`, 1.0144500625111565`*^-6, 0.3016760132487208]], 
      Opacity[1.997579436387323*^-6, 
       RGBColor[
       0.16791066113806705`, 2.913055709511691*^-7, 0.301672439585185]], 
      Opacity[5.047390584902064*^-7, 
       RGBColor[
       0.1679101670532843, 7.360573348750469*^-8, 0.30167136374767267`]], 
      Opacity[1.6875020118069813`*^-7, 
       RGBColor[0.1679100558511866, 2.460872033803636*^-8, 0.30167112161233]], 
      Opacity[2.0964880188016463`*^-7, 
       RGBColor[
       0.1679100693873801, 3.0572933831047054`*^-8, 0.3016711510865119]], 
      Opacity[4.667463268991035*^-7, 
       RGBColor[
       0.1679101544788451, 6.80652807943409*^-8, 0.30167133636764837`]], 
      Opacity[9.508074284148757*^-7, 
       RGBColor[
       0.16791031468835427`, 1.3865556270439286`*^-7, 0.3016716852134453]], 
      Opacity[1.6324550583161585`*^-6, 
       RGBColor[
       0.16791054029299768`, 2.380597457866034*^-7, 0.3016721764528981]], 
      Opacity[2.3455636589378896`*^-6, 
       RGBColor[
       0.16791077631026596`, 3.4205185957707803`*^-7, 0.3016726903651652]], 
      Opacity[2.8194907889075445`*^-6, 
       RGBColor[
       0.1679109331657386, 4.111643117130192*^-7, 0.3016730319077655]], 
      Opacity[2.8354800944501194`*^-6, 
       RGBColor[
       0.16791093845771268`, 4.1349602062799293`*^-7, 0.3016730434306952]], 
      Opacity[2.3851731041543865`*^-6, 
       RGBColor[
       0.1679107894197882, 3.478280764541992*^-7, 0.30167271891029807`]], 
      Opacity[1.677283775697997*^-6, 
       RGBColor[
       0.16791055512994033`, 2.4459708536572037`*^-7, 0.3016722087593768]], 
      Opacity[9.851637859221603*^-7, 
       RGBColor[
       0.16791032605926418`, 1.4366572558310277`*^-7, 0.30167170997286274`]], 
      
      Opacity[4.82778299203497*^-7, 
       RGBColor[
       0.1679101597849406, 7.040321177247055*^-8, 0.30167134792132644`]], 
      Opacity[1.971457165299172*^-7, 
       RGBColor[
       0.16791006524923893`, 2.874961789664192*^-8, 0.3016711420759784]], 
      Opacity[6.699919526407296*^-8, 
       RGBColor[
       0.16791002217469686`, 9.770444405939169*^-9, 0.3016710482839617]], 
      Opacity[1.8925545482152254`*^-8, 
       RGBColor[
       0.16791000626378022`, 2.7598986712695163`*^-9, 0.3016710136389745]], 
      Opacity[4.438259509172641*^-9, 
       RGBColor[
       0.16791000146892898`, 6.472281886757996*^-10, 0.30167100319849743`]], 
      Opacity[8.631788022882802*^-10, 
       RGBColor[
       0.16791000028568595`, 1.2587674324896226`*^-10, 0.3016710006220626]], 
      Opacity[1.3909363696905459`*^-10, 
       RGBColor[
       0.16791000004603576`, 2.0283924931778613`*^-11, 0.3016710001002399]], 
      Opacity[1.7586403826392518`*^-11, 
       RGBColor[
       0.16791000000582057`, 2.564612607792066*^-12, 0.30167100001267394`]], 
      Opacity[1.5861320565012367`*^-17, 
       RGBColor[0.16791, 2.3130449578449464`*^-18, 0.301671]], 
      Opacity[3.3351357177025176`*^-17, 
       RGBColor[0.16791, 4.863604404148414*^-18, 0.301671]], 
      Opacity[4.4146497745077903`*^-17, 
       RGBColor[
       0.16791000000000003`, 6.4378519806863344`*^-18, 0.3016710000000001]], 
      Opacity[2.02843874451212*^-9, 
       RGBColor[
       0.16791000067135156`, 2.9580576163630637`*^-10, 0.3016710014618244]], 
      Opacity[1.032744848837587*^-8, 
       RGBColor[
       0.1679100034180715, 1.5060443772969414`*^-9, 0.30167100744262865`]], 
      Opacity[4.3476489633123815`*^-8, 
       RGBColor[
       0.1679100143893964, 6.34014518012591*^-9, 0.3016710313319757]], 
      Opacity[1.5142588823196147`*^-7, 
       RGBColor[
       0.16791005011736565`, 2.208232825422741*^-8, 0.3016711091273075]], 
      Opacity[4.3665604805432044`*^-7, 
       RGBColor[
       0.16791014451987757`, 6.367723709540695*^-8, 0.3016713146826436]], 
      Opacity[1.0433831963432002`*^-6, 
       RGBColor[
       0.16791034532811913`, 1.5215582028682752`*^-7, 0.30167175192954254`]], 
      
      Opacity[2.0679985751891505`*^-6, 
       RGBColor[
       0.16791068444466123`, 3.0157474326085964`*^-7, 0.30167249033377963`]], 
      
      Opacity[3.414642563845571*^-6, 
       RGBColor[
       0.1679111301428835, 4.979548665429536*^-7, 0.30167346081270036`]], 
      Opacity[4.742753706922292*^-6, 
       RGBColor[
       0.1679115697072973, 6.916323582978088*^-7, 0.3016744179356517]], 
      Opacity[5.831090470744385*^-6, 
       RGBColor[
       0.16791192991368067`, 8.503437249635147*^-7, 0.3016752022616479]], 
      Opacity[7.72215434724782*^-6, 
       RGBColor[
       0.16791255579833544`, 1.1261162085080195`*^-6, 0.30167656508481827`]], 
      
      Opacity[0.000015369400715327756`, 
       RGBColor[
       0.167915086804407, 2.2413086403477316`*^-6, 0.30168207618609266`]], 
      Opacity[0.00004265816688424744, 
       RGBColor[
       0.1679241185564304, 6.220809762849647*^-6, 0.301701742239306]], 
      Opacity[0.00011831168619148841`, 
       RGBColor[
       0.16794915757145412`, 0.000017253308012890698`, 0.3017562630676669]], 
      Opacity[0.00028424292008583226`, 
       RGBColor[
       0.16800407576556364`, 0.00004145094038121445, 0.3018758438671551]], 
      Opacity[0.0005728799699323968, 
       RGBColor[
       0.16809960585449654`, 0.00008354267354166306, 0.30208385442895536`]], 
      Opacity[0.0009636620893152414, 
       RGBColor[
       0.16822894285623582`, 0.00014053014864813735`, 0.302365477346864]], 
      Opacity[0.0013532993449826088`, 
       RGBColor[
       0.16835790094288916`, 0.00019735066910328545`, 0.30264627520179205`]], 
      
      Opacity[0.0015886853708501302`, 
       RGBColor[
       0.1684358065617161, 0.00023167684377760749`, 0.3028159096250467]], 
      Opacity[0.001561273150670277, 
       RGBColor[
       0.16842673395016808`, 0.000227679339445578, 0.3027961546028732]], 
      Opacity[0.0012861805292003186`, 
       RGBColor[
       0.16833568665527723`, 0.00018756278052330143`, 0.30259790503384004`]], 
      
      Opacity[0.0008893123214551731, 
       RGBColor[
       0.1682043353433071, 0.00012968777553293645`, 0.30231189608627906`]], 
      Opacity[0.0005168458028818189, 
       RGBColor[
       0.16808106024864147`, 0.00007537125130527757, 0.3020434725771647]], 
      Opacity[0.0002531344262569345, 
       RGBColor[
       0.16799377979980448`, 0.00003691441112426185, 0.3018534250706716]], 
      Opacity[0.00010520222327496719`, 
       RGBColor[
       0.16794481873775643`, 0.00001534156447458771, 0.301746815539196]], 
      Opacity[0.00003788503423551392, 
       RGBColor[
       0.16792253879462693`, 5.524747265340345*^-6, 0.30169830241062034`]], 
      Opacity[0.000012580147402299976`, 
       RGBColor[
       0.16791416364635367`, 1.8345538379712759`*^-6, 0.30168006606941167`]], 
      
      Opacity[4.527084081542574*^-6, 
       RGBColor[
       0.16791149832720764`, 6.601814121108148*^-7, 0.30167426251014423`]], 
      Opacity[2.4372458007812255`*^-6, 
       RGBColor[
       0.1679108066542678, 3.5542180031094956`*^-7, 0.3016727564372576]], 
      Opacity[2.6945806973797145`*^-6, 
       RGBColor[
       0.16791089182429558`, 3.929487630007816*^-7, 0.30167294188945937`]], 
      Opacity[4.859055934690411*^-6, 
       RGBColor[
       0.16791160819979908`, 7.085926284356296*^-7, 0.30167450175057337`]], 
      Opacity[9.267892956906608*^-6, 
       RGBColor[
       0.1679130673908248, 1.3515301570227616`*^-6, 0.3016776790442242]], 
      Opacity[0.000015654007846329848`, 
       RGBColor[
       0.1679151810007153, 2.282812693344632*^-6, 0.3016822812924338]], 
      Opacity[0.00002240424355377816, 
       RGBColor[
       0.1679174151235273, 3.26719470639211*^-6, 0.30168714594969986`]], 
      Opacity[0.000026909878099592038`, 
       RGBColor[
       0.16791890635159068`, 3.924248148151275*^-6, 0.3016903930019187]], 
      Opacity[0.000027068629950518757`, 
       RGBColor[
       0.16791895889362726`, 3.947398816270586*^-6, 0.3016905074087896]], 
      Opacity[0.00002279163379564076, 
       RGBColor[
       0.1679175433379207, 3.323687546441959*^-6, 0.301687425128211]], 
      Opacity[0.000016061186897536206`, 
       RGBColor[
       0.167915315764603, 2.342191321213139*^-6, 0.3016825747320433]], 
      Opacity[9.475108611826033*^-6, 
       RGBColor[
       0.16791313597290722`, 1.38174826678439*^-6, 0.30167782837725277`]], 
      Opacity[4.685502968465766*^-6, 
       RGBColor[
       0.16791155075904327`, 6.832835243292253*^-7, 0.3016743766770597]], 
      Opacity[1.949320391053762*^-6, 
       RGBColor[
       0.1679106451657901, 2.8426798911668853`*^-7, 0.3016724048065898]], 
      Opacity[6.880604697058256*^-7, 
       RGBColor[
       0.16791022772709843`, 1.0033936289366235`*^-7, 0.3016714958609608]], 
      Opacity[2.0956040654524717`*^-7, 
       RGBColor[
       0.16791006935812394`, 3.0560043203000685`*^-8, 0.3016711510228085]], 
      Opacity[5.667058035596926*^-8, 
       RGBColor[
       0.16791001875623932`, 8.26422993049314*^-9, 0.30167104084049245`]], 
      Opacity[1.4123203964668526`*^-8, 
       RGBColor[
       0.16791000467435116`, 2.0595766654607565`*^-9, 0.301671010178096]], 
      Opacity[3.338230117317471*^-9, 
       RGBColor[
       0.16791000110485269`, 4.868116944827224*^-10, 0.30167100240574496`]], 
      Opacity[7.381947337760053*^-10, 
       RGBColor[
       0.16791000024432, 1.0765040652634654`*^-10, 0.301671000531991]], 
      Opacity[1.3419912259118374`*^-10, 
       RGBColor[
       0.16791000004441584`, 1.9570161424104062`*^-11, 0.3016710000967126]], 
      Opacity[2.616219322380945*^-11, 
       RGBColor[
       0.16791000000865888`, 3.815213801049011*^-12, 0.3016710000188542]], 
      Opacity[4.223378309976145*^-12, 
       RGBColor[
       0.1679100000013978, 6.158922181114381*^-13, 0.30167100000304364`]], 
      Opacity[1.4873818075928996`*^-8, 
       RGBColor[
       0.16791000492278163`, 2.169038180863711*^-9, 0.3016710107190371]], 
      Opacity[7.57299925016315*^-8, 
       RGBColor[
       0.16791002506432534`, 1.104365028091832*^-8, 0.3016710545759399]], 
      Opacity[3.1881652406681643`*^-7, 
       RGBColor[
       0.16791010551857743`, 4.649278415676651*^-8, 0.30167122975984656`]], 
      Opacity[1.1104687335756728`*^-6, 
       RGBColor[
       0.16791036753139257`, 1.6193885587985217`*^-7, 0.3016718002757278]], 
      Opacity[3.202437863689541*^-6, 
       RGBColor[
       0.16791105990957877`, 4.670092079065839*^-7, 0.30167330788424257`]], 
      Opacity[7.65326458539316*^-6, 
       RGBColor[
       0.16791253299791853`, 1.116070064137383*^-6, 0.3016765154383918]], 
      Opacity[0.000015172647577739025`, 
       RGBColor[
       0.16791502168509975`, 2.212616271955426*^-6, 0.3016819343930321]], 
      Opacity[0.000025020398014824764`, 
       RGBColor[
       0.1679182809911228, 3.6487066278153246`*^-6, 0.3016890313201313]], 
      Opacity[0.00003450316581463467, 
       RGBColor[
       0.1679214194989884, 5.031571828468788*^-6, 0.3016958652170912]], 
      Opacity[0.000040808909746751896`, 
       RGBColor[
       0.16792350650853533`, 5.951133925953811*^-6, 0.3017004095447809]], 
      Opacity[0.00004623140847416227, 
       RGBColor[
       0.16792530119077012`, 6.741893011172982*^-6, 0.30170431734874176`]], 
      Opacity[0.00006807059598132121, 
       RGBColor[
       0.1679325292979237, 9.926686001126965*^-6, 0.3017200560824388]], 
      Opacity[0.00015533974401021273`, 
       RGBColor[
       0.16796141273293916`, 0.000022653083024393636`, 0.3017829478855492]], 
      Opacity[0.0004078990480431164, 
       RGBColor[
       0.16804500218477122`, 0.00005948362448881308, 0.30196495848587823`]], 
      Opacity[0.0009707522210871863, 
       RGBColor[
       0.16823128947431235`, 0.00014156409745954518`, 0.30237058695525937`]], 
      
      Opacity[0.001957811227781766, 
       RGBColor[
       0.16855797599893443`, 0.00028550620172333095`, 0.3030819256369071]], 
      Opacity[0.0033036768744189116`, 
       RGBColor[
       0.16900341661365567`, 0.00048177281994916027`, 0.30405184363396776`]], 
      
      Opacity[0.004658892140825285, 
       RGBColor[
       0.16945195166829208`, 0.0006794028864942099, 0.30502849957288947`]], 
      Opacity[0.0054968161158163165`, 
       RGBColor[
       0.16972927903112528`, 0.0008015967364618901, 0.3056323618867416]], 
      Opacity[0.00543436405941156, 
       RGBColor[
       0.16970860929899784`, 0.0007924893980418652, 0.30558735488800304`]], 
      Opacity[0.004509098378641124, 
       RGBColor[
       0.1694023744867395, 0.0006575585700064025, 0.30492054848122374`]], 
      Opacity[0.0031456436754837887`, 
       RGBColor[
       0.1689511124290174, 0.0004587269523323546, 0.3039379546702638]], 
      Opacity[0.0018500238322747599`, 
       RGBColor[
       0.16852230164775844`, 0.000269787643443469, 0.30300424705508155`]], 
      Opacity[0.0009227242438655992, 
       RGBColor[
       0.1682153936739025, 0.00013456021212146475`, 0.30233597488266056`]], 
      Opacity[0.0003966679548571856, 
       RGBColor[
       0.1680412850343519, 0.00005784580225589588, 0.3019568646323536]], 
      Opacity[0.00015378162764509713`, 
       RGBColor[
       0.16796089704378905`, 0.00002242586403671261, 0.30178182500593054`]], 
      Opacity[0.00005993014818744098, 
       RGBColor[
       0.16792983505717354`, 8.739570360467823*^-6, 0.3017141895482575]], 
      Opacity[0.000027893399835143536`, 
       RGBColor[
       0.16791923186738608`, 4.067674414711101*^-6, 0.30169110179141356`]], 
      Opacity[0.000018133766657004727`, 
       RGBColor[
       0.16791600172549698`, 2.644434135279006*^-6, 0.30168406836732115`]], 
      Opacity[0.00001910222625967762, 
       RGBColor[
       0.16791632225618427`, 2.7856639018458802`*^-6, 0.30168476630206703`]], 
      
      Opacity[0.0000311443703592255, 
       RGBColor[
       0.16792030783980005`, 4.541761105539196*^-6, 0.3016934446514361]], 
      Opacity[0.00005699422355449605, 
       RGBColor[
       0.16792886335537213`, 8.3114265851112*^-6, 0.30171207373071907`]], 
      Opacity[0.00009511692261262772, 
       RGBColor[
       0.16794148080983035`, 0.00001387083234041522, 0.3017395474180113]], 
      Opacity[0.00013570008889864888`, 
       RGBColor[
       0.16795491260414275`, 0.000019789046260025958`, 0.30176879427742614`]], 
      Opacity[0.00016289596927744274`, 
       RGBColor[
       0.16796391361379337`, 0.000023755001914631596`, 0.3017883933911202]], 
      Opacity[0.00016394047890428136`, 
       RGBColor[
       0.16796425931472675`, 0.00002390732200146654, 0.30178914613244145`]], 
      Opacity[0.00013825078411993876`, 
       RGBColor[
       0.16795575680671987`, 0.000020161012307646102`, 0.3017706324736877]], 
      Opacity[0.00009774957326151854, 
       RGBColor[
       0.16794235213716255`, 0.0000142547498890345, 0.30174144467666464`]], 
      Opacity[0.00005806263079681759, 
       RGBColor[
       0.16792921696568977`, 8.467231644005735*^-6, 0.3017128436942107]], 
      Opacity[0.0000291143141659134, 
       RGBColor[
       0.16791963595291376`, 4.245719472508952*^-6, 0.30169198166139555`]], 
      Opacity[0.000012451659841817602`, 
       RGBColor[
       0.1679141211208772, 1.815816589537175*^-6, 0.3016799734729496]], 
      Opacity[4.632011706191211*^-6, 
       RGBColor[
       0.1679115330550616, 6.754829320654358*^-7, 0.3016743381277899]], 
      Opacity[1.5462346281573082`*^-6, 
       RGBColor[
       0.1679105117566564, 2.2548628253524798`*^-7, 0.3016721143168691]], 
      Opacity[4.803530406421883*^-7, 
       RGBColor[
       0.16791015898225373`, 7.004953806266106*^-8, 0.301671346173528]], 
      Opacity[1.4194403079489176`*^-7, 
       RGBColor[
       0.1679100469791591, 2.069959581111689*^-8, 0.3016711022940666]], 
      Opacity[3.9493593681745144`*^-8, 
       RGBColor[
       0.16791001307117892`, 5.759322331221443*^-9, 0.3016710284616428]], 
      Opacity[9.938943830349233*^-9, 
       RGBColor[
       0.16791000328948827`, 1.4493890227402706`*^-9, 0.301671007162647]], 
      Opacity[2.099457768673977*^-9, 
       RGBColor[
       0.1679100006948567, 3.061624147961326*^-10, 0.30167100151300535`]], 
      Opacity[4.0929004603765463`*^-10, 
       RGBColor[
       0.16791000013546256`, 5.968647272483804*^-11, 0.30167100029496097`]], 
      Opacity[6.607147375406942*^-11, 
       RGBColor[
       0.16791000002186765`, 9.635155446094838*^-12, 0.30167100004761543`]], 
      Opacity[8.073895859467489*^-8, 
       RGBColor[
       0.16791002672214084`, 1.177410419981125*^-8, 0.3016710581857255]], 
      Opacity[4.110959702761729*^-7, 
       RGBColor[
       0.16791013606026886`, 5.99498293562757*^-8, 0.30167129626239525`]], 
      Opacity[1.7307260011957396`*^-6, 
       RGBColor[
       0.16791057281769234`, 2.5239052663165386`*^-7, 0.30167224727330755`]], 
      
      Opacity[6.028575057830471*^-6, 
       RGBColor[
       0.16791199527507547`, 8.791427601093759*^-7, 0.30167534458183837`]], 
      Opacity[0.000017387053716218402`, 
       RGBColor[
       0.16791575458621363`, 2.5355415247574537`*^-6, 0.30168353023758904`]], 
      
      Opacity[0.00004155827085516933, 
       RGBColor[
       0.16792375452428163`, 6.060412716854328*^-6, 0.30170094958295424`]], 
      Opacity[0.00008241151274310074, 
       RGBColor[
       0.16793727570540798`, 0.000012018011567037205`, 0.30173039107634875`]], 
      Opacity[0.00013586081293606307`, 
       RGBColor[
       0.16795496579891311`, 0.000019812484530680765`, 0.30176891010558243`]], 
      Opacity[0.0001868464616659068, 
       RGBColor[
       0.16797184049867897`, 0.00002724768497528679, 0.30180565366792717`]], 
      Opacity[0.00021727593957467157`, 
       RGBColor[
       0.16798191173081065`, 0.00003168519382949786, 0.3018275831215384]], 
      Opacity[0.00022674079813736294`, 
       RGBColor[
       0.1679850443112632, 0.00003306544733899698, 0.3018344041119415]], 
      Opacity[0.0002633450240024592, 
       RGBColor[
       0.16799715919725608`, 0.00003840341524186135, 0.30186078348905376`]], 
      Opacity[0.00046587007311187697`, 
       RGBColor[
       0.1680641888317498, 0.00006793749733545237, 0.30200673616306517`]], 
      Opacity[0.0011088929134807643`, 
       RGBColor[
       0.16827700984401756`, 0.00016170905517000215`, 0.30247014008971507`]], 
      
      Opacity[0.0025858849804434344`, 
       RGBColor[
       0.16876584931762337`, 0.0003770977448608801, 0.3035345562822543]], 
      Opacity[0.005210891940004842, 
       RGBColor[
       0.16963464682102664`, 0.0007599006197687093, 0.30542630639776525`]], 
      Opacity[0.008826769968312534, 
       RGBColor[
       0.17083139252570442`, 0.0012872015092046396`, 0.30803214241385996`]], 
      Opacity[0.012516283038714514`, 
       RGBColor[
       0.17205250919081014`, 0.0018252405438119496`, 0.3106910446128386]], 
      Opacity[0.014866646966165395`, 
       RGBColor[
       0.17283040819973297`, 0.002167992423090084, 0.3123848691625422]], 
      Opacity[0.014815994002474367`, 
       RGBColor[
       0.17281364360860135`, 0.002160605737865155, 0.3123483653545944]], 
      Opacity[0.01241395991854196, 
       RGBColor[
       0.17201864334865588`, 0.0018103188368698328`, 0.31061730394190407`]], 
      Opacity[0.008769262366288649, 
       RGBColor[
       0.1708123592576656, 0.0012788152170069699`, 0.307990698709349]], 
      Opacity[0.005249862419873484, 
       RGBColor[
       0.16964754486516057`, 0.0007655836567892079, 0.30545439105084565`]], 
      Opacity[0.00269719123748059, 
       RGBColor[
       0.16880268830499245`, 0.0003933294561841035, 0.30361477078372073`]], 
      Opacity[0.0012291032904243125`, 
       RGBColor[
       0.1683167958243904, 0.00017923924788820837`, 0.302556771476973]], 
      Opacity[0.0005377524795207167, 
       RGBColor[
       0.16808797972304598`, 0.00007842005690672086, 0.30205853928310333`]], 
      Opacity[0.0002581556127440745, 
       RGBColor[
       0.16799544165988767`, 0.0000376466471344272, 0.3018570436630271]], 
      Opacity[0.00015013001646851186`, 
       RGBColor[
       0.16795968847149859`, 0.000021893352207991225`, 0.3017791934182923]], 
      Opacity[0.00010733605165717633`, 
       RGBColor[
       0.16794552497008255`, 0.00001565273913120883, 0.30174835331420036`]], 
      Opacity[0.00010465374522902838`, 
       RGBColor[
       0.16794463720819697`, 0.000015261580316052643`, 0.30174642027037474`]], 
      Opacity[0.00015209283829783847`, 
       RGBColor[
       0.1679603381058543, 0.00002217958910213021, 0.30178060795489337`]], 
      Opacity[0.00026406394814527614`, 
       RGBColor[
       0.16799739713929207`, 0.000038508255431982956`, 0.30186130159237734`]], 
      Opacity[0.0004336668684896227, 
       RGBColor[
       0.16805353054999728`, 0.00006324132719169637, 0.30198352844704673`]], 
      Opacity[0.0006159976422495477, 
       RGBColor[
       0.1681138764932563, 0.00008983049265094911, 0.30211492781765226`]], 
      Opacity[0.0007388024362421626, 
       RGBColor[
       0.1681545211468021, 0.00010773902733944048`, 0.302203428909954]], 
      Opacity[0.0007439345320387303, 
       RGBColor[
       0.16815621971449504`, 0.00010848743717434496`, 0.3022071274307448]], 
      Opacity[0.0006284776975028979, 
       RGBColor[
       0.16811800701215146`, 0.0000916504501229054, 0.3021239217541754]], 
      Opacity[0.00044607560492794025`, 
       RGBColor[
       0.16805763746453276`, 0.00006505088429220598, 0.3019924709866103]], 
      Opacity[0.00026705422183533875`, 
       RGBColor[
       0.16799838682897916`, 0.000038944324891207726`, 0.3018634565773681]], 
      Opacity[0.00013601233085039311`, 
       RGBColor[
       0.16795501594673662`, 0.000019834580279034618`, 0.30176901929920985`]], 
      Opacity[0.000059920421858110736`, 
       RGBColor[
       0.1679298318380542, 8.738151976864551*^-6, 0.3017141825388343]], 
      Opacity[0.000023479681705360523`, 
       RGBColor[
       0.16791777106086214`, 3.4240250777218974`*^-6, 0.30168792098012026`]], 
      
      Opacity[8.4832442469304*^-6, 
       RGBColor[
       0.16791280769595512`, 1.2371054005940023`*^-6, 0.3016771135755186]], 
      Opacity[2.9057933392367075`*^-6, 
       RGBColor[
       0.16791096172925918`, 4.237497504896848*^-7, 0.30167309410297566`]], 
      Opacity[9.427752615786968*^-7, 
       RGBColor[
       0.16791031202995121`, 1.3748423759783302`*^-7, 0.3016716794249453]], 
      Opacity[2.8127490716299433`*^-7, 
       RGBColor[
       0.1679100930934435, 4.10181171936463*^-8, 0.30167120270492476`]], 
      Opacity[7.40535028769796*^-8, 
       RGBColor[
       0.16791002450945822`, 1.0799169006027863`*^-8, 0.30167105336775285`]], 
      
      Opacity[1.6339716992405365`*^-8, 
       RGBColor[
       0.1679100054079496, 2.38280916440624*^-9, 0.3016710117754589]], 
      Opacity[3.1854336766590726`*^-9, 
       RGBColor[
       0.16791000105428172`, 4.6452949955494534`*^-10, 0.30167100229562993`]], 
      Opacity[5.142228127906607*^-10, 
       RGBColor[
       0.16791000017019211`, 7.498874254883685*^-11, 0.3016710003705823]], 
      Opacity[3.4422032154780055`*^-7, 
       RGBColor[
       0.16791011392646213`, 5.0197401652684243`*^-8, 0.3016712480674692]], 
      Opacity[1.7527368295490938`*^-6, 
       RGBColor[
       0.1679105801026074, 2.5560034988262705`*^-7, 0.30167226313573675`]], 
      Opacity[7.379356602889723*^-6, 
       RGBColor[
       0.1679124423427031, 1.0761262602626543`*^-6, 0.30167631804255035`]], 
      Opacity[0.00002570593621803247, 
       RGBColor[
       0.16791850788342771`, 3.748678170401598*^-6, 0.3016895253633834]], 
      Opacity[0.00007414730559990939, 
       RGBColor[
       0.1679345405040755, 0.000010812848189574753`, 0.30172443535316074`]], 
      Opacity[0.00017726232391525903`, 
       RGBColor[
       0.1679686684404413, 0.000025850037067689008`, 0.30179874671721196`]], 
      Opacity[0.00035164553611111637`, 
       RGBColor[
       0.16802638398242847`, 0.0000512802153462981, 0.30192441855995245`]], 
      Opacity[0.0005798750042894385, 
       RGBColor[
       0.1681019209982197, 0.00008456275436552573, 0.30208889550399126`]], 
      Opacity[0.0007970524534680557, 
       RGBColor[
       0.16817380013170335`, 0.00011623358541148006`, 0.3022454076469681]], 
      Opacity[0.0009204777913655663, 
       RGBColor[
       0.16821465016641715`, 0.00013423261357083075`, 0.30233435594341895`]], 
      
      Opacity[0.000922284149885384, 
       RGBColor[
       0.1682152480161739, 0.00013449603353319766`, 0.3023356577224203]], 
      Opacity[0.0009142193023928271, 
       RGBColor[
       0.16821257879682525`, 0.00013331994263004825`, 0.3023298456707151]], 
      Opacity[0.0012286374868262192`, 
       RGBColor[
       0.16831664165755988`, 0.000179171320084877, 0.30255643578871616`]], 
      Opacity[0.002490261679896762, 
       RGBColor[
       0.16873420091209076`, 0.00036315306779093526`, 0.30346564393549047`]], 
      
      Opacity[0.005569245654602242, 
       RGBColor[
       0.16975325100660543`, 0.0008121590839537736, 0.30568455930582483`]], 
      Opacity[0.011169929236291468`, 
       RGBColor[
       0.1716069070113637, 0.0016289027381793347`, 0.30972077481908616`]], 
      Opacity[0.019003568321310754`, 
       RGBColor[
       0.1741996034058769, 0.002771276685727556, 0.31536620276356375`]], 
      Opacity[0.02714365691250397, 
       RGBColor[
       0.17689372527086866`, 0.003958339944117477, 0.3212324780801183]], 
      Opacity[0.03253516414358229, 
       RGBColor[
       0.17867815026253578`, 0.004744579561740421, 0.32511794756050194`]], 
      Opacity[0.03278390061286011, 
       RGBColor[
       0.17876047447227805`, 0.004780852621964949, 0.32529720317838673`]], 
      Opacity[0.027849340842304844`, 
       RGBColor[
       0.1771272851988413, 0.004061249323507909, 0.32174103964825146`]], 
      Opacity[0.020038996946340728`, 
       RGBColor[
       0.17454229880373162`, 0.002922272496607067, 0.31611239972653526`]], 
      Opacity[0.012337157193283014`, 
       RGBColor[
       0.171993223981398, 0.001799118750743283, 0.31056195492126587`]], 
      Opacity[0.006659788954872813, 
       RGBColor[
       0.17011418768647868`, 0.0009711922282410547, 0.3064704754752057]], 
      Opacity[0.0033402548351241864`, 
       RGBColor[
       0.1690155228066791, 0.0004871069576226788, 0.3040782040827038]], 
      Opacity[0.0017324862453938783`, 
       RGBColor[
       0.1684834002796435, 0.0002526472217756926, 0.30291954185353953`]], 
      Opacity[0.0010304166754641414`, 
       RGBColor[
       0.1682510365949117, 0.0001502649218829294, 0.30241358502734006`]], 
      Opacity[0.0007011390818319805, 
       RGBColor[
       0.1681420557214583, 0.00010224660748341879`, 0.30217628625618065`]], 
      Opacity[0.000523467590940071, 
       RGBColor[
       0.1680832518591864, 0.00007633690189012508, 0.30204824466673136`]], 
      Opacity[0.00047146112387628277`, 
       RGBColor[
       0.16806603929958489`, 0.00006875283624286912, 0.3020107654365461]], 
      Opacity[0.0006031867971095463, 
       RGBColor[
       0.16810963649296462`, 0.00008796229632799122, 0.3021056954925016]], 
      Opacity[0.0009762343963727664, 
       RGBColor[
       0.16823310390767374`, 0.00014236355913427515`, 0.30237453776601514`]], 
      
      Opacity[0.0015658381272157028`, 
       RGBColor[
       0.16842824481862934`, 0.00022834504668841433`, 0.3027994444207823]], 
      Opacity[0.0022093525913563887`, 
       RGBColor[
       0.1686412285434202, 0.00032218829766363636`, 0.30326320264337936`]], 
      Opacity[0.002646271607976313, 
       RGBColor[0.1687858354555833, 0.000385903883275628, 0.303578074799108]], 
      Opacity[0.002667085440165316, 
       RGBColor[
       0.16879272420129734`, 0.0003889391494377911, 0.30359307459531965`]], 
      Opacity[0.0022598449580155527`, 
       RGBColor[
       0.16865793998181644`, 0.0003295515631390383, 0.3032995907146993]], 
      Opacity[0.0016141726369716008`, 
       RGBColor[
       0.16844424207198944`, 0.00023539363344526993`, 0.30283427740058866`]], 
      
      Opacity[0.0009787434764271818, 
       RGBColor[
       0.1682339343368957, 0.0001427294564720729, 0.3023763459716907]], 
      Opacity[0.0005108521279108641, 
       RGBColor[
       0.16807907652443382`, 0.00007449719799970921, 0.30203915314659047`]], 
      Opacity[0.00023519300069608235`, 
       RGBColor[
       0.16798784173336317`, 0.00003429802595254919, 0.30184049531680807`]], 
      Opacity[0.00009884570161149229, 
       RGBColor[
       0.16794271492232407`, 0.00001441459749709876, 0.3017422346177827]], 
      Opacity[0.00003915738469844523, 
       RGBColor[
       0.1679229599039507, 5.710293217257285*^-6, 0.3016992193488123]], 
      Opacity[0.000014745959318626238`, 
       RGBColor[
       0.16791488046425732`, 2.1503926303445547`*^-6, 0.30168162689382316`]], 
      
      Opacity[5.160443906380135*^-6, 
       RGBColor[
       0.16791170795005553`, 7.525438193478024*^-7, 0.3016747189502757]], 
      Opacity[1.6168446092554944`*^-6, 
       RGBColor[
       0.1679105351264136, 2.357832852396101*^-7, 0.301672165202997]], 
      Opacity[4.380927793517389*^-7, 
       RGBColor[
       0.16791014499539195`, 6.388675458606296*^-8, 0.30167131571804523`]], 
      Opacity[9.919468763131986*^-8, 
       RGBColor[
       0.1679100328304261, 1.446548987710028*^-8, 0.30167107148611977`]], 
      Opacity[1.933803983155703*^-8, 
       RGBColor[
       0.16791000640030332`, 2.820052425247283*^-9, 0.3016710139362446]], 
      Opacity[3.1217291093579355`*^-9, 
       RGBColor[
       0.16791000103319745`, 4.55239508372709*^-10, 0.3016710022497203]], 
      Opacity[1.1811165673979567`*^-6, 
       RGBColor[
       0.16791039091367788`, 1.722413786197155*^-7, 0.30167185118913487`]], 
      Opacity[6.014601841467692*^-6, 
       RGBColor[
       0.16791199065036563`, 8.771050560279076*^-7, 0.3016753345118332]], 
      Opacity[0.000025324266503376266`, 
       RGBColor[
       0.16791838156235492`, 3.693019550715478*^-6, 0.3016892503074548]], 
      Opacity[0.00008822670197269287, 
       RGBColor[
       0.16793920035626123`, 0.000012866036425452381`, 0.30173458187853186`]], 
      Opacity[0.00025453498271121974`, 
       RGBColor[
       0.16799424334141394`, 0.000037118653263589625`, 0.3018544344024086]], 
      Opacity[0.0006087231982127261, 
       RGBColor[
       0.16811146887342318`, 0.00008876966571465914, 0.30210968538189537`]], 
      Opacity[0.001208302759920056, 
       RGBColor[
       0.16830991148112964`, 0.00017620592150115462`, 0.30254178126681724`]], 
      
      Opacity[0.001994345911960288, 
       RGBColor[
       0.16857006786874312`, 0.0002908340284121122, 0.3031082548977737]], 
      Opacity[0.0027442569737347144`, 
       RGBColor[
       0.1688182656328942, 0.0004001930186147123, 0.30364868940312517`]], 
      Opacity[0.003165932099761102, 
       RGBColor[
       0.1689578272806851, 0.00046168559863704964`, 0.30395257582348795`]], 
      Opacity[0.003119387384013975, 
       RGBColor[
       0.16894242239473214`, 0.0004548980162518415, 0.30391903268522297`]], 
      Opacity[0.0028283527497266715`, 
       RGBColor[
       0.16884609877823595`, 0.0004124566450786607, 0.30370929426871124`]], 
      Opacity[0.0029920728179351594`, 
       RGBColor[
       0.16890028514372288`, 0.0004363318247470554, 0.3038272815589227]], 
      Opacity[0.004827334796498524, 
       RGBColor[
       0.1695077010666632, 0.0007039667576923263, 0.30514989026565165`]], 
      Opacity[0.009943157519414015, 
       RGBColor[
       0.17120088286693746`, 0.001450003501982732, 0.30883668362509703`]], 
      Opacity[0.019652629044806, 
       RGBColor[
       0.17441442277390784`, 0.002865928743711147, 0.3158339579800493]], 
      Opacity[0.03356253037921464, 
       RGBColor[
       0.1790181772545965, 0.004894399640178998, 0.3258583342432307]], 
      Opacity[0.04839216927227769, 
       RGBColor[
       0.18392633690717802`, 0.007056995202614379, 0.33654553299017215`]], 
      Opacity[0.0587303457636926, 
       RGBColor[
       0.18734795904527102`, 0.008564604036870342, 0.3439958928837224]], 
      Opacity[0.06010573594603597, 
       RGBColor[
       0.18780317138376515`, 0.008765176196880544, 0.3449870881744028]], 
      Opacity[0.05209405413639078, 
       RGBColor[
       0.1851515482598996, 0.00759683840699089, 0.33921335110539125`]], 
      Opacity[0.03856020847044755, 
       RGBColor[
       0.18067225677338064`, 0.005623207437895268, 0.3294599849253134]], 
      Opacity[0.024837161160222658`, 
       RGBColor[
       0.17613034529433444`, 0.0036219853292392347`, 0.31957026778009967`]], 
      Opacity[0.014526842508235261`, 
       RGBColor[
       0.17271794325421364`, 0.0021184389836493424`, 0.3121399840508289]], 
      Opacity[0.008380455098679428, 
       RGBColor[
       0.1706836758718279, 0.0012221157331127497`, 0.30771049899759884`]], 
      Opacity[0.005276175903482522, 
       RGBColor[
       0.16965625382830526`, 0.0007694209331582056, 0.3054733542522481]], 
      Opacity[0.0037371460003380545`, 
       RGBColor[
       0.16914688171687348`, 0.0005449853104841783, 0.30436422957490444`]], 
      Opacity[0.002801978620460578, 
       RGBColor[
       0.1688373697432224, 0.00040861052479715935`, 0.3036902873621185]], 
      Opacity[0.0021339465452571245`, 
       RGBColor[
       0.16861627143450514`, 0.0003111918882533339, 0.30320886016024845`]], 
      Opacity[0.0017954880937829949`, 
       RGBColor[
       0.1685042519762041, 0.0002618347359649466, 0.30296494506800853`]], 
      Opacity[0.002011679874569278, 
       RGBColor[
       0.16857580488341425`, 0.0002933618276989281, 0.3031207468744705]], 
      Opacity[0.002968247429616508, 
       RGBColor[
       0.16889239966448122`, 0.00043285738552282604`, 0.30381011144021514`]], 
      
      Opacity[0.0045944449694508005`, 
       RGBColor[
       0.16943062161376116`, 0.0006700046018946322, 0.30498205476502027`]], 
      Opacity[0.006413475979106287, 
       RGBColor[
       0.17003266557941443`, 0.0009352725843303648, 0.30629296638378745`]], 
      Opacity[0.007664817891063205, 
       RGBColor[
       0.17044682171147804`, 0.0011177548743848656`, 0.3071947644524995]], 
      Opacity[0.007736727340681035, 
       RGBColor[
       0.17047062155325426`, 0.00112824137764783, 0.30724658706162644`]], 
      Opacity[0.006587649929324531, 
       RGBColor[
       0.17009031186204857`, 0.0009606722460854471, 0.3064184874187867]], 
      Opacity[0.00475463992120275, 
       RGBColor[
       0.1694836412728645, 0.0006933657163682538, 0.3050975016278856]], 
      Opacity[0.0029423224889517977`, 
       RGBColor[
       0.1688838192972394, 0.00042907677009164857`, 0.30379142824803596`]], 
      Opacity[0.0015943716745674822`, 
       RGBColor[
       0.16843768855538294`, 0.00023250607335457025`, 0.30282000754397786`]], 
      
      Opacity[0.0007809526854837718, 
       RGBColor[
       0.1681684715979335, 0.00011388576783816489`, 0.30223380511089365`]], 
      Opacity[0.0003578573312971618, 
       RGBColor[
       0.1680284398977965, 0.00005218607696578657, 0.3019288951820878]], 
      Opacity[0.00015602452047348936`, 
       RGBColor[
       0.1679616393731313, 0.000022752943482994214`, 0.30178344137984214`]], 
      Opacity[0.00006380422233482458, 
       RGBColor[
       0.16793111725794446`, 9.304523804047387*^-6, 0.3017169814571281]], 
      Opacity[0.00002363102693286929, 
       RGBColor[
       0.16791782115153156`, 3.4460956432809366`*^-6, 0.3016880300492984]], 
      Opacity[7.654686785699384*^-6, 
       RGBColor[
       0.1679125334686236, 1.1162774625840555`*^-6, 0.3016765164633215]], 
      Opacity[2.1133913933669833`*^-6, 
       RGBColor[
       0.16791069946830411`, 3.0819434525290397`*^-7, 0.3016725230467858]], 
      Opacity[4.864624397987517*^-7, 
       RGBColor[
       0.1679101610042791, 7.094046734289531*^-8, 0.3016713505763569]], 
      Opacity[9.494333244327106*^-8, 
       RGBColor[
       0.16791003142335675`, 1.3845517811002861`*^-8, 0.3016710684223177]], 
      Opacity[1.5347648548321296`*^-8, 
       RGBColor[
       0.1679100050796051, 2.2381365374947398`*^-9, 0.3016710110605101]], 
      Opacity[3.5765226536604255`*^-6, 
       RGBColor[
       0.16791118372027208`, 5.215617234869892*^-7, 0.30167357747398293`]], 
      Opacity[0.000018216185600800384`, 
       RGBColor[
       0.16791602900366182`, 2.6564532305110877`*^-6, 0.3016841277637528]], 
      Opacity[0.00007671081175815893, 
       RGBColor[
       0.16793538894668328`, 0.00001118668244690785, 0.30172628278181357`]], 
      Opacity[0.0002673237627991504, 
       RGBColor[
       0.16799847603884413`, 0.000038983631855890895`, 0.30186365082605293`]], 
      Opacity[0.0007716028939598144, 
       RGBColor[
       0.1681653771011727, 0.00011252229447207608`, 0.302227067045255]], 
      Opacity[0.0018468687361401868`, 
       RGBColor[
       0.16852125740685284`, 0.00026932753804583345`, 0.30300197328835676`]], 
      
      Opacity[0.0036715139890919016`, 
       RGBColor[
       0.16912515951636414`, 0.0005354142415391999, 0.3043169308946461]], 
      Opacity[0.00607547188479487, 
       RGBColor[
       0.1699207964995218, 0.0008859816906198788, 0.3060493787307613]], 
      Opacity[0.008395153142952878, 
       RGBColor[
       0.17068854047766185`, 0.0012242591383265552`, 0.30772109136073555`]], 
      Opacity[0.009740615061766714, 
       RGBColor[
       0.17113384747074692`, 0.0014204668812145954`, 0.3086907184053651]], 
      Opacity[0.009610900362755224, 
       RGBColor[
       0.17109091584870095`, 0.0014015506800523331`, 0.30859723758774493`]], 
      Opacity[0.008396945863000802, 
       RGBColor[
       0.17068913381349904`, 0.0012245205694003856`, 0.30772238331097035`]], 
      Opacity[0.007451490527640119, 
       RGBColor[
       0.17037621683933685`, 0.0010866454985725786`, 0.3070410269308037]], 
      Opacity[0.008890663166281022, 
       RGBColor[
       0.17085253923187876`, 0.0012965190082612817`, 0.3080781879925953]], 
      Opacity[0.015268728495632766`, 
       RGBColor[
       0.1729634849627082, 0.0022266276830336094`, 0.3126746351675595]], 
      Opacity[0.02866646355168487, 
       RGBColor[
       0.17739772797511572`, 0.004180409739888448, 0.3223299112221823]], 
      Opacity[0.04879348281992054, 
       RGBColor[
       0.18405915949151597`, 0.007115518468321382, 0.3368347455377215]], 
      Opacity[0.07121696233657741, 
       RGBColor[
       0.1914806495377521, 0.010385518341330202`, 0.3529945579188971]], 
      Opacity[0.0881443884796189, 
       RGBColor[
       0.19708311299734407`, 0.012854032708023119`, 0.3651935580947869]], 
      Opacity[0.09262456294804966, 
       RGBColor[
       0.1985659145490908, 0.013507373325028759`, 0.36842226213204365`]], 
      Opacity[0.08324670893374972, 
       RGBColor[
       0.19546212995711956`, 0.012139807626178289`, 0.361663972844399]], 
      Opacity[0.06503852034298427, 
       RGBColor[
       0.18943577306250936`, 0.009484520593882748, 0.3485419722552727]], 
      Opacity[0.04571856314657011, 
       RGBColor[
       0.18304145455719506`, 0.006667105146298853, 0.33461875916631034`]], 
      Opacity[0.03085201195432053, 
       RGBColor[
       0.1781210780557167, 0.004499126689849956, 0.32390495902465805`]], 
      Opacity[0.02177002249274738, 
       RGBColor[
       0.1751152156364156, 0.0031747067057011557`, 0.3173598889057313]], 
      Opacity[0.016798417864308378`, 
       RGBColor[
       0.173469765641183, 0.0024497011822912284`, 0.31377702845049826`]], 
      Opacity[0.013649480035085327`, 
       RGBColor[
       0.17242756294742018`, 0.001990493845890868, 0.3115076997995888]], 
      Opacity[0.010949120854928322`, 
       RGBColor[
       0.17153382614970727`, 0.0015967024109071815`, 0.30956164599109276`]], 
      Opacity[0.008471535826528466, 
       RGBColor[0.1707138208238918, 0.001235397970076851, 0.307776137672118]], 
      Opacity[0.00671834734565992, 
       RGBColor[
       0.17013356873365412`, 0.0009797317562074974, 0.30651267644619057`]], 
      Opacity[0.006438390248805244, 
       RGBColor[
       0.170040911445291, 0.0009389058143422896, 0.3063109212209772]], 
      Opacity[0.00818199297625592, 
       RGBColor[
       0.17061799094255423`, 0.001193174144692458, 0.3075674743318349]], 
      Opacity[0.0117952130750044, 
       RGBColor[
       0.17181385695334897`, 0.0017200874301744778`, 0.31017139487165546`]], 
      Opacity[0.016077839400688576`, 
       RGBColor[
       0.17323127607531014`, 0.0023446197437580465`, 0.31325773291612935`]], 
      Opacity[0.019113342328401478`, 
       RGBColor[
       0.17423593526509412`, 0.002787284950144311, 0.31544531302642903`]], 
      Opacity[0.01935418074990304, 
       RGBColor[
       0.1743156454611231, 0.0028224062437482204`, 0.31561887679929274`]], 
      Opacity[0.016658551062803, 
       RGBColor[
       0.1734234739818355, 0.002429304507331796, 0.31367623136996475`]], 
      Opacity[0.012296488190574344`, 
       RGBColor[
       0.1719797637778391, 0.0017931880193599594`, 0.31053264620256266`]], 
      Opacity[0.007936349058776966, 
       RGBColor[
       0.1705366902734438, 0.0011573520690701226`, 0.3073904474071737]], 
      Opacity[0.00461705436321713, 
       RGBColor[
       0.16943810463577222`, 0.0006733017135088125, 0.304998348559257]], 
      Opacity[0.002505656693307316, 
       RGBColor[
       0.16873929619352124`, 0.0003653981115121867, 0.303476738579751]], 
      Opacity[0.0012933125576128407`, 
       RGBColor[
       0.1683380471398681, 0.00018860283909163906`, 0.3026030448356696]], 
      Opacity[0.0006280273870154094, 
       RGBColor[
       0.16811785797306955`, 0.0000915847816687385, 0.302123597231258]], 
      Opacity[0.0002775199184488513, 
       RGBColor[
       0.16800185065640105`, 0.000040470529893054705`, 0.30187099883652496`]], 
      Opacity[0.0001077326897872717, 
       RGBColor[
       0.16794565624524582`, 0.000015710580584141185`, 0.301748639157339]], 
      Opacity[0.00003581052004643799, 
       RGBColor[
       0.16792185219349556`, 5.222222354797619*^-6, 0.3016968073812672]], 
      Opacity[0.000010029759085367466`, 
       RGBColor[
       0.16791331954535257`, 1.4626325459925962`*^-6, 0.3016782280943253]], 
      Opacity[2.3376429603879824`*^-6, 
       RGBColor[
       0.16791077368875554`, 3.40896789810448*^-7, 0.30167268465699654`]], 
      Opacity[4.570944355691484*^-7, 
       RGBColor[0.1679101512843625, 6.66577524310553*^-8, 0.30167132941187]], 
      
      Opacity[7.40566197444215*^-8, 
       RGBColor[
       0.1679100245104898, 1.0799623536562773`*^-8, 0.30167105336999905`]], 
      Opacity[8.161428113620921*^-6, 
       RGBColor[
       0.1679127011845982, 1.1901751855810971`*^-6, 0.30167688165395923`]], 
      Opacity[0.00004158145052263105, 
       RGBColor[
       0.1679237621960469, 6.06379299107091*^-6, 0.30170096628772464`]], 
      Opacity[0.00017515201809475034`, 
       RGBColor[
       0.16796796999336802`, 0.000025542292689304414`, 0.30179722589408986`]], 
      Opacity[0.0006106513644442462, 
       RGBColor[
       0.16811210703782958`, 0.00008905084880792203, 0.302111074943427]], 
      Opacity[0.0017640008579819428`, 
       RGBColor[
       0.16849383065836596`, 0.00025724297503888896`, 0.3029422533255174]], 
      Opacity[0.00422822996784484, 
       RGBColor[
       0.16930941558116563`, 0.0006165997318852361, 0.30471813650413093`]], 
      Opacity[0.008426687427340497, 
       RGBColor[
       0.17069897736715192`, 0.0012288577603141169`, 0.3077438170094869]], 
      Opacity[0.014005109483508924`, 
       RGBColor[
       0.17254526548371316`, 0.0020423550323012784`, 0.31176398942491107`]], 
      Opacity[0.019497656935605626`, 
       RGBColor[
       0.17436313171691462`, 0.002843329272606375, 0.31572227503596684`]], 
      Opacity[0.022899589238057832`, 
       RGBColor[
       0.17548906789028432`, 0.0033394306108817224`, 0.3181739278983271]], 
      Opacity[0.0229791270701861, 
       RGBColor[
       0.17551539249476866`, 0.003351029555673748, 0.31823124801421027`]], 
      Opacity[0.020264362559980327`, 
       RGBColor[
       0.17461688797073166`, 0.002955137401780888, 0.3162748127914157]], 
      Opacity[0.016965192900947963`, 
       RGBColor[
       0.17352496310834958`, 0.0024740218658063527`, 0.3138972173489231]], 
      Opacity[0.016269006961972927`, 
       RGBColor[
       0.17329454672660138`, 0.0023724975715794993`, 0.31339550064844884`]], 
      Opacity[0.02169054587131826, 
       RGBColor[
       0.17508891129081186`, 0.0031631166872213147`, 0.31730261290224443`]], 
      Opacity[0.03610981566239122, 
       RGBColor[
       0.17986125124585536`, 0.005265868418979235, 0.3276940730823741]], 
      Opacity[0.05974165029577413, 
       RGBColor[
       0.18768267010173223`, 0.008712081848644528, 0.34472470446207404`]], 
      Opacity[0.08794549358925179, 
       RGBColor[
       0.19701728483503722`, 0.012825028009365205`, 0.36505022154839945`]], 
      Opacity[0.11166019389847427`, 
       RGBColor[
       0.20486612971050047`, 0.016283325680874896`, 0.3821405713038052]], 
      Opacity[0.12194816504565913`, 
       RGBColor[
       0.20827113540589579`, 0.017783613105929637`, 0.38955474997299694`]], 
      Opacity[0.1158061624384645, 
       RGBColor[
       0.2062383192597936, 0.016887929287964322`, 0.38512842489248356`]], 
      Opacity[0.09809201316926515, 
       RGBColor[
       0.2003754743618264, 0.014304687654224456`, 0.37236246105222587`]], 
      Opacity[0.07770363384373177, 
       RGBColor[
       0.19362754061180637`, 0.011331464976815036`, 0.3576692737432662]], 
      Opacity[0.061568629293401435`, 
       RGBColor[
       0.18828734460978536`, 0.00897850888044364, 0.34604134391600333`]], 
      Opacity[0.05143790111029945, 
       RGBColor[
       0.18493438155531536`, 0.00750115208362617, 0.33874048471607376`]], 
      Opacity[0.04504448822431459, 
       RGBColor[
       0.1828183562498061, 0.006568805285720275, 0.33413297709727807`]], 
      Opacity[0.03932929575077292, 
       RGBColor[
       0.18092680128291502`, 0.005735362882242275, 0.3300142390563716]], 
      Opacity[0.03276415020217228, 
       RGBColor[
       0.17875393768675288`, 0.0047779724337946375`, 0.32528296975261844`]], 
      Opacity[0.02574509088115465, 
       RGBColor[
       0.1764308424308994, 0.0037543880667333484`, 0.32022458077084914`]], 
      Opacity[0.019856532722062576`, 
       RGBColor[
       0.17448190869240796`, 0.0028956638701548255`, 0.3159809041828387]], 
      Opacity[0.016987752401688875`, 
       RGBColor[
       0.17353242961728602`, 0.0024773117015565596`, 0.3139134751870127]], 
      Opacity[0.018480983869479523`, 
       RGBColor[
       0.17402664383888808`, 0.002695068571377813, 0.3149895945441017]], 
      Opacity[0.02415959108723654, 
       RGBColor[
       0.17590609019830625`, 0.003523175773346122, 0.3190819668789651]], 
      Opacity[0.03169994809641924, 
       RGBColor[
       0.17840171914149264`, 0.004622780606938188, 0.32451603675491636`]], 
      Opacity[0.03732976502356304, 
       RGBColor[
       0.18026501739794265`, 0.005443772755955381, 0.3285732476447531]], 
      Opacity[0.03796901591034113, 
       RGBColor[
       0.18047659000823923`, 0.005536994252513592, 0.32903393325722285`]], 
      Opacity[0.033221099334209754`, 
       RGBColor[
       0.17890517395820366`, 0.004844608996716288, 0.3256122769074684]], 
      Opacity[0.025347618055410265`, 
       RGBColor[
       0.1762992910087519, 0.003696424890735479, 0.31993813609637867`]], 
      Opacity[0.017328742032758932`, 
       RGBColor[
       0.17364528681908542`, 0.0025270379739429716`, 0.31415921441128986`]], 
      Opacity[0.01098267576507952, 
       RGBColor[
       0.17154493180489808`, 0.0016015956992949955`, 0.3095858278337059]], 
      Opacity[0.006609427766015363, 
       RGBColor[
       0.170097519663947, 0.0009638480923300288, 0.30643418193910993`]], 
      Opacity[0.0037611172532229977`, 
       RGBColor[
       0.16915481547285233`, 0.0005484810210330875, 0.3043815048130705]], 
      Opacity[0.0019644713895037537`, 
       RGBColor[
       0.1685601803099955, 0.00028647744831193195`, 0.3030867253810225]], 
      Opacity[0.0009086264829251164, 
       RGBColor[
       0.16821072774360313`, 0.000132504345793902, 0.30232581512259193`]], 
      Opacity[0.0003619663458886909, 
       RGBColor[
       0.16802979985671224`, 0.000052785291605178755`, 0.3019318564042666]], 
      Opacity[0.0001220550955244302, 
       RGBColor[
       0.16795039652614369`, 0.000017799206700658878`, 0.3017589608110051]], 
      Opacity[0.00003448556305034925, 
       RGBColor[
       0.16792141367300856`, 5.029004830027035*^-6, 0.3016958525313986]], 
      Opacity[8.10321361843036*^-6, 
       RGBColor[
       0.16791268191737002`, 1.1816858076618941`*^-6, 0.3016768397008217]], 
      Opacity[1.590091226740042*^-6, 
       RGBColor[
       0.1679105262718573, 2.3188185872981709`*^-7, 0.3016721459227759]], 
      Opacity[2.587162799271865*^-7, 
       RGBColor[
       0.16791008562722368`, 3.772840882606006*^-8, 0.3016711864477162]], 
      Opacity[0.00001458723778055299, 
       RGBColor[
       0.16791482793225335`, 2.1272463827268403`*^-6, 0.3016815125087977]], 
      Opacity[0.00007436032524307646, 
       RGBColor[
       0.16793461100710158`, 0.000010843912690763665`, 0.3017245888689193]], 
      Opacity[0.0003133711053654421, 
       RGBColor[
       0.16801371630939435`, 0.00004569868266824656, 0.301896835524974]], 
      Opacity[0.0010933947986524536`, 
       RGBColor[
       0.1682718804391521, 0.00015944897624323224`, 0.3024589711438919]], 
      Opacity[0.0031628784064696297`, 
       RGBColor[
       0.1689568166010379, 0.00046124028074301344`, 0.3039503751342228]], 
      Opacity[0.00759976986900068, 
       RGBColor[
       0.17042529279363522`, 0.0011082689681620635`, 0.30714788663268944`]], 
      Opacity[0.015210964444170283`, 
       RGBColor[
       0.17294436681770126`, 0.0022182039929989524`, 0.3126330066489651]], 
      Opacity[0.025469273712031473`, 
       RGBColor[
       0.17633955533276158`, 0.0037141658475484773`, 0.32002580904582645`]], 
      Opacity[0.03591210004391643, 
       RGBColor[
       0.179795813386695, 0.005237035692692301, 0.32755158639572907`]], 
      Opacity[0.04307643984992979, 
       RGBColor[
       0.18216699206655532`, 0.006281806208278569, 0.3327146739091617]], 
      Opacity[0.044652742505456276`, 
       RGBColor[
       0.18268870032593387`, 0.006511677289596085, 0.3338506597471462]], 
      Opacity[0.04103445198144841, 
       RGBColor[
       0.18149115615851918`, 0.005984024587649194, 0.33124308513032014`]], 
      Opacity[0.035057151414760956`, 
       RGBColor[
       0.17951285138088285`, 0.005112359149665571, 0.32693545501288845`]], 
      Opacity[0.030753291831645838`, 
       RGBColor[
       0.1780884046962031, 0.004484730405438794, 0.3238338149071947]], 
      Opacity[0.03244090485890418, 
       RGBColor[
       0.17864695330478958`, 0.004730833798122498, 0.3250500182119612]], 
      Opacity[0.043904152355466505`, 
       RGBColor[
       0.18244093974342782`, 0.006402510927007984, 0.33331117717642184`]], 
      Opacity[0.0665460501353285, 
       RGBColor[
       0.18993471959486963`, 0.009704362578078857, 0.3496283959115665]], 
      Opacity[0.09698613290346984, 
       RGBColor[
       0.20000946161260824`, 0.014143417931297317`, 0.37156549207165257`]], 
      Opacity[0.12675340054195972`, 
       RGBColor[
       0.20986152227601218`, 0.018484357138585598`, 0.3930177140508913]], 
      Opacity[0.1460814815644759, 
       RGBColor[
       0.21625852952080193`, 0.021302957277880792`, 0.40694678169536674`]], 
      Opacity[0.14988742516945455`, 
       RGBColor[
       0.2175181811533643, 0.021857975293515436`, 0.40968959128225996`]], 
      Opacity[0.14094831489692256`, 
       RGBColor[
       0.2145596074021085, 0.020554391278631488`, 0.4032474891655277]], 
      Opacity[0.1272330765157542, 
       RGBColor[
       0.21002028044118856`, 0.018554307940477344`, 0.39336339964061073`]], 
      Opacity[0.11573486276463547`, 
       RGBColor[0.2062147212352663, 0.0168775317078656, 0.3850770417273035]], 
      
      Opacity[0.10818327991605141`, 
       RGBColor[
       0.20371537688050356`, 0.01577628981819624, 0.37963488178404525`]], 
      Opacity[0.1016667323047793, 
       RGBColor[
       0.20155859772421988`, 0.014825986371958706`, 0.37493863530307736`]], 
      Opacity[0.09244711978833398, 
       RGBColor[
       0.19850718625749697`, 0.013481496916806496`, 0.36829438509283574`]], 
      Opacity[0.07914471420970676, 
       RGBColor[
       0.19410449440410096`, 0.011541616689007305`, 0.3587078096369955]], 
      Opacity[0.06335493208534165, 
       RGBColor[
       0.18887855653031269`, 0.009239004130454271, 0.34732866946029634`]], 
      Opacity[0.04852827707717192, 
       RGBColor[
       0.18397138445292077`, 0.007076843705804486, 0.33664362109416474`]], 
      Opacity[0.038539306780154194`, 
       RGBColor[
       0.18066533894930492`, 0.005620159359449004, 0.3294449218128585]], 
      Opacity[0.03623469873124919, 
       RGBColor[
       0.17990258374520204`, 0.005284080026994983, 0.327784071914216]], 
      Opacity[0.04177865062214756, 
       RGBColor[
       0.18173746328495194`, 0.006092550539599331, 0.3317794028948799]], 
      Opacity[0.051634484531208655`, 
       RGBColor[
       0.18499944469150031`, 0.007529819702357296, 0.3388821554677866]], 
      Opacity[0.0597645245731461, 
       RGBColor[
       0.18769024079216434`, 0.008715417588044203, 0.34474118914860147`]], 
      Opacity[0.06111327186437455, 
       RGBColor[
       0.1881366351436433, 0.008912104434425997, 0.3457131838454851]], 
      Opacity[0.05473979815831701, 
       RGBColor[
       0.1860272091005389, 0.007982665352772696, 0.34112004569180393`]], 
      Opacity[0.04371092579258915, 
       RGBColor[
       0.1823769876252029, 0.006374332836466706, 0.3331719255941311]], 
      Opacity[0.032104495753102515`, 
       RGBColor[
       0.17853561211760605`, 0.0046817755004379975`, 0.3248075800110105]], 
      Opacity[0.02230767723848817, 
       RGBColor[
       0.17529316301255154`, 0.003253112510161118, 0.31774735775553964`]], 
      Opacity[0.014728486169357739`, 
       RGBColor[
       0.17278468117607787`, 0.002147844533567397, 0.312285301539543]], 
      Opacity[0.009020898654416262, 
       RGBColor[
       0.17089564321929268`, 0.0013155111557264924`, 0.3081720441246052]], 
      Opacity[0.004945458585844057, 
       RGBColor[
       0.16954679644997336`, 0.000721192664843457, 0.3052350179226756]], 
      Opacity[0.002353952542420227, 
       RGBColor[
       0.1686890867313838, 0.00034327520441531116`, 0.3033674107381928]], 
      Opacity[0.0009535533166550187, 
       RGBColor[
       0.168225597159792, 0.00013905599360941338`, 0.30235819231023653`]], 
      Opacity[0.0003249662728041624, 
       RGBColor[
       0.16801755395732348`, 0.00004738959758731458, 0.30190519175399716`]], 
      Opacity[0.00009256282807211577, 
       RGBColor[
       0.1679406354821819, 0.000013498370572520432`, 0.30173770677198003`]], 
      Opacity[0.000021933349561028806`, 
       RGBColor[
       0.16791725927193088`, 3.198524574473147*^-6, 0.30168680659297475`]], 
      Opacity[4.333036363964696*^-6, 
       RGBColor[
       0.16791143410331216`, 6.318835731707895*^-7, 0.30167412266678467`]], 
      Opacity[7.106583786568657*^-7, 
       RGBColor[
       0.1679102352063193, 1.036347996854981*^-7, 0.30167151214647836`]], 
      Opacity[0.000020806531224864357`, 
       RGBColor[
       0.1679168863293169, 3.0342014678194875`*^-6, 0.3016859945346639]], 
      Opacity[0.00010616559943476577`, 
       RGBColor[
       0.16794513758597868`, 0.0000154820529263403, 0.30174750981048354`]], 
      Opacity[0.0004477821107025254, 
       RGBColor[
       0.16805820226606638`, 0.00006529974280062957, 0.30199370080525306`]], 
      Opacity[0.001564552912898116, 
       RGBColor[
       0.16842781945176072`, 0.00022815762480983494`, 0.30279851821206316`]], 
      
      Opacity[0.004536865651935513, 
       RGBColor[
       0.16941156461007484`, 0.0006616078514784865, 0.304940559377679]], 
      Opacity[0.010947845102056044`, 
       RGBColor[
       0.17153340391428945`, 0.0015965163687843593`, 0.3095607266009042]], 
      Opacity[0.02207547566041537, 
       RGBColor[
       0.1752163113491374, 0.003219250721215898, 0.3175800182517181]], 
      Opacity[0.03743727469602726, 
       RGBColor[
       0.18030059983123425`, 0.005459450814083875, 0.3286507260813576]], 
      Opacity[0.05392658106955314, 
       RGBColor[
       0.18575805896595757`, 0.007864074490234565, 0.34053398876117336`]], 
      Opacity[0.0669438655906176, 
       RGBColor[
       0.19006638441698048`, 0.009762375719496539, 0.34991508750708933`]], 
      Opacity[0.07305382302996286, 
       RGBColor[
       0.19208859458669758`, 0.010653386413706903`, 0.3543183187631236]], 
      Opacity[0.07184073220723444, 
       RGBColor[0.1916870984023355, 0.01047648225245381, 0.3534440869079802]], 
      Opacity[0.0656335431909755, 
       RGBColor[
       0.18963270753649988`, 0.00957129234738886, 0.3489707842770157]], 
      Opacity[0.058301816251891715`, 
       RGBColor[
       0.1872061288041621, 0.008502111886705667, 0.34368706674880634`]], 
      Opacity[0.05461061024021493, 
       RGBColor[
       0.18598445182695983`, 0.007963825971691171, 0.34102694450664245`]], 
      Opacity[0.059659223693967076`, 
       RGBColor[
       0.1876553894023028, 0.008700061636650158, 0.3446653025115681]], 
      Opacity[0.07710825502588181, 
       RGBColor[
       0.19343048832261409`, 0.011244641312480725`, 0.3572402051865761]], 
      Opacity[0.10648351831724727`, 
       RGBColor[
       0.203152807464052, 0.01552841480807098, 0.37840992343139535`]], 
      Opacity[0.1417837919816769, 
       RGBColor[
       0.2148361249186588, 0.020676228300357716`, 0.4038495880917168]], 
      Opacity[0.17359707275731576`, 
       RGBColor[
       0.2253653537316597, 0.025315536130306973`, 0.4267762997192365]], 
      Opacity[0.19430718180127052`, 
       RGBColor[
       0.23221977023789375`, 0.028335676420908385`, 0.44170134631137625`]], 
      Opacity[0.20264009859898105`, 
       RGBColor[
       0.2349777123772653, 0.029550859677818415`, 0.447706586128815]], 
      Opacity[0.20340539940846783`, 
       RGBColor[
       0.23523100368006084`, 0.02966246294384929, 0.4482581114836236]], 
      Opacity[0.20235957432093898`, 
       RGBColor[
       0.2348848673691714, 0.02950995102432902, 0.44750442215608466`]], 
      Opacity[0.20096153153556018`, 
       RGBColor[
       0.23442215770771174`, 0.029306075451528038`, 0.44649690193176816`]], 
      Opacity[0.19582162882788312`, 
       RGBColor[
       0.23272100616451294`, 0.028556527140397442`, 0.44279275497492065`]], 
      Opacity[0.18259479908486617`, 
       RGBColor[
       0.22834332761519852`, 0.026627668082290692`, 0.4332606443635353]], 
      Opacity[0.1599993092819148, 
       RGBColor[
       0.2208649073933116, 0.023332584073078953`, 0.4169768702237893]], 
      Opacity[0.13089531107661453`, 
       RGBColor[
       0.21123236874890267`, 0.019088368969678724`, 0.39600264317796624`]], 
      Opacity[0.1010132669812899, 
       RGBColor[0.2013423205674907, 0.01473069199432928, 0.3744677058464179]], 
      Opacity[0.07703595898239057, 
       RGBColor[
       0.1934065605300182, 0.011234098432511549`, 0.3571881039728527]], 
      Opacity[0.06435138728141379, 
       RGBColor[
       0.1892083529079746, 0.009384316474249732, 0.3480467796448826]], 
      Opacity[0.06437398456659886, 
       RGBColor[
       0.1892158319224134, 0.009387611820078225, 0.34806306471289106`]], 
      Opacity[0.07290724538030326, 
       RGBColor[
       0.19204008184062082`, 0.010632011100592951`, 0.3542126854105472]], 
      Opacity[0.08183862895039956, 
       RGBColor[
       0.19499609828826214`, 0.011934468336023922`, 0.36064921916481396`]], 
      Opacity[0.0840257067114103, 
       RGBColor[
       0.19571995453999277`, 0.012253408311216131`, 0.3622253691220372]], 
      Opacity[0.07754252829222241, 
       RGBColor[
       0.19357421957186555`, 0.011307971070234424`, 0.35755317064320885`]], 
      Opacity[0.06546513238905459, 
       RGBColor[
       0.18957696868075244`, 0.00954673312140051, 0.3488494165401316]], 
      Opacity[0.0520035160506765, 
       RGBColor[
       0.18512158290588598`, 0.007583635303138597, 0.3391481034939576]], 
      Opacity[0.03939048857681563, 
       RGBColor[
       0.18094705424807322`, 0.005744286588005248, 0.33005833857211314`]], 
      Opacity[0.028014304366223895`, 
       RGBColor[
       0.17718188311036737`, 0.004085305835427286, 0.3218599230532239]], 
      Opacity[0.018082336519722745`, 
       RGBColor[
       0.17389470368499804`, 0.002636934115388874, 0.3147023034315187]], 
      Opacity[0.010245603038300624`, 
       RGBColor[
       0.17130098313934514`, 0.0014941089142411926`, 0.3090546454644763]], 
      Opacity[0.004977720359920008, 
       RGBColor[
       0.1695574741164346, 0.0007258973761284756, 0.3052582678476377]], 
      Opacity[0.00204481858548177, 
       RGBColor[
       0.16858677278930947`, 0.000298194422051425, 0.30314462877694254`]], 
      Opacity[0.0007047720899864508, 
       RGBColor[
       0.168143258136714, 0.00010277640644681932`, 0.3021789044372757]], 
      Opacity[0.00020292785910176002`, 
       RGBColor[
       0.16797716295235576`, 0.00002959282358475111, 0.301817242964994]], 
      Opacity[0.000048667513739920254`, 
       RGBColor[
       0.1679261074675555, 7.097148488082678*^-6, 0.3017060729640559]], 
      Opacity[9.733447332585767*^-6, 
       RGBColor[
       0.1679132214751703, 1.419421616428903*^-6, 0.3016780145528753]], 
      Opacity[1.6193492926721143`*^-6, 
       RGBColor[
       0.16791053595538766`, 2.3614854141888371`*^-7, 0.3016721670080342]], 
      Opacity[0.000023809954048927284`, 
       RGBColor[
       0.1679178803709676, 3.4721884557881507`*^-6, 0.3016881589957727]], 
      Opacity[0.00012170822767346331`, 
       RGBColor[
       0.1679502817234298, 0.00001774862321169723, 0.30175871083555467`]], 
      Opacity[0.0005141693356108265, 
       RGBColor[
       0.1680801744193394, 0.0000749809440102052, 0.3020415437414141]], 
      Opacity[0.0018012113575952046`, 
       RGBColor[
       0.16850614620253876`, 0.0002626693554059312, 0.3029690696227791]], 
      Opacity[0.005246601014404075, 
       RGBColor[
       0.16964646543909692`, 0.0007651080483778159, 0.30545204067072534`]], 
      Opacity[0.012758359507145082`, 
       RGBColor[
       0.172132629142736, 0.0018605423809081223`, 0.3108655006025448]], 
      Opacity[0.026065628066948822`, 
       RGBColor[
       0.17653693049506683`, 0.0038011317737509384`, 0.3204555806377421]], 
      Opacity[0.04518074618936951, 
       RGBColor[
       0.18286345349399716`, 0.006588675686658499, 0.3342311734164128]], 
      Opacity[0.06740406539672393, 
       RGBColor[
       0.19021869656272755`, 0.009829486325877164, 0.350246737308317]], 
      Opacity[0.08821949184601188, 
       RGBColor[
       0.19710796992847782`, 0.012864984977869783`, 0.3652476824473078]], 
      Opacity[0.10352354673887094`, 
       RGBColor[
       0.2021731468547454, 0.015096764283975899`, 0.3762767761058591]], 
      Opacity[0.11111759580593668`, 
       RGBColor[
       0.20468654623685253`, 0.016204198991710765`, 0.38174953995796623`]], 
      Opacity[0.11080031383059968`, 
       RGBColor[
       0.20458153554838804`, 0.016157929989690394`, 0.3815208860066664]], 
      Opacity[0.10445631518898525`, 
       RGBColor[
       0.20248186485557237`, 0.015232789235462783`, 0.376948989494407]], 
      Opacity[0.09670238671798959, 
       RGBColor[
       0.1999155502510983, 0.014102039429365984`, 0.37136100618364265`]], 
      Opacity[0.09460881841161861, 
       RGBColor[
       0.19922264278616603`, 0.013796735870617086`, 0.36985224519884546`]], 
      Opacity[0.10537627350127685`, 
       RGBColor[
       0.2027863430902082, 0.015366946093774283`, 0.377611971067543]], 
      Opacity[0.13283384498355752`, 
       RGBColor[
       0.21187396454067003`, 0.0193710639735838, 0.39739967632830653`]], 
      Opacity[0.1746569234278659, 
       RGBColor[
       0.2257161320841514, 0.025470093390500815`, 0.42754009679075833`]], 
      Opacity[0.22232983519586008`, 
       RGBColor[0.2414944166228397, 0.03242219978913093, 0.4618962862154575]], 
      Opacity[0.26507717216199317`, 
       RGBColor[0.255642485639586, 0.03865601316081951, 0.4927027872606884]], 
      
      Opacity[0.2959507201925171, 
       RGBColor[0.2658606914818293, 0.04315828044115624, 0.5149522665773963]], 
      Opacity[0.3150090514867732, 
       RGBColor[
       0.2721684197669567, 0.045937543171799065`, 0.5286869350879051]], 
      Opacity[0.3262485938497911, 
       RGBColor[
       0.2758883666070278, 0.047576597542127466`, 0.536786877637041]], 
      Opacity[0.33148540379849134`, 
       RGBColor[
       0.27762159150102517`, 0.04834027776644326, 0.540560862231359]], 
      Opacity[0.3277743245411344, 
       RGBColor[
       0.27639333708364944`, 0.04779909375031997, 0.5378864180405718]], 
      Opacity[0.31044097580605645`, 
       RGBColor[0.2706565255861402, 0.04527138398429463, 0.5253948837410766]], 
      Opacity[0.2776666727146856, 
       RGBColor[0.2598092276017104, 0.04049193096197825, 0.5017755971585944]], 
      Opacity[0.23253208756934005`, 
       RGBColor[
       0.24487105200998943`, 0.03390998690713381, 0.469248690381741]], 
      Opacity[0.1824219500185172, 
       RGBColor[
       0.2282861198288486, 0.026602461627396348`, 0.4331360781257047]], 
      Opacity[0.13715595523930244`, 
       RGBColor[
       0.21330445164316983`, 0.020001354200259704`, 0.40051446905134086`]], 
      Opacity[0.10584259465572228`, 
       RGBColor[
       0.20294068121616654`, 0.015434949371975829`, 0.37794803230904717`]], 
      Opacity[0.0926239963403328, 
       RGBColor[
       0.19856572701916142`, 0.013507290697033368`, 0.3684218537978067]], 
      Opacity[0.09390093758962637, 
       RGBColor[
       0.19898835575366358`, 0.013693506120020148`, 0.3693421004078406]], 
      Opacity[0.10026881433643953`, 
       RGBColor[
       0.20109592937340565`, 0.014622129001136654`, 0.3739312050300073]], 
      Opacity[0.10268336861268898`, 
       RGBColor[
       0.20189507343639423`, 0.014974241712763034`, 0.3756712893045898]], 
      Opacity[0.09772684273931109, 
       RGBColor[
       0.2002546140506927, 0.014251435113346964`, 0.3720992955773571]], 
      Opacity[0.08737328894133521, 
       RGBColor[
       0.19682790249159815`, 0.012741583817546876`, 0.3646378538002496]], 
      Opacity[0.07465402405895652, 
       RGBColor[
       0.19261821248118322`, 0.010886742577620307`, 0.3554715273176431]], 
      Opacity[0.06069339264414008, 
       RGBColor[
       0.18799766788607397`, 0.008850873750052245, 0.3454105916712107]], 
      Opacity[0.045615346646347484`, 
       RGBColor[
       0.18300729303340296`, 0.006652053158387268, 0.3345443746678207]], 
      Opacity[0.030577740128906423`, 
       RGBColor[
       0.1780303024193681, 0.004459129827025531, 0.32370730097445033`]], 
      Opacity[0.017772269302965448`, 
       RGBColor[
       0.17379208086229475`, 0.0025917172364175534`, 0.3144788489027678]], 
      Opacity[0.008798297708054046, 
       RGBColor[
       0.17082196907311556`, 0.0012830494199911717`, 0.3080116234581152]], 
      Opacity[0.0036730747089836423`, 
       RGBColor[
       0.16912567606720244`, 0.0005356418401972941, 0.30431805565053477`]], 
      Opacity[0.001286184305859351, 
       RGBColor[
       0.16833568790523656`, 0.00018756333127076892`, 0.3025979077555453]], 
      Opacity[0.0003766565024211163, 
       RGBColor[
       0.1680346618519437, 0.00005492754655538965, 0.301942443082986]], 
      Opacity[0.00009206813420359977, 
       RGBColor[
       0.16794047175355012`, 0.000013426229721854328`, 0.3017373502635222]], 
      Opacity[0.00001879679313151419, 
       RGBColor[
       0.16791622116710403`, 2.74112280867766*^-6, 0.3016845461871628]], 
      Opacity[3.200337248505505*^-6, 
       RGBColor[
       0.16791105921433902`, 4.667028767067389*^-7, 0.3016733063704031]], 
      Opacity[0.000021375465387367008`, 
       RGBColor[
       0.16791707462922909`, 3.117168727104652*^-6, 0.30168640454548834`]], 
      Opacity[0.0001097012879751633, 
       RGBColor[
       0.16794630779140063`, 0.00001599765984049072, 0.3017500578567584]], 
      Opacity[0.00046522333741329046`, 
       RGBColor[
       0.16806397478189433`, 0.00006784318433417722, 0.3020062700834123]], 
      Opacity[0.0016392343476991987`, 
       RGBColor[
       0.16845253673636426`, 0.0002390483646762438, 0.3028523384933378]], 
      Opacity[0.004819929126740063, 
       RGBColor[
       0.16950525001510552`, 0.0007028867942035322, 0.30514455326013634`]], 
      Opacity[0.011902008011277108`, 
       RGBColor[
       0.1718492028306892, 0.0017356612588387726`, 0.3102483582230454]], 
      Opacity[0.024925851703661163`, 
       RGBColor[
       0.17615969916802005`, 0.0036349190073316807`, 0.31963418393284865`]], 
      Opacity[0.044913787038434835`, 
       RGBColor[
       0.18277509813059598`, 0.006549745225888285, 0.33403878535329623`]], 
      Opacity[0.07095952002572628, 
       RGBColor[
       0.19139544395910663`, 0.010347975714497245`, 0.35280902830743605`]], 
      Opacity[0.1003577089435517, 
       RGBColor[
       0.20112535078596372`, 0.014635092437687704`, 0.37399526824426294`]], 
      Opacity[0.12925824713184847`, 
       RGBColor[
       0.21069055034992903`, 0.01884963711329953, 0.3948228688176242]], 
      Opacity[0.15299752641862208`, 
       RGBColor[
       0.21854753011976077`, 0.022311519119408634`, 0.41193093177697104`]], 
      Opacity[0.16696112022867096`, 
       RGBColor[
       0.22316905517763513`, 0.024347819950940524`, 0.42199400231737116`]], 
      Opacity[0.16925016678472268`, 
       RGBColor[
       0.22392666000067293`, 0.024681629962096024`, 0.42364363759587886`]], 
      Opacity[0.16360166513127158`, 
       RGBColor[
       0.2220571776678309, 0.023857913032894442`, 0.41957296128149485`]], 
      Opacity[0.15935245509396562`, 
       RGBColor[
       0.22065081832146777`, 0.023238253792585338`, 0.4165107051798017]], 
      Opacity[0.16787663477483053`, 
       RGBColor[
       0.22347206266077174`, 0.024481328778036496`, 0.4226537814246763]], 
      Opacity[0.1977041085419348, 
       RGBColor[
       0.23334404972248074`, 0.028831047801712202`, 0.4441493918415518]], 
      Opacity[0.25017333054471835`, 
       RGBColor[0.2507097671410532, 0.03648259666853828, 0.4819621132223434]], 
      Opacity[0.3172484806269429, 
       RGBColor[
       0.272909602733707, 0.046264117510921035`, 0.5303008128413197]], 
      Opacity[0.38418337370092615`, 
       RGBColor[0.295063017520446, 0.05602518477477699, 0.5785384341715032]], 
      
      Opacity[0.43731309872458013`, 
       RGBColor[0.3023264212139229, 0.07398687399148637, 0.6134113780757773]], 
      Opacity[0.47126875195725776`, 
       RGBColor[0.29659065943438156`, 0.0957365130046837, 0.632264344521715]], 
      Opacity[0.48882245251211054`, 
       RGBColor[
       0.29362550237961627`, 0.10698019745974796`, 0.642010566315622]], 
      Opacity[0.4941532937785732, 
       RGBColor[0.2927250209375584, 0.110394765054361, 0.6449703730622796]], 
      Opacity[0.4872536083821713, 
       RGBColor[0.2938905102749703, 0.10597530459963023`, 0.641139507657496]], 
      Opacity[0.4644246563297455, 
       RGBColor[
       0.29774675859250443`, 0.09135265950464444, 0.6284643438463016]], 
      Opacity[0.42247615944104, 
       RGBColor[
       0.30483266512814705`, 0.06448335858960413, 0.6051735651685645]], 
      Opacity[0.3623361438128976, 
       RGBColor[
       0.28783224858329715`, 0.05283921897021131, 0.5627939046136932]], 
      Opacity[0.29073196464528467`, 
       RGBColor[0.264133442045864, 0.04239723307720732, 0.5111912931547011]], 
      
      Opacity[0.21969482419035236`, 
       RGBColor[
       0.24062230808435123`, 0.03203793803140567, 0.4599973265361755]], 
      Opacity[0.16275879020047074`, 
       RGBColor[0.2217782116891337, 0.0237349971886057, 0.4189655309880642]], 
      
      Opacity[0.12846440186030705`, 
       RGBColor[
       0.21042781169794508`, 0.01873387122891924, 0.3942507724737778]], 
      Opacity[0.11556586618601923`, 
       RGBColor[0.2061587885052403, 0.01685288705848353, 0.3849552518417743]], 
      Opacity[0.11459747930667716`, 
       RGBColor[0.2058382818871392, 0.01671166789710763, 0.3842573695050506]], 
      Opacity[0.11504893025811055`, 
       RGBColor[
       0.20598769842795472`, 0.016777502664310474`, 0.3845827143146752]], 
      Opacity[0.11167361961774941`, 
       RGBColor[
       0.20487057321543867`, 0.01628528354385027, 0.38215024674710146`]], 
      Opacity[0.10452501349195266`, 
       RGBColor[
       0.20250460190542618`, 0.015242807459521742`, 0.3769984979431754]], 
      Opacity[0.09456391893323378, 
       RGBColor[
       0.1992077824237648, 0.01379018821201185, 0.36981988772523516`]], 
      Opacity[0.08111817889651611, 
       RGBColor[
       0.19475765122210836`, 0.01182940562339014, 0.360130016170822]], 
      Opacity[0.06363754898348156, 
       RGBColor[0.1889720941320433, 0.009280217949225848, 0.347532341510671]], 
      Opacity[0.04409507223985926, 
       RGBColor[
       0.18250412842119731`, 0.006430352636286664, 0.3334487664167238]], 
      Opacity[0.026341388789128114`, 
       RGBColor[
       0.17662819891098222`, 0.0038413457613186244`, 0.3206543116834393]], 
      Opacity[0.013375297123618544`, 
       RGBColor[
       0.17233681673888518`, 0.0019505099493233632`, 0.3113101058265332]], 
      Opacity[0.0057286316304466164`, 
       RGBColor[
       0.16980600291927628`, 0.0008354022260532561, 0.3057994231682295]], 
      Opacity[0.002061139919540401, 
       RGBColor[
       0.16859217465471432`, 0.00030057455044583454`, 0.3031563909878876]], 
      Opacity[0.0006215567905666526, 
       RGBColor[
       0.16811571640235112`, 0.00009064117924744573, 0.3021189341001624]], 
      Opacity[0.00015685034609609527`, 
       RGBColor[
       0.16796191269630728`, 0.000022873373038944386`, 0.30178403652329927`]], 
      Opacity[0.000033122001430652755`, 
       RGBColor[
       0.1679209623755647, 4.830157620791062*^-6, 0.3016948698605366]], 
      Opacity[5.84482198249327*^-6, 
       RGBColor[
       0.1679119344583936, 8.523461814351661*^-7, 0.30167521215746507`]], 
      Opacity[0.000015568824541609185`, 
       RGBColor[
       0.167915152807631, 2.2703904733491973`*^-6, 0.30168221990382454`]], 
      Opacity[0.00008070602943732807, 
       RGBColor[
       0.16793671124228046`, 0.000011769302164504359`, 0.3017291619945633]], 
      Opacity[0.00034579438233566667`, 
       RGBColor[
       0.1680244474284039, 0.00005042694580405498, 0.30192020183938706`]], 
      Opacity[0.0012357441132781048`, 
       RGBColor[
       0.16831899373487402`, 0.00018020767430358445`, 0.3025615572842468]], 
      Opacity[0.003708831853143064, 
       RGBColor[
       0.16913751059490204`, 0.0005408562787849188, 0.304343824565679]], 
      Opacity[0.009437313515109862, 
       RGBColor[
       0.1710334638791705, 0.0013762366350427403`, 0.30847213965690395`]], 
      Opacity[0.020637895141258213`, 
       RGBColor[
       0.17474051589974418`, 0.003009609389165184, 0.31654400457439585`]], 
      Opacity[0.03947628360356141, 
       RGBColor[
       0.1809754497937573, 0.005756798014983165, 0.3301201680279039]], 
      Opacity[0.06731464410382539, 
       RGBColor[
       0.19018910083318544`, 0.0098164460831171, 0.35018229453015454`]], 
      Opacity[0.10390078079566356`, 
       RGBColor[
       0.20229799985962843`, 0.015151776054869443`, 0.3765486354119507]], 
      Opacity[0.14620104734158887`, 
       RGBColor[
       0.21629810215822673`, 0.021320393469069818`, 0.4070329485422167]], 
      Opacity[0.18754015617031194`, 
       RGBColor[
       0.22998009047162565`, 0.027348845945404147`, 0.4368245891384467]], 
      Opacity[0.21935615392137653`, 
       RGBColor[
       0.2405102185208964, 0.031988549989923516`, 0.45975325879451806`]], 
      Opacity[0.23636956419714733`, 
       RGBColor[
       0.24614114011450416`, 0.03446960336078377, 0.47201422470822435`]], 
      Opacity[0.24144618427789433`, 
       RGBColor[
       0.24782134703198094`, 0.03520992321199265, 0.4756727661033919]], 
      Opacity[0.24554774328770124`, 
       RGBColor[
       0.24917883837683313`, 0.03580805060927031, 0.4786286153068826]], 
      Opacity[0.2629554816400591, 
       RGBColor[0.2549402705762177, 0.03834660855962304, 0.4911737595850369]], 
      Opacity[0.3052247959529931, 
       RGBColor[0.2689301286266437, 0.0445107122319719, 0.5216357665305046]], 
      
      Opacity[0.37564745790602205`, 
       RGBColor[0.2922378888841729, 0.0547803983202655, 0.5723869001223518]], 
      
      Opacity[0.4654487784706757, 
       RGBColor[0.2975737646997562, 0.0920086411969424, 0.6290329602185797]], 
      
      Opacity[0.5554854389025523, 
       RGBColor[0.282364844048932, 0.14967988812976782`, 0.6790234029408796]], 
      Opacity[0.6254781277083753, 
       RGBColor[
       0.2705417350500034, 0.19451235548529755`, 0.7178849675962528]], 
      Opacity[0.6649553416257863, 
       RGBColor[
       0.2638732756568455, 0.21979872373941084`, 0.7398036326345623]], 
      Opacity[0.6764644468174318, 
       RGBColor[
       0.2619291668151569, 0.22717065917437124`, 0.7461937548482043]], 
      Opacity[0.6689615068141006, 
       RGBColor[
       0.26319655743816756`, 0.22236479561192074`, 0.7420279484901467]], 
      Opacity[0.6487858231532391, 
       RGBColor[0.2666046177816134, 0.2094416504301369, 0.7308259408457755]], 
      
      Opacity[0.6157951801478148, 
       RGBColor[
       0.27217737080557525`, 0.1883101301126095, 0.7125087704662462]], 
      Opacity[0.5655553564319326, 
       RGBColor[
       0.2806638416358031, 0.15612997965520237`, 0.6846144547752782]], 
      Opacity[0.49459298511324284`, 
       RGBColor[
       0.2926507486290591, 0.11067640086153471`, 0.6452144998921271]], 
      Opacity[0.40588402034785387`, 
       RGBColor[0.302245271860921, 0.05918977445083288, 0.5941773263471821]], 
      
      Opacity[0.31135864149700276`, 
       RGBColor[
       0.27096024503280636`, 0.04540520651128603, 0.5260562131027092]], 
      Opacity[0.2281982367221291, 
       RGBColor[
       0.24343667912862837`, 0.033277984558457645`, 0.46612543662770584`]], 
      Opacity[0.1699179205573975, 
       RGBColor[
       0.2241476661997136, 0.024779008013982473`, 0.42412486423491275`]], 
      Opacity[0.13887391453186046`, 
       RGBColor[
       0.21387304394304404`, 0.02025188296696275, 0.40175254184132037`]], 
      Opacity[0.12673065850864984`, 
       RGBColor[
       0.20985399535434443`, 0.01848104068424228, 0.39300132466800447`]], 
      Opacity[0.1222043421560932, 
       RGBColor[
       0.2083559222416653, 0.017820971229496718`, 0.3897393677990525]], 
      Opacity[0.11842969494104898`, 
       RGBColor[
       0.207106628762761, 0.017270517143872816`, 0.3870191124187521]], 
      Opacity[0.11359627112975756`, 
       RGBColor[
       0.2055069124173074, 0.01656566242953733, 0.38353583401447255`]], 
      Opacity[0.106700216706812, 
       RGBColor[
       0.20322452804336688`, 0.015560015778198365`, 0.37856609033297134`]], 
      Opacity[0.0952361945945023, 
       RGBColor[
       0.19943028523046458`, 0.013888225687656163`, 0.37030437313020814`]], 
      Opacity[0.077518765937728, 
       RGBColor[
       0.19356635495490346`, 0.0113045058231874, 0.3575360459507596]], 
      Opacity[0.05556893275240573, 
       RGBColor[
       0.18630162744549061`, 0.008103577453651745, 0.3417175738082259]], 
      Opacity[0.034299097457777254`, 
       RGBColor[
       0.17926195856596155`, 0.005001812686917487, 0.3263891522095896]], 
      Opacity[0.01799829208239232, 
       RGBColor[
       0.17386688753119256`, 0.002624677975604973, 0.31464173556389885`]], 
      Opacity[0.007974238015440428, 
       RGBColor[
       0.17054923036627512`, 0.0011628773883403064`, 0.3074177526445498]], 
      Opacity[0.002971543641646391, 
       RGBColor[
       0.16889349061045825`, 0.0004333380697498712, 0.3038124869041984]], 
      Opacity[0.0009290842000783054, 
       RGBColor[
       0.16821749862606625`, 0.00013548767995679524`, 0.3023405582792326]], 
      Opacity[0.00024327145184034767`, 
       RGBColor[
       0.16799051545510701`, 0.00003547610066643258, 0.30184631717218624`]], 
      Opacity[0.00005329544328963218, 
       RGBColor[
       0.1679276391715474, 7.772036122207892*^-6, 0.30170940814997926`]], 
      Opacity[9.75263228437196*^-6, 
       RGBColor[
       0.1679132278248061, 1.4222193441347182`*^-6, 0.3016780283787947]], 
      Opacity[9.882392486368814*^-6, 
       RGBColor[
       0.16791327077148827`, 1.441142180964574*^-6, 0.3016781218924047]], 
      Opacity[0.00005271665983158036, 
       RGBColor[
       0.1679274476118178, 7.687632547244285*^-6, 0.3017089910411142]], 
      Opacity[0.00023280199188192095`, 
       RGBColor[
       0.16798705038213238`, 0.00003394934685870638, 0.3018387722009192]], 
      Opacity[0.00086305617865338, 
       RGBColor[
       0.16819564535822645`, 0.0001258588611325738, 0.30229297420837803`]], 
      Opacity[0.002710509797122968, 
       RGBColor[
       0.16880709634334987`, 0.00039527169214738855`, 0.30362436900084167`]], 
      
      Opacity[0.007288662527925345, 
       RGBColor[
       0.17032232572140243`, 0.001062900408610333, 0.3069236825229548]], 
      Opacity[0.017007751324116083`, 
       RGBColor[
       0.17353904865264216`, 0.002480228130014895, 0.31392788770644386`]], 
      Opacity[0.0349485461983837, 
       RGBColor[
       0.17947690635586058`, 0.005096521329157033, 0.326857187056349]], 
      Opacity[0.06405460560193794, 
       RGBColor[
       0.18911012719423115`, 0.009341037015614577, 0.3478328995351995]], 
      Opacity[0.10553735198138482`, 
       RGBColor[
       0.20283965517033814`, 0.015390436052551922`, 0.3777280546581943]], 
      Opacity[0.15670824564517039`, 
       RGBColor[0.2197756653778838, 0.02285265063249833, 0.4146051165062276]], 
      Opacity[0.2099531828162427, 
       RGBColor[
       0.2373981209354187, 0.030617321483801044`, 0.452976868503631]], 
      Opacity[0.25548528060683967`, 
       RGBColor[0.25246786112833347`, 0.0372572345214934, 0.485790248651472]], 
      Opacity[0.2876920303298993, 
       RGBColor[
       0.2631273162014746, 0.041953921644747386`, 0.5090005194992908]], 
      Opacity[0.3101579101119322, 
       RGBColor[
       0.2705628394465821, 0.045230104717927794`, 0.5251908882592337]], 
      Opacity[0.33475001410664834`, 
       RGBColor[0.2787020782688717, 0.04881635353716237, 0.542913551966165]], 
      
      Opacity[0.3759689806030949, 
       RGBColor[
       0.29234430312261406`, 0.0548272857436833, 0.5726186102125332]], 
      Opacity[0.44466145453274314`, 
       RGBColor[0.3010851428294926, 0.0786937216281052, 0.6174913557023242]], 
      
      Opacity[0.5425040476056529, 
       RGBColor[0.2845576502816912, 0.14136490821576309`, 0.671815833324563]], 
      Opacity[0.6579326132537895, 
       RGBColor[
       0.2650595493152605, 0.21530045047893132`, 0.7359044509151315]], 
      Opacity[0.7675037236949352, 
       RGBColor[
       0.2465508849964305, 0.28548411274099794`, 0.7967408734818178]], 
      Opacity[0.845737229413948, 
       RGBColor[
       0.23682700392673042`, 0.33759945281665005`, 0.8374524872888125]], 
      Opacity[0.8784265593716325, 
       RGBColor[0.240506044180416, 0.36382032276816384`, 0.8484197051866877]], 
      Opacity[0.8690565469776057, 
       RGBColor[
       0.23945149051352282`, 0.3563044184426274, 0.8452760810205115]], 
      Opacity[0.8333569105315918, 
       RGBColor[0.23543365350992432`, 0.327668911817714, 0.8332989101122922]], 
      Opacity[0.7872081734184121, 
       RGBColor[0.2432224251127006, 0.2981054181095803, 0.8076812411115257]], 
      
      Opacity[0.7370903638043953, 
       RGBColor[
       0.25168828541845256`, 0.26600342143269123`, 0.7798546704806405]], 
      Opacity[0.6784898069660515, 
       RGBColor[
       0.2615870445991402, 0.22846796456862595`, 0.7473182817910734]], 
      Opacity[0.6022669024821663, 
       RGBColor[0.2744625566462344, 0.1796448526790717, 0.7049975568502362]], 
      
      Opacity[0.504857812844118, 
       RGBColor[
       0.29091682214062187`, 0.11725133835866813`, 0.6509137703923124]], 
      Opacity[0.39515377663827367`, 
       RGBColor[
       0.2986938873924587, 0.057624990736440264`, 0.5864444174102661]], 
      Opacity[0.29191782727647936`, 
       RGBColor[0.2645259265265654, 0.04257016657089334, 0.5120459026106385]], 
      Opacity[0.21285057260926804`, 
       RGBColor[0.2383570688762604, 0.03103984575119728, 0.4550649153393437]], 
      Opacity[0.16421218670369048`, 
       RGBColor[
       0.22225924174844575`, 0.023946944954224756`, 0.42001294268837774`]], 
      Opacity[0.13962487240226953`, 
       RGBColor[
       0.21412158816903018`, 0.020361394612514835`, 0.4022937307448071]], 
      Opacity[0.12784600526338036`, 
       RGBColor[
       0.2102231412236189, 0.01864369089843497, 0.39380511581393296`]], 
      Opacity[0.12104881332110212`, 
       RGBColor[
       0.20797347732535984`, 0.01765246129147073, 0.38890661884228944`]], 
      Opacity[0.11624960178173006`, 
       RGBColor[
       0.20638508420185847`, 0.016952595728116412`, 0.3854479960181102]], 
      Opacity[0.11125162397763433`, 
       RGBColor[
       0.20473090548722803`, 0.01622374422348915, 0.3818461293435171]], 
      Opacity[0.1021858766616359, 
       RGBColor[
       0.20173041872435096`, 0.014901692819735166`, 0.3753127643671825]], 
      Opacity[0.08597070145357494, 
       RGBColor[
       0.19636368867180912`, 0.012537045494069785`, 0.3636270583689003]], 
      Opacity[0.0638026438645759, 
       RGBColor[
       0.18902673551880114`, 0.009304293616867522, 0.34765131958013584`]], 
      Opacity[0.04079587976019538, 
       RGBColor[
       0.18141219600587996`, 0.005949233772395864, 0.3310711545282053]], 
      Opacity[0.022180254748179872`, 
       RGBColor[
       0.1752509900419032, 0.003234530580143652, 0.3176555288520461]], 
      Opacity[0.010179794111633078`, 
       RGBColor[
       0.17127920238520955`, 0.0014845120458476914`, 0.30900721928750124`]], 
      Opacity[0.003927081839591438, 
       RGBColor[
       0.16920974470561684`, 0.0005726835171686949, 0.3045011096485128]], 
      Opacity[0.0012697035228577595`, 
       RGBColor[
       0.16833023326707883`, 0.00018515995055181064`, 0.3025860306353596]], 
      Opacity[0.0003432788468746284, 
       RGBColor[
       0.16802361486263856`, 0.00005006010707895731, 0.3019183889815272]], 
      Opacity[0.00007748646385493131, 
       RGBColor[
       0.16793564566394747`, 0.000011299795233710659`, 0.3017268417669767]], 
      Opacity[0.000014577775257136188`, 
       RGBColor[
       0.16791482480044576`, 2.1258664697499855`*^-6, 0.30168150568949015`]], 
      
      Opacity[6.80422701507142*^-6, 
       RGBColor[
       0.16791225199229348`, 9.922555265644143*^-7, 0.301675903566901]], 
      Opacity[0.00003879411078345217, 
       RGBColor[
       0.16792283967132837`, 5.657317243791066*^-6, 0.30169895755008896`]], 
      Opacity[0.0001831541103462051, 
       RGBColor[
       0.16797061844263964`, 0.000026709232040827638`, 0.30180299272030187`]], 
      Opacity[0.0007276349372071053, 
       RGBColor[
       0.16815082504411347`, 0.00010611047899575738`, 0.3021953808864954]], 
      Opacity[0.002449314006678431, 
       RGBColor[
       0.16872064847706475`, 0.00035718169808783074`, 0.30343613438876016`]], 
      
      Opacity[0.007031937338861386, 
       RGBColor[
       0.17023735748826802`, 0.001025462359131272, 0.3067386697159231]], 
      Opacity[0.017358328009108383`, 
       RGBColor[
       0.1736550788778434, 0.0025313524755721088`, 0.31418053598301854`]], 
      Opacity[0.037181396082483616`, 
       RGBColor[
       0.18021591178886118`, 0.005422136220103406, 0.32846632337150383`]], 
      Opacity[0.0697485129612841, 
       RGBColor[
       0.19099463743539102`, 0.01017137542621473, 0.3519362981435412]], 
      Opacity[0.11557513433987836`, 
       RGBColor[
       0.2061618559824158, 0.016854238626687737`, 0.3849619310740216]], 
      Opacity[0.17058419693023652`, 
       RGBColor[0.2243681834243216, 0.0248761706177146, 0.4246050261638895]], 
      
      Opacity[0.22667881064328, 
       RGBColor[0.2429337952870821, 0.03305640774736586, 0.4650304397364773]], 
      Opacity[0.2760610464803308, 
       RGBColor[
       0.2592778141291765, 0.040257783644273175`, 0.5006184788495383]], 
      Opacity[0.3172960114831759, 
       RGBColor[0.2729253340021821, 0.04627104890146327, 0.5303350666563207]], 
      Opacity[0.3580654166620267, 
       RGBColor[
       0.28641876772646424`, 0.05221642190472335, 0.5597161418856562]], 
      Opacity[0.4116871033419843, 
       RGBColor[
       0.30416591591825515`, 0.06003603386564716, 0.5983594039925304]], 
      Opacity[0.4902708343117332, 
       RGBColor[
       0.29338084288472943`, 0.10790793049669517`, 0.6428147414932304]], 
      Opacity[0.5990921760491859, 
       RGBColor[
       0.27499882889551236`, 0.17761134287115177`, 0.7032348750809924]], 
      Opacity[0.7331234892689782, 
       RGBColor[0.2523583666914756, 0.2634625164303709, 0.7776521697070877]], 
      
      Opacity[0.8751670243459644, 
       RGBColor[
       0.24013919785523116`, 0.3612057741028628, 0.8473261364008321]], 
      Opacity[0.9980391253449405, 
       RGBColor[0.25396791218542153`, 0.4597643369468848, 0.888549529690627]], 
      Opacity[1.073761574594739, 
       RGBColor[
       0.26249014066970966`, 0.5205030702509708, 0.9139542902580156]], 
      Opacity[1.0869091842128746`, 
       RGBColor[0.2639698462827485, 0.5310490729502204, 0.9183652922487247]], 
      
      Opacity[1.0432723393063308`, 
       RGBColor[0.2590587113906346, 0.4960469472758798, 0.903725200601531]], 
      Opacity[0.9664882696762367, 
       RGBColor[
       0.25041700220367386`, 0.43445666363516594`, 0.8779642680951459]], 
      Opacity[0.8838798941373535, 
       RGBColor[
       0.24111979301362493`, 0.36819456910111514`, 0.8502492902752514]], 
      Opacity[0.8108208368861889, 
       RGBColor[0.2392337928898545, 0.3132300544417131, 0.8207915396826277]], 
      
      Opacity[0.7440869674372109, 
       RGBColor[0.2505064247300803, 0.2704849609951733, 0.783739347138784]], 
      Opacity[0.6685696874615615, 
       RGBColor[0.26326274324974297`, 0.222113823279929, 0.7418104012954081]], 
      Opacity[0.5724228889118563, 
       RGBColor[
       0.27950378354332034`, 0.1605288451791913, 0.6884274681348854]], 
      Opacity[0.4590982482323037, 
       RGBColor[0.2986464911871978, 0.08794093149097622, 0.625506998497934]], 
      
      Opacity[0.3466742627277293, 
       RGBColor[
       0.28264864206529144`, 0.05055525812811559, 0.5515069382138265]], 
      Opacity[0.25543894906466696`, 
       RGBColor[
       0.2524525267963532, 0.037250478026057056`, 0.4857568591398984]], 
      Opacity[0.19478808241936843`, 
       RGBColor[
       0.2323789337231054, 0.028405805811797157`, 0.4420479144591377]], 
      Opacity[0.16019247571147252`, 
       RGBColor[
       0.22092883960923576`, 0.023360753394421528`, 0.4171160784701132]], 
      Opacity[0.14074848407511736`, 
       RGBColor[
       0.21449346947494796`, 0.02052525009376583, 0.40310347812629765`]], 
      Opacity[0.12831112020820004`, 
       RGBColor[
       0.21037708013085987`, 0.018711518275955262`, 0.39414030778261844`]], 
      Opacity[0.1197997073564921, 
       RGBColor[
       0.20756006122389525`, 0.01747030506800795, 0.38800643214212494`]], 
      Opacity[0.11320912125263877`, 
       RGBColor[
       0.20537877757733736`, 0.016509204641705008`, 0.38325682872570865`]], 
      Opacity[0.10447151692687572`, 
       RGBColor[
       0.20248689616868126`, 0.015235006093954099`, 0.3769599448518035]], 
      Opacity[0.08947971722461377, 
       RGBColor[
       0.19752506621794352`, 0.013048762737469025`, 0.36615588251773284`]], 
      Opacity[0.06810924967391421, 
       RGBColor[
       0.19045209112087552`, 0.009932322841287144, 0.35075493879440145`]], 
      Opacity[0.044805640566243414`, 
       RGBColor[
       0.18273930493595336`, 0.006533974303714069, 0.3339608479975437]], 
      Opacity[0.025077117675304697`, 
       RGBColor[
       0.17620976360614854`, 0.003656978015064958, 0.31974319599404993`]], 
      Opacity[0.011837856926501812`, 
       RGBColor[
       0.17182797077182155`, 0.0017263061523347721`, 0.31020212679436604`]], 
      Opacity[0.004689333638975582, 
       RGBColor[
       0.1694620268787583, 0.000683842148251589, 0.30505043768906565`]], 
      Opacity[0.0015536333691038406`, 
       RGBColor[
       0.16842420541471895`, 0.00022656523560038734`, 0.3027906488812186]], 
      Opacity[0.00042945678787831217`, 
       RGBColor[
       0.16805213714130138`, 0.00006262737416740699, 0.301980494390145]], 
      Opacity[0.00009886379862458075, 
       RGBColor[
       0.16794272091188525`, 0.000014417236571487602`, 0.30174224765966307`]], 
      Opacity[0.000018927546831771755`, 
       RGBColor[
       0.1679162644426039, 2.760190526643556*^-6, 0.301684640416752]], 
      Opacity[6.929169385794167*^-6, 
       RGBColor[
       0.16791229334441996`, 1.0104757825284055`*^-6, 0.3016759936084696]], 
      Opacity[0.000042265606149538754`, 
       RGBColor[
       0.16792398863076108`, 6.163562913550809*^-6, 0.3017014593346027]], 
      Opacity[0.00021221693940712096`, 
       RGBColor[
       0.1679802373555488, 0.000030947443477544076`, 0.30182393727819445`]], 
      Opacity[0.0008894736181155058, 
       RGBColor[
       0.16820438872759824`, 0.00012971129730877918`, 0.30231201232710453`]], 
      
      Opacity[0.003124677672402675, 
       RGBColor[
       0.16894417331936404`, 0.00045566949519855796`, 0.3039228452098466]], 
      Opacity[0.009236054053489847, 
       RGBColor[
       0.17096685311566193`, 0.001346887112661506, 0.3083270990472475]], 
      Opacity[0.023092931076303128`, 
       RGBColor[
       0.1755530581611516, 0.0033676255119469097`, 0.3183132625555178]], 
      Opacity[0.049185684043695374`, 
       RGBColor[
       0.18418896617366823`, 0.007172712890399585, 0.33711739115421296`]], 
      Opacity[0.09002917940268133, 
       RGBColor[
       0.19770692149523367`, 0.01312889041128385, 0.3665518605683975]], 
      Opacity[0.14317962952728355`, 
       RGBColor[
       0.21529810471279323`, 0.020879782284630503`, 0.40485551907735395`]], 
      Opacity[0.2006935477020271, 
       RGBColor[
       0.23433346320552081`, 0.02926699556203227, 0.4463037754159719]], 
      Opacity[0.2530617476490877, 
       RGBColor[
       0.2516657453947195, 0.03690381245520815, 0.48404369375718026`]], 
      Opacity[0.2962325152563735, 
       RGBColor[0.2659539570813958, 0.04319937441242597, 0.5151553463607315]], 
      Opacity[0.3368490286479036, 
       RGBColor[
       0.27939678827198516`, 0.049122451316423156`, 0.5444262378607357]], 
      Opacity[0.3907878391084517, 
       RGBColor[0.2972488947945886, 0.05698830920994136, 0.5832980399135246]], 
      Opacity[0.4748936207557763, 
       RGBColor[0.2959783494968309, 0.09805835282610431, 0.6342769557756085]], 
      Opacity[0.5975482340447784, 
       RGBColor[0.2752596303437433, 0.1766224005874304, 0.7023776426606908]], 
      
      Opacity[0.7540548815308875, 
       RGBColor[
       0.24882265265570772`, 0.2768697161864941, 0.7892737642992003]], 
      Opacity[0.9276276276991943, 
       RGBColor[
       0.24604340793598242`, 0.4032856411384863, 0.8649265848888753]], 
      Opacity[1.0928947517896486`, 
       RGBColor[
       0.26464349557701705`, 0.5358502355687186, 0.9203734405938242]], 
      Opacity[1.2202989549430228`, 
       RGBColor[
       0.27898227806343545`, 0.6380441026955532, 0.9631173469050562]], 
      Opacity[1.283054484147311, 
       RGBColor[0.3211761300360821, 0.6827123163648183, 0.9751145334520118]], 
      
      Opacity[1.2676217638495666`, 
       RGBColor[0.3030370291375153, 0.6729803688680032, 0.9741655693078154]], 
      
      Opacity[1.1830662167963333`, 
       RGBColor[0.2747918972090734, 0.6081788596285684, 0.9506258228292229]], 
      
      Opacity[1.060454097785337, 
       RGBColor[
       0.26099244270770944`, 0.5098288343686874, 0.9094896530804241]], 
      Opacity[0.9381555372085586, 
       RGBColor[0.24722827782845955`, 0.411730321603448, 0.8684586816846118]], 
      Opacity[0.8408328099214417, 
       RGBColor[0.2362750330922946, 0.3336655041591785, 0.8358070623961478]], 
      
      Opacity[0.7673529679804036, 
       RGBColor[0.2465763505311246, 0.2853875490746249, 0.7966571704115772]], 
      
      Opacity[0.6971789053688838, 
       RGBColor[0.2584300970482124, 0.240438906224743, 0.7576949028114088]], 
      Opacity[0.6101192383125581, 
       RGBColor[
       0.27313614635963335`, 0.18467451500219445`, 0.7093573558774611]], 
      Opacity[0.5034828166428825, 
       RGBColor[0.2911490853989376, 0.1163706110518935, 0.6501503406014745]], 
      
      Opacity[0.3934079613180377, 
       RGBColor[
       0.29811607559424635`, 0.05737039974527729, 0.5851862697616714]], 
      Opacity[0.30115153926145494`, 
       RGBColor[0.267582004488748, 0.04391671214138971, 0.5187003138115486]], 
      
      Opacity[0.23755735287166996`, 
       RGBColor[
       0.24653426205699544`, 0.03464281772798156, 0.47287022219579145`]], 
      Opacity[0.19852018786390266`, 
       RGBColor[
       0.2336141471692407, 0.028950056061657663`, 0.44473751148290186`]], 
      Opacity[0.17265614131870136`, 
       RGBColor[
       0.22505393402979407`, 0.02517832077608447, 0.4260982035522137]], 
      Opacity[0.15163338159318543`, 
       RGBColor[
       0.21809603965254393`, 0.022112586861699486`, 0.41094784061917666`]], 
      Opacity[0.13352651270845597`, 
       RGBColor[
       0.2121032165005126, 0.019472075209184984`, 0.3978988575757369]], 
      Opacity[0.11859992467978231`, 
       RGBColor[
       0.20716296963129766`, 0.017295341624106883`, 0.3871417909993704]], 
      Opacity[0.10469810412949965`, 
       RGBColor[
       0.20256188964449884`, 0.01526804914256996, 0.3771232382728651]], 
      Opacity[0.08795464421400909, 
       RGBColor[
       0.1970203134136529, 0.012826362438385112`, 0.36505681608156004`]], 
      Opacity[0.06694119852838198, 
       RGBColor[
       0.19006550170045916`, 0.009761986783731004, 0.3499131654492167]], 
      Opacity[0.044506738964652785`, 
       RGBColor[
       0.18264037759243554`, 0.006490385698363262, 0.3337454401346137]], 
      Opacity[0.025290960159074494`, 
       RGBColor[
       0.17628053896746482`, 0.003688162510506519, 0.3198973047448474]], 
      Opacity[0.012135293562279652`, 
       RGBColor[
       0.17192641325619026`, 0.0017696811227758769`, 0.31041647890800156`]], 
      Opacity[0.004883497474010671, 
       RGBColor[
       0.16952628920557433`, 0.0007121569205167949, 0.30519036473040845`]], 
      Opacity[0.001641476523374461, 
       RGBColor[
       0.16845327882835065`, 0.0002393753395406008, 0.3028539543504224]], 
      Opacity[0.0004596015424764382, 
       RGBColor[
       0.1680621141386728, 0.0000670233620262284, 0.3020022186536885]], 
      Opacity[0.00010697820456726926`, 
       RGBColor[
       0.16794540653357434`, 0.000015600554547737588`, 0.30174809542639885`]], 
      Opacity[0.00002068140496315345, 
       RGBColor[
       0.1679168449163281, 3.015954395165094*^-6, 0.3016859043605715]], 
      Opacity[9.313825171631034*^-6, 
       RGBColor[
       0.16791308259299154`, 1.35822841882483*^-6, 0.30167771214595457`]], 
      Opacity[0.000058087823390536886`, 
       RGBColor[
       0.16792922530367244`, 8.470905461809154*^-6, 0.3017128618496262]], 
      Opacity[0.00029746925079404175`, 
       RGBColor[
       0.16800845327894762`, 0.00004337972666543454, 0.30188537561812967`]], 
      Opacity[0.0012655811786673938`, 
       RGBColor[
       0.16832886889647108`, 0.00018455879206661738`, 0.3025830598070081]], 
      Opacity[0.004486389076986729, 
       RGBColor[
       0.16939485839825466`, 0.0006542468888968392, 0.30490418268688885`]], 
      Opacity[0.013292376708134325`, 
       RGBColor[
       0.17230937260214055`, 0.0019384177248359987`, 0.31125034800189233`]], 
      Opacity[0.033051404123390214`, 
       RGBColor[
       0.1788490100021568, 0.004819862466303027, 0.3254899835423022]], 
      Opacity[0.06935368304073299, 
       RGBColor[
       0.19086396073451817`, 0.010113797663178303`, 0.35165175811781324`]], 
      Opacity[0.12371231090635273`, 
       RGBColor[
       0.2088550140557512, 0.018040877226609568`, 0.39082610779686455`]], 
      Opacity[0.18947718103610514`, 
       RGBColor[
       0.23062118681664728`, 0.027631320886924868`, 0.4382205347759485]], 
      Opacity[0.25286077779157573`, 
       RGBColor[0.2515992304813667, 0.03687450516558548, 0.4838988618550104]], 
      Opacity[0.30118779489979847`, 
       RGBColor[
       0.2675940040028683, 0.043921999275025284`, 0.5187264419739044]], 
      Opacity[0.33378678981693727`, 
       RGBColor[0.2783832803109958, 0.04867588723251529, 0.5422193901260651]], 
      Opacity[0.36691977745939175`, 
       RGBColor[0.2893492919778239, 0.05350764696466333, 0.5660971680388172]], 
      Opacity[0.4273574214018463, 
       RGBColor[0.3040081262627372, 0.067609956827868, 0.6078837550544816]], 
      Opacity[0.537494854010139, 
       RGBColor[0.2854037992564905, 0.1381563658354092, 0.6690346128270422]], 
      
      Opacity[0.7016298591057823, 
       RGBColor[0.2576782455037385, 0.2432898788265253, 0.7601661755882616]], 
      
      Opacity[0.9023974072639029, 
       RGBColor[
       0.24320385763896032`, 0.3830478959862251, 0.8564618863011878]], 
      Opacity[1.108461623839153, 
       RGBColor[0.2663954785319517, 0.5483367847910575, 0.9255961012594376]], 
      
      Opacity[1.2861676872346215`, 
       RGBColor[
       0.32483528434128284`, 0.6846755171750509, 0.9753059655551317]], 
      Opacity[1.4069343974281316`, 
       RGBColor[
       0.46678041774127227`, 0.7608315843032875, 0.9827319588716148]], 
      Opacity[1.4498872784846288`, 
       RGBColor[0.5172657909182756, 0.7879178772713437, 0.9853731487089312]], 
      
      Opacity[1.4062220942152477`, 
       RGBColor[
       0.46594320047823634`, 0.7603824024781873, 0.9826881590621332]], 
      Opacity[1.287472019532835, 
       RGBColor[
       0.32636835269903797`, 0.6854980353830995, 0.9753861694698819]], 
      Opacity[1.1284966288835474`, 
       RGBColor[0.2686503301956762, 0.5644073271492835, 0.932317813395824]], 
      Opacity[0.9747074503755712, 
       RGBColor[
       0.25134203482698886`, 0.4410494591590943, 0.8807217900690835]], 
      Opacity[0.8578300811899753, 
       RGBColor[
       0.23818800118557448`, 0.3472994097803628, 0.8415096197111068]], 
      Opacity[0.7790606075555081, 
       RGBColor[0.24459870542020962`, 0.292886651881167, 0.8031575235209134]], 
      Opacity[0.7144878823326971, 
       RGBColor[0.2555062785066667, 0.2515258377018378, 0.7673052483899836]], 
      
      Opacity[0.6381361955640933, 
       RGBColor[
       0.26840354435426983`, 0.20262023680272945`, 0.7249130205369216]], 
      Opacity[0.5428617010084417, 
       RGBColor[
       0.28449723575501484`, 0.14159399620736185`, 0.6720144107913502]], 
      Opacity[0.44284539032133596`, 
       RGBColor[
       0.30139191094323214`, 0.07753047671120634, 0.6164830347194612]], 
      Opacity[0.35872531991578305`, 
       RGBColor[
       0.2866371756423987, 0.052312655121088306`, 0.5601917109320438]], 
      Opacity[0.3004925900329205, 
       RGBColor[
       0.26736391232615964`, 0.04382061804983597, 0.5182254322975567]], 
      Opacity[0.26232337763655084`, 
       RGBColor[0.2547310633670182, 0.03825442928790631, 0.4907182244797694]], 
      Opacity[0.2309259901319987, 
       RGBColor[
       0.24433948258359153`, 0.033675770874236476`, 0.46809123249327883`]], 
      Opacity[0.1974806812494515, 
       RGBColor[
       0.23327010208085847`, 0.028798465560517014`, 0.44398837565649973`]], 
      Opacity[0.16231113329607127`, 
       RGBColor[
       0.2216300508625474, 0.0236697157045501, 0.41864292041458656`]], 
      Opacity[0.13021902775013702`, 
       RGBColor[
       0.21100853952685172`, 0.018989747059102502`, 0.395515269589747]], 
      Opacity[0.10354993997982109`, 
       RGBColor[
       0.20218188221514538`, 0.015100613191300525`, 0.3762957967855698]], 
      Opacity[0.08049060853428094, 
       RGBColor[
       0.19454994451034754`, 0.011737887489316047`, 0.3596777483012359]], 
      Opacity[0.05864980327732711, 
       RGBColor[
       0.18732130193077565`, 0.008552858584074254, 0.3439378487488943]], 
      Opacity[0.03828575241713138, 
       RGBColor[0.180581420163197, 0.005583183709248528, 0.3292621941085415]], 
      Opacity[0.021666841623352633`, 
       RGBColor[
       0.17508106590534436`, 0.0031596599138075452`, 0.3172855300851251]], 
      Opacity[0.010423971120069988`, 
       RGBColor[0.17136001755202113`, 0.0015201202031806, 0.309183189062451]], 
      Opacity[0.004217216181838364, 
       RGBColor[
       0.16930577035281658`, 0.0006149935994018377, 0.3047101992562413]], 
      Opacity[0.0014260464110118379`, 
       RGBColor[
       0.16838197801023402`, 0.00020795932136444037`, 0.30269870145158256`]], 
      
      Opacity[0.00040158477882078897`, 
       RGBColor[
       0.1680429123536124, 0.00005856281915439491, 0.30196040801431195`]], 
      Opacity[0.00009393519393571336, 
       RGBColor[
       0.16794108969356283`, 0.000013698501698305445`, 0.30173869578775064`]], 
      Opacity[0.000018246004794649552`, 
       RGBColor[
       0.16791603887290849`, 2.6608017420802917`*^-6, 0.30168414925339615`]], 
      
      Opacity[0.000011993298299461343`, 
       RGBColor[
       0.16791396941714085`, 1.748974055835672*^-6, 0.30167964314792034`]], 
      Opacity[0.00007503194805783598, 
       RGBColor[
       0.16793483329383593`, 0.000010941854962271619`, 0.3017250728838407]], 
      Opacity[0.00038582641742084754`, 
       RGBColor[
       0.1680376968150432, 0.00005626478865746165, 0.3019490515179453]], 
      Opacity[0.0016472806620378116`, 
       RGBColor[
       0.1684551998218024, 0.0002402217529028974, 0.30285813718885135`]], 
      Opacity[0.005852230746722507, 
       RGBColor[
       0.16984691046935046`, 0.0008534265961884055, 0.30588849670064067`]], 
      Opacity[0.017346993050619076`, 
       RGBColor[
       0.17365132735116617`, 0.0025296995067367834`, 0.3141723672774258]], 
      Opacity[0.043052908670857454`, 
       RGBColor[
       0.1821592039616302, 0.006278374673376899, 0.33269771581670177`]], 
      Opacity[0.0898887237525316, 
       RGBColor[
       0.1976604349448859, 0.01310840786495058, 0.36645063912537346`]], 
      Opacity[0.15886636235760748`, 
       RGBColor[0.2204899364029524, 0.023167367238829, 0.41616039525517273`]], 
      Opacity[0.23974845089079808`, 
       RGBColor[
       0.24725944889194706`, 0.03496234397452044, 0.4744492694115269]], 
      Opacity[0.3131260617000012, 
       RGBColor[0.2715452073904247, 0.04566294812694675, 0.527329930629819]], 
      
      Opacity[0.3624714019693159, 
       RGBColor[
       0.28787701492122364`, 0.05285894356977592, 0.5628913804059367]], 
      Opacity[0.3890009674538153, 
       RGBColor[0.2966574945978022, 0.05672773100309332, 0.5820103044099103]], 
      Opacity[0.41703897876923784`, 
       RGBColor[
       0.30575110933748334`, 0.06100067733912462, 0.6021547163169884]], 
      Opacity[0.4832176423141457, 
       RGBColor[
       0.2945722624344083, 0.10339014434818222`, 0.6388986456621154]], 
      Opacity[0.6148318880003324, 
       RGBColor[
       0.2723400893444943, 0.18769311189981225`, 0.7119739283175861]], 
      Opacity[0.8114871854093597, 
       RGBColor[0.2391212338303993, 0.3136568711410307, 0.821161511841978]], 
      Opacity[1.0429801219361496`, 
       RGBColor[
       0.2590258236113771, 0.49581255294381443`, 0.9036271621413831]], 
      Opacity[1.2647871817564436`, 
       RGBColor[
       0.29970535658721653`, 0.6711928677940856, 0.9739912697210764]], 
      Opacity[1.4385766265303555`, 
       RGBColor[0.5039716306491284, 0.7807853258578495, 0.9846776521960022]], 
      
      Opacity[1.5419465001555968`, 
       RGBColor[0.6254691068804832, 0.8459708643413201, 0.9910339070731677]], 
      
      Opacity[1.5646803161916039`, 
       RGBColor[0.652189670392987, 0.860306917855943, 0.9924318185147482]], 
      Opacity[1.5044418109709659`, 
       RGBColor[0.5813873553704245, 0.8223202273189837, 0.988727728733329]], 
      Opacity[1.3724119837718378`, 
       RGBColor[0.42620393268276335`, 0.739061584544043, 0.9806091618469238]], 
      Opacity[1.2006666121148466`, 
       RGBColor[
       0.27677274426043263`, 0.6222965450427194, 0.9565307272979516]], 
      Opacity[1.0343378035521043`, 
       RGBColor[
       0.2580531687034537, 0.48888034886618525`, 0.9007276781512453]], 
      Opacity[0.9075959299098996, 
       RGBColor[
       0.2437889284892676, 0.38721775160630434`, 0.8582059823312834]], 
      Opacity[0.8238660482268988, 
       RGBColor[
       0.23703020622635085`, 0.32158591305433015`, 0.8280345436678931]], 
      Opacity[0.7596048239437496, 
       RGBColor[
       0.24788516082328096`, 0.2804246247961632, 0.7923552210854853]], 
      Opacity[0.6880371903945005, 
       RGBColor[
       0.2599743082283133, 0.23458335695016647`, 0.7526192105698438]], 
      Opacity[0.6008599131451076, 
       RGBColor[
       0.27470022415945894`, 0.17874363278597322`, 0.7042163637281487]], 
      Opacity[0.5105280184542341, 
       RGBColor[
       0.28995901554512554`, 0.12088327924066383`, 0.6540620000958189]], 
      Opacity[0.43522129136804977`, 
       RGBColor[0.3026797676391421, 0.0726470071193067, 0.612249958101501]], 
      Opacity[0.3822574468864031, 
       RGBColor[
       0.29442559429301407`, 0.05574432825408241, 0.5771504865089003]], 
      Opacity[0.3434490394397448, 
       RGBColor[0.2815811912037565, 0.05008492613818959, 0.5491826333180359]], 
      Opacity[0.3037878703218235, 
       RGBColor[0.2684545499252658, 0.04430116640176489, 0.5206002248079029]], 
      Opacity[0.2542586172469654, 
       RGBColor[
       0.2520618728467812, 0.03707835108692054, 0.48490623554656087`]], 
      Opacity[0.197685937016097, 
       RGBColor[
       0.2333380354998428, 0.028828397861182773`, 0.44413629626251816`]], 
      Opacity[0.1439162430987216, 
       RGBColor[
       0.21554190141188664`, 0.020987202111391542`, 0.4053863705494916]], 
      Opacity[0.10064456439038628`, 
       RGBColor[
       0.20122029121846038`, 0.01467692436096367, 0.37420199486748484`]], 
      Opacity[0.06893254684980785, 
       RGBColor[
       0.19072457745786217`, 0.010052383675673746`, 0.35134826008900744`]], 
      Opacity[0.04570988761526046, 
       RGBColor[
       0.18303858322006772`, 0.00666583999981435, 0.3346125070162742]], 
      Opacity[0.028214033484170068`, 
       RGBColor[
       0.17724798737664238`, 0.0041144321888924125`, 0.32200386079806276`]], 
      Opacity[0.015525802572626706`, 
       RGBColor[
       0.17304856866714124`, 0.0022641166105883, 0.3128598994058415]], 
      Opacity[0.0073806532004017334`, 
       RGBColor[
       0.17035277183747569`, 0.0010763153421442806`, 0.3069899769625369]], 
      Opacity[0.002974298484020924, 
       RGBColor[
       0.168894402379537, 0.0004337398064298628, 0.30381447222212726`]], 
      Opacity[0.0010054910626033915`, 
       RGBColor[
       0.16824278697479342`, 0.0001466300377058875, 0.3023956220155329]], 
      Opacity[0.00028347257776220255`, 
       RGBColor[
       0.16800382080567292`, 0.00004133860191480601, 0.3018752887085585]], 
      Opacity[0.00006638214656495302, 
       RGBColor[
       0.16793197047249575`, 9.680460638421572*^-6, 0.3017188392763778]], 
      Opacity[0.000012922107838825696`, 
       RGBColor[
       0.16791427682486257`, 1.8844216822183073`*^-6, 0.3016803125082613]], 
      Opacity[0.000013815649637148421`, 
       RGBColor[
       0.16791457256003414`, 2.0147262393176157`*^-6, 0.30168095645238263`]], 
      
      Opacity[0.00008535714082975445, 
       RGBColor[
       0.16793825061875758`, 0.000012447570390061693`, 0.30173251388682465`]], 
      Opacity[0.0004380390885858629, 
       RGBColor[
       0.16805497762193364`, 0.0000638789249003326, 0.30198667935216794`]], 
      Opacity[0.001873353478121862, 
       RGBColor[0.1685300230513126, 0.0002731897889000069, 0.30302105990964]], 
      Opacity[0.006675069442488978, 
       RGBColor[
       0.1701192450633528, 0.0009734205707481691, 0.30648148758475746`]], 
      Opacity[0.019854392490747965`, 
       RGBColor[
       0.17448120034090586`, 0.0028953517617631825`, 0.3159793617934664]], 
      Opacity[0.049451173813663374`, 
       RGBColor[
       0.18427683521663865`, 0.0072114290724013845`, 0.33730872028618897`]], 
      Opacity[0.10359131890787167`, 
       RGBColor[
       0.20219557738241073`, 0.015106647450585313`, 0.3763256171224776]], 
      Opacity[0.1835840290090846, 
       RGBColor[
       0.22867073264752513`, 0.02677192676989392, 0.4339735475490262]], 
      Opacity[0.2775230144370016, 
       RGBColor[
       0.25976168107900866`, 0.04047098137877755, 0.5016720676946389]], 
      Opacity[0.3625801236922884, 
       RGBColor[
       0.2879129985063872, 0.052874798380357364`, 0.5629697323246783]], 
      Opacity[0.41929287566698004`, 
       RGBColor[
       0.30537038287663426`, 0.062444367541841204`, 0.6034061321650228]], 
      Opacity[0.44935695106520385`, 
       RGBColor[0.3002919833116266, 0.08170133140279978, 0.6200984043126659]], 
      Opacity[0.4817708157429898, 
       RGBColor[
       0.29481665922134676`, 0.1024634074828446, 0.6380953339834332]], 
      Opacity[0.5589927502005829, 
       RGBColor[
       0.28177239183031766`, 0.1519264287607595, 0.6809707435431683]], 
      Opacity[0.7100119445705759, 
       RGBColor[
       0.25626235033269396`, 0.24865886206439108`, 0.7648201039026978]], 
      Opacity[0.9286538112059641, 
       RGBColor[0.24615890037446195`, 0.4041087667367238, 0.865270867813503]], 
      Opacity[1.1737190818493342`, 
       RGBColor[0.2737399182981824, 0.6006813058340498, 0.9474898740099207]], 
      
      Opacity[1.3919504906800126`, 
       RGBColor[
       0.44916883720879985`, 0.7513826607851711, 0.9818105924521102]], 
      Opacity[1.5458682326470634`, 
       RGBColor[0.6300785794807413, 0.8484439276747548, 0.991275055972761]], 
      Opacity[1.6241322708909303`, 
       RGBColor[0.7220675003608974, 0.8977976058587209, 0.9960875429899917]], 
      
      Opacity[1.6303433385471475`, 
       RGBColor[0.7293677805921421, 0.9017143349358563, 0.9964694640245996]], 
      
      Opacity[1.5692417894097965`, 
       RGBColor[0.6575510727481506, 0.8631834047624068, 0.9927123053275242]], 
      
      Opacity[1.4487877891858023`, 
       RGBColor[0.5159734881392755, 0.787224534041955, 0.9853055406721507]], 
      Opacity[1.2919353657865102`, 
       RGBColor[0.33161441991717355`, 0.688312642954729, 0.9756606224163589]], 
      Opacity[1.1358668768383875`, 
       RGBColor[0.2694798191739024, 0.5703191740236132, 0.934790519792276]], 
      Opacity[1.0117263317340008`, 
       RGBColor[
       0.25550834704080216`, 0.4707431627347383, 0.8931415655346265]], 
      Opacity[0.9244125563670305, 
       RGBColor[
       0.24568156580386125`, 0.4007067578333028, 0.8638479336010485]], 
      Opacity[0.854368095696206, 
       RGBColor[0.2377983699509869, 0.34452247089774696`, 0.840348129117124]], 
      Opacity[0.7790748146328578, 
       RGBColor[
       0.24459630557206938`, 0.2928957519506509, 0.8031654116198621]], 
      Opacity[0.6922022520198584, 
       RGBColor[
       0.2592707493506071, 0.23725120687190138`, 0.7549317494136722]], 
      Opacity[0.6044300198231566, 
       RGBColor[
       0.2740971645954883, 0.18103039578694072`, 0.7061985697822764]], 
      Opacity[0.5298790586244996, 
       RGBColor[
       0.28669025332039644`, 0.13327821493367292`, 0.6648061465424823]], 
      Opacity[0.47270431821414755`, 
       RGBColor[
       0.29634816473072073`, 0.09665603729281703, 0.6330614042126773]], 
      Opacity[0.4240173563592086, 
       RGBColor[0.3045723273776875, 0.06547054256126045, 0.6060292734533002]], 
      Opacity[0.36962148291366964`, 
       RGBColor[
       0.29024347435134407`, 0.053901634725832745`, 0.5680441920596833]], 
      Opacity[0.30169671427738903`, 
       RGBColor[
       0.2677624408457017, 0.043996214621437366`, 0.5190932022553718]], 
      Opacity[0.22496895954375828`, 
       RGBColor[
       0.24236788655261385`, 0.0328070613926154, 0.4637982102358107]], 
      Opacity[0.15243953369809254`, 
       RGBColor[
       0.21836285149224421`, 0.022230147442728575`, 0.41152880606462916`]], 
      Opacity[0.09531649154530439, 
       RGBColor[
       0.19945686108015276`, 0.013899935334177825`, 0.37036224031619847`]], 
      Opacity[0.05664014525741899, 
       RGBColor[
       0.18665616621978987`, 0.008259791601984826, 0.3424895589539088]], 
      Opacity[0.03271004782993084, 
       RGBColor[
       0.17873603144625308`, 0.004770082723804377, 0.32524398007734756`]], 
      Opacity[0.018204287367170748`, 
       RGBColor[
       0.17393506570819756`, 0.0026547181196676056`, 0.31479018911460466`]], 
      Opacity[0.009407159563022023, 
       RGBColor[
       0.17102348383770957`, 0.0013718393059206162`, 0.30845040876505336`]], 
      Opacity[0.004326736593971067, 
       RGBColor[
       0.16934201827981196`, 0.000630964882248453, 0.30478912676214687`]], 
      Opacity[0.001716484871891297, 
       RGBColor[
       0.1684781043114559, 0.0002503137529988001, 0.3029080102269046]], 
      Opacity[0.0005763368056827296, 
       RGBColor[0.1681007499620421, 0.00008404678141021236, 0.3020863456488]], 
      Opacity[0.00016201978066040105`, 
       RGBColor[
       0.16796362362199727`, 0.00002362722795946421, 0.3017877619528257]], 
      Opacity[0.000037867504435536915`, 
       RGBColor[
       0.16792253299279603`, 5.522190907231155*^-6, 0.30169828977751056`]], 
      Opacity[7.379197157034723*^-6, 
       RGBColor[
       0.16791244228993138`, 1.0761030083884206`*^-6, 0.3016763179276434]], 
      Opacity[0.00001601198133316641, 
       RGBColor[
       0.16791529947905706`, 2.3350157091890978`*^-6, 0.3016825392713251]], 
      Opacity[0.00008999635084492578, 
       RGBColor[
       0.1679397860562406, 0.00001312410304634292, 0.30173585720218243`]], 
      Opacity[0.0004477997966305197, 
       RGBColor[
       0.1680582081195709, 0.00006530232192677512, 0.3019937135508788]], 
      Opacity[0.001901719276495219, 
       RGBColor[
       0.16853941126825392`, 0.0002773263528534187, 0.3030415021420516]], 
      Opacity[0.0067886476945205705`, 
       RGBColor[
       0.1701568360119964, 0.0009899836054655946, 0.30656333943304215`]], 
      Opacity[0.020306149833542137`, 
       RGBColor[
       0.17463071828794752`, 0.0029612312097975694`, 0.3163049274085597]], 
      Opacity[0.0509681434741143, 
       RGBColor[
       0.18477890605837022`, 0.007432647665766786, 0.3384019469231439]], 
      Opacity[0.10776628611402886`, 
       RGBColor[
       0.20357736460864567`, 0.015715479912282827`, 0.37933436902910944`]], 
      Opacity[0.19305620332651047`, 
       RGBColor[
       0.23180573439249383`, 0.028153247130638628`, 0.440799810159059]], 
      Opacity[0.2955111551681235, 
       RGBColor[
       0.26571520882153177`, 0.04309417899013573, 0.5146354875370047]], 
      Opacity[0.3918199052376053, 
       RGBColor[0.2975904773085281, 0.05713881467046821, 0.5840418136440778]], 
      Opacity[0.4613166531496471, 
       RGBColor[0.2982717600032841, 0.08936188798993372, 0.6267387083750372]], 
      Opacity[0.5051007218934882, 
       RGBColor[
       0.2908757901383295, 0.11740692906695577`, 0.6510486391320126]], 
      Opacity[0.5529335277014829, 
       RGBColor[
       0.2827959108474877, 0.14804531061077075`, 0.6776065226377059]], 
      Opacity[0.6479262270313195, 
       RGBColor[
       0.26674982007085113`, 0.2088910527072545, 0.7303486731362557]], 
      Opacity[0.8166887540424834, 
       RGBColor[
       0.23824258901814693`, 0.31698863564273483`, 0.8240495434234806]], 
      Opacity[1.0465038575171686`, 
       RGBColor[0.2594224045465842, 0.49863902300401525`, 0.904809369790838]], 
      Opacity[1.2885789271339378`, 
       RGBColor[
       0.32766937470127877`, 0.6861960566295114, 0.9754542336610367]], 
      Opacity[1.486924422925381, 
       RGBColor[0.5607980060458826, 0.8112736783339753, 0.9876505775354508]], 
      
      Opacity[1.6102615112319838`, 
       RGBColor[0.7057642755152964, 0.8890506382381429, 0.9952346244302592]], 
      
      Opacity[1.6607585754587608`, 
       RGBColor[0.765116828106092, 0.9208943293254568, 0.9983397091083894]], 
      Opacity[1.6558259759064877`, 
       RGBColor[0.7593192163276952, 0.9177838083713155, 0.9980364015888803]], 
      
      Opacity[1.6064358505518301`, 
       RGBColor[0.7012677224940425, 0.8866381582500666, 0.9949993830247723]], 
      
      Opacity[1.5158823240370802`, 
       RGBColor[0.5948341500270964, 0.8295346697729382, 0.9894312104579697]], 
      
      Opacity[1.394893835359046, 
       RGBColor[
       0.45262834564815463`, 0.7532387480678242, 0.9819915798937618]], 
      Opacity[1.2679410161179134`, 
       RGBColor[
       0.30341226752685374`, 0.6731816908808336, 0.9741852002574969]], 
      Opacity[1.1587730671977383`, 
       RGBColor[0.2720578101116098, 0.5886927607344649, 0.9424755100079337]], 
      
      Opacity[1.0720981576607977`, 
       RGBColor[
       0.26230293041282904`, 0.5191688049369835, 0.9133962165381453]], 
      Opacity[0.9937556183194015, 
       RGBColor[0.253485822317128, 0.45632843658433697`, 0.8871124199371699]], 
      Opacity[0.9082429090958613, 
       RGBColor[
       0.24386174314993916`, 0.3877367086212813, 0.8584230428130069]], 
      Opacity[0.8131632802081649, 
       RGBColor[
       0.23883810923786097`, 0.31473046134929755`, 0.8220921185596739]], 
      Opacity[0.7177934885185149, 
       RGBColor[0.2549478981542433, 0.2536431800120761, 0.7691405976344131]], 
      
      Opacity[0.631988044267632, 
       RGBColor[
       0.26944208515274704`, 0.19868215702613817`, 0.7214994243000163]], 
      Opacity[0.5576127524976386, 
       RGBColor[0.2820054999383009, 0.1510424978384943, 0.680204536802547]], 
      Opacity[0.4876541843354312, 
       RGBColor[0.2938228453054064, 0.10623188580338644`, 0.641361916720108]], 
      Opacity[0.4118792515596206, 
       RGBColor[
       0.304229511136987, 0.060064054701878346`, 0.5984978784493638]], 
      Opacity[0.32539650834334005`, 
       RGBColor[0.2756063522077919, 0.04745233852622327, 0.5361728096059515]], 
      Opacity[0.23392288866540217`, 
       RGBColor[
       0.24533136489243268`, 0.03411280642959576, 0.47025099177547436`]], 
      Opacity[0.15058935746432894`, 
       RGBColor[
       0.21775049940422597`, 0.021960337574685716`, 0.4101954491791592]], 
      Opacity[0.08678886946397435, 
       RGBColor[
       0.1966344774109438, 0.012656358345945364`, 0.3642166832544812]], 
      Opacity[0.04558354227389242, 
       RGBColor[
       0.18299676675297327`, 0.006647415149651294, 0.33452145437610625`]], 
      Opacity[0.022520588234558388`, 
       RGBColor[
       0.1753636300797565, 0.0032841611674221207`, 0.3179007952159404]], 
      Opacity[0.010749258931723377`, 
       RGBColor[
       0.17146767792892892`, 0.0015675566905467891`, 0.3094176125381787]], 
      Opacity[0.0049416445317975516`, 
       RGBColor[
       0.16954553411403123`, 0.0007206364640879741, 0.305232269268179]], 
      Opacity[0.002114260040442496, 
       RGBColor[
       0.16860975579988124`, 0.00030832101943050003`, 0.3031946727891935]], 
      Opacity[0.000806803137047355, 
       RGBColor[
       0.16817702731154732`, 0.00011765552057735711`, 0.3022524346213996]], 
      Opacity[0.0002657573115870887, 
       RGBColor[
       0.16799795759111305`, 0.0000387551974034808, 0.30186252193980345`]], 
      Opacity[0.0000739865388001317, 
       RGBColor[
       0.16793448729515206`, 0.00001078940368291527, 0.3017243194941871]], 
      Opacity[0.000017172958423091576`, 
       RGBColor[
       0.1679156837271801, 2.50432016230938*^-6, 0.3016833759466474]], 
      Opacity[3.3482145871063023`*^-6, 
       RGBColor[
       0.1679111081572426, 4.882677225232094*^-7, 0.3016734129403958]], 
      Opacity[0.000027689562962160177`, 
       RGBColor[
       0.16791916440357776`, 4.037949030286486*^-6, 0.30169095489335424`]], 
      Opacity[0.00010947498297805665`, 
       RGBColor[
       0.16794623289132626`, 0.000015964657945702256`, 0.30174989476671293`]], 
      Opacity[0.0004589416254421461, 
       RGBColor[
       0.16806189572619595`, 0.00006692712680025784, 0.30200174307471095`]], 
      Opacity[0.0018287061529056558`, 
       RGBColor[
       0.16851524614394472`, 0.0002666789016098017, 0.30298888415394254`]], 
      Opacity[0.006415677089005276, 
       RGBColor[
       0.17003339407987725`, 0.0009355935706021354, 0.3062945526462126]], 
      Opacity[0.01920642456900415, 
       RGBColor[
       0.17426674265703349`, 0.0028008590662721854`, 0.3155123941207365]], 
      Opacity[0.048620060683373253`, 
       RGBColor[
       0.18400176203635177`, 0.00709022844301263, 0.3367097663083711]], 
      Opacity[0.10411246239785328`, 
       RGBColor[
       0.20236806003483254`, 0.015182645430506018`, 0.3767011868914565]], 
      Opacity[0.18949242716869483`, 
       RGBColor[
       0.23062623282305206`, 0.027633544219463204`, 0.43823152212704203`]], 
      Opacity[0.29567675676395266`, 
       RGBColor[0.2657700179154627, 0.04311832855162235, 0.5147548307779426]], 
      Opacity[0.4013163603913421, 
       RGBColor[0.3007335152721783, 0.05852367588808994, 0.5908855745981545]], 
      Opacity[0.48625977883575644`, 
       RGBColor[0.2940583871668871, 0.10533872624470783`, 0.640587710436481]], 
      Opacity[0.5504265347607489, 
       RGBColor[
       0.2832193900894421, 0.14643950461740746`, 0.6762145819947742]], 
      Opacity[0.6211075272132751, 
       RGBColor[
       0.2712800133891553, 0.19171285160333867`, 0.7154583088034416]], 
      Opacity[0.7375565433012353, 
       RGBColor[
       0.25160953875078995`, 0.26630202372145145`, 0.7801135041526505]], 
      Opacity[0.9207473109284753, 
       RGBColor[0.24526905855683181`, 0.3977667794333436, 0.862618249620806]], 
      Opacity[1.1517732454895802`, 
       RGBColor[0.2712700109775721, 0.5830780413464876, 0.9401270810245613]], 
      
      Opacity[1.3786476803956822`, 
       RGBColor[0.4335331609750234, 0.7429938447663831, 0.9809925973266026]], 
      
      Opacity[1.5485633624615323`, 
       RGBColor[0.6332463445083061, 0.8501434894723819, 0.9914407805831046]], 
      
      Opacity[1.639784154705125, 
       RGBColor[0.7404641986928059, 0.9076677589209945, 0.99704998358648]], 
      Opacity[1.6666666666666667`, 
       RGBColor[0.772061, 0.92462, 0.998703]], 
      Opacity[1.6564543877676883`, 
       RGBColor[0.7600578305147119, 0.9181800879073656, 0.9980750428855902]], 
      
      Opacity[1.623625958146428, 
       RGBColor[0.7214723973731176, 0.8974783226117365, 0.9960564096168071]], 
      
      Opacity[1.5670371679408432`, 
       RGBColor[0.6549598347488241, 0.8617931598819017, 0.9925767422715496]], 
      
      Opacity[1.4867309788101288`, 
       RGBColor[0.5605706383325375, 0.8111516915463656, 0.9876386825794263]], 
      
      Opacity[1.3949684443965877`, 
       RGBColor[0.4527160386040173, 0.7532857968850213, 0.981996167633324]], 
      Opacity[1.3070117650130784`, 
       RGBColor[
       0.34933471300106766`, 0.6978198926737192, 0.9765876762353601]], 
      Opacity[1.2256345289562969`, 
       RGBColor[0.2795827734421038, 0.6423238903969175, 0.9649074234495912]], 
      
      Opacity[1.140612866747532, 
       RGBColor[0.270013959455821, 0.5741260426367039, 0.9363827918132102]], 
      Opacity[1.0427572353844972`, 
       RGBColor[
       0.25900073871068946`, 0.4956337704697661, 0.9035523840599222]], 
      Opacity[0.9339392102629975, 
       RGBColor[
       0.24675374878257522`, 0.4083483079416284, 0.8670441107404993]], 
      Opacity[0.8233370546218931, 
       RGBColor[0.2371195634029135, 0.3212470763996405, 0.8277408341457423]], 
      
      Opacity[0.7182156889490694, 
       RGBColor[0.25487658039527433`, 0.2539136123578435, 0.769375013108507]], 
      Opacity[0.6196128344813324, 
       RGBColor[
       0.2715324956896809, 0.19075545499156865`, 0.7146284207217958]], 
      Opacity[0.5236403451528862, 
       RGBColor[
       0.2877440918090506, 0.12928212730182664`, 0.6613422680848899]], 
      Opacity[0.4252706429487121, 
       RGBColor[0.3043606232096179, 0.06627331112280145, 0.6067251272440414]], 
      Opacity[0.3233400711371105, 
       RGBColor[
       0.27492573400822096`, 0.0471524497690736, 0.5346908076980115]], 
      Opacity[0.22399892852856434`, 
       RGBColor[
       0.24204683577552752`, 0.032665602468092, 0.46309914302825217`]], 
      Opacity[0.13836064515253652`, 
       RGBColor[
       0.21370316738187695`, 0.020177033262929887`, 0.40138264666672374`]], 
      Opacity[0.07530866658069123, 
       RGBColor[
       0.19283487925474474`, 0.010982208625222263`, 0.35594330513964056`]], 
      Opacity[0.036170729757974335`, 
       RGBColor[
       0.17988141195970486`, 0.005274751477679971, 0.3277379717268846]], 
      Opacity[0.015602859606093665`, 
       RGBColor[
       0.17307407220268498`, 0.0022753537822977226`, 0.3129154316974536]], 
      Opacity[0.006245924729745774, 
       RGBColor[
       0.16997721120943407`, 0.0009108387062730208, 0.30617221809617734`]], 
      Opacity[0.002398366985974297, 
       RGBColor[
       0.16870378656200113`, 0.00034975213074040184`, 0.3033994186642738]], 
      Opacity[0.0008897267486700878, 
       RGBColor[
       0.16820447250611664`, 0.00012974821115529987`, 0.302312194749385]], 
      Opacity[0.0003100170197811116, 
       RGBColor[
       0.16801260620903016`, 0.00004520955878242526, 0.3018944183535572]], 
      Opacity[0.00009714483041547997, 
       RGBColor[
       0.16794215198566467`, 0.000014166560675211545`, 0.30174100885978244`]], 
      Opacity[0.00002630623834264799, 
       RGBColor[
       0.16791870656518176`, 3.8362197970167504`*^-6, 0.301689957979994]], 
      Opacity[5.988520837027381*^-6, 
       RGBColor[
       0.16791198201834603`, 8.733016819287002*^-7, 0.30167531571617134`]], 
      Opacity[1.167884047711952*^-6, 
       RGBColor[
       0.16791038653411614`, 1.7031168980131962`*^-7, 0.3016718416529237]], 
      Opacity[0.00009452855328470008, 
       RGBColor[
       0.16794128607746922`, 0.000013785030864949449`, 0.3017391234009472]], 
      Opacity[0.00024167685859475922`, 
       RGBColor[
       0.16798998769321838`, 0.00003524356228153555, 0.30184516800496386`]], 
      Opacity[0.0006573733849268774, 
       RGBColor[
       0.1681275706062599, 0.00009586428741504939, 0.30214474585897366`]], 
      Opacity[0.0019867963464972483`, 
       RGBColor[
       0.16856756919208166`, 0.0002897330807163242, 0.3031028141916892]], 
      Opacity[0.0061583670569727526`, 
       RGBColor[
       0.16994823228149944`, 0.0008980702338940555, 0.3061091183634399]], 
      Opacity[0.017685805603462612`, 
       RGBColor[
       0.17376346400625578`, 0.0025791082973729185`, 0.31441653755805826`]], 
      Opacity[0.04448013409208, 
       RGBColor[0.1826315721884021, 0.00648650592895148, 0.333726266939442]], 
      
      Opacity[0.09602294765908925, 
       RGBColor[
       0.1996906765775497, 0.014002957320602671`, 0.37087135837014806`]], 
      Opacity[0.17746933196666353`, 
       RGBColor[
       0.22664695381327382`, 0.025880224902779525`, 0.42956690062788916`]], 
      Opacity[0.2826353974853586, 
       RGBColor[
       0.2614537244515701, 0.041216516517803656`, 0.5053563822017064]], 
      Opacity[0.39357599838844504`, 
       RGBColor[0.2981716907562243, 0.0573949044702681, 0.5853073681634091]], 
      
      Opacity[0.49207789259624846`, 
       RGBColor[
       0.29307559604495576`, 0.10906540684075768`, 0.6438180621765454]], 
      Opacity[0.5769624328216034, 
       RGBColor[
       0.27873696741772097`, 0.16343656250817326`, 0.6909479282309957]], 
      Opacity[0.671101089376895, 
       RGBColor[
       0.2628351408633264, 0.22373526397136695`, 0.7432158943673257]], 
      Opacity[0.8069256762359922, 
       RGBColor[0.23989176031075718`, 0.310735084385927, 0.8186288561219115]], 
      Opacity[0.9982310679613298, 
       RGBColor[
       0.25398951448234863`, 0.4599182985725593, 0.8886139261313174]], 
      Opacity[1.221814691989834, 
       RGBColor[0.279152867598811, 0.6392599105459, 0.9636258742590821]], 
      Opacity[1.427344113383568, 
       RGBColor[0.490769312108836, 0.7737020491514222, 0.983986960469601]], 
      Opacity[1.5696946198998152`, 
       RGBColor[0.6580833144910141, 0.8634689618429989, 0.9927401500554875]], 
      
      Opacity[1.636989593323942, 
       RGBColor[0.7371795651426257, 0.9059054951001257, 0.9968781448893266]], 
      
      Opacity[1.6509133296693481`, 
       RGBColor[0.7535450570054749, 0.9146858700734732, 0.9977343210067001]], 
      
      Opacity[1.641631150640061, 
       RGBColor[0.742635095655666, 0.9088324834231455, 0.9971635561053176]], 
      Opacity[1.6229468335704749`, 
       RGBColor[0.7206741771651282, 0.8970500633943426, 0.9960146499749819]], 
      
      Opacity[1.590281061700724, 
       RGBColor[0.6822799264793576, 0.8764508708575727, 0.9940060185964021]], 
      
      Opacity[1.537757491460627, 
       RGBColor[0.6205454868111077, 0.8433292553510303, 0.9907763232529105]], 
      
      Opacity[1.470593401619139, 
       RGBColor[0.5416030723248417, 0.8009752579093569, 0.9866463765029215]], 
      
      Opacity[1.3985333713007513`, 
       RGBColor[0.4569061339056273, 0.7555338569024359, 0.9822153764146317]], 
      
      Opacity[1.3223379877951924`, 
       RGBColor[
       0.36734864029807923`, 0.7074846823259897, 0.9775300918047215]], 
      Opacity[1.233230362398634, 
       RGBColor[0.2804376510743717, 0.648416684624352, 0.9674558134161619]], 
      Opacity[1.1253249903761675`, 
       RGBColor[0.26829337623688, 0.5618632823205008, 0.9312537337512196]], 
      Opacity[1.0035673841315664`, 
       RGBColor[
       0.2545900933875176, 0.46419868157524125`, 0.8904042516683259]], 
      Opacity[0.878494191572025, 
       RGBColor[
       0.2405136558869885, 0.36387457212516566`, 0.8484423956817079]], 
      Opacity[0.7571678946642169, 
       RGBColor[0.24829680496763623`, 0.278863696730155, 0.7910021814127294]], 
      Opacity[0.6405953143993405, 
       RGBColor[
       0.2679881519679149, 0.20419537796083592`, 0.7262783803658079]], 
      Opacity[0.5266564557012046, 
       RGBColor[
       0.2872346128281171, 0.13121403876294063`, 0.6630168826350811]], 
      Opacity[0.4136800699263328, 
       RGBColor[
       0.30482552727149037`, 0.060326666747706766`, 0.5997956648574467]], 
      Opacity[0.3034629981571003, 
       RGBColor[0.2683470271148562, 0.04425379052789127, 0.520366100874287]], 
      
      Opacity[0.20273958748754523`, 
       RGBColor[
       0.23501064017491785`, 0.029565368070805727`, 0.4477782842687943]], 
      Opacity[0.12058996436452282`, 
       RGBColor[
       0.20782161226974036`, 0.01758554767850402, 0.388575942550766]], 
      Opacity[0.06280832677412167, 
       RGBColor[
       0.18869764678910034`, 0.009159293071474884, 0.3469347502530071]], 
      Opacity[0.028406760217030282`, 
       RGBColor[
       0.17731177406632642`, 0.004142537389582169, 0.3221427521704541]], 
      Opacity[0.011179055395227686`, 
       RGBColor[
       0.17160992749253634`, 0.001630233599366169, 0.3097273517205907]], 
      Opacity[0.0038887822578232752`, 
       RGBColor[
       0.16919706870835888`, 0.0005670983167351426, 0.3044735084880778]], 
      Opacity[0.0012341477189502237`, 
       RGBColor[
       0.16831846537688186`, 0.0001799748732681535, 0.3025604068190477]], 
      Opacity[0.0003715507589276906, 
       RGBColor[
       0.168032972006062, 0.000054182979657878695`, 0.3019387635533725]], 
      Opacity[0.00010845901831752733`, 
       RGBColor[
       0.16794589663790896`, 0.000015816500550751824`, 0.301749162596744]], 
      Opacity[0.00003016499417001123, 
       RGBColor[
       0.16791998369605446`, 4.3989393810169355`*^-6, 0.30169273884949055`]], 
      
      Opacity[7.558197351472445*^-6, 
       RGBColor[
       0.16791250153355414`, 1.1022064778631335`*^-6, 0.3016764469267827]], 
      Opacity[1.6324879760707843`*^-6, 
       RGBColor[
       0.16791054030389244`, 2.3806454615905971`*^-7, 0.3016721764766208]], 
      Opacity[3.1840568225500674`*^-7, 
       RGBColor[
       0.1679101053826013, 4.6432871391156405`*^-8, 0.30167122946376734`]], 
      Opacity[0.0003848702746136878, 
       RGBColor[
       0.1680373803608408, 0.00005612535504031637, 0.3019483624594804]], 
      Opacity[0.0008392571908519828, 
       RGBColor[
       0.1681877686167534, 0.00012238827187676724`, 0.3022758231155939]], 
      Opacity[0.0016742018469133183`, 
       RGBColor[
       0.16846410991559216`, 0.0002441476499100394, 0.3028775383391654]], 
      Opacity[0.0033606035007398847`, 
       RGBColor[
       0.1690222575963985, 0.0004900743888783768, 0.30409286864974006`]], 
      Opacity[0.0074046868709008815`, 
       RGBColor[
       0.17036072625178733`, 0.0010798201550089287`, 0.30700729718288045`]], 
      Opacity[0.017606536264237964`, 
       RGBColor[
       0.17373722826476035`, 0.002567548506707712, 0.3143594109355598]], 
      Opacity[0.041029502795202524`, 
       RGBColor[
       0.18148951812832706`, 0.005983302851382372, 0.3312395184260041]], 
      Opacity[0.0867291649086324, 
       RGBColor[
       0.1966147170181441, 0.012647651673627127`, 0.3641736562830466]], 
      Opacity[0.16074725376030194`, 
       RGBColor[
       0.22111245427814563`, 0.023441656277842126`, 0.41751588748171725`]], 
      Opacity[0.259662083738073, 
       RGBColor[0.2538502559899565, 0.03786633471482289, 0.4888003236446816]], 
      Opacity[0.36946187699093885`, 
       RGBColor[0.2901906496429402, 0.05387835950903718, 0.5679291696892996]], 
      Opacity[0.47485760275746397`, 
       RGBColor[
       0.29598443362829135`, 0.09803528219171237, 0.634256957747328]], 
      Opacity[0.5740486804620047, 
       RGBColor[
       0.2792291561353025, 0.16157021461137785`, 0.6893301453218917]], 
      Opacity[0.6846809993499897, 
       RGBColor[
       0.2605412333345992, 0.23243361348396846`, 0.7507557754382992]], 
      Opacity[0.8310764268569136, 
       RGBColor[
       0.23581223483647162`, 0.3262043820696862, 0.8320379131640615]], 
      Opacity[1.0202478105548167`, 
       RGBColor[
       0.25646740198757817`, 0.4775784385952233, 0.8960005080446442]], 
      Opacity[1.2279901528173283`, 
       RGBColor[
       0.27984788854291787`, 0.6442133909463243, 0.9656977314859692]], 
      Opacity[1.4101333772192581`, 
       RGBColor[0.47054039110204143`, 0.7628488763146748, 0.982928665418563]], 
      Opacity[1.5314219875980484`, 
       RGBColor[0.6130989484439627, 0.8393340562048698, 0.9903867505861991]], 
      
      Opacity[1.5874368198900213`, 
       RGBColor[0.6789369002215827, 0.8746572783193829, 0.9938311250297653]], 
      
      Opacity[1.6011152226300467`, 
       RGBColor[0.6950140352078764, 0.883282944743576, 0.9946722154856106]], 
      Opacity[1.599032428549347, 
       RGBColor[0.692565989027303, 0.8819695247988751, 0.9945441436444707]], 
      Opacity[1.5906257953270238`, 
       RGBColor[0.6826851148006605, 0.8766682615370387, 0.9940272164049768]], 
      
      Opacity[1.5684983709609408`, 
       RGBColor[0.6566772836822254, 0.8627146015201498, 0.9926665922297366]], 
      
      Opacity[1.5250474674652041`, 
       RGBColor[0.605606551663694, 0.8353142532114015, 0.9899947787934223]], 
      Opacity[1.4640640811659829`, 
       RGBColor[0.533928728449369, 0.7968578370908583, 0.9862448859765287]], 
      Opacity[1.3945497723695104`, 
       RGBColor[
       0.45222394557077084`, 0.7530217802951206, 0.9819704233229102]], 
      Opacity[1.3176281088722523`, 
       RGBColor[0.3618128068639872, 0.7045146100697649, 0.9772404794657984]], 
      
      Opacity[1.2254626817694558`, 
       RGBColor[
       0.27956343279735246`, 0.6421860477814976, 0.9648497689933616]], 
      Opacity[1.1130845054143095`, 
       RGBColor[0.2669157635125567, 0.5520449053533432, 0.9271470706312921]], 
      
      Opacity[0.9864554996450646, 
       RGBColor[
       0.2526642260808536, 0.45047284203289806`, 0.8846632418021197]], 
      Opacity[0.8572931614860071, 
       RGBColor[0.23812757323533956`, 0.3468687340292727, 0.841329484009497]], 
      Opacity[0.7332970347895361, 
       RGBColor[
       0.2523290515209794, 0.26357367766760664`, 0.7777485262063576]], 
      Opacity[0.6150244195536898, 
       RGBColor[0.2723075670685263, 0.187816434274307, 0.7120808263027423]], 
      Opacity[0.49959396634798325`, 
       RGBColor[
       0.29180598687967174`, 0.11387968297252948`, 0.6479911606964196]], 
      Opacity[0.38561499880018707`, 
       RGBColor[
       0.29553684190689833`, 0.05623395763223214, 0.5795701559873371]], 
      Opacity[0.2762826469935314, 
       RGBColor[
       0.25935115716239027`, 0.04029009948756084, 0.5007781785390639]], 
      Opacity[0.17934124251795916`, 
       RGBColor[
       0.2272664992996719, 0.026153204270699372`, 0.4309159206709565]], 
      Opacity[0.1032110634061801, 
       RGBColor[
       0.20206972437111806`, 0.015051195064557592`, 0.3760515803674021]], 
      Opacity[0.051784352889582635`, 
       RGBColor[
       0.185049046562124, 0.007551674897153755, 0.33899016031830054`]], 
      Opacity[0.022402305319478302`, 
       RGBColor[
       0.1753244820306656, 0.003266912055079691, 0.31781555288260077`]], 
      Opacity[0.00831623752361304, 
       RGBColor[
       0.1706624218066952, 0.0012127509303774726`, 0.3076642196517071]], 
      Opacity[0.002657100273247589, 
       RGBColor[
       0.16878941941459666`, 0.0003874830197354992, 0.30358587863699993`]], 
      Opacity[0.000741229082791872, 
       RGBColor[
       0.16815532429304, 0.00010809290345859909`, 0.3022051777087044]], 
      Opacity[0.0001859743058985089, 
       RGBColor[
       0.1679715518416335, 0.000027120499127679307`, 0.3018050251359655]], 
      Opacity[0.00004387951585817735, 
       RGBColor[
       0.16792452278581177`, 6.398918204346585*^-6, 0.30170262242252005`]], 
      Opacity[0.00001008771092076033, 
       RGBColor[
       0.16791333872564837`, 1.4710836204226161`*^-6, 0.3016782698581732]], 
      Opacity[2.1826019920130935`*^-6, 
       RGBColor[
       0.16791072237490826`, 3.182872770218352*^-7, 0.30167257292442806`]], 
      Opacity[4.675355228249495*^-7, 
       RGBColor[
       0.16791015474004498`, 6.818036866798595*^-8, 0.3016713369363941]], 
      Opacity[1.1706743710268673`*^-7, 
       RGBColor[
       0.16791003874576282`, 1.7071860064130093`*^-8, 0.3016710843663812]], 
      Opacity[0.001239509537323492, 
       RGBColor[
       0.16832023997576415`, 0.00018075678338101798`, 0.30256427089281335`]], 
      
      Opacity[0.0026127698528919455`, 
       RGBColor[
       0.16877474739310372`, 0.0003810183464529383, 0.3035539312634804]], 
      Opacity[0.004764479508090975, 
       RGBColor[
       0.16948689787700108`, 0.0006948006162396611, 0.3051045926718025]], 
      Opacity[0.007843144762577829, 
       RGBColor[
       0.1705058424848125, 0.0011437601536624957`, 0.3073232783516942]], 
      Opacity[0.012620903716265905`, 
       RGBColor[
       0.17208713545461105`, 0.0018404973018923813`, 0.31076644105250206`]], 
      Opacity[0.021800882941628755`, 
       RGBColor[
       0.17512542950683768`, 0.0031792070627420033`, 0.3173821289449523]], 
      Opacity[0.04125215088689401, 
       RGBColor[
       0.18156320787817495`, 0.006015771462287115, 0.3313999730684733]], 
      Opacity[0.07931454828670716, 
       RGBColor[
       0.19416070432063215`, 0.011566383470175738`, 0.3588302030781302]], 
      Opacity[0.1426431259890053, 
       RGBColor[
       0.2151205383513307, 0.02080154435992593, 0.40446887986224134`]], 
      Opacity[0.23037846341254795`, 
       RGBColor[
       0.24415826788426562`, 0.03359592544695821, 0.4676966492595112]], 
      Opacity[0.3324954734368548, 
       RGBColor[
       0.27795589384520647`, 0.048487575494555665`, 0.5412887838652763]], 
      Opacity[0.4369319708634494, 
       RGBColor[0.3023908010273228, 0.07374274988818426, 0.6131997670451111]], 
      Opacity[0.5413953002864665, 
       RGBColor[
       0.28474493899185027`, 0.14065472149710662`, 0.6712002310900129]], 
      Opacity[0.6579574913169971, 
       RGBColor[
       0.2650553469327259, 0.21531638564266986`, 0.7359182637929953]], 
      Opacity[0.8027285806513722, 
       RGBColor[0.24060073033923474`, 0.3080467157292015, 0.816298531280713]], 
      Opacity[0.9775199808374099, 
       RGBColor[
       0.25165857275533476`, 0.4433054550932419, 0.8816653895389817]], 
      Opacity[1.1606066833612696`, 
       RGBColor[0.2722641755429041, 0.5901635467991283, 0.9430906852970126]], 
      
      Opacity[1.317242971901826, 
       RGBColor[0.3613601298095502, 0.7042717408475565, 0.977216797239432]], 
      Opacity[1.4223882016939857`, 
       RGBColor[
       0.48494430002753375`, 0.7705768274515954, 0.9836822194774438]], 
      Opacity[1.4760267098595867`, 
       RGBColor[0.5479892002715068, 0.8044015281656627, 0.9869804727999499]], 
      
      Opacity[1.497924985789198, 
       RGBColor[0.5737276980171008, 0.8182106860786, 0.9883270065461721]], 
      Opacity[1.5076305197592401`, 
       RGBColor[0.5851352565395469, 0.8243310423866717, 0.9889238037122036]], 
      
      Opacity[1.5087915562197927`, 
       RGBColor[0.5864998997844553, 0.8250631975516711, 0.9889951963085776]], 
      
      Opacity[1.4916580396371533`, 
       RGBColor[0.566361740079378, 0.8142587197537791, 0.9879416495205045]], 
      Opacity[1.4486718264843244`, 
       RGBColor[0.515837189476305, 0.7871514074057822, 0.9852984100792517]], 
      Opacity[1.3846091328556316`, 
       RGBColor[
       0.44054005189164525`, 0.7467531653025989, 0.9813591694229459]], 
      Opacity[1.3102610022565417`, 
       RGBColor[0.3531537572826634, 0.6998688772757861, 0.9767874731331556]], 
      
      Opacity[1.229323693728523, 
       RGBColor[
       0.27999797270489285`, 0.6452830550493427, 0.9661451323280095]], 
      Opacity[1.1360927939198855`, 
       RGBColor[0.2695052451473898, 0.5705003873559591, 0.9348663146116513]], 
      
      Opacity[1.026060561579568, 
       RGBColor[
       0.2571216015393094, 0.48224098104799995`, 0.8979506767130465]], 
      Opacity[0.9044504941684541, 
       RGBColor[
       0.24343492353648516`, 0.38469472462398174`, 0.8571506936727257]], 
      Opacity[0.7823861365170602, 
       RGBColor[
       0.24403695972844738`, 0.2950167553412909, 0.8050039343526391]], 
      Opacity[0.6672959879968623, 
       RGBColor[
       0.2634778955443604, 0.22129797964474157`, 0.7411032138027794]], 
      Opacity[0.5589246229750654, 
       RGBColor[
       0.28178389982675034`, 0.15188279117994719`, 0.6809329177270094]], 
      Opacity[0.45301408669146304`, 
       RGBColor[0.2996742228873474, 0.08404383911862522, 0.6221289308579115]], 
      Opacity[0.34739712443198056`, 
       RGBColor[
       0.2828878873144028, 0.050660672529986135`, 0.5520278791993485]], 
      Opacity[0.245696052652559, 
       RGBColor[
       0.2492279242679964, 0.03582967845716477, 0.47873549664564596`]], 
      Opacity[0.15637887970194037`, 
       RGBColor[
       0.21966665526339932`, 0.022804619434140576`, 0.4143677540646229]], 
      Opacity[0.08773167840057565, 
       RGBColor[
       0.19694651850756717`, 0.0127938474943475, 0.3648961324682152]], 
      Opacity[0.042704610763932255`, 
       RGBColor[
       0.18204392794269436`, 0.006227582640384491, 0.33244670977526714`]], 
      Opacity[0.017842266432104, 
       RGBColor[
       0.17381524778412688`, 0.0026019248673618952`, 0.314529293369839]], 
      Opacity[0.00636087502867019, 
       RGBColor[
       0.17001525626388897`, 0.0009276018256009532, 0.30625505873036163`]], 
      Opacity[0.001934281643271227, 
       RGBColor[
       0.16855018842176084`, 0.0002820748993554599, 0.30306496869359173`]], 
      Opacity[0.0005058232091534558, 
       RGBColor[
       0.16807741210520424`, 0.00007376383439813787, 0.30203552898186]], 
      Opacity[0.00011660764552029728`, 
       RGBColor[
       0.1679485935857948, 0.00001700480898872018, 0.30175503502553735`]], 
      Opacity[0.000025396027449414736`, 
       RGBColor[
       0.16791840531304653`, 3.7034843978083873`*^-6, 0.30168930202304267`]], 
      
      Opacity[6.148706142928075*^-6, 
       RGBColor[
       0.16791203503481264`, 8.966613897547783*^-7, 0.30167543115608275`]], 
      Opacity[2.0270763798335118`*^-6, 
       RGBColor[
       0.16791067090065862`, 2.9560708897612755`*^-7, 0.30167246084259386`]], 
      
      Opacity[1.018021897293812*^-6, 
       RGBColor[
       0.16791033693430013`, 1.4845740030659055`*^-7, 0.301671733652547]], 
      Opacity[5.512916174360775*^-7, 
       RGBColor[
       0.1679101824607661, 8.039445964073864*^-8, 0.30167139729646325`]], 
      Opacity[0.0031551256769402356`, 
       RGBColor[
       0.16895425068324665`, 0.00046010970577770716`, 0.303944788014947]], 
      Opacity[0.006597478099822497, 
       RGBColor[
       0.170093564687707, 0.0009621054811128829, 0.30642557023531297`]], 
      Opacity[0.011755176209666538`, 
       RGBColor[
       0.17180060596804286`, 0.0017142488829288004`, 0.3101425417121041]], 
      Opacity[0.018183063409482742`, 
       RGBColor[
       0.17392804122341113`, 0.0026516230451992134`, 0.3147748937553822]], 
      Opacity[0.025363722874854933`, 
       RGBColor[
       0.1763046212144016, 0.003698773444959625, 0.31994974227286277`]], 
      Opacity[0.0342866006409088, 
       RGBColor[
       0.17925782249948133`, 0.004999990285111268, 0.3263801461935604]], 
      Opacity[0.049243091988246605`, 
       RGBColor[
       0.1842079664581132, 0.007181084649619771, 0.33715876303909137`]], 
      Opacity[0.07782862424886039, 
       RGBColor[
       0.19366890863619562`, 0.011349692237601851`, 0.35775934992858016`]], 
      Opacity[0.12747714702269383`, 
       RGBColor[
       0.21010106035924214`, 0.018589900566773582`, 0.39353929266368026`]], 
      Opacity[0.19996364420649923`, 
       RGBColor[
       0.23409188733756736`, 0.029160554260809955`, 0.44577775965934796`]], 
      Opacity[0.289079287423236, 
       RGBColor[
       0.26358645612675347`, 0.042156224347843566`, 0.510000266855009]], 
      Opacity[0.38565451425378605`, 
       RGBColor[0.2955499203207699, 0.05623972014237936, 0.5795986333838019]], 
      Opacity[0.48659607441583497`, 
       RGBColor[
       0.2940015803865367, 0.10555413389474834`, 0.6407744295445981]], 
      Opacity[0.5984100529005703, 
       RGBColor[0.275114052592078, 0.17717442203964032`, 0.7028561444836239]], 
      Opacity[0.7298280948287516, 
       RGBColor[0.2529150220840032, 0.2613517150568885, 0.7758224902607229]], 
      
      Opacity[0.8795066668906767, 
       RGBColor[0.24062760552921134`, 0.3646867020676836, 0.848782079531155]], 
      Opacity[1.0308484989921178`, 
       RGBColor[
       0.2576604628281673, 0.48608149672675427`, 0.8995570220542571]], 
      Opacity[1.1600541593633737`, 
       RGBColor[0.2722019913980465, 0.5897203544818592, 0.9429053143797569]], 
      
      Opacity[1.2513681474705305`, 
       RGBColor[0.28393307456710637`, 0.6627307603620243, 0.973166127935222]], 
      Opacity[1.3064164645942122`, 
       RGBColor[
       0.34863501689082665`, 0.6974444933721403, 0.9765510709744839]], 
      Opacity[1.3392155847565057`, 
       RGBColor[0.387186000679149, 0.7181277759822593, 0.9785679019929114]], 
      Opacity[1.3613756786266458`, 
       RGBColor[
       0.41323223043495744`, 0.7321020375452202, 0.9799305350290239]], 
      Opacity[1.371548769204399, 
       RGBColor[0.4251893392842052, 0.7385172372943861, 0.9805560824378862]], 
      
      Opacity[1.359223436336777, 
       RGBColor[0.4107025571627866, 0.730744823226466, 0.9797981927897229]], 
      Opacity[1.3181770420614987`, 
       RGBColor[0.3624580044904721, 0.7048607699737829, 0.9772742335871784]], 
      
      Opacity[1.254449298341196, 
       RGBColor[0.2875545557738174, 0.6646737488905902, 0.9733555891347194]], 
      
      Opacity[1.1801075976330142`, 
       RGBColor[0.27445891764016617`, 0.6058056825577056, 0.94963321083372]], 
      
      Opacity[1.1010363120286841`, 
       RGBColor[
       0.26555979235905547`, 0.5423807699206465, 0.9231049210275243]], 
      Opacity[1.0137953716205892`, 
       RGBColor[
       0.2557412083762622, 0.47240278762949606`, 0.8938357251061131]], 
      Opacity[0.9141922213998582, 
       RGBColor[0.2445313120727799, 0.3925087900443628, 0.8604190275720982]], 
      
      Opacity[0.8054046459141474, 
       RGBColor[
       0.24014869153589896`, 0.3097608177387339, 0.8177843447993198]], 
      Opacity[0.6959968902583133, 
       RGBColor[
       0.25862976209507793`, 0.2396817892349184, 0.7570386205992695]], 
      Opacity[0.5921525246173207, 
       RGBColor[
       0.27617106926366186`, 0.1731662829429501, 0.6993818196061076]], 
      Opacity[0.4938293327474943, 
       RGBColor[
       0.29277974417575947`, 0.11018725806187207`, 0.6447905023819286]], 
      Opacity[0.3975966414055076, 
       RGBColor[
       0.29950240136732426`, 0.05798123194658336, 0.5882049040591719]], 
      Opacity[0.30203117153420395`, 
       RGBColor[
       0.26787313603020685`, 0.04404498828238946, 0.5193342338274628]], 
      Opacity[0.2109643416768031, 
       RGBColor[
       0.23773278377903484`, 0.030764778052402193`, 0.453705575101645]], 
      Opacity[0.13224281213997047`, 
       RGBColor[
       0.21167835063684115`, 0.019284874079547154`, 0.39697373976228945`]], 
      Opacity[0.07291779710722494, 
       RGBColor[
       0.1920435741414594, 0.010633549851332696`, 0.3542202896687189]], 
      Opacity[0.03485707799381339, 
       RGBColor[
       0.17944663316078122`, 0.005083182586741652, 0.32679126914099593`]], 
      Opacity[0.014328057175149705`, 
       RGBColor[
       0.17265215135203643`, 0.0020894502616509154`, 0.31199672645851784`]], 
      Opacity[0.005063880212359834, 
       RGBColor[
       0.16958599040833267`, 0.0007384620053746818, 0.30532036022046427`]], 
      Opacity[0.0015589200965151276`, 
       RGBColor[
       0.16842595516077558`, 0.00022733619525233155`, 0.30279445883957107`]], 
      
      Opacity[0.00043432252844312667`, 
       RGBColor[
       0.16805374755350982`, 0.00006333694161064069, 0.30198400095809597`]], 
      Opacity[0.00011976663989004535`, 
       RGBColor[
       0.16794963911689775`, 0.000017465482863184593`, 0.30175731160158303`]], 
      Opacity[0.00003909543621447359, 
       RGBColor[
       0.16792293940088573`, 5.701259314442609*^-6, 0.30169917470472046`]], 
      Opacity[0.0000180577339370058, 
       RGBColor[
       0.16791597656097804`, 2.633346338465121*^-6, 0.30168401357321617`]], 
      Opacity[0.000010920768682833803`, 
       RGBColor[
       0.16791361444244265`, 1.5925678340642017`*^-6, 0.3016788702135787]], 
      Opacity[7.005838345478964*^-6, 
       RGBColor[
       0.16791231871951487`, 1.0216563617175886`*^-6, 0.3016760488610901]], 
      Opacity[4.043956046464896*^-6, 
       RGBColor[
       0.16791133842651512`, 5.897271986076224*^-7, 0.3016739143367755]], 
      Opacity[0.0064372065820494356`, 
       RGBColor[
       0.17004051968757827`, 0.0009387332010715302, 0.30631006819401135`]], 
      Opacity[0.013430689746906487`, 
       RGBColor[
       0.17235515001325774`, 0.001958587815694755, 0.3113500253403164]], 
      Opacity[0.02377369576834077, 
       RGBColor[
       0.17577837057896945`, 0.0034669009368361813`, 0.31880386570615216`]], 
      Opacity[0.036087389987942864`, 
       RGBColor[
       0.17985382902935346`, 0.005262598099020916, 0.3276779116881829]], 
      Opacity[0.047878084576432695`, 
       RGBColor[
       0.1837561905010281, 0.006982026601560285, 0.33617505024565797`]], 
      Opacity[0.05769850599502819, 
       RGBColor[
       0.18700645144977207`, 0.008414131586330646, 0.3432522822832058]], 
      Opacity[0.06791117603364144, 
       RGBColor[
       0.1903865347673839, 0.009903437904939187, 0.35061219409404903`]], 
      Opacity[0.08555315392704213, 
       RGBColor[
       0.19622549313397156`, 0.012476154838909726`, 0.36332614656420104`]], 
      Opacity[0.11929924111686646`, 
       RGBColor[
       0.20739442211275283`, 0.017397322436619032`, 0.3876457637396384]], 
      Opacity[0.17378984833351913`, 
       RGBColor[
       0.2254291565870055, 0.025343648453786297`, 0.42691522629130596`]], 
      Opacity[0.24632581554970764`, 
       RGBColor[
       0.24943635664216052`, 0.03592151632702667, 0.47918934459796697`]], 
      Opacity[0.3300271514978812, 
       RGBColor[
       0.27713895432039315`, 0.048127621883386935`, 0.5395099511287903]], 
      Opacity[0.4207973402874136, 
       RGBColor[0.3051162499165223, 0.06340802334838204, 0.6042414458258667]], 
      Opacity[0.5203885828150563, 
       RGBColor[
       0.28829337690174694`, 0.12719927363030764`, 0.6595368141940405]], 
      Opacity[0.6319172237385455, 
       RGBColor[
       0.26945404809986384`, 0.19863679430165165`, 0.7214601030992313]], 
      Opacity[0.7527080938495144, 
       RGBColor[
       0.2490501509534151, 0.27600705730325703`, 0.7885259965330277]], 
      Opacity[0.8719693850137911, 
       RGBColor[
       0.23977931761800814`, 0.3586408734092941, 0.8462533335211109]], 
      Opacity[0.9757505788200009, 
       RGBColor[
       0.25145943434364426`, 0.44188617668495134`, 0.8810717579931842]], 
      Opacity[1.0552423457065991`, 
       RGBColor[
       0.26040588294295663`, 0.5056483671136834, 0.9077411185968108]], 
      Opacity[1.1115142440696097`, 
       RGBColor[
       0.26673903750736067`, 0.5507853622986963, 0.9266202504625636]], 
      Opacity[1.1520237280717989`, 
       RGBColor[0.27129820169007746`, 0.583278959236881, 0.9402111175301235]], 
      Opacity[1.1814619061937648`, 
       RGBColor[
       0.27461133910972096`, 0.6068920048742424, 0.9500875791889581]], 
      Opacity[1.1960008535682056`, 
       RGBColor[0.2762476336653458, 0.6185540318668605, 0.9549653727707672]], 
      
      Opacity[1.1874621708261281`, 
       RGBColor[
       0.27528664249292906`, 0.6117049563420005, 0.9521006583726926]], 
      Opacity[1.1532046189084901`, 
       RGBColor[
       0.27143110575782736`, 0.5842261791736586, 0.9406073045164082]], 
      Opacity[1.1006165277042366`, 
       RGBColor[0.2655125474803899, 0.5420440511750108, 0.922964084058327]], 
      Opacity[1.040877719970719, 
       RGBColor[
       0.25878920752073653`, 0.4941261675516171, 0.9029218096458242]], 
      Opacity[0.9790249036972221, 
       RGBColor[
       0.25182794520154606`, 0.44451258863330756`, 0.8821702887505721]], 
      Opacity[0.911474336922829, 
       RGBColor[
       0.24422542613358195`, 0.39032871185041773`, 0.85950718167867]], 
      Opacity[0.8327320385087768, 
       RGBColor[
       0.23553257024072824`, 0.3272648521930945, 0.8329571471633662]], 
      Opacity[0.7423157156672355, 
       RGBColor[
       0.2508056231620631, 0.26935041982364966`, 0.7827559070630526]], 
      Opacity[0.6446729028098906, 
       RGBColor[
       0.2672993689956755, 0.20680719860130925`, 0.7285423520513965]], 
      Opacity[0.5447571500494732, 
       RGBColor[0.284177058019363, 0.1428080895463371, 0.6730668080733487]], 
      Opacity[0.44552286930863755`, 
       RGBColor[0.3009396333346804, 0.0792454842547275, 0.6179696331707235]], 
      
      Opacity[0.34880717151156365`, 
       RGBColor[
       0.28335457003231357`, 0.05086629868036784, 0.5530440504959467]], 
      Opacity[0.25722046160438816`, 
       RGBColor[
       0.2530421532890197, 0.037510274717035566`, 0.4870407325180341]], 
      Opacity[0.17512317356371193`, 
       RGBColor[
       0.2258704467051123, 0.025538086312111147`, 0.4278761068516578]], 
      Opacity[0.1078030428332237, 
       RGBColor[
       0.20358952996529492`, 0.015720840118178172`, 0.37936085830279664`]], 
      Opacity[0.05894656100073576, 
       RGBColor[
       0.18741951971578913`, 0.008596134549213376, 0.34415171159428304`]], 
      Opacity[0.028341022710952447`, 
       RGBColor[
       0.17729001695023486`, 0.004132950936401843, 0.322095377463784]], 
      Opacity[0.012017837550865527`, 
       RGBColor[
       0.17188753888707495`, 0.0017525525971996833`, 0.310331832495027]], 
      Opacity[0.004606226141241828, 
       RGBColor[
       0.16943452082347635`, 0.000671722641694474, 0.30499054504083284`]], 
      Opacity[0.0016844503098297902`, 
       RGBColor[
       0.16846750184526424`, 0.00024564217587825523`, 0.30288492404564343`]], 
      
      Opacity[0.0006357925171148009, 
       RGBColor[
       0.16812042799507249`, 0.0000927171650002391, 0.30212919328718807`]], 
      Opacity[0.0002694789387808315, 
       RGBColor[
       0.16799918933657673`, 0.00003929791961757274, 0.30186520398552075`]], 
      Opacity[0.00013899236492109074`, 
       RGBColor[
       0.167956002247421, 0.00002026915650193992, 0.3017711669048674]], 
      Opacity[0.00008842576466586238, 
       RGBColor[
       0.16793926623996117`, 0.00001289506559467215, 0.3017347253360078]], 
      Opacity[0.00006178885449387517, 
       RGBColor[
       0.1679304502324563, 9.01062416286658*^-6, 0.30171552905246607`]], 
      Opacity[0.00004119554328891362, 
       RGBColor[
       0.16792363447248412`, 6.007516417031105*^-6, 0.3017006881779652]], 
      Opacity[0.00002405270260355341, 
       RGBColor[
       0.16791796071335963`, 3.5075883027303197`*^-6, 0.3016883339361113]], 
      Opacity[0.010580472914891247`, 
       RGBColor[
       0.1714118148884524, 0.0015429427472380918`, 0.30929597439711554`]], 
      Opacity[0.022060106836703182`, 
       RGBColor[
       0.17521122473570092`, 0.0032170094967195026`, 0.31756894248145134`]], 
      Opacity[0.03896740100823424, 
       RGBColor[
       0.18080702512473487`, 0.005682588032502073, 0.32975343425411896`]], 
      Opacity[0.058787345995253856`, 
       RGBColor[
       0.18736682438911076`, 0.008572916339598754, 0.34403697094420044`]], 
      Opacity[0.07664675639606966, 
       RGBColor[
       0.1932777463057046, 0.011177341299574234`, 0.3569076193688223]], 
      Opacity[0.08825929129331464, 
       RGBColor[
       0.19712114233563183`, 0.012870788902614342`, 0.36527636450803835`]], 
      Opacity[0.09389798823676677, 
       RGBColor[
       0.1989873796075274, 0.013693076018016169`, 0.3693399749130519]], 
      Opacity[0.10017344403460791`, 
       RGBColor[
       0.20106436470275657`, 0.014608221218687167`, 0.37386247501051195`]], 
      Opacity[0.11719705550205943`, 
       RGBColor[
       0.20669866258069441`, 0.017090762221985367`, 0.3861307925639806]], 
      Opacity[0.15241167105430858`, 
       RGBColor[
       0.21835362980417608`, 0.022226084253446663`, 0.4115087264380191]], 
      Opacity[0.20623851706004975`, 
       RGBColor[
       0.23616867949595782`, 0.030075614451134772`, 0.45029983964937736`]], 
      Opacity[0.27379424967466065`, 
       RGBColor[
       0.25852757329712256`, 0.039927218298195996`, 0.4989848781829394]], 
      Opacity[0.3505387429052249, 
       RGBColor[
       0.28392766752384513`, 0.051118812489974054`, 0.5542919330480454]], 
      Opacity[0.4352884386879541, 
       RGBColor[
       0.30266842516758174`, 0.07269001704047108, 0.6122872398513297]], 
      Opacity[0.5278688358792922, 
       RGBColor[
       0.28702981853833864`, 0.13199060551132488`, 0.6636900242371755]], 
      Opacity[0.6253094403477837, 
       RGBColor[
       0.2705702295840047, 0.19440430604876296`, 0.7177913084601056]], 
      Opacity[0.7210346134233114, 
       RGBColor[0.254400409928225, 0.2557192200809553, 0.7709401453756539]], 
      Opacity[0.8073307705073953, 
       RGBColor[
       0.23982333211050721`, 0.31099455971125667`, 0.8188537738595816]], 
      Opacity[0.878860801902631, 
       RGBColor[
       0.24055491626661274`, 0.36416863877670447`, 0.8485653928610497]], 
      Opacity[0.9346290806655693, 
       RGBColor[
       0.24683139066095489`, 0.40890166899652447`, 0.8672755611567694]], 
      Opacity[0.9762926854230808, 
       RGBColor[0.2515204460565519, 0.4423210129681549, 0.881253633891147]], 
      Opacity[1.0039485868039586`, 
       RGBColor[
       0.2546329960710036, 0.46450445308266897`, 0.8905321445549892]], 
      Opacity[1.014454907171728, 
       RGBColor[
       0.25581543620058644`, 0.47293181639628934`, 0.8940569982282632]], 
      Opacity[1.0053449038050797`, 
       RGBColor[
       0.25479014540568495`, 0.46562447134382257`, 0.8910006066747581]], 
      Opacity[0.9802274549608013, 
       RGBColor[
       0.25196328705503634`, 0.4454771829010138, 0.8825737427754209]], 
      Opacity[0.9487131368536474, 
       RGBColor[
       0.24841648921507586`, 0.42019881721508556`, 0.8720007394733797]], 
      Opacity[0.9196948728814144, 
       RGBColor[0.2451506112853625, 0.3969225944592333, 0.8622651583399179]], 
      
      Opacity[0.8943017519620935, 
       RGBColor[
       0.24229272725562498`, 0.37655418304944066`, 0.8537458069004792]], 
      Opacity[0.8652163932841391, 
       RGBColor[
       0.2390192981119994, 0.35322414207353214`, 0.8439877156005994]], 
      Opacity[0.8221403510303528, 
       RGBColor[
       0.23732170961623364`, 0.32048055098652456`, 0.8270763965481958]], 
      Opacity[0.7576152938866857, 
       RGBColor[
       0.24822123064889617`, 0.27915026967625034`, 0.791250587840706]], 
      Opacity[0.6695893453443912, 
       RGBColor[0.2630905034559017, 0.22276694547777154`, 0.742376539008018]], 
      Opacity[0.5620490337717574, 
       RGBColor[
       0.28125612685450174`, 0.15388407227712805`, 0.6826676630876632]], 
      Opacity[0.4447580053095987, 
       RGBColor[0.3010688335495068, 0.07875556536672107, 0.6175449629336124]], 
      Opacity[0.33049839366046974`, 
       RGBColor[0.2772949211504482, 0.04819634278866287, 0.5398495587676437]], 
      Opacity[0.23019210959926045`, 
       RGBColor[
       0.24409659043722337`, 0.03356874960454124, 0.4675623506259291]], 
      Opacity[0.14969811985518228`, 
       RGBColor[
       0.21745552684922173`, 0.021830369035834934`, 0.409553165605811]], 
      Opacity[0.09020484088701455, 
       RGBColor[
       0.19776506010643885`, 0.013154506999067892`, 0.3666784536168722]], 
      Opacity[0.05002899735914386, 
       RGBColor[
       0.1844680772443569, 0.007295692664005851, 0.33772513737602794`]], 
      Opacity[0.025668451821656398`, 
       RGBColor[
       0.1764054772320329, 0.003743211847866841, 0.3201693496983637]], 
      Opacity[0.012522525959476432`, 
       RGBColor[
       0.17205457540779753`, 0.0018261509444517574`, 0.31069554366608093`]], 
      Opacity[0.006082089133532486, 
       RGBColor[
       0.1699229866076896, 0.0008869466792388662, 0.3060541475489994]], 
      Opacity[0.0030480193875959886`, 
       RGBColor[
       0.1689188017575049, 0.00044449047271916397`, 0.303867600282358]], 
      Opacity[0.0015919942009347443`, 
       RGBColor[
       0.1684369016838857, 0.0002321593680864891, 0.30281829418241785`]], 
      Opacity[0.000890078112423643, 
       RGBColor[
       0.1682045887968376, 0.00012979945027849892`, 0.30231244796487416`]], 
      Opacity[0.0005680006469051377, 
       RGBColor[
       0.16809799094690595`, 0.00008283112537771046, 0.30208033807260176`]], 
      Opacity[0.0004138636081221962, 
       RGBColor[
       0.16804697627283477`, 0.00006035343199066203, 0.3019692569343747]], 
      Opacity[0.0003085794005903025, 
       RGBColor[
       0.1680121304007816, 0.00004499991181091538, 0.30189338231201057`]], 
      Opacity[0.00021058582743317954`, 
       RGBColor[
       0.16797969750707123`, 0.00003070957959278482, 0.30182276179321]], 
      Opacity[0.00012394772527834117`, 
       RGBColor[
       0.16795102292905628`, 0.00001807520753497829, 0.3017603247626482]], 
      Opacity[0.01369475166260129, 
       RGBColor[
       0.17244254647987048`, 0.001997095774735949, 0.3115403254679783]], 
      Opacity[0.028546724496577025`, 
       RGBColor[0.1773580979879423, 0.00416294827969419, 0.3222436194999808]], 
      Opacity[0.05038925399690488, 
       RGBColor[0.184587311239654, 0.00734822863010576, 0.3379847616538287]], 
      
      Opacity[0.07585237937918181, 
       RGBColor[
       0.19301483166217606`, 0.011061497871152931`, 0.35633513981482223`]], 
      Opacity[0.09826114442056484, 
       RGBColor[
       0.20043145166441656`, 0.014329351942826987`, 0.3724843479916175]], 
      Opacity[0.11113428028463136`, 
       RGBColor[
       0.20469206829209233`, 0.016206632077225988`, 0.3817615638744678]], 
      Opacity[0.1129989896710894, 
       RGBColor[
       0.20530923041184457`, 0.016478561304462402`, 0.38310539429151774`]], 
      Opacity[0.10979957219794455`, 
       RGBColor[
       0.20425032049052483`, 0.01601199255793427, 0.38079968673811726`]], 
      Opacity[0.11227162705144213`, 
       RGBColor[
       0.20506849549656497`, 0.01637249053734033, 0.38258120965470216`]], 
      Opacity[0.12963726484655944`, 
       RGBColor[
       0.21081599369135984`, 0.018904908993743072`, 0.3950960135431928]], 
      Opacity[0.16476421541529981`, 
       RGBColor[
       0.22244194647031562`, 0.024027446903778074`, 0.420410770349424]], 
      Opacity[0.21496653900459528`, 
       RGBColor[
       0.2390573894277353, 0.031348415607132044`, 0.4565898178384389]], 
      Opacity[0.27665660325019303`, 
       RGBColor[0.2594749253150751, 0.04034463325922131, 0.5010476756499798]], 
      Opacity[0.34811718406941433`, 
       RGBColor[0.2831262051645804, 0.05076567830847016, 0.5525468008339477]], 
      Opacity[0.4281182451727269, 
       RGBColor[0.3038796085200191, 0.06809728782562326, 0.608306182063186]], 
      
      Opacity[0.5135753181831894, 
       RGBColor[
       0.2894442681127502, 0.12283516833010735`, 0.6557539316026886]], 
      Opacity[0.5992901242599631, 
       RGBColor[0.2749653916421064, 0.1777381347811236, 0.7033447805200144]], 
      
      Opacity[0.6792925572985482, 
       RGBColor[
       0.26145144465517506`, 0.22898215081708034`, 0.7477639873994832]], 
      Opacity[0.7483380429785246, 
       RGBColor[
       0.24978833645050202`, 0.27320790547242524`, 0.7860996429042739]], 
      Opacity[0.8028371656751357, 
       RGBColor[0.2405823882438886, 0.30811626777265394`, 0.816358820205079]], 
      Opacity[0.8405648423747233, 
       RGBColor[
       0.23624487452396867`, 0.3334505611731086, 0.8357171597129719]], 
      Opacity[0.8598263765820552, 
       RGBColor[0.23841267544825334`, 0.3489006846284032, 0.842179373621077]], 
      Opacity[0.8605342266991817, 
       RGBColor[
       0.2384923408643954, 0.34946846762947303`, 0.8424168562028127]], 
      Opacity[0.8474065730189317, 
       RGBColor[
       0.23701488120435948`, 0.3389384720509792, 0.8380125493973348]], 
      Opacity[0.8311876001230821, 
       RGBColor[0.2357934555372891, 0.3262755919619098, 0.832099639140658]], 
      Opacity[0.8245379320721449, 
       RGBColor[0.23691671214471893`, 0.322016275297482, 0.8284075891664788]], 
      Opacity[0.8349236692849226, 
       RGBColor[
       0.23560998531387317`, 0.32892564536256375`, 0.8338245551672206]], 
      Opacity[0.8598752647771291, 
       RGBColor[
       0.23841817759950085`, 0.34893989898387806`, 0.8421957755323032]], 
      Opacity[0.8871385166783556, 
       RGBColor[
       0.24148653664267553`, 0.37080838584129594`, 0.8513425529239617]], 
      Opacity[0.8981364288107826, 
       RGBColor[0.2427243032623668, 0.3796300663142771, 0.8550323348477314]], 
      
      Opacity[0.8730308424552452, 
       RGBColor[
       0.23989877998263104`, 0.3594922930488971, 0.8466094507943869]], 
      Opacity[0.798109164539187, 
       RGBColor[
       0.24138103841337216`, 0.30508783780088394`, 0.813733724284774]], 
      Opacity[0.6745914946988794, 
       RGBColor[
       0.26224554438866104`, 0.22597097580534936`, 0.7451538483794948]], 
      Opacity[0.5220471065748256, 
       RGBColor[
       0.2880132203950657, 0.12826160904828976`, 0.6604576650632157]], 
      Opacity[0.3700899514007076, 
       RGBColor[
       0.29039852317911163`, 0.053969951148000184`, 0.5683818008082007]], 
      Opacity[0.24312962729801627`, 
       RGBColor[
       0.2483785154949735, 0.03545541849553806, 0.47688596423079943`]], 
      Opacity[0.15084860153232582`, 
       RGBColor[
       0.21783630130971326`, 0.021998142950465968`, 0.4103822772535733]], 
      Opacity[0.09021250844768428, 
       RGBColor[
       0.19776759783592668`, 0.013155625153919714`, 0.3666839793579487]], 
      Opacity[0.053053138702192595`, 
       RGBColor[0.1854689760950092, 0.00773670101868088, 0.3399045295921879]], 
      Opacity[0.03141133821122285, 
       RGBColor[
       0.17830619804323314`, 0.004580692835179116, 0.3243080457697233]], 
      Opacity[0.019114021116007865`, 
       RGBColor[
       0.1742361599231567, 0.0027873839372522234`, 0.3154458022047636]], 
      Opacity[0.01190926616787887, 
       RGBColor[
       0.1718516050598764, 0.0017367197105901348`, 0.31025358892102123`]], 
      Opacity[0.007400738278513816, 
       RGBColor[
       0.1703594193877444, 0.0010792443346241093`, 0.30700445157133754`]], 
      Opacity[0.00457096121630363, 
       RGBColor[
       0.16942284920537554`, 0.0006665799830814825, 0.3049651308507552]], 
      Opacity[0.0029773205472774246`, 
       RGBColor[
       0.1688954025906042, 0.00043418051173867275`, 0.3038166501167396]], 
      Opacity[0.002196246936584768, 
       RGBColor[
       0.16863689097010268`, 0.0003202771094643623, 0.3032537578593045]], 
      Opacity[0.0017686105312461878`, 
       RGBColor[
       0.16849535632008233`, 0.00025791520037204903`, 0.30294557535477845`]], 
      
      Opacity[0.001383010855937806, 
       RGBColor[
       0.1683677345497854, 0.00020168347735359396`, 0.30266768724189225`]], 
      Opacity[0.0009608786123636815, 
       RGBColor[
       0.16822802160998257`, 0.0001401242362083948, 0.30236347139300335`]], 
      Opacity[0.0005690508885862867, 
       RGBColor[
       0.16809833854497505`, 0.0000829842813658984, 0.3020810949448129]], 
      Opacity[0.014085513014518956`, 
       RGBColor[
       0.17257187660821013`, 0.002054080221337929, 0.3118219334195057]], 
      Opacity[0.029358560923217095`, 
       RGBColor[
       0.17762679116533278`, 0.004281337801268884, 0.32282868143601806`]], 
      Opacity[0.05180696738846824, 
       RGBColor[0.1850565312737744, 0.007554972753243803, 0.339006457791617]], 
      Opacity[0.07791416852448335, 
       RGBColor[
       0.19369722119088084`, 0.01136216709772407, 0.3578209986768631]], 
      Opacity[0.10064806003822725`, 
       RGBColor[
       0.20122144817162807`, 0.014677434128771453`, 0.37420451405783706`]], 
      Opacity[0.11290561931665423`, 
       RGBColor[
       0.20527832766298532`, 0.016464945172901778`, 0.38303810556371276`]], 
      Opacity[0.11229131930666124`, 
       RGBColor[
       0.20507501303439796`, 0.016375362244740507`, 0.3825954011698712]], 
      Opacity[0.10362072933187089`, 
       RGBColor[
       0.20220531133867758`, 0.015110936351541612`, 0.37634681217980687`]], 
      Opacity[0.09672769793367104, 
       RGBColor[
       0.19992392749402793`, 0.014105730545724737`, 0.3713792470858295]], 
      Opacity[0.10087572707556614`, 
       RGBColor[
       0.2012967990399093, 0.014710634648906316`, 0.3743685856777675]], 
      Opacity[0.12033650614130284`, 
       RGBColor[
       0.20773772530298454`, 0.01754858604830177, 0.3883932841310208]], 
      Opacity[0.15471198421095347`, 
       RGBColor[
       0.21911496352950557`, 0.022561537264854714`, 0.41316648115898996`]], 
      Opacity[0.20248645216820801`, 
       RGBColor[
       0.23492686007953092`, 0.029528453529444214`, 0.44759585855451123`]], 
      Opacity[0.2630698159949068, 
       RGBColor[
       0.2549781117719079, 0.03836328185626975, 0.49125615633000635`]], 
      Opacity[0.335513555601894, 
       RGBColor[
       0.27895478729213663`, 0.04892770024366417, 0.5434638094451278]], 
      Opacity[0.4166052631149187, 
       RGBColor[
       0.30579367729103935`, 0.06075324556425915, 0.6019037486216603]], 
      Opacity[0.5008316425596382, 
       RGBColor[
       0.29159691960413997`, 0.11467245260750769`, 0.6486783472432185]], 
      Opacity[0.5816000076989857, 
       RGBColor[0.2779535919794935, 0.1664070716834368, 0.6935228173946555]], 
      
      Opacity[0.6523193997668181, 
       RGBColor[
       0.2660077288469089, 0.21170501480260784`, 0.7327878645606121]], 
      Opacity[0.707095502173906, 
       RGBColor[0.2567549934491855, 0.2467907911162136, 0.7632008274226031]], 
      
      Opacity[0.7413595126785643, 
       RGBColor[
       0.25096714420594707`, 0.26873794243484994`, 0.782225000979833]], 
      Opacity[0.7531857692916488, 
       RGBColor[0.2489694623998701, 0.2763130230981337, 0.788791213020571]], 
      Opacity[0.7458987546695122, 
       RGBColor[
       0.25020037908022974`, 0.27164546637556597`, 0.7847452934436214]], 
      Opacity[0.7301676071580885, 
       RGBColor[0.2528576719329414, 0.2615691831336475, 0.7760109953826568]], 
      
      Opacity[0.7220972469838736, 
       RGBColor[
       0.25422091071728165`, 0.25639986952059834`, 0.7715301441815766]], 
      Opacity[0.7369751303490422, 
       RGBColor[0.2517077505615441, 0.2659296108645658, 0.7797906901928122]], 
      
      Opacity[0.7828302789881572, 
       RGBColor[0.2439619355375437, 0.2953012422380852, 0.8052505325566974]], 
      
      Opacity[0.857125837220577, 
       RGBColor[
       0.23810874162549217`, 0.3467345193540483, 0.8412733469861641]], 
      Opacity[0.9454341723715952, 
       RGBColor[
       0.2480474561900646, 0.41756868373205547`, 0.8709006521359943]], 
      Opacity[1.0206899649556385`, 
       RGBColor[0.2565171645199113, 0.4779331008981045, 0.8961488501386727]], 
      
      Opacity[1.0469714777125736`, 
       RGBColor[
       0.25947503314204823`, 0.4990141120115381, 0.9049662556182041]], 
      Opacity[0.9935502662970002, 
       RGBColor[
       0.25346271085055566`, 0.4561637189630019, 0.8870435246622175]], 
      Opacity[0.8550114450078014, 
       RGBColor[0.23787077608527, 0.34503851630628163`, 0.8405639717818053]], 
      
      Opacity[0.6604197920787933, 
       RGBColor[
       0.2646394170578839, 0.21689356492247974`, 0.7372853903013222]], 
      Opacity[0.45900455676204877`, 
       RGBColor[0.2986623174754001, 0.08788091922607597, 0.6254549788200063]], 
      Opacity[0.29241879893623474`, 
       RGBColor[
       0.264691732916406, 0.042643222907335875`, 0.5124069352516218]], 
      Opacity[0.17706835163236942`, 
       RGBColor[
       0.22651424151242464`, 0.025821750229335257`, 0.42927792821547117`]], 
      Opacity[0.10708963747999024`, 
       RGBColor[
       0.2033534144808974, 0.015616804729167991`, 0.3788467321765897]], 
      Opacity[0.06785377735252053, 
       RGBColor[
       0.19036753754885277`, 0.009895067496598374, 0.35057082888499874`]], 
      Opacity[0.04605184200725725, 
       RGBColor[
       0.18315175972840514`, 0.006715706962592081, 0.3348589415097917]], 
      Opacity[0.03278706865218122, 
       RGBColor[
       0.17876152299698495`, 0.004781314614858158, 0.32529948627281047`]], 
      Opacity[0.0233070491240266, 
       RGBColor[
       0.17562392472575944`, 0.00339885019268143, 0.3184675698955568]], 
      Opacity[0.01599186959469356, 
       RGBColor[
       0.17320282268300788`, 0.0023320828288480536`, 0.3131957775030859]], 
      Opacity[0.010848331497553805`, 
       RGBColor[
       0.1715004679364128, 0.0015820043714895931`, 0.30948901064901835`]], 
      Opacity[0.00791307739788984, 
       RGBColor[
       0.17052898806114863`, 0.001153958379518549, 0.3073736763403348]], 
      Opacity[0.006512773907160847, 
       RGBColor[
       0.17006553017494347`, 0.0009497531296840531, 0.3063645269052493]], 
      Opacity[0.005612379740194037, 
       RGBColor[
       0.16976752707766013`, 0.0008184492965990835, 0.305715644522991]], 
      Opacity[0.0045205564339618936`, 
       RGBColor[
       0.1694061667547258, 0.0006592294899640305, 0.3049288058983699]], 
      Opacity[0.003174857838397832, 
       RGBColor[
       0.1689607814288314, 0.0004629872326759122, 0.3039590082891374]], 
      Opacity[0.0018870989409293173`, 
       RGBColor[
       0.1685345723816398, 0.00027519427984448486`, 0.30303096578084504`]], 
      Opacity[0.011574907852130237`, 
       RGBColor[
       0.1717409426218564, 0.001687960478142499, 0.3100126286522739]], 
      Opacity[0.02412480740196618, 
       RGBColor[
       0.1758945778559058, 0.0035181032935673985`, 0.3190568995013765]], 
      Opacity[0.04256591853436737, 
       RGBColor[
       0.18199802503095217`, 0.006207357252405449, 0.33234675916738615`]], 
      Opacity[0.06398879283035372, 
       RGBColor[
       0.18908834516754502`, 0.009331439586519644, 0.34778547058732834`]], 
      Opacity[0.08254585842545982, 
       RGBColor[
       0.19523016974473106`, 0.012037603101166739`, 0.3611588945530123]], 
      Opacity[0.0922109192057035, 
       RGBColor[
       0.198429011045144, 0.013447051955905913`, 0.36812416364719447`]], 
      Opacity[0.09061973349109419, 
       RGBColor[
       0.19790237694565405`, 0.013215010488798152`, 0.3669774521124127]], 
      Opacity[0.08113159250954666, 
       RGBColor[
       0.19476209072024764`, 0.011831361720920582`, 0.360139682889574]], 
      Opacity[0.07127765810156939, 
       RGBColor[
       0.19150073799081319`, 0.01039436956103803, 0.3530382992202359]], 
      Opacity[0.06866113679914047, 
       RGBColor[
       0.19063474898195681`, 0.01001280414340016, 0.35115266441912524`]], 
      Opacity[0.07773534510184364, 
       RGBColor[
       0.19363803607421914`, 0.011336089406753385`, 0.35769212693075114`]], 
      Opacity[0.09999198379410763, 
       RGBColor[
       0.2010043068795423, 0.014581759002466384`, 0.37373170300258385`]], 
      Opacity[0.13629638570153915`, 
       RGBColor[
       0.21301996025708414`, 0.019876003793457747`, 0.3998950075423226]], 
      Opacity[0.18784029896173735`, 
       RGBColor[
       0.2300794286112466, 0.027392615552574905`, 0.4370408914832007]], 
      Opacity[0.25452376894209633`, 
       RGBColor[
       0.25214962999725804`, 0.03711701796771227, 0.4850973210399021]], 
      Opacity[0.3331647265107245, 
       RGBColor[
       0.2781773962673638, 0.048585172188455865`, 0.541771090997906]], 
      Opacity[0.4177423657375016, 
       RGBColor[0.3056322937735138, 0.06145121830034524, 0.602545253080346]], 
      
      Opacity[0.5009261705134269, 
       RGBColor[
       0.2915809520178083, 0.11473300066580808`, 0.6487308313562106]], 
      Opacity[0.5750810241950829, 
       RGBColor[
       0.27905477345778595`, 0.16223146248601383`, 0.6899033265128713]], 
      Opacity[0.6326429035260093, 
       RGBColor[
       0.26933146685070936`, 0.19910161449840524`, 0.7218630173530022]], 
      Opacity[0.6672974057601673, 
       RGBColor[
       0.26347765605691714`, 0.22129888776569206`, 0.7411040009778584]], 
      Opacity[0.6769165666483294, 
       RGBColor[
       0.2618527950950175, 0.22746025581518248`, 0.7464447822674988]], 
      Opacity[0.6670259655778514, 
       RGBColor[
       0.2635235075153618, 0.22112502199027634`, 0.7409532910912244]], 
      Opacity[0.6515906671546421, 
       RGBColor[
       0.2661308257767716, 0.21123823917784323`, 0.7323832553077353]], 
      Opacity[0.6490811395593753, 
       RGBColor[
       0.26655473317054196`, 0.2096308096603871, 0.7309899073658029]], 
      Opacity[0.6760957936274968, 
       RGBColor[
       0.26199143941707814`, 0.22693452548119197`, 0.7459890700443984]], 
      Opacity[0.7428318177754988, 
       RGBColor[
       0.25071844360681694`, 0.26968099907864906`, 0.7830424589271293]], 
      Opacity[0.8506024229447461, 
       RGBColor[0.2373745600517702, 0.3415019374201931, 0.8390847519340856]], 
      
      Opacity[0.9872378122466007, 
       RGBColor[0.252752271921981, 0.45110035312024244`, 0.8849257064282349]], 
      Opacity[1.1204412460194777`, 
       RGBColor[0.2677437322980097, 0.5579459176691306, 0.9296152453335411]], 
      
      Opacity[1.1993132354619591`, 
       RGBColor[
       0.27662042767300743`, 0.6212109702311001, 0.9560766715963105]], 
      Opacity[1.1747798988239135`, 
       RGBColor[
       0.27385930858107665`, 0.6015322117403137, 0.9478457764075848]], 
      Opacity[1.0314706566902896`, 
       RGBColor[
       0.25773048393960263`, 0.4865805438505165, 0.8997657549665414]], 
      Opacity[0.803938160991911, 
       RGBColor[0.2403964089957752, 0.3088214890956247, 0.816970118348044]], 
      Opacity[0.5581584655903321, 
       RGBColor[
       0.28191331851925355`, 0.15139204383867066`, 0.6805075293721541]], 
      Opacity[0.3525949859771304, 
       RGBColor[0.2846082214708564, 0.05141867293665502, 0.5557737950502115]], 
      Opacity[0.21214168863938404`, 
       RGBColor[
       0.23812244983230146`, 0.030936469712265553`, 0.454554047614964]], 
      Opacity[0.13046851001920307`, 
       RGBColor[
       0.21109111057365162`, 0.01902612887877317, 0.395695062679287]], 
      Opacity[0.08783865548227136, 
       RGBColor[
       0.19698192466950515`, 0.012809447885147686`, 0.36497322708540003`]], 
      Opacity[0.06552940484244583, 
       RGBColor[
       0.18959824090894237`, 0.00955610592700239, 0.34889573543490027`]], 
      Opacity[0.05119584282198189, 
       RGBColor[
       0.1848542676204542, 0.007465852897722787, 0.33856604182813504`]], 
      Opacity[0.03914015052648026, 
       RGBColor[
       0.18086419996368897`, 0.005707779970368238, 0.3298779287511358]], 
      Opacity[0.02865651086330937, 
       RGBColor[
       0.17739443393782517`, 0.004178958346508584, 0.3223227386700047]], 
      Opacity[0.02113259725196989, 
       RGBColor[
       0.1749042472594456, 0.0030817514417847474`, 0.31690051897207144`]], 
      Opacity[0.0171615405797401, 
       RGBColor[
       0.17358994822106036`, 0.002502655106434281, 0.3140387182095903]], 
      Opacity[0.015482079253303572`, 
       RGBColor[
       0.1730340975776342, 0.0022577404704121973`, 0.3128283895486662]], 
      Opacity[0.014023125526325406`, 
       RGBColor[
       0.1725512282461977, 0.0020449822988536552`, 0.3117769729528042]], 
      Opacity[0.011525775647740039`, 
       RGBColor[
       0.17172468135582225`, 0.0016807955641514635`, 0.30997722080202345`]], 
      Opacity[0.008153006517196859, 
       RGBColor[
       0.17060839730579405`, 0.0011889470702381255`, 0.3075465848111144]], 
      Opacity[0.004857725225204251, 
       RGBColor[
       0.16951775937469576`, 0.0007083985720293738, 0.30517179157787677`]], 
      Opacity[0.007552085111485872, 
       RGBColor[
       0.17040951058851445`, 0.0011013151343067043`, 0.30711352190645197`]], 
      Opacity[0.015740792941897685`, 
       RGBColor[
       0.1731197239436627, 0.0022954685013460213`, 0.3130148353973141]], 
      Opacity[0.027774423152505355`, 
       RGBColor[
       0.17710248972101544`, 0.0040503241307451865`, 0.3216870491063157]], 
      Opacity[0.04175367771608423, 
       RGBColor[
       0.18172919801222132`, 0.006088908758688608, 0.3317614058005263]], 
      Opacity[0.0538495643842069, 
       RGBColor[
       0.18573256878441521`, 0.007852843202462535, 0.34047848554703164`]], 
      Opacity[0.06007307101856724, 
       RGBColor[
       0.18779236028578677`, 0.008760412694026526, 0.3449635477109816]], 
      Opacity[0.05873431079215325, 
       RGBColor[
       0.18734927134915463`, 0.008565182254115938, 0.34399875034016497`]], 
      Opacity[0.051776680714689424`, 
       RGBColor[
       0.18504650730546848`, 0.007550556069413045, 0.3389846312519155]], 
      Opacity[0.0438916308327867, 
       RGBColor[
       0.18243679550007508`, 0.006400684922371085, 0.33330215335578406`]], 
      Opacity[0.0401597039693267, 
       RGBColor[
       0.18120164115884646`, 0.005856460714860055, 0.33061268502911406`]], 
      Opacity[0.044323140399013146`, 
       RGBColor[
       0.18257961204860523`, 0.006463611651727, 0.33361312711102675`]], 
      Opacity[0.05904978444452384, 
       RGBColor[
       0.18745368353769026`, 0.008611187549700111, 0.3442261010967559]], 
      Opacity[0.08710979697621372, 
       RGBColor[
       0.19674069466129868`, 0.012703158973987425`, 0.36444796441590366`]], 
      Opacity[0.13114768496156418`, 
       RGBColor[
       0.2113158968326549, 0.019125172471611728`, 0.39618452015328864`]], 
      Opacity[0.1916560811510111, 
       RGBColor[
       0.23134233651611769`, 0.02794906832187352, 0.43979079139147725`]], 
      Opacity[0.2654747529452934, 
       RGBColor[
       0.25577407279240255`, 0.03871399208019001, 0.4929893097363693]], 
      Opacity[0.3466736562664616, 
       RGBColor[0.2826484413450483, 0.05055516968830559, 0.5515065011585383]], 
      Opacity[0.4284887388479649, 
       RGBColor[
       0.30381702502479285`, 0.0683346004061789, 0.6085118887471314]], 
      Opacity[0.5037907474325993, 
       RGBColor[
       0.29109706997628326`, 0.11656785018234099`, 0.6503213109199196]], 
      Opacity[0.5644183214834774, 
       RGBColor[
       0.28085590866966814`, 0.15540167384100323`, 0.6839831465926851]], 
      Opacity[0.6024333280546574, 
       RGBColor[
       0.2744344441716697, 0.17975145337084592`, 0.7050899601891567]], 
      Opacity[0.6145239163363038, 
       RGBColor[0.2723921116716046, 0.1874958465881124, 0.7118029353047749]], 
      
      Opacity[0.6062989707105758, 
       RGBColor[0.2737814629067461, 0.182227516244504, 0.7072362546746321]], 
      Opacity[0.5920485977967925, 
       RGBColor[0.276188624499044, 0.17309971462176996`, 0.6993241170242481]], 
      Opacity[0.5897368341049603, 
       RGBColor[
       0.27657912577245736`, 0.17161895895977075`, 0.6980405721896252]], 
      Opacity[0.6156966162503418, 
       RGBColor[
       0.27219402014028526`, 0.18824699690839508`, 0.7124540455036867]], 
      Opacity[0.68248105334328, 
       RGBColor[
       0.2609128464540958, 0.23102448048432955`, 0.7495343143766267]], 
      Opacity[0.7969222301725227, 
       RGBColor[0.2415815344170416, 0.3043275698764117, 0.8130747107875246]], 
      
      Opacity[0.952357052480186, 
       RGBColor[0.248826595885614, 0.42312168647797466`, 0.8732232673358185]], 
      Opacity[1.116844702799608, 
       RGBColor[0.26733895718340356`, 0.5550610469126704, 0.928408610837744]], 
      Opacity[1.2320415996911285`, 
       RGBColor[
       0.28030386106219785`, 0.6474631504773669, 0.9670569854298141]], 
      Opacity[1.2367437072448348`, 
       RGBColor[
       0.28083306257809426`, 0.6512348200350901, 0.9686345349907105]], 
      Opacity[1.1060056455998244`, 
       RGBColor[0.2661190689874196, 0.5463667876665971, 0.9247721244897081]], 
      
      Opacity[0.8730334128441324, 
       RGBColor[0.2398990692685906, 0.3594943548174565, 0.8466103131557459]], 
      
      Opacity[0.6104646752757122, 
       RGBColor[
       0.2730777954241669, 0.18489577798891815`, 0.7095491504935418]], 
      Opacity[0.3863436567719657, 
       RGBColor[
       0.29577800554435474`, 0.05634021729962288, 0.5800952741388373]], 
      Opacity[0.2326275842137611, 
       RGBColor[
       0.2449026584961948, 0.033923913114032145`, 0.4693175114518933]], 
      Opacity[0.1451270741878173, 
       RGBColor[
       0.21594264969311222`, 0.021163776737315985`, 0.40625897389414856`]], 
      Opacity[0.10215130997100812`, 
       RGBColor[
       0.20171897820058055`, 0.014896651984128935`, 0.3752878533699946]], 
      Opacity[0.08137113053048976, 
       RGBColor[
       0.19484137052322398`, 0.01186629337804734, 0.3603123095095293]], 
      Opacity[0.06761437115408576, 
       RGBColor[
       0.1902883013751193, 0.009860155063053096, 0.35039829726488503`]], 
      Opacity[0.054468376603532646`, 
       RGBColor[
       0.18593737681712055`, 0.007943084142862012, 0.34092444173130954`]], 
      Opacity[0.042355724490240984`, 
       RGBColor[
       0.18192845719224526`, 0.00617670480629021, 0.3321952797186146]], 
      Opacity[0.034148161618479056`, 
       RGBColor[
       0.17921200339160337`, 0.004979801822146435, 0.3262803780631489]], 
      Opacity[0.030801231295954773`, 
       RGBColor[
       0.17810427120152963`, 0.004491721383002551, 0.323868363191653]], 
      Opacity[0.029999809187704278`, 
       RGBColor[
       0.17783902484693082`, 0.0043748505739802995`, 0.3232908064882951]], 
      Opacity[0.028197795088153038`, 
       RGBColor[
       0.17724261296120797`, 0.004112064155292894, 0.32199215835764483`]], 
      Opacity[0.023507745308642834`, 
       RGBColor[
       0.1756903490617034, 0.0034281175727827622`, 0.31861220457130407`]], 
      Opacity[0.016710990002403066`, 
       RGBColor[
       0.17344082967669935`, 0.0024369516401376375`, 0.3137140222678838]], 
      Opacity[0.009973132717704926, 
       RGBColor[
       0.17121080374632572`, 0.0014543747635673526`, 0.3088582856953783]], 
      Opacity[0.003832831640150607, 
       RGBColor[
       0.169178550754808, 0.0005589390784443821, 0.30443318684738285`]], 
      Opacity[0.007991715629665051, 
       RGBColor[
       0.17055501492526398`, 0.0011654261362388008`, 0.30743034814590947`]], 
      Opacity[0.014113254219566758`, 
       RGBColor[
       0.17258105810374832`, 0.002058125701296382, 0.31184192552949325`]], 
      Opacity[0.02125615771339667, 
       RGBColor[
       0.1749451420159398, 0.0030997701749110825`, 0.3169895646472935]], 
      Opacity[0.02751956240739186, 
       RGBColor[
       0.1770181385621495, 0.004013157971785022, 0.3215033799384106]], 
      Opacity[0.03092554935198813, 
       RGBColor[
       0.17814541669880776`, 0.004509850595604895, 0.32395795483864065`]], 
      Opacity[0.03061274777446167, 
       RGBColor[
       0.17804188888581446`, 0.004464234966771348, 0.3237325297523329]], 
      Opacity[0.027453647480401064`, 
       RGBColor[
       0.17699632272512936`, 0.004003545645440702, 0.3214558773707338]], 
      Opacity[0.02366363117301791, 
       RGBColor[
       0.17574194254388126`, 0.0034508502961467574`, 0.31872454602657674`]], 
      Opacity[0.021909343092079533`, 
       RGBColor[
       0.17516132651944832`, 0.003195023728390932, 0.3174602923575849]], 
      Opacity[0.024921169245545327`, 
       RGBColor[
       0.17615814941673044`, 0.0036342361678360184`, 0.3196308094501071]], 
      Opacity[0.03592549813429302, 
       RGBColor[
       0.1798002477473077, 0.005238989526565294, 0.3275612419278507]], 
      Opacity[0.05884483034428294, 
       RGBColor[
       0.18738584996111518`, 0.008581299240828934, 0.3440783978910966]], 
      Opacity[0.09694368607813035, 
       RGBColor[
       0.19999541300380436`, 0.014137227941319773`, 0.3715349021387586]], 
      Opacity[0.15045072088523628`, 
       RGBColor[
       0.2177046149110983, 0.02194012030217497, 0.41009553867661463`]], 
      Opacity[0.21570371180588088`, 
       RGBColor[
       0.23930137121490766`, 0.031455916985979104`, 0.4571210723278428]], 
      Opacity[0.2871956603115241, 
       RGBColor[
       0.26296303281504096`, 0.04188153636235414, 0.5086428030992725]], 
      Opacity[0.3600739711725616, 
       RGBColor[
       0.28708353820939425`, 0.05250932796283542, 0.5611636364202799]], 
      Opacity[0.42962401865456507`, 
       RGBColor[
       0.30362525446808575`, 0.06906178199810198, 0.6091422224342473]], 
      Opacity[0.4887767487921089, 
       RGBColor[
       0.29363322261543595`, 0.10695092282306864`, 0.6419851905499508]], 
      Opacity[0.5286834522436645, 
       RGBColor[0.286892214193762, 0.13251239231772005`, 0.6641423181417746]], 
      Opacity[0.5441326815682979, 
       RGBColor[
       0.28428254273562836`, 0.14240809830047257`, 0.6727200886849314]], 
      Opacity[0.5388224585725119, 
       RGBColor[
       0.2851795413558981, 0.13900673734162117`, 0.6697717296804975]], 
      Opacity[0.524886882276381, 
       RGBColor[
       0.28753352775537955`, 0.13008057262304557`, 0.6620343744155156]], 
      Opacity[0.5176817971475968, 
       RGBColor[
       0.28875060497126565`, 0.1254654942578441, 0.6580339439940396]], 
      Opacity[0.5317003837514146, 
       RGBColor[
       0.28638259653701803`, 0.13444482962856988`, 0.6658173885076885]], 
      Opacity[0.5802312902336315, 
       RGBColor[
       0.2781847946387671, 0.16553036609987698`, 0.6927628737036456]], 
      Opacity[0.6739902052058949, 
       RGBColor[
       0.2623471137287844, 0.22558583141347965`, 0.7448199985030737]], 
      Opacity[0.8122590025709202, 
       RGBColor[
       0.23899085909292223`, 0.3141512437432334, 0.8215900426362346]], 
      Opacity[0.9692221719947097, 
       RGBColor[
       0.2507246908804478, 0.43664959011134696`, 0.8788814879487499]], 
      Opacity[1.0907863954322388`, 
       RGBColor[
       0.26440620934575854`, 0.5341590740205727, 0.9196660904092834]], 
      Opacity[1.1160779254727595`, 
       RGBColor[0.267252659769087, 0.5544459970295714, 0.92815135827143]], 
      Opacity[1.0154414553296032`, 
       RGBColor[
       0.2559264678549434, 0.47372314956163836`, 0.8943879835567533]], 
      Opacity[0.8138088575961064, 
       RGBColor[
       0.23872905882195178`, 0.3151439734984115, 0.8224505581028545]], 
      Opacity[0.5762035770797453, 
       RGBColor[0.2788651527225511, 0.1629504920934648, 0.6905265939176629]], 
      
      Opacity[0.3677461114650902, 
       RGBColor[
       0.2896227834131563, 0.053628150657753844`, 0.566692677869767]], 
      Opacity[0.22252329410934063`, 
       RGBColor[
       0.2415584456420508, 0.03245041176319338, 0.46203570524464915`]], 
      Opacity[0.14029627746932136`, 
       RGBColor[
       0.2143438028355103, 0.020459305130031354`, 0.402777588743173]], 
      Opacity[0.10179708793131263`, 
       RGBColor[
       0.20160174147379137`, 0.014844996039120012`, 0.3750325780146019]], 
      Opacity[0.08487915332807446, 
       RGBColor[
       0.19600241942533148`, 0.012377865816842703`, 0.3628404180573461]], 
      Opacity[0.07378440385323637, 
       RGBColor[
       0.1923303946295441, 0.010759926489146684`, 0.35484482264601186`]], 
      Opacity[0.06224594940387354, 
       RGBColor[
       0.18851151697582025`, 0.009077281984483307, 0.34652946467795265`]], 
      Opacity[0.051722165390977626`, 
       RGBColor[
       0.1850284643905857, 0.007542606139007186, 0.33894534397705584`]], 
      Opacity[0.046020413006597594`, 
       RGBColor[
       0.18314135768462841`, 0.006711123694054763, 0.3348362917353171]], 
      Opacity[0.04588705744378417, 
       RGBColor[
       0.18309722104734627`, 0.006691676548345686, 0.3347401870753133]], 
      Opacity[0.04757964107299227, 
       RGBColor[
       0.18365741477407183`, 0.00693850480033289, 0.3359599725179398]], 
      Opacity[0.045967689371646, 
       RGBColor[
       0.18312390776425794`, 0.006703435044330788, 0.33479829566747943`]], 
      Opacity[0.038711541493208754`, 
       RGBColor[
       0.18072234340339072`, 0.0056452762236447575`, 0.329569045307895]], 
      Opacity[0.027614322277961137`, 
       RGBColor[
       0.17704950119860788`, 0.004026976735483033, 0.32157167004158244`]], 
      Opacity[0.016499177340955146`, 
       RGBColor[
       0.17337072612486498`, 0.0024060631522238034`, 0.313561376338584]], 
      Opacity[0.001602751632679575, 
       RGBColor[
       0.1684404620667673, 0.00023372811661248692`, 0.3028260466848147]], 
      Opacity[0.003351259806282632, 
       RGBColor[
       0.16901916511758144`, 0.0004887118046431357, 0.3040861349780427]], 
      Opacity[0.00595717367179093, 
       RGBColor[
       0.16988164338728318`, 0.0008687303473922276, 0.3059641253727465]], 
      Opacity[0.009104313080006568, 
       RGBColor[
       0.17092325085836454`, 0.0013276754213519403`, 0.30823215796494036`]], 
      Opacity[0.012155884494961562`, 
       RGBColor[
       0.17193322822894364`, 0.0017726838836634082`, 0.3104313180683846]], 
      Opacity[0.01450443753135678, 
       RGBColor[
       0.17271052788797814`, 0.0021151716820027367`, 0.3121238375726477]], 
      Opacity[0.015934077418048347`, 
       RGBColor[
       0.1731836952294205, 0.0023236550373382497`, 0.31315412871566234`]], 
      Opacity[0.016662900297988965`, 
       RGBColor[
       0.1734249134464653, 0.0024299387531675157`, 0.3136793657106702]], 
      Opacity[0.0171425904555123, 
       RGBColor[
       0.17358367630602473`, 0.002499891623462231, 0.3140250615221037]], 
      Opacity[0.018135051936616842`, 
       RGBColor[
       0.1739121508854413, 0.0026446215666794397`, 0.3147402935768916]], 
      Opacity[0.02139263337101358, 
       RGBColor[
       0.174990311309751, 0.003119672321798883, 0.31708791784979484`]], 
      Opacity[0.030356592939849086`, 
       RGBColor[
       0.17795710942266468`, 0.004426880091671275, 0.3235479279796778]], 
      Opacity[0.049579281564883323`, 
       RGBColor[
       0.1843192349878168, 0.007230110933524209, 0.33740104303310037`]], 
      Opacity[0.08228424851404154, 
       RGBColor[
       0.19514358481699293`, 0.011999452716143747`, 0.3609703614985221]], 
      Opacity[0.1276571886194046, 
       RGBColor[
       0.21016064865448889`, 0.018616155903191964`, 0.3936690423049655]], 
      Opacity[0.18087354015948626`, 
       RGBColor[
       0.2277736432371691, 0.026376658132508966`, 0.43202019364432814`]], 
      Opacity[0.23663732579094646`, 
       RGBColor[
       0.2462297610620992, 0.03450865084121915, 0.47220719106366726`]], 
      Opacity[0.29243515190742486`, 
       RGBColor[
       0.26469714525273963`, 0.042645607649350395`, 0.512418720262334]], 
      Opacity[0.34711368680344135`, 
       RGBColor[0.2827940780758602, 0.05061933902469135, 0.5518236156774647]], 
      Opacity[0.39643020867579354`, 
       RGBColor[0.2991163475933439, 0.05781113190144072, 0.587364297049299]], 
      
      Opacity[0.4322517254335091, 
       RGBColor[0.303181384341152, 0.07074490891316788, 0.6106011862007144]], 
      
      Opacity[0.4480065402440727, 
       RGBColor[0.3005200936272034, 0.08083635178724485, 0.6193486248952429]], 
      Opacity[0.44472447842604257`, 
       RGBColor[0.3010744968838556, 0.0787340903678575, 0.6175263480300384]], 
      
      Opacity[0.4311705360042815, 
       RGBColor[
       0.30336401799458557`, 0.07005237386960836, 0.6100008847460124]], 
      Opacity[0.41906216531431423`, 
       RGBColor[0.3054093542848383, 0.06229659047353672, 0.6032780364247425]], 
      Opacity[0.41953512303742097`, 
       RGBColor[
       0.30532946264461724`, 0.06259953442444782, 0.6035406335252306]], 
      Opacity[0.4434525647112759, 
       RGBColor[
       0.30128934753102304`, 0.07791939056036015, 0.6168201520272018]], 
      Opacity[0.501075162702787, 
       RGBColor[
       0.29155578437637536`, 0.1148284347401333, 0.6488135552763621]], 
      Opacity[0.59525151029231, 
       RGBColor[
       0.2756475910826312, 0.17515127846862077`, 0.7011024483493293]], 
      Opacity[0.7099530192827416, 
       RGBColor[
       0.25627230394517475`, 0.2486211186073483, 0.7647873872158255]], 
      Opacity[0.8061201199907344, 
       RGBColor[
       0.24002783422726115`, 0.3102191008641515, 0.8181815926056395]], 
      Opacity[0.8364244389875729, 
       RGBColor[
       0.23577889034051977`, 0.33012944755891666`, 0.8343280610012284]], 
      Opacity[0.7739352037641773, 
       RGBColor[
       0.24546448452831818`, 0.2896036733004152, 0.8003117804265986]], 
      Opacity[0.631846879836638, 
       RGBColor[
       0.26946593053549894`, 0.1985917368715152, 0.7214210465329136]], 
      Opacity[0.4557780343009524, 
       RGBColor[
       0.29920733906831054`, 0.08581423247097372, 0.6236635386942846]], 
      Opacity[0.2955402746462138, 
       RGBColor[
       0.2657248464835475, 0.043098425462659615`, 0.5146564729198588]], 
      Opacity[0.18058456181525936`, 
       RGBColor[
       0.22767800019017165`, 0.026334516628634768`, 0.43181193712368154`]], 
      Opacity[0.11444716380661682`, 
       RGBColor[
       0.20578853202621045`, 0.01668974749596099, 0.38414904241526276`]], 
      Opacity[0.083984547670176, 
       RGBColor[
       0.19570633214857908`, 0.012247406117867444`, 0.36219570724981787`]], 
      Opacity[0.07165653978218291, 
       RGBColor[
       0.19162613630909317`, 0.010449621603727088`, 0.3533113459108189]], 
      Opacity[0.06425165887758194, 
       RGBColor[
       0.18917534583804974`, 0.009369773152923382, 0.34797490889468086`]], 
      Opacity[0.05672433341968368, 
       RGBColor[
       0.18668402994217934`, 0.008272068701072409, 0.34255023039902965`]], 
      Opacity[0.050940785800821085`, 
       RGBColor[
       0.18476985150018344`, 0.007428658115967962, 0.3383822312109916]], 
      Opacity[0.05045246984720763, 
       RGBColor[
       0.18460823376434238`, 0.007357447352039999, 0.3380303190919439]], 
      Opacity[0.055152891865694345`, 
       RGBColor[
       0.1861639305596321, 0.008042906510692062, 0.34141774778581224`]], 
      Opacity[0.060107779739660756`, 
       RGBColor[
       0.18780384781732362`, 0.008765474241833316, 0.3449885610645267]], 
      Opacity[0.05926047303950303, 
       RGBColor[
       0.1875234150576951, 0.008641912115810139, 0.3443779369509189]], 
      Opacity[0.05026830707944347, 
       RGBColor[
       0.18454728148676058`, 0.007330591028214144, 0.3378975994677457]], 
      Opacity[0.035946069796780965`, 
       RGBColor[
       0.17980705634221267`, 0.005241989477294314, 0.3275760672008832]], 
      Opacity[0.02149467654783188, 
       RGBColor[
       0.1750240844991653, 0.003134553204803209, 0.31716145677540797`]], 
      Opacity[0.0005461633730107652, 
       RGBColor[
       0.16809076347310004`, 0.00007964661144853132, 0.30206460071797814`]], 
      Opacity[0.001163104415770928, 
       RGBColor[
       0.16829495220324595`, 0.00016961467951669506`, 0.3025092084111707]], 
      Opacity[0.0021546294873362485`, 
       RGBColor[
       0.16862311685957188`, 0.0003142080668050142, 0.3032237656285653]], 
      Opacity[0.0035875149186271158`, 
       RGBColor[
       0.16909735837761206`, 0.0005231647175726508, 0.30425639572132945`]], 
      Opacity[0.005602831659653637, 
       RGBColor[0.1697643669532629, 0.000817056906888495, 0.305708763557438]], 
      Opacity[0.008496647600856545, 
       RGBColor[
       0.17072213205779646`, 0.0012390600020466373`, 0.3077942348439418]], 
      Opacity[0.012537295962574264`, 
       RGBColor[
       0.17205946382981482`, 0.0018283048433691117`, 0.3107061878874094]], 
      Opacity[0.017469366371123854`, 
       RGBColor[
       0.17369182920010431`, 0.0025475451199572043`, 0.31426055742197273`]], 
      Opacity[0.022252106140181766`, 
       RGBColor[
       0.1752747706683735, 0.0032450086169062862`, 0.3177073096210929]], 
      Opacity[0.025830631364853834`, 
       RGBColor[
       0.17645915373057314`, 0.003766862373882052, 0.32028622678642615`]], 
      Opacity[0.02885748981410454, 
       RGBColor[
       0.17746095186077826`, 0.004208266962198199, 0.3224675771253837]], 
      Opacity[0.03483948099913999, 
       RGBColor[
       0.17944080909049295`, 0.005080616429678266, 0.32677858760634904`]], 
      Opacity[0.04893307971845989, 
       RGBColor[
       0.18410536182118678`, 0.007135875783525609, 0.33693534810868797`]], 
      Opacity[0.07444824770438437, 
       RGBColor[
       0.19255010676342102`, 0.010856734359992026`, 0.35532323154223067`]], 
      Opacity[0.10979169704814155`, 
       RGBColor[
       0.2042477140553446, 0.016010844130508607`, 0.3807940113948596]], 
      Opacity[0.14926189023318123`, 
       RGBColor[0.2173111481057199, 0.02176675398414385, 0.4092387902725175]], 
      Opacity[0.18776478948845193`, 
       RGBColor[
       0.23005443727107713`, 0.02738160406045251, 0.43698647446373734`]], 
      Opacity[0.22460717322298093`, 
       RGBColor[0.2422481462787407, 0.03275430235394259, 0.4635374835693049]], 
      Opacity[0.2615479772328797, 
       RGBColor[
       0.2544744294055753, 0.03814135320532724, 0.49015942070293783`]], 
      Opacity[0.2971440033290321, 
       RGBColor[0.2662556319242084, 0.04333229606179036, 0.5158122237303163]], 
      Opacity[0.3247932431108692, 
       RGBColor[0.2754066897551071, 0.04736436479172302, 0.535738057587846]], 
      
      Opacity[0.3376627622058803, 
       RGBColor[
       0.2796661093421753, 0.049241117495294744`, 0.5450126669925484]], 
      Opacity[0.334993045092764, 
       RGBColor[
       0.27878251413713406`, 0.04885179457088531, 0.5430886958431678]], 
      Opacity[0.3228860511215727, 
       RGBColor[
       0.27477546718528645`, 0.04708624035710214, 0.534363611454318]], 
      Opacity[0.30989022342164846`, 
       RGBColor[0.2704742432897736, 0.04519106816061813, 0.5249979758841177]], 
      Opacity[0.3032891119589421, 
       RGBColor[
       0.26828947606940623`, 0.04422843282881191, 0.5202407872120687]], 
      Opacity[0.3093974211628516, 
       RGBColor[
       0.27031114072330054`, 0.045119203162035416`, 0.5246428306428423]], 
      Opacity[0.33476698642744795`, 
       RGBColor[
       0.27870769559109787`, 0.04881882859848451, 0.5429257833203395]], 
      Opacity[0.38307810193268543`, 
       RGBColor[
       0.2946972061654201, 0.055864003788610124`, 0.5777419037136984]], 
      Opacity[0.44758184895261494`, 
       RGBColor[0.3005918321404034, 0.08056432396854968, 0.6191128264373875]], 
      Opacity[0.5066099114813538, 
       RGBColor[0.2906208590404989, 0.11837361136028783`, 0.651886576204394]], 
      Opacity[0.5306975034923437, 
       RGBColor[0.2865520022680761, 0.1338024540141534, 0.6652605661210302]], 
      
      Opacity[0.49985118943860135`, 
       RGBColor[0.291762536960983, 0.11404444226396371`, 0.6481339769239065]], 
      Opacity[0.41752203198665316`, 
       RGBColor[0.3056695123744401, 0.06131008776427396, 0.602422918670132]], 
      
      Opacity[0.3088059861330908, 
       RGBColor[0.2701153937080746, 0.04503295461747862, 0.5242166042354067]], 
      Opacity[0.20485236431787107`, 
       RGBColor[
       0.23570990507734005`, 0.029873472794772832`, 0.4493008881606657]], 
      Opacity[0.12691886180827797`, 
       RGBColor[
       0.20991628492514103`, 0.018508486235920673`, 0.3931369561612903]], 
      Opacity[0.08039850429392197, 
       RGBColor[
       0.19451946080675764`, 0.01172445599425955, 0.35961137201727844`]], 
      Opacity[0.0585524975648532, 
       RGBColor[
       0.18728909669804045`, 0.008538668562084295, 0.34386772394707543`]], 
      Opacity[0.0500821592935895, 
       RGBColor[
       0.1844856722285356, 0.007303445230629466, 0.33776344931088287`]], 
      Opacity[0.045859021066496385`, 
       RGBColor[
       0.1830879418587699, 0.0066875880236319995`, 0.3347199822450824]], 
      Opacity[0.042487723089574866`, 
       RGBColor[
       0.18197214471586737`, 0.006195954066992079, 0.3322904064628039]], 
      Opacity[0.041610051242206944`, 
       RGBColor[
       0.18168166201561273`, 0.006067963813414145, 0.33165789925645484`]], 
      Opacity[0.045733668931729615`, 
       RGBColor[0.183046454112867, 0.006669308012072499, 0.3346296453739512]], 
      Opacity[0.0538918348166828, 
       RGBColor[
       0.18574655901254358`, 0.007859007469195784, 0.3405089483597978]], 
      Opacity[0.06088721085536057, 
       RGBColor[
       0.18806181582191434`, 0.008879138120245416, 0.3455502696336363]], 
      Opacity[0.060865134116402826`, 
       RGBColor[
       0.1880545090924522, 0.00887591868529846, 0.34553435970497065`]], 
      Opacity[0.0518794041106742, 
       RGBColor[
       0.1850805056267482, 0.0075655361482886594`, 0.33905866038753824`]], 
      Opacity[0.03715836401215161, 
       RGBColor[
       0.18020828887375623`, 0.005418777469869981, 0.3284497249691445]], 
      Opacity[0.02223148756865977, 
       RGBColor[
       0.1752679465480043, 0.003242001825466605, 0.3176924505423707]], 
      Opacity[0.0001579078952551894, 
       RGBColor[
       0.16796226271292947`, 0.000023027594671379686`, 0.3017847986617525]], 
      Opacity[0.00037331901176712844`, 
       RGBColor[
       0.16803355724399696`, 0.00005444084269631187, 0.30194003787095136`]], 
      Opacity[0.0008416601028014522, 
       RGBColor[
       0.16818856390756015`, 0.00012273868679626176`, 0.3022775548096534]], 
      Opacity[0.0018886476944932724`, 
       RGBColor[
       0.16853508497198735`, 0.0002754201334616139, 0.3030320819130225]], 
      Opacity[0.004183896789457111, 
       RGBColor[
       0.1692947426468479, 0.000610134656400842, 0.3046861871429948]], 
      Opacity[0.008696747728857208, 
       RGBColor[
       0.17078835911712079`, 0.001268240459640882, 0.30793843996266734`]], 
      Opacity[0.016101996277936608`, 
       RGBColor[
       0.17323927126731017`, 0.0023481425237741756`, 0.31327514192723993`]], 
      Opacity[0.025717235154894203`, 
       RGBColor[
       0.17642162303232128`, 0.0037503258862289102`, 0.32020450612945484`]], 
      Opacity[0.03500833557375449, 
       RGBColor[
       0.1794966948215113, 0.005105240370719004, 0.3269002751545927]], 
      Opacity[0.040934285366773675`, 
       RGBColor[
       0.18145800405412693`, 0.005969417362351141, 0.3311708985769889]], 
      Opacity[0.04278169333443854, 
       RGBColor[
       0.1820694399302218, 0.006238823536141972, 0.3325022604705245]], 
      Opacity[0.04395540201888251, 
       RGBColor[
       0.18245790182402874`, 0.006409984628524183, 0.33334811100485756`]], 
      Opacity[0.0503349664821909, 
       RGBColor[
       0.18456934372262412`, 0.007340311920922032, 0.33794563855289483`]], 
      Opacity[0.06587470117305559, 
       RGBColor[
       0.18971252349736573`, 0.009606460242281853, 0.3491445783459399]], 
      Opacity[0.08923053522174466, 
       RGBColor[
       0.19744259455012675`, 0.013012424705401664`, 0.3659763058194716]], 
      Opacity[0.1149609533814656, 
       RGBColor[
       0.20595858075628232`, 0.016764673059732695`, 0.38451931247646326`]], 
      Opacity[0.13862647934386987`, 
       RGBColor[
       0.21379115041784885`, 0.020215799671651415`, 0.40157422401105414`]], 
      Opacity[0.160522120593954, 
       RGBColor[
       0.22103794204413268`, 0.02340882527028948, 0.41735364193341773`]], 
      Opacity[0.18354685323676354`, 
       RGBColor[
       0.2286584285970303, 0.026766505453782896`, 0.43394675627850154`]], 
      Opacity[0.20748302785982897`, 
       RGBColor[
       0.23658057473755645`, 0.0302571005650188, 0.4511967147759981]], 
      Opacity[0.22681564724157177`, 
       RGBColor[0.2429790840412841, 0.0330763625299724, 0.4651290530562179]], 
      
      Opacity[0.23520311490705034`, 
       RGBColor[
       0.24575508085954048`, 0.03429950090065242, 0.47117360576386647`]], 
      Opacity[0.23153957771045075`, 
       RGBColor[
       0.24454256141899677`, 0.03376524990901908, 0.4685334234627865]], 
      Opacity[0.22086688506481925`, 
       RGBColor[
       0.2410102246031492, 0.032208858824845345`, 0.46084198955186095`]], 
      Opacity[0.20989128157697612`, 
       RGBColor[
       0.23737763350701913`, 0.030608294470647692`, 0.4529322584594152]], 
      Opacity[0.20271112706459396`, 
       RGBColor[
       0.23500122064011783`, 0.029561217707818253`, 0.44775777384378024`]], 
      Opacity[0.20092221650264153`, 
       RGBColor[
       0.23440914562699267`, 0.029300342168584334`, 0.4464685689714329]], 
      Opacity[0.20639518514243432`, 
       RGBColor[
       0.23622053186851744`, 0.030098461244787898`, 0.4504127448216354]], 
      Opacity[0.22177172147833613`, 
       RGBColor[
       0.24130969794899632`, 0.03234081046754629, 0.4614940733048408]], 
      Opacity[0.24656658847664698`, 
       RGBColor[
       0.24951604516148046`, 0.03595662806960572, 0.4793628611712051]], 
      Opacity[0.27276462018583303`, 
       RGBColor[
       0.25818679723705706`, 0.0397770681711735, 0.49824286045329935`]], 
      Opacity[0.28611910161064025`, 
       RGBColor[
       0.26260672461243295`, 0.0417245425821265, 0.5078669651384118]], 
      Opacity[0.2742746484376436, 
       RGBColor[
       0.2586865706835475, 0.03999727450391469, 0.49933108466138476`]], 
      Opacity[0.23534725771669565`, 
       RGBColor[
       0.24580278774759165`, 0.03432052114280017, 0.4712774844129509]], 
      Opacity[0.1794714856866936, 
       RGBColor[
       0.2273096058291307, 0.026172197538220834`, 0.43100978233810394`]], 
      Opacity[0.12242764976149385`, 
       RGBColor[
       0.20842983027050171`, 0.01785353601681082, 0.38990029772983703`]], 
      Opacity[0.07706883037430379, 
       RGBColor[
       0.19341743996145117`, 0.011238892043926852`, 0.35721179322793156`]], 
      Opacity[0.048467192536442064`, 
       RGBColor[
       0.18395116732690922`, 0.00706793579121072, 0.3365995996158365]], 
      Opacity[0.03434865267404694, 
       RGBColor[
       0.17927835983606824`, 0.00500903928842634, 0.32642486490961153`]], 
      Opacity[0.028840307937694026`, 
       RGBColor[
       0.17745526518201543`, 0.004205761341532205, 0.3224551947518567]], 
      Opacity[0.026751303112290074`, 
       RGBColor[
       0.1767638680905534, 0.0039011232719270207`, 0.3209497225071579]], 
      Opacity[0.02617704006702217, 
       RGBColor[
       0.1765738044801663, 0.003817378905504995, 0.3205358713444925]], 
      Opacity[0.028208263009177455`, 
       RGBColor[
       0.17724607752484225`, 0.004113590684678981, 0.3219997022198563]], 
      Opacity[0.0341821050665014, 
       RGBColor[
       0.17922323764101794`, 0.004984751770732251, 0.32630483991132925`]], 
      Opacity[0.0427704352505452, 
       RGBColor[
       0.18206571384669884`, 0.006237181777873625, 0.3324941471657471]], 
      Opacity[0.049603695584345076`, 
       RGBColor[
       0.18432731528607246`, 0.0072336712124042215`, 0.33741863735755295`]], 
      Opacity[0.05006640233456804, 
       RGBColor[
       0.18448045715411104`, 0.007301147404640377, 0.337752093825161]], 
      Opacity[0.04281672243559503, 
       RGBColor[
       0.1820810334978199, 0.0062439318047426695`, 0.33252750471070364`]], 
      Opacity[0.03070127767171156, 
       RGBColor[
       0.1780711895904953, 0.0044771452179457735`, 0.3237963301330285]], 
      Opacity[0.018374985358271863`, 
       RGBColor[
       0.1739915615540331, 0.002679610884807328, 0.31491320514822196`]], 
      Opacity[0.00004980573344193202, 
       RGBColor[
       0.16792648418367498`, 7.2631342477088685`*^-6, 0.3017068932389298]], 
      Opacity[0.00016665701341438298`, 
       RGBColor[
       0.16796515840506696`, 0.00002430347227316981, 0.30179110384324087`]], 
      Opacity[0.0005542620885949725, 
       RGBColor[
       0.16809344390175746`, 0.00008082764131110104, 0.3020704371772249]], 
      Opacity[0.0017199782811424134`, 
       RGBColor[
       0.1684792605237184, 0.0002508231943546357, 0.30291052780398386`]], 
      Opacity[0.004705258165801294, 
       RGBColor[
       0.169467297413032, 0.0006861644105329234, 0.3050619139350056]], 
      Opacity[0.010982076046629067`, 
       RGBColor[
       0.17154473331632242`, 0.0016015082427851633`, 0.30958539563772874`]], 
      Opacity[0.021546480733411807`, 
       RGBColor[
       0.175041230109745, 0.0031421077718873157`, 0.3171987902284481]], 
      Opacity[0.035352079280145346`, 
       RGBColor[0.179610463538518, 0.005155368267926515, 0.3271479991440101]], 
      Opacity[0.048545246152646014`, 
       RGBColor[
       0.18397700070104278`, 0.007079318293863138, 0.33665585010954746`]], 
      Opacity[0.05624425112856271, 
       RGBColor[
       0.18652513729831993`, 0.008202058646217487, 0.34220425199071547`]], 
      Opacity[0.056338768426035066`, 
       RGBColor[
       0.18655641965045744`, 0.008215842035655426, 0.3422723672799949]], 
      Opacity[0.051924937872832616`, 
       RGBColor[
       0.18509557591779627`, 0.007572176304039912, 0.3390914749671374]], 
      Opacity[0.049474433101407415`, 
       RGBColor[
       0.18428453333379957`, 0.00721482095758641, 0.3373254824361392]], 
      Opacity[0.053922853390260206`, 
       RGBColor[
       0.18575682521743306`, 0.007863530885447206, 0.3405313023539212]], 
      Opacity[0.06514477767977685, 
       RGBColor[
       0.18947094101076467`, 0.009500016024801928, 0.3486185481776409]], 
      Opacity[0.0791430332939745, 
       RGBColor[
       0.19410393807209342`, 0.011541371562276328`, 0.35870659826019546`]], 
      Opacity[0.09266512843883758, 
       RGBColor[
       0.1985793404933507, 0.013513288961343206`, 0.3684514962533492]], 
      Opacity[0.1062556159285297, 
       RGBColor[
       0.2030773787016191, 0.015495179966814017`, 0.3782456822020107]], 
      Opacity[0.1221874318470189, 
       RGBColor[
       0.2083503254434351, 0.017818505211299837`, 0.3897271811345455]], 
      Opacity[0.1396427488964974, 
       RGBColor[
       0.21412750474517417`, 0.02036400152879701, 0.4023066137049445]], 
      Opacity[0.15324879469139552`, 
       RGBColor[
       0.21863069227949328`, 0.02234816139071403, 0.41211201197651565`]], 
      Opacity[0.15737624067889872`, 
       RGBColor[
       0.21999675142699882`, 0.02295006386731051, 0.41508651701361043`]], 
      Opacity[0.1515759958632587, 
       RGBColor[
       0.21807704672046438`, 0.022104218342021996`, 0.4109064847435962]], 
      Opacity[0.1410599690089604, 
       RGBColor[
       0.21459656151890802`, 0.020570673717399006`, 0.40332795435384866`]], 
      Opacity[0.13193312441097613`, 
       RGBColor[
       0.211575853413051, 0.019239712541003075`, 0.39675055871701126`]], 
      Opacity[0.1265301974549822, 
       RGBColor[
       0.20978764883959647`, 0.01845180759311789, 0.3928568594428553]], 
      Opacity[0.12339448203425986`, 
       RGBColor[
       0.20874982236108616`, 0.01799452847102905, 0.3905970597163235]], 
      Opacity[0.1209792020705086, 
       RGBColor[
       0.2079504381175954, 0.01764230993291678, 0.38885645246430267`]], 
      Opacity[0.12033216737051693`, 
       RGBColor[
       0.20773628930175303`, 0.017547953328481976`, 0.3883901573316401]], 
      Opacity[0.12358499743077025`, 
       RGBColor[
       0.20881287716566305`, 0.01802231119413108, 0.3907343574564466]], 
      Opacity[0.13005664112682638`, 
       RGBColor[
       0.21095479449108928`, 0.01896606633474348, 0.3953982432663361]], 
      Opacity[0.13465230456396468`, 
       RGBColor[
       0.21247581938061355`, 0.019636248624903683`, 0.3987101761381287]], 
      Opacity[0.1307897870222288, 
       RGBColor[
       0.21119744349483224`, 0.01907298047280497, 0.39592659570641714`]], 
      Opacity[0.11525477740763415`, 
       RGBColor[
       0.20605582757669372`, 0.016807521205915554`, 0.3847310611095172]], 
      Opacity[0.09061078199236032, 
       RGBColor[
       0.1978994142716987, 0.01321370509818287, 0.36697100108236796`]], 
      Opacity[0.06344836658536164, 
       RGBColor[
       0.1889094805094105, 0.009252629616319346, 0.34739600441556634`]], 
      Opacity[0.0403906162117818, 
       RGBColor[
       0.18127806609136693`, 0.005890134480920467, 0.3307790953541405]], 
      Opacity[0.02493672777420439, 
       RGBColor[
       0.1761632988167373, 0.0036365050568682293`, 0.3196420219340515]], 
      Opacity[0.01681699088420203, 
       RGBColor[
       0.173475912746148, 0.0024524096724097455`, 0.3137904133721653]], 
      Opacity[0.01352924315377456, 
       RGBColor[
       0.1723877681949075, 0.0019729597880598737`, 0.31142104931156633`]], 
      Opacity[0.012611738365587256`, 
       RGBColor[
       0.17208410200216306`, 0.0018391607254019662`, 0.31075983590688827`]], 
      Opacity[0.01315748256784148, 
       RGBColor[
       0.17226472674248547`, 0.0019187462094808743`, 0.311153134543257]], 
      Opacity[0.015718241370795555`, 
       RGBColor[
       0.17311226005919567`, 0.002292179821969329, 0.3129985832738361]], 
      Opacity[0.020807455887243996`, 
       RGBColor[
       0.17479663535201878`, 0.0030343363106685533`, 0.31666620103548954`]], 
      Opacity[0.027294158396999647`, 
       RGBColor[
       0.17694353668699161`, 0.003980287467240413, 0.3213409392023421]], 
      Opacity[0.03226623942174755, 
       RGBColor[
       0.17858914435492002`, 0.0047053624631810615`, 0.32492414297962585`]], 
      Opacity[0.032790876952139, 
       RGBColor[
       0.17876278342849866`, 0.004781869976499025, 0.3253022307805379]], 
      Opacity[0.02810808942702616, 
       RGBColor[
       0.17721292311442707`, 0.0040989824433188375`, 0.32192751064530994`]], 
      Opacity[0.020170241419199823`, 
       RGBColor[0.174585736734416, 0.002941411783588088, 0.3162069829983194]], 
      Opacity[0.012075148500726888`, 
       RGBColor[
       0.17190650706922617`, 0.0017609102117540816`, 0.31037313447924664`]], 
      Opacity[0.000027712382920244827`, 
       RGBColor[
       0.16791917195629016`, 4.0412768483436*^-6, 0.3016909713388948]], 
      Opacity[0.00012940598423633628`, 
       RGBColor[
       0.1679528294468403, 0.00001887118150887627, 0.3017642583377485]], 
      Opacity[0.0005249638793115929, 
       RGBColor[
       0.1680837470851502, 0.00007655510454601649, 0.3020493229890913]], 
      Opacity[0.0018001154575978794`, 
       RGBColor[
       0.168505783492955, 0.0002625095410983693, 0.3029682798462267]], 
      Opacity[0.00515681929252179, 
       RGBColor[
       0.16961675041851823`, 0.000752015244518562, 0.30538733814408137`]], 
      Opacity[0.012288009503872778`, 
       RGBColor[
       0.17197695759029297`, 0.0017919515785829246`, 0.3105265359115066]], 
      Opacity[0.02433130256337225, 
       RGBColor[
       0.17596292147687828`, 0.0035482163342787296`, 0.3192057132955722]], 
      Opacity[0.04006292264928739, 
       RGBColor[
       0.18116960948406557`, 0.005842347164641272, 0.3305429381384642]], 
      Opacity[0.05498132030898123, 
       RGBColor[0.1861071455901354, 0.00801788635410811, 0.3412941022042079]], 
      Opacity[0.0632371059140705, 
       RGBColor[
       0.18883955964953755`, 0.009221821624732644, 0.34724375628614246`]], 
      Opacity[0.061822810927294844`, 
       RGBColor[0.1883714710034824, 0.00901557600510354, 0.3462245236723568]], 
      Opacity[0.05331506077322795, 
       RGBColor[
       0.18555566433809095`, 0.007774896925716076, 0.34009328760912616`]], 
      Opacity[0.04414447690260404, 
       RGBColor[
       0.1825204798626641, 0.006437557282683378, 0.3334843706181198]], 
      Opacity[0.03981798309644006, 
       RGBColor[
       0.18108854193823554`, 0.005806627806006024, 0.3303664188245994]], 
      Opacity[0.04158385933387167, 
       RGBColor[
       0.18167299329018777`, 0.006064144266279785, 0.3316390236700728]], 
      Opacity[0.04733054166508921, 
       RGBColor[0.1835749704426779, 0.00690217881302996, 0.3357804553429632]], 
      Opacity[0.0551523637691129, 
       RGBColor[
       0.18616375577571778`, 0.00804282949874782, 0.341417367205195]], 
      Opacity[0.06542680791518997, 
       RGBColor[
       0.18956428444496726`, 0.009541144290970454, 0.3488217974408388]], 
      Opacity[0.07900598897498466, 
       RGBColor[
       0.19405858056865508`, 0.011521386487909952`, 0.35860783524345957`]], 
      Opacity[0.09375762316736577, 
       RGBColor[
       0.19894092303665378`, 0.013672606681008271`, 0.36923881874838504`]], 
      Opacity[0.10414607284329981`, 
       RGBColor[
       0.2023791840705178, 0.015187546817565966`, 0.37672540875640215`]], 
      Opacity[0.10532168298583218`, 
       RGBColor[
       0.20276827528914768`, 0.015358985198212157`, 0.37757262960464816`]], 
      Opacity[0.09763190899244066, 
       RGBColor[
       0.20022319386646448`, 0.014237590993393147`, 0.3720308801676555]], 
      Opacity[0.08652885767148881, 
       RGBColor[
       0.19654842141198958`, 0.012618441013455689`, 0.364029301908052]], 
      Opacity[0.07787928623822472, 
       RGBColor[
       0.19368567621455074`, 0.01135708023903422, 0.357795860241013]], 
      Opacity[0.07352921242873982, 
       RGBColor[
       0.19224593402585505`, 0.010722712107450178`, 0.3546609151691153]], 
      Opacity[0.07124310410303292, 
       RGBColor[
       0.19148930166773917`, 0.010389330576310337`, 0.3530133973697914]], 
      Opacity[0.06832022317656483, 
       RGBColor[
       0.19052191693665838`, 0.009963088955277762, 0.35090697997149445`]], 
      Opacity[0.06470220754471152, 
       RGBColor[
       0.18932446375019016`, 0.009435476340655849, 0.34829960345976807`]], 
      Opacity[0.06248245156305874, 
       RGBColor[
       0.1885897920008449, 0.00911177092407573, 0.34669990345920143`]], 
      Opacity[0.06283017807640727, 
       RGBColor[
       0.18870487890587728`, 0.009162479631154257, 0.34695049771739844`]], 
      Opacity[0.06395767035805765, 
       RGBColor[0.1890780445753382, 0.00932690101879289, 0.3477630417170556]], 
      Opacity[0.06227223755984084, 
       RGBColor[
       0.1885202175562855, 0.009081115567340547, 0.3465484096266152]], 
      Opacity[0.05534545128038473, 
       RGBColor[
       0.18622766187208842`, 0.008070987311493583, 0.3415565185778882]], 
      Opacity[0.04377894584471784, 
       RGBColor[
       0.18239950019464793`, 0.0063842521516941945`, 0.33322094525139445`]], 
      Opacity[0.030588984576492506`, 
       RGBColor[
       0.1780340239896879, 0.004460769596721007, 0.32371540445202107`]], 
      Opacity[0.019101019560659935`, 
       RGBColor[
       0.1742318568035838, 0.002785487929796955, 0.3154364324414791]], 
      Opacity[0.011189838823208056`, 
       RGBColor[
       0.17161349647938165`, 0.0016318061389044782`, 0.3097351229575595]], 
      Opacity[0.006875186771621971, 
       RGBColor[
       0.170185477815729, 0.0010026035367711565`, 0.30662570509973364`]], 
      Opacity[0.005070795096210079, 
       RGBColor[
       0.1695882790246746, 0.0007394703979078466, 0.3053253435338512]], 
      Opacity[0.004674887098031838, 
       RGBColor[
       0.16945724551288077`, 0.0006817354195872723, 0.3050400265755257]], 
      Opacity[0.005259806152355887, 
       RGBColor[
       0.16965083593832278`, 0.0007670337441376293, 0.30546155714882633`]], 
      Opacity[0.007010521096503917, 
       RGBColor[
       0.17023026936310146`, 0.0010223392439279767`, 0.3067232357839078]], 
      Opacity[0.010040830123052121`, 
       RGBColor[
       0.1712332095294945, 0.0014642470274470023`, 0.3089070728324634]], 
      Opacity[0.013671021273645743`, 
       RGBColor[0.17243469244253, 0.001993635189200442, 0.3115232238119677]], 
      
      Opacity[0.016393487965088577`, 
       RGBColor[
       0.1733357461544102, 0.0023906505466375324`, 0.31348520972566296`]], 
      Opacity[0.016743385353726593`, 
       RGBColor[
       0.17345155155316874`, 0.0024416758308964943`, 0.31373736845726635`]], 
      Opacity[0.014376506074666694`, 
       RGBColor[
       0.17266818646493, 0.0020965155297842705`, 0.3120316418749985]], 
      Opacity[0.010322293066279286`, 
       RGBColor[
       0.17132636520722924`, 0.0015052925658045006`, 0.30910991326815157`]], 
      Opacity[0.006180697829047139, 
       RGBColor[
       0.1699556230882006, 0.0009013267143075074, 0.30612521136483073`]], 
      Opacity[0.00002168595966040543, 
       RGBColor[
       0.16791717739339443`, 3.162447883385968*^-6, 0.3016866283077815]], 
      Opacity[0.00010882816247861305`, 
       RGBColor[
       0.1679460188134043, 0.000015870332577979156`, 0.30174942862594706`]], 
      Opacity[0.00045546292968841567`, 
       RGBColor[
       0.16806074438365382`, 0.00006641983110315228, 0.30199923610113133`]], 
      Opacity[0.0015825173743297025`, 
       RGBColor[
       0.16843376514237496`, 0.00023077736928599102`, 0.30281146456706787`]], 
      
      Opacity[0.004558866512551927, 
       RGBColor[
       0.1694188462261127, 0.0006648162211415584, 0.30495641462349493`]], 
      Opacity[0.010889171434171676`, 
       RGBColor[
       0.17151398471389923`, 0.0015879600300418228`, 0.3095184425537731]], 
      Opacity[0.021581998075413188`, 
       RGBColor[
       0.17505298527022028`, 0.003147287240298891, 0.31722438632661804`]], 
      Opacity[0.0355384658749352, 
       RGBColor[
       0.17967215183524096`, 0.00518254889084637, 0.32728232140206703`]], 
      Opacity[0.04871760542521636, 
       RGBColor[
       0.1840340463805417, 0.007104453322483395, 0.33678006337024247`]], 
      Opacity[0.055804905876418905`, 
       RGBColor[
       0.186379727375956, 0.008137989244425938, 0.34188763133244826`]], 
      Opacity[0.05387287481459786, 
       RGBColor[
       0.18574028382823754`, 0.00785624254574294, 0.3404952845536872]], 
      Opacity[0.044812872980885834`, 
       RGBColor[
       0.1827416986453346, 0.0065350290015340345`, 0.3339660601441955]], 
      Opacity[0.033973890163501795`, 
       RGBColor[
       0.17915432483785812`, 0.004954387941342549, 0.326154786759902]], 
      Opacity[0.026288615457009768`, 
       RGBColor[
       0.17661073254236034`, 0.003833649864292605, 0.32061627980060287`]], 
      Opacity[0.02358919844220151, 
       RGBColor[
       0.17571730757273607`, 0.003439995824603368, 0.3186709049775095]], 
      Opacity[0.025155242230728125`, 
       RGBColor[
       0.1762356204590072, 0.0036683708627326763`, 0.3197994976111593]], 
      Opacity[0.03009177667245945, 
       RGBColor[
       0.17786946328857323`, 0.004388262126065558, 0.3233570842173027]], 
      Opacity[0.03853912301103922, 
       RGBColor[
       0.18066527812731445`, 0.005620132560531281, 0.329444789376926]], 
      Opacity[0.05029956227506484, 
       RGBColor[
       0.1845576260063533, 0.007335148950887867, 0.3379201239870472]], 
      Opacity[0.06266909608342548, 
       RGBColor[
       0.1886515656630929, 0.009138989160096757, 0.3468344115951426]], 
      Opacity[0.07068785755383943, 
       RGBColor[
       0.1913055319394512, 0.010308359371818966`, 0.3526132507264662]], 
      Opacity[0.07053804899850481, 
       RGBColor[
       0.19125594986181554`, 0.010286512898056677`, 0.3525052889738977]], 
      Opacity[0.06288175858730867, 
       RGBColor[
       0.18872195048693813`, 0.00917000157992104, 0.3469876699759711]], 
      Opacity[0.05248466580534784, 
       RGBColor[
       0.18528082884772965`, 0.007653801025434496, 0.33949485118567785`]], 
      Opacity[0.04438579420380819, 
       RGBColor[
       0.18260034855331672`, 0.006472748410969522, 0.33365827950272864`]], 
      Opacity[0.04043997894368837, 
       RGBColor[
       0.18129440365500096`, 0.005897333012573236, 0.3308146693374574]], 
      Opacity[0.03928629323326641, 
       RGBColor[
       0.1809125687568969, 0.005729091856076113, 0.32998324865569334`]], 
      Opacity[0.0390489257049414, 
       RGBColor[
       0.18083400732099417`, 0.005694476720325097, 0.3298121862333665]], 
      Opacity[0.03954281598844678, 
       RGBColor[
       0.18099746999056984`, 0.005766500384767682, 0.3301681155757508]], 
      Opacity[0.04174489274298541, 
       RGBColor[
       0.18172629045318878`, 0.006087627652386787, 0.33175507477964505`]], 
      Opacity[0.045495848459725124`, 
       RGBColor[
       0.18296774276637584`, 0.006634626823870824, 0.33445825653105815`]], 
      Opacity[0.04836290758387009, 
       RGBColor[
       0.18391665217787045`, 0.007052727991662315, 0.33652444512134827`]], 
      Opacity[0.04717805946085713, 
       RGBColor[
       0.1835245034685361, 0.006879942442973984, 0.33567056678574675`]], 
      Opacity[0.04066765076553011, 
       RGBColor[
       0.1813697561068072, 0.005930534230428705, 0.33097874440541064`]], 
      Opacity[0.03047154405821513, 
       RGBColor[
       0.17799515474832983`, 0.00444364333049779, 0.3236307692044048]], 
      Opacity[0.019787991983298392`, 
       RGBColor[
       0.1744592237915155, 0.0028856686235701765`, 0.3159315092850454]], 
      Opacity[0.011241272820960949`, 
       RGBColor[
       0.17163051956904432`, 0.001639306721764304, 0.3097721896292633]], 
      Opacity[0.005781285866011015, 
       RGBColor[
       0.16982342987055932`, 0.0008430807553145628, 0.3058373692223717]], 
      Opacity[0.002961265530773028, 
       RGBColor[
       0.16889008886821374`, 0.00043183922024144856`, 0.3038050798314815]], 
      Opacity[0.0018135334151582394`, 
       RGBColor[
       0.16851022442900157`, 0.0002644662721884671, 0.30297794969592834`]], 
      Opacity[0.001552944340239534, 
       RGBColor[
       0.16842397736711134`, 0.00022646475501720626`, 0.3027901523223699]], 
      Opacity[0.0018410079205770868`, 
       RGBColor[
       0.16851931765507022`, 0.0002684728595320538, 0.30299774960488113`]], 
      Opacity[0.0026704931234986717`, 
       RGBColor[
       0.16879385204088712`, 0.0003894360894447624, 0.30359553039274756`]], 
      Opacity[0.0040350035325807665`, 
       RGBColor[
       0.16924546350517686`, 0.0005884216599537097, 0.30457888501380664`]], 
      Opacity[0.005622525416069429, 
       RGBColor[
       0.16977088498794635`, 0.0008199288332071051, 0.3057229561544666]], 
      Opacity[0.006799898374605156, 
       RGBColor[
       0.17016055964508373`, 0.0009916242840418404, 0.3065714474021552]], 
      Opacity[0.006965471979952172, 
       RGBColor[
       0.17021535947501598`, 0.0010157697636965998`, 0.30669077047133786`]], 
      Opacity[0.005986726102890577, 
       RGBColor[
       0.16989142434358326`, 0.0008730399571417387, 0.30598542276959445`]], 
      Opacity[0.0042998608203199465`, 
       RGBColor[
       0.16933312321575697`, 0.0006270456075274671, 0.3047697583381037]], 
      Opacity[0.002574912431863989, 
       RGBColor[
       0.16876221773760905`, 0.0003754976260017746, 0.3035266487527268]], 
      Opacity[0.000015073751834319122`, 
       RGBColor[
       0.16791498895361512`, 2.198194376897437*^-6, 0.30168186312235096`]], 
      Opacity[0.00007657151155971586, 
       RGBColor[
       0.16793534284255232`, 0.000011166368399265042`, 0.3017261823930639]], 
      Opacity[0.00032205593452635107`, 
       RGBColor[
       0.16801659072382782`, 0.00004696518505170492, 0.3019030943756443]], 
      Opacity[0.0011212794557794855`, 
       RGBColor[
       0.16828110941296756`, 0.00016351537571511422`, 0.30247906663474344`]], 
      
      Opacity[0.003232889855417273, 
       RGBColor[
       0.16897998826229152`, 0.000471449999934805, 0.30400082992107635`]], 
      Opacity[0.007724664287742596, 
       RGBColor[
       0.17046662904944845`, 0.0011264822313232156`, 0.3072378936439932]], 
      Opacity[0.015311428127562508`, 
       RGBColor[
       0.1729776172428081, 0.0022328545396141887`, 0.3127054072892642]], 
      Opacity[0.025208883843954654`, 
       RGBColor[
       0.17625337420228013`, 0.003676193380567539, 0.31983815523362685`]], 
      Opacity[0.03453332801305892, 
       RGBColor[
       0.1793394817591509, 0.005035970360148212, 0.3265579539258655]], 
      Opacity[0.039468488341086364`, 
       RGBColor[
       0.18097286979885402`, 0.005755661237469019, 0.33011455025663133`]], 
      Opacity[0.037841217701115586`, 
       RGBColor[
       0.18043429268605116`, 0.005518357531676941, 0.32894183358633095`]], 
      Opacity[0.030848556914665235`, 
       RGBColor[
       0.17811993454262398`, 0.004498622843904653, 0.32390246909919584`]], 
      Opacity[0.022161850059386753`, 
       RGBColor[
       0.17524489864941523`, 0.0032318466376283278`, 0.31764226524067796`]], 
      Opacity[0.015318396427319433`, 
       RGBColor[
       0.17297992353819133`, 0.0022338707217505653`, 0.3127104290976149]], 
      Opacity[0.011915761360604977`, 
       RGBColor[
       0.1718537547712149, 0.0017376668998688443`, 0.31025826977778814`]], 
      Opacity[0.0118952270906959, 
       RGBColor[
       0.1718469585521168, 0.0017346724020726777`, 0.310243471452271]], 
      Opacity[0.014923422844875439`, 
       RGBColor[
       0.1728491992895993, 0.002176272008603737, 0.3124257855398176]], 
      Opacity[0.021009231864169076`, 
       RGBColor[
       0.1748634170663913, 0.0030637611561048343`, 0.31681161387954504`]], 
      Opacity[0.029615214044763853`, 
       RGBColor[
       0.17771173554630987`, 0.0043187653411938, 0.32301364230652696`]], 
      Opacity[0.038457866002119714`, 
       RGBColor[
       0.18063838452757516`, 0.0056082829094255965`, 0.3293862303108444]], 
      Opacity[0.043929517482043295`, 
       RGBColor[
       0.18244933482922487`, 0.0064062099051537865`, 0.33332945693029326`]], 
      Opacity[0.04344412585032554, 
       RGBColor[
       0.1822886849550319, 0.006335425592982361, 0.3329796522670997]], 
      Opacity[0.03757463897198201, 
       RGBColor[
       0.1803460632307013, 0.005479482547544077, 0.32874971967981564`]], 
      Opacity[0.029693167558785136`, 
       RGBColor[
       0.1777375357896641, 0.004330133246016994, 0.3230698206601184]], 
      Opacity[0.023424265382463238`, 
       RGBColor[
       0.17566271974392772`, 0.003415943755253539, 0.31855204352699984`]], 
      Opacity[0.02045664112267113, 
       RGBColor[
       0.174680526329714, 0.0029831772461375227`, 0.3164133811833416]], 
      Opacity[0.02058950432525958, 
       RGBColor[
       0.17472450001072942`, 0.003002552591309491, 0.31650913101666234`]], 
      Opacity[0.023364437828642632`, 
       RGBColor[
       0.17564291864237072`, 0.0034072191461557186`, 0.3185089279148912]], 
      Opacity[0.029060550803099897`, 
       RGBColor[
       0.17752815887508167`, 0.00423787920001948, 0.32261391603240586`]], 
      Opacity[0.03771858160097497, 
       RGBColor[
       0.18039370386504205`, 0.0055004735974914275`, 0.32885345406575034`]], 
      Opacity[0.047320582273066, 
       RGBColor[
       0.18357167418668374`, 0.0069007264420619776`, 0.3357732779597027]], 
      Opacity[0.05366813366450692, 
       RGBColor[
       0.18567252073168838`, 0.007826385291238806, 0.34034773481370517`]], 
      Opacity[0.052909585009629743`, 
       RGBColor[
       0.18542146418680316`, 0.007715766687053099, 0.3398010754990478]], 
      Opacity[0.044527926107396615`, 
       RGBColor[
       0.1826473898925946, 0.006493475404134851, 0.3337607089626018]], 
      Opacity[0.03177139060477053, 
       RGBColor[
       0.17842536443990467`, 0.004633199016492451, 0.32456752285590884`]], 
      Opacity[0.019200367662338846`, 
       RGBColor[
       0.17426473800505723`, 0.002799975791934157, 0.31550802912130593`]], 
      Opacity[0.009866158161346549, 
       RGBColor[
       0.1711753984201976, 0.001438774741035291, 0.3087811928981152]], 
      Opacity[0.0043736251038271005`, 
       RGBColor[
       0.16935753695116362`, 0.0006378025998810313, 0.30482291766072456`]], 
      Opacity[0.0017582393112751447`, 
       RGBColor[
       0.16849192376155703`, 0.00025640277283095025`, 0.30293810118161224`]], 
      
      Opacity[0.0007540173382445014, 
       RGBColor[
       0.16815955681683184`, 0.00010995780554371209`, 0.3022143937542625]], 
      Opacity[0.00048578709692042243`, 
       RGBColor[
       0.16807078076115292`, 0.00007084198257719542, 0.30202108966104474`]], 
      Opacity[0.0005541853606355432, 
       RGBColor[
       0.1680934185071354, 0.00008081645212802162, 0.30207038188208535`]], 
      Opacity[0.0008497713765355156, 
       RGBColor[
       0.1681912484925834, 0.00012392154800478313`, 0.3022834003191167]], 
      Opacity[0.001333697971827353, 
       RGBColor[
       0.1683514134842565, 0.00019449221496904316`, 0.3026321491821274]], 
      Opacity[0.0018882761580954835`, 
       RGBColor[
       0.1685349620047344, 0.00027536595257623053`, 0.30303181415981867`]], 
      Opacity[0.0022968863750200213`, 
       RGBColor[
       0.16867019956478582`, 0.00033495328631097973`, 0.30332628516007654`]], 
      
      Opacity[0.002357452017617633, 
       RGBColor[
       0.1686902449512901, 0.0003437855303637267, 0.303369932686786]], 
      Opacity[0.0020275339055734437`, 
       RGBColor[
       0.16858105208571408`, 0.00029567380962536327`, 0.3031321723165533]], 
      Opacity[0.0014565587750465857`, 
       RGBColor[
       0.16839207667515366`, 0.00021240891744272555`, 0.3027206906383072]], 
      Opacity[0.0008723027895646501, 
       RGBColor[
       0.1681987057053411, 0.00012720728774420444`, 0.30229963791538106`]], 
      Opacity[8.528607023694807*^-6, 
       RGBColor[
       0.16791282270965519`, 1.2437206216683566`*^-6, 0.30167714626687503`]], 
      
      Opacity[0.000043421942797335525`, 
       RGBColor[
       0.16792437134303886`, 6.332190654336626*^-6, 0.3017022926657217]], 
      Opacity[0.00018279768246469124`, 
       RGBColor[
       0.16797050047584627`, 0.000026657254419494548`, 0.3018027358552739]], 
      Opacity[0.000636672870266015, 
       RGBColor[
       0.1681207193652028, 0.00009284554626642638, 0.3021298277267157]], 
      Opacity[0.0018359431866694473`, 
       RGBColor[
       0.16851764138211472`, 0.0002677342730329111, 0.3029940996294325]], 
      Opacity[0.004387039066848321, 
       RGBColor[
       0.16936197656513916`, 0.0006397587484503626, 0.30483258463170243`]], 
      Opacity[0.008695652927710967, 
       RGBColor[
       0.17078799677122333`, 0.0012680808055779823`, 0.3079376509780183]], 
      Opacity[0.014314897539797339`, 
       RGBColor[
       0.1726477959127877, 0.0020875312015024173`, 0.3119872427725386]], 
      Opacity[0.01960180910633222, 
       RGBColor[
       0.17439760291919915`, 0.0028585177086738705`, 0.3157973338392531]], 
      Opacity[0.022374615395792167`, 
       RGBColor[
       0.1753153175076992, 0.0032628740534452866`, 0.3177955977292855]], 
      Opacity[0.02136887223806522, 
       RGBColor[
       0.17498244709708355`, 0.0031162072528890397`, 0.31707079403767086`]], 
      Opacity[0.017219391753283585`, 
       RGBColor[
       0.17360909520082757`, 0.002511091501419283, 0.3140804095140018]], 
      Opacity[0.01197449675661695, 
       RGBColor[
       0.17187319440173882`, 0.0017462322403797852`, 0.310300598310208]], 
      Opacity[0.007659487432649043, 
       RGBColor[
       0.17044505749178887`, 0.0011169775374722584`, 0.30719092297875256`]], 
      Opacity[0.005281243173089463, 
       RGBColor[
       0.16965793094050016`, 0.0007701598894365517, 0.30547700605508593`]], 
      Opacity[0.004953376908712997, 
       RGBColor[
       0.16954941717412597`, 0.0007223473881662421, 0.30524072437924227`]], 
      Opacity[0.006582353417750751, 
       RGBColor[
       0.1700885588777316, 0.0009598998596161312, 0.3064146704093327]], 
      Opacity[0.010141131446681542`, 
       RGBColor[
       0.17126640621845562`, 0.0014788738972549276`, 0.3089793564657965]], 
      Opacity[0.015191389348827624`, 
       RGBColor[
       0.17293788805622573`, 0.0022153493709392014`, 0.312618899566795]], 
      Opacity[0.020308292790982504`, 
       RGBColor[
       0.17463142754171437`, 0.002961543715738169, 0.3163064717625549]], 
      Opacity[0.02339802848578836, 
       RGBColor[
       0.17565403612872998`, 0.0034121176475020065`, 0.318533135519105]], 
      Opacity[0.023013305246068826`, 
       RGBColor[0.1755267044319693, 0.00335601373445444, 0.3182558790224972]], 
      Opacity[0.01950150297170912, 
       RGBColor[
       0.1743644046379454, 0.002843890137282201, 0.3157250467388062]], 
      Opacity[0.014787536629430182`, 
       RGBColor[
       0.17280422508322785`, 0.00215645581964343, 0.312327857127541]], 
      Opacity[0.011024177837245977`, 
       RGBColor[
       0.17155866772912218`, 0.0016076479165975381`, 0.30961573691624333`]], 
      Opacity[0.009513040393253366, 
       RGBColor[
       0.1710585271737389, 0.0013872798311590552`, 0.3085267133523959]], 
      Opacity[0.010836434925765024`, 
       RGBColor[
       0.17149653053280647`, 0.0015802695029911668`, 0.3094804372084895]], 
      Opacity[0.015660060584910297`, 
       RGBColor[
       0.17309300398776353`, 0.0022836953598538478`, 0.3129566544294123]], 
      Opacity[0.02478969697229001, 
       RGBColor[
       0.17611463609104003`, 0.0036150636608872316`, 0.31953606201059603`]], 
      Opacity[0.037801441988587564`, 
       RGBColor[
       0.18042112813438604`, 0.005512557068157492, 0.3289131686304171]], 
      Opacity[0.05147909023035114, 
       RGBColor[0.1849480139019032, 0.00750715866334714, 0.338770168265038]], 
      
      Opacity[0.060357109472955035`, 
       RGBColor[
       0.18788636837942013`, 0.008801833817322212, 0.3451682442269053]], 
      Opacity[0.05996190973346001, 
       RGBColor[
       0.18775556927971937`, 0.008744202123855465, 0.344883437685682]], 
      Opacity[0.05014197193887381, 
       RGBColor[
       0.1845054683958203, 0.007312167665626172, 0.3378065541789341]], 
      Opacity[0.0351989411039986, 
       RGBColor[
       0.17955977945761398`, 0.005133036237958521, 0.32703763785092493`]], 
      Opacity[0.02072108036969736, 
       RGBColor[0.1747680476815266, 0.0030217402311351, 0.3166039532404119]], 
      
      Opacity[0.010230820444815996`, 
       RGBColor[
       0.17129609055029257`, 0.0014919531792767966`, 0.30904399216969924`]], 
      Opacity[0.004247611621296647, 
       RGBColor[
       0.1693158303192559, 0.0006194261444533227, 0.30473210417953944`]], 
      Opacity[0.001500916114442432, 
       RGBColor[
       0.16840675760603058`, 0.00021887751630953747`, 0.3027526574114315]], 
      Opacity[0.00047851546990846966`, 
       RGBColor[
       0.16806837407366942`, 0.00006978156644561379, 0.3020158492554185]], 
      Opacity[0.00018136484498599282`, 
       RGBColor[
       0.16797002625019908`, 0.00002644830476161894, 0.3018017032597389]], 
      Opacity[0.00014726819269442467`, 
       RGBColor[
       0.1679587412948288, 0.000021476014507529207`, 0.30177713100263454`]], 
      Opacity[0.0002201110789230631, 
       RGBColor[
       0.16798285007574673`, 0.000032098640159373465`, 0.3018296263066699]], 
      Opacity[0.0003529058701029287, 
       RGBColor[
       0.1680268011146656, 0.00005146400894488362, 0.3019253268382966]], 
      Opacity[0.0005051544547336719, 
       RGBColor[
       0.16807719076782143`, 0.00007366631042260396, 0.3020350470340898]], 
      Opacity[0.0006170027335489213, 
       RGBColor[
       0.1681142091479216, 0.00008997706439147105, 0.3021156521515725]], 
      Opacity[0.000634158394451915, 
       RGBColor[
       0.1681198871501484, 0.00009247886206887877, 0.302128015632506]], 
      Opacity[0.0005456648336825818, 
       RGBColor[
       0.168090598471738, 0.00007957390981725065, 0.3020642414382329]], 
      Opacity[0.00039206045293909076`, 
       RGBColor[
       0.16803976009128507`, 0.00005717389356858149, 0.30195354416790526`]], 
      Opacity[0.00023480879487266935`, 
       RGBColor[
       0.1679877145729155, 0.000034241997493949066`, 0.3018402184331952]], 
      Opacity[3.821293753385784*^-6, 
       RGBColor[
       0.16791126473206505`, 5.572565167247464*^-7, 0.30167375387189854`]], 
      Opacity[0.000019455463044419616`, 
       RGBColor[
       0.16791643916682164`, 2.837176167834321*^-6, 0.30168502086738386`]], 
      Opacity[0.000081903602802641, 
       RGBColor[
       0.16793710760265815`, 0.00001194394342611512, 0.3017300250435331]], 
      Opacity[0.00028526511484378074`, 
       RGBColor[
       0.1680044140809538, 0.00004160000630678586, 0.3018765805269359]], 
      Opacity[0.0008226024349613031, 
       RGBColor[
       0.16818225639885817`, 0.00011995952081665365`, 0.30226382061927093`]], 
      
      Opacity[0.0019656162497959473`, 
       RGBColor[
       0.16856055922394847`, 0.0002866444024640431, 0.30308755044153596`]], 
      Opacity[0.0038959969893386, 
       RGBColor[
       0.1691994565651626, 0.0005681504358374157, 0.3044787078911223]], 
      Opacity[0.006413144805117578, 
       RGBColor[
       0.17003255597089184`, 0.0009352242894660367, 0.30629272771835114`]], 
      Opacity[0.008779604460223162, 
       RGBColor[
       0.1708157821763583, 0.0012803233971191324`, 0.30799815189240587`]], 
      Opacity[0.010014158072000458`, 
       RGBColor[
       0.17122438189142677`, 0.001460357461446015, 0.3088878512241266]], 
      Opacity[0.009542551426807525, 
       RGBColor[
       0.1710682944287099, 0.001391583403934314, 0.30854798091548996`]], 
      Opacity[0.007637820837982194, 
       RGBColor[
       0.17043788650761862`, 0.0011138179135719401`, 0.3071753086266403]], 
      Opacity[0.005208739580916298, 
       RGBColor[
       0.16963393445560004`, 0.0007595867427925255, 0.3054247552683331]], 
      Opacity[0.0031677560387018086`, 
       RGBColor[
       0.16895843094902674`, 0.00046195158233953683`, 0.30395389027207986`]], 
      
      Opacity[0.0019925042634789695`, 
       RGBColor[
       0.16856945833908193`, 0.0002905654621400684, 0.30310692768653924`]], 
      Opacity[0.001772235836441906, 
       RGBColor[
       0.16849655618589285`, 0.0002584438760185209, 0.30294818798462225`]], 
      Opacity[0.0024896628972085793`, 
       RGBColor[
       0.16873400273322398`, 0.00036306574774264117`, 0.30346521241388424`]], 
      
      Opacity[0.004123898190405416, 
       RGBColor[
       0.1692748849345192, 0.0006013851039001248, 0.3046429482646089]], 
      Opacity[0.006443207500741991, 
       RGBColor[
       0.17004250580923758`, 0.000939608310723804, 0.30631439284488077`]], 
      Opacity[0.00877408267962106, 
       RGBColor[
       0.17081395463484111`, 0.00127951815982961, 0.30799417253949257`]], 
      Opacity[0.010163331219669183`, 
       RGBColor[
       0.17127375366844141`, 0.0014821112741658787`, 0.30899535506075665`]], 
      Opacity[0.00996393320679721, 
       RGBColor[
       0.1712077589878804, 0.0014530332055153283`, 0.3088516559316899]], 
      Opacity[0.008336392591506911, 
       RGBColor[0.170669092521454, 0.001215690129416787, 0.3076787446996798]], 
      Opacity[0.00616093161138321, 
       RGBColor[
       0.16994908107104686`, 0.0008984442210172533, 0.30611096654753117`]], 
      Opacity[0.004493319136597103, 
       RGBColor[
       0.1693971520373119, 0.0006552574945001773, 0.30490917693691194`]], 
      Opacity[0.0041962677861210555`, 
       RGBColor[
       0.16929883707066537`, 0.0006119387099372275, 0.3046951024848314]], 
      Opacity[0.006113426480150976, 
       RGBColor[
       0.16993335831676498`, 0.0008915165819333511, 0.3060767312716327]], 
      Opacity[0.011384934771803962`, 
       RGBColor[
       0.17167806730745006`, 0.001660256840619136, 0.3098757217403352]], 
      Opacity[0.021042555952447098`, 
       RGBColor[
       0.17487444632655905`, 0.0030686207839050743`, 0.31683562937695914`]], 
      Opacity[0.034575950651607124`, 
       RGBColor[
       0.17935358855678216`, 0.005042185988839398, 0.3265886705611503]], 
      Opacity[0.0486181376962686, 
       RGBColor[
       0.18400112558607895`, 0.007089948015187708, 0.3367083804792539]], 
      Opacity[0.05771036852388543, 
       RGBColor[
       0.18701037758620295`, 0.008415861490372876, 0.34326083119019224`]], 
      Opacity[0.05753185203884074, 
       RGBColor[
       0.1869512940565543, 0.008389828559890677, 0.3431321806432008]], 
      Opacity[0.048065775448188394`, 
       RGBColor[
       0.18381831047377672`, 0.007009397426250991, 0.33631031245021364`]], 
      Opacity[0.033615465832813565`, 
       RGBColor[
       0.17903569728049998`, 0.004902119179263803, 0.32589648296131146`]], 
      Opacity[0.019662127323110335`, 
       RGBColor[
       0.1744175664152789, 0.0028673138707975077`, 0.3158408030548839]], 
      Opacity[0.009610751929441445, 
       RGBColor[
       0.17109086672178647`, 0.0014015290341290567`, 0.30859713061708055`]], 
      Opacity[0.003923762294178886, 
       RGBColor[
       0.16920864603699948`, 0.0005721994302512552, 0.304498717368982]], 
      Opacity[0.001339568038695168, 
       RGBColor[
       0.16835335629793974`, 0.00019534824259392848`, 0.3026363795326927]], 
      Opacity[0.0003866559371730148, 
       RGBColor[
       0.1680379713608638, 0.00005638575692566598, 0.3019496493236316]], 
      Opacity[0.00010268719728817754`, 
       RGBColor[
       0.16794398634061158`, 0.000014974800045752884`, 0.3017450030484963]], 
      Opacity[0.00004127146903102045, 
       RGBColor[
       0.1679236596015966, 6.01858861333601*^-6, 0.30170074289497495`]], 
      Opacity[0.00004586311613778439, 
       RGBColor[
       0.16792517929720288`, 6.688185204929479*^-6, 0.3017040519334188]], 
      Opacity[0.00007201659351679827, 
       RGBColor[
       0.16793383530314962`, 0.000010502127980607359`, 0.3017228998239635]], 
      Opacity[0.00010359559397382522`, 
       RGBColor[
       0.1679442869922993, 0.00001510727088037527, 0.30174565769801204`]], 
      Opacity[0.0001269130929684287, 
       RGBColor[
       0.16795200437561453`, 0.000018507644970159018`, 0.3017624617987615]], 
      Opacity[0.0001305741175107643, 
       RGBColor[
       0.1679532160634429, 0.00001904152954323015, 0.3017651001702811]], 
      Opacity[0.00011239115559471017`, 
       RGBColor[
       0.1679471980558107, 0.000016389921298744558`, 0.3017519963496684]], 
      Opacity[0.00008076213332844859, 
       RGBColor[
       0.16793672981096286`, 0.000011777483754551663`, 0.30172920242666273`]], 
      Opacity[0.00004837099961603012, 
       RGBColor[
       0.16792600933039453`, 7.053908046885949*^-6, 0.30170585927676413`]], 
      Opacity[1.3000543008329767`*^-6, 
       RGBColor[
       0.16791043027845193`, 1.895859826513764*^-7, 0.30167193690337274`]], 
      Opacity[6.6190039388850895`*^-6, 
       RGBColor[
       0.16791219068908605`, 9.652445787247767*^-7, 0.30167577008314983`]], 
      Opacity[0.000027864680903300312`, 
       RGBColor[
       0.1679192223622927, 4.063486353558034*^-6, 0.3016910810946903]], 
      Opacity[0.00009705093702795421, 
       RGBColor[
       0.16794212090980776`, 0.000014152868270111902`, 0.3017409411941231]], 
      Opacity[0.0002798595368592503, 
       RGBColor[
       0.1680026249989705, 0.00004081171476131793, 0.3018726849171588]], 
      Opacity[0.0006687237411213394, 
       RGBColor[
       0.16813132722910945`, 0.00009751950168663131, 0.3021529256611505]], 
      Opacity[0.0013254401684511194`, 
       RGBColor[
       0.16834868040237622`, 0.00019328798544830544`, 0.30262619807390884`]], 
      
      Opacity[0.0021816868382710007`, 
       RGBColor[
       0.16863207202018782`, 0.00031815382081053646`, 0.30324326490896525`]], 
      
      Opacity[0.0029863043101592216`, 
       RGBColor[
       0.16889837594301169`, 0.000435490607411416, 0.3038231243984201]], 
      Opacity[0.0034047271060340147`, 
       RGBColor[
       0.16903686116839323`, 0.000496508902469424, 0.3041246669789246]], 
      Opacity[0.0032400304866307046`, 
       RGBColor[
       0.16898235159414798`, 0.0004724913130434053, 0.30400597592264167`]], 
      Opacity[0.0025828263852767743`, 
       RGBColor[
       0.1687648370156045, 0.0003766517121299146, 0.3035323520603802]], 
      Opacity[0.0017405450680430792`, 
       RGBColor[
       0.16848606750495218`, 0.00025382243408027326`, 0.30292534956335226`]], 
      
      Opacity[0.0010247493584516856`, 
       RGBColor[
       0.168249160885267, 0.0001494384611234712, 0.30240950079145873`]], 
      Opacity[0.0006034351289229545, 
       RGBColor[
       0.1681097186832456, 0.00008799851037754163, 0.3021058744564983]], 
      Opacity[0.000514811755231632, 
       RGBColor[
       0.16808038704070433`, 0.00007507462760096513, 0.3020420067106217]], 
      Opacity[0.0007579825330652853, 
       RGBColor[
       0.1681608691757756, 0.00011053604704948674`, 0.302217251330595]], 
      Opacity[0.0013240012769168339`, 
       RGBColor[
       0.16834820417302065`, 0.0001930781529318625, 0.30262516111542903`]], 
      Opacity[0.0021267238764450047`, 
       RGBColor[
       0.16861388095069746`, 0.000310138611660784, 0.30320365503707347`]], 
      Opacity[0.002929554901037098, 
       RGBColor[
       0.1688795936137743, 0.0004272148819387112, 0.30378222709684494`]], 
      Opacity[0.003404583486730498, 
       RGBColor[
       0.1690368136347698, 0.0004964879585697981, 0.30412456347754796`]], 
      Opacity[0.003331496175374825, 
       RGBColor[
       0.16901262395656533`, 0.00048582968857766446`, 0.3040718920249273]], 
      Opacity[0.00276790935181768, 
       RGBColor[
       0.16882609385100736`, 0.000403642227880839, 0.30366573483944587`]], 
      Opacity[0.002030614319573678, 
       RGBColor[
       0.16858207160910357`, 0.0002961230241811193, 0.3031343922624927]], 
      Opacity[0.0015498787862423212`, 
       RGBColor[
       0.1684229627619311, 0.0002260177074849916, 0.3027879430855116]], 
      Opacity[0.001825109834212751, 
       RGBColor[
       0.16851405587178547`, 0.00026615445304416485`, 0.302986292413651]], 
      Opacity[0.003580372678628238, 
       RGBColor[
       0.16909499451329651`, 0.0005221231698560273, 0.3042512485603691]], 
      Opacity[0.007858044928172473, 
       RGBColor[
       0.1705107739866593, 0.0011459330340830435`, 0.30733401637655244`]], 
      Opacity[0.015555049202369475`, 
       RGBColor[
       0.17305824841248854`, 0.0022683816255461148`, 0.3128809764224158]], 
      Opacity[0.026272324081391952`, 
       RGBColor[
       0.17660534059228866`, 0.0038312741047160496`, 0.32060453917965154`]], 
      Opacity[0.03734908011814099, 
       RGBColor[
       0.18027141010706907`, 0.005446589462290815, 0.32858716735352406`]], 
      Opacity[0.044520197805940485`, 
       RGBColor[
       0.182644832059753, 0.00649234839149788, 0.33375513944777857`]], 
      Opacity[0.044442152962171896`, 
       RGBColor[
       0.18261900158902886`, 0.006480967168123394, 0.333698895276053]], 
      Opacity[0.0371308502537021, 
       RGBColor[
       0.1801991826561277, 0.005414765158285194, 0.3284298967719142]], 
      Opacity[0.025948952937441015`, 
       RGBColor[
       0.17649831457412368`, 0.003784117123620908, 0.32037149697887035`]], 
      Opacity[0.015156971959986207`, 
       RGBColor[
       0.17292649694680784`, 0.002210330307904977, 0.3125940961661491]], 
      Opacity[0.007392482600365257, 
       RGBColor[
       0.17035668700924986`, 0.001078040415023793, 0.30699850199469575`]], 
      Opacity[0.00300735819090477, 
       RGBColor[
       0.16890534413750047`, 0.0004385608796817452, 0.30383829718917676`]], 
      Opacity[0.0010195197510855848`, 
       RGBColor[
       0.1682474300442089, 0.00014867583124659003`, 0.30240573199751214`]], 
      Opacity[0.0002881930063065192, 
       RGBColor[
       0.16800538312402008`, 0.00004202697861071515, 0.3018786905552513]], 
      Opacity[0.000068920465148748, 
       RGBColor[
       0.1679328105787821, 0.000010050621809907013`, 0.3017206685532324]], 
      Opacity[0.000016208034247271724`, 
       RGBColor[
       0.1679153643666116, 2.3636059644949774`*^-6, 0.3016826805597592]], 
      Opacity[8.02758111194195*^-6, 
       RGBColor[
       0.1679126568853096, 1.170656373696094*^-6, 0.3016767851951365]], 
      Opacity[0.000010311469659782495`, 
       RGBColor[
       0.1679134127829887, 1.5037141962279263`*^-6, 0.30167843111322007`]], 
      Opacity[0.00001462466084268261, 
       RGBColor[
       0.16791484031814924`, 2.132703760932598*^-6, 0.3016815394782813]], 
      Opacity[0.00001795859202013504, 
       RGBColor[
       0.16791594374801747`, 2.618888544110038*^-6, 0.3016839421251265]], 
      Opacity[0.000018491275091454017`, 
       RGBColor[
       0.16791612004992051`, 2.6965693328686737`*^-6, 0.30168432601106554`]], 
      
      Opacity[0.000015920493104899784`, 
       RGBColor[
       0.16791526919923475`, 2.3216740467325*^-6, 0.30168247333897935`]], 
      Opacity[0.000011441160228947123`, 
       RGBColor[
       0.1679137866762245, 1.668456158551994*^-6, 0.3016792452414482]], 
      Opacity[6.852669713469486*^-6, 
       RGBColor[
       0.167912268025354, 9.993198903930615*^-7, 0.30167593847784857`]], 
      Opacity[3.6542091123027657`*^-7, 
       RGBColor[
       0.16791012094321284`, 5.328906838165514*^-8, 0.30167126334598793`]], 
      Opacity[1.8604780194247028`*^-6, 
       RGBColor[
       0.1679106157616659, 2.713121700285304*^-7, 0.3016723407810198]], 
      Opacity[7.832239838116334*^-6, 
       RGBColor[
       0.16791259223328633`, 1.1421698963798213`*^-6, 0.3016766444195565]], 
      Opacity[0.000027279200431315775`, 
       RGBColor[
       0.16791902858605506`, 3.978106157874469*^-6, 0.30169065915952303`]], 
      Opacity[0.00007866318913448507, 
       RGBColor[
       0.16793603512424257`, 0.000011471396233985781`, 0.30172768979146497`]], 
      Opacity[0.0001879650688108854, 
       RGBColor[
       0.16797221072363833`, 0.000027410810649841874`, 0.3018064598087216]], 
      Opacity[0.00037255239567274533`, 
       RGBColor[
       0.16803330351737486`, 0.000054329047623231565`, 0.30193948539771703`]], 
      Opacity[0.0006132108113884919, 
       RGBColor[
       0.16811295413696092`, 0.00008942409111299958, 0.3021129194467472]], 
      Opacity[0.0008393074603375825, 
       RGBColor[
       0.16818778525442496`, 0.0001223956026396582, 0.30227585934304274`]], 
      Opacity[0.0009567008039734414, 
       RGBColor[
       0.16822663888241077`, 0.0001395149894188681, 0.30236046059355537`]], 
      Opacity[0.0009098270762025881, 
       RGBColor[
       0.16821112510347994`, 0.00013267942744712855`, 0.30232668034790616`]], 
      
      Opacity[0.0007238472668834865, 
       RGBColor[
       0.16814957144038153`, 0.00010555812575958667`, 0.3021926512458192]], 
      Opacity[0.000484943079177296, 
       RGBColor[
       0.16807050141693808`, 0.00007071890007740807, 0.3020204814071667]], 
      Opacity[0.0002808561645988289, 
       RGBColor[
       0.1680029548524548, 0.0000409570522670087, 0.3018734031516894]], 
      Opacity[0.0001595706878336116, 
       RGBColor[
       0.16796281304672403`, 0.000023270078515880337`, 0.3017859969778335]], 
      Opacity[0.00013290513143897676`, 
       RGBColor[
       0.1679539875581903, 0.000019381459626051343`, 0.3017667800499675]], 
      Opacity[0.00020128775806725055`, 
       RGBColor[
       0.16797662012877243`, 0.000029353648831761337`, 0.30181606100191]], 
      Opacity[0.0003619473436592554, 
       RGBColor[
       0.16802979356755196`, 0.000052782520523741775`, 0.30193184271002876`]], 
      Opacity[0.0005896600390414663, 
       RGBColor[
       0.16810515954725755`, 0.00008598969893818892, 0.3020959472341038]], 
      Opacity[0.0008168669333722283, 
       RGBColor[
       0.16818035812219143`, 0.00011912311674948003`, 0.30225968724516533`]], 
      
      Opacity[0.0009508812945521994, 
       RGBColor[
       0.16822471280170542`, 0.00013866633455001515`, 0.3023562666779622]], 
      Opacity[0.0009299271362131237, 
       RGBColor[
       0.1682177776123016, 0.00013561060472642175`, 0.3023411657536336]], 
      Opacity[0.0007723329063368112, 
       RGBColor[
       0.16816561871307714`, 0.0001126287516514046, 0.30222759313947867`]], 
      Opacity[0.0005780629122959507, 
       RGBColor[
       0.16810132125085742`, 0.00008429849829482164, 0.3020875895930772]], 
      Opacity[0.0005091049867331667, 
       RGBColor[
       0.16807849827381707`, 0.00007424241365970725, 0.30203789404344306`]], 
      Opacity[0.0008225843768082635, 
       RGBColor[
       0.16818225042215848`, 0.00011995688740919778`, 0.3022638076053957]], 
      Opacity[0.001971889270394166, 
       RGBColor[
       0.16856263540306665`, 0.0002875591925413065, 0.30309207118667075`]], 
      Opacity[0.004629206430046797, 
       RGBColor[
       0.16944212660047003`, 0.0006750738406650948, 0.3050071061260684]], 
      Opacity[0.009367820544457206, 
       RGBColor[
       0.1710104638184708, 0.0013661025251674023`, 0.30842205851910715`]], 
      Opacity[0.01594942544338386, 
       RGBColor[
       0.17318877495922658`, 0.002325893228822349, 0.3131651894972712]], 
      Opacity[0.022743945848533325`, 
       RGBColor[
       0.17543755465991073`, 0.0033167332474506035`, 0.3180617611861441]], 
      Opacity[0.02714306070414169, 
       RGBColor[
       0.1768935279440255, 0.003958252999481276, 0.32123204841373815`]], 
      Opacity[0.02710673789770179, 
       RGBColor[
       0.1768815061993072, 0.003952956070770565, 0.3212058718456997]], 
      Opacity[0.022649070367850414`, 
       RGBColor[
       0.1754061537600193, 0.003302897624412961, 0.3179933877668329]], 
      Opacity[0.015826753726160044`, 
       RGBColor[
       0.1731481743500457, 0.0023080041006232365`, 0.3130767843087124]], 
      Opacity[0.009242391129055352, 
       RGBColor[
       0.170968950495027, 0.0013478112438285292`, 0.3083316659545425]], 
      Opacity[0.004506078955342564, 
       RGBColor[
       0.16940137514941814`, 0.0006571182496807582, 0.30491837248913617`]], 
      Opacity[0.0018320180464216774`, 
       RGBColor[
       0.16851634228001697`, 0.0002671618726566798, 0.3029912709190209]], 
      Opacity[0.0006203552684406531, 
       RGBColor[
       0.1681153187350537, 0.00009046596214090716, 0.3021180682054598]], 
      Opacity[0.000174772092584804, 
       RGBColor[
       0.16796784424957395`, 0.00002548688842573531, 0.30179695209514823`]], 
      Opacity[0.00004102106863582313, 
       RGBColor[
       0.167923576726678, 5.98207290399267*^-6, 0.30170056244022425`]], 
      Opacity[8.273628827016217*^-6, 
       RGBColor[
       0.16791273831962342`, 1.2065373348310195`*^-6, 0.3016769625130639]], 
      Opacity[1.978177273166743*^-6, 
       RGBColor[
       0.16791065471654082`, 2.8847616745826946`*^-7, 0.30167242560272894`]], 
      
      Opacity[1.3919995699645475`*^-6, 
       RGBColor[
       0.16791046070954088`, 2.0299429504823957`*^-7, 0.3016720031650917]], 
      Opacity[1.815447913054868*^-6, 
       RGBColor[
       0.1679106008580696, 2.64745462038294*^-7, 0.30167230832940717`]], 
      Opacity[2.2386059636917606`*^-6, 
       RGBColor[
       0.16791074091052036`, 3.264542958888756*^-7, 0.3016726132845191]], 
      Opacity[2.3082263064838067`*^-6, 
       RGBColor[
       0.16791076395273738`, 3.3660698035159284`*^-7, 0.30167266345744953`]], 
      
      Opacity[1.9882445290606488`*^-6, 
       RGBColor[
       0.1679106580484965, 2.899442681368535*^-7, 0.3016724328578459]], 
      Opacity[1.4290586252815425`*^-6, 
       RGBColor[
       0.1679104729749616, 2.0839859040259712`*^-7, 0.3016720298722484]], 
      Opacity[8.559761911933115*^-7, 
       RGBColor[
       0.16791028330209762`, 1.2482639165886296`*^-7, 0.30167161687191063`]], 
      
      Opacity[8.719295956382318*^-8, 
       RGBColor[
       0.16791002885821896`, 1.271528651426145*^-8, 0.30167106283689676`]], 
      Opacity[4.4392802861869433`*^-7, 
       RGBColor[
       0.16791014692668207`, 6.473770478528359*^-8, 0.301671319923304]], 
      Opacity[1.8688480889151583`*^-6, 
       RGBColor[
       0.16791061853190445`, 2.725327712358735*^-7, 0.30167234681303423`]], 
      Opacity[6.509080754299071*^-6, 
       RGBColor[0.1679121543078536, 9.492145598612905*^-7, 0.30167569086538]], 
      Opacity[0.00001876978692183962, 
       RGBColor[
       0.1679162122288696, 2.737184512565288*^-6, 0.3016845267247381]], 
      Opacity[0.00004485020484103521, 
       RGBColor[
       0.16792484405435615`, 6.54047307982068*^-6, 0.30170332196390176`]], 
      Opacity[0.00008889412814690778, 
       RGBColor[
       0.16793942125403513`, 0.000012963366703891297`, 0.3017350628690822]], 
      Opacity[0.00014631560696111881`, 
       RGBColor[
       0.1679584260179097, 0.00002133709961590294, 0.30177644450762753`]], 
      Opacity[0.0002002566362470441, 
       RGBColor[
       0.16797627885879604`, 0.000029203281079128344`, 0.3018153179087097]], 
      Opacity[0.00022824216034689733`, 
       RGBColor[
       0.16798554121651316`, 0.00003328438990903259, 0.301835486090838]], 
      Opacity[0.0002169890979897794, 
       RGBColor[
       0.16798181679496604`, 0.00003164336392769898, 0.30182737640490503`]], 
      Opacity[0.00017246464701698667`, 
       RGBColor[
       0.16796708055523735`, 0.000025150395299941314`, 0.3017952892003496]], 
      Opacity[0.00011520517943830083`, 
       RGBColor[
       0.16794812941215662`, 0.000016800288369758216`, 0.3017540243175989]], 
      Opacity[0.00006616634083454063, 
       RGBColor[
       0.16793189904735947`, 9.64898984413566*^-6, 0.30171868375278427`]], 
      Opacity[0.000036888022182217776`, 
       RGBColor[
       0.16792220881394646`, 5.379353715456847*^-6, 0.3016975838991284]], 
      Opacity[0.000030318641349579978`, 
       RGBColor[
       0.16792003454860002`, 4.421345638587477*^-6, 0.3016928495776045]], 
      Opacity[0.000046642838679959606`, 
       RGBColor[
       0.16792543736166077`, 6.8018915818546595`*^-6, 0.30170461385200875`]], 
      
      Opacity[0.00008517143507414621, 
       RGBColor[
       0.16793818915579792`, 0.000012420489053429489`, 0.30173238005522346`]], 
      Opacity[0.00013976668439641274`, 
       RGBColor[
       0.167956258523628, 0.000020382074953516107`, 0.3017717249296572]], 
      Opacity[0.0001941782457155606, 
       RGBColor[
       0.1679742670963132, 0.000028316873764363287`, 0.30181093742661297`]], 
      Opacity[0.0002262460700261588, 
       RGBColor[
       0.16798488057129812`, 0.00003299330149474432, 0.3018340475788062]], 
      Opacity[0.00022137801774704794`, 
       RGBColor[
       0.16798326939398253`, 0.00003228339693587922, 0.3018305393448841]], 
      Opacity[0.00018505264488286283`, 
       RGBColor[
       0.16797124679985584`, 0.000026986093965363572`, 0.301804360927314]], 
      Opacity[0.0001463653742689323, 
       RGBColor[
       0.16795844248937564`, 0.000021344357146568925`, 0.30177648037317445`]], 
      Opacity[0.00016308808012603692`, 
       RGBColor[
       0.16796397719664408`, 0.000023783017301362273`, 0.30178853183864646`]], 
      Opacity[0.00035065185335758414`, 
       RGBColor[
       0.16802605510364502`, 0.00005113530730580208, 0.3019237024477696]], 
      Opacity[0.0009332881035838038, 
       RGBColor[
       0.16821888999032789`, 0.0001361007321781915, 0.3023435878845116]], 
      Opacity[0.0022482117754438957`, 
       RGBColor[
       0.16865408975203397`, 0.000327855104500505, 0.30329120708950796`]], 
      Opacity[0.004582650194957237, 
       RGBColor[
       0.16942671790196492`, 0.0006682845784224734, 0.30497355468621884`]], 
      Opacity[0.00782149920220098, 
       RGBColor[
       0.17049867846235278`, 0.0011406035971775433`, 0.30730767915825435`]], 
      Opacity[0.011163773723517161`, 
       RGBColor[
       0.171604869723763, 0.0016280050841834266`, 0.30971633875770377`]], 
      Opacity[0.01332779023223693, 
       RGBColor[
       0.17232109340204738`, 0.0019435820535581444`, 0.311275869282157]], 
      Opacity[0.013311677731236551`, 
       RGBColor[
       0.17231576065403628`, 0.0019412323791382598`, 0.31126425756984605`]], 
      Opacity[0.011122965043569955`, 
       RGBColor[
       0.17159136329128433`, 0.0016220539837689752`, 0.3096869293785314]], 
      Opacity[0.007772425494392406, 
       RGBColor[
       0.17048243655690887`, 0.0011334472137008885`, 0.30727231346443123`]], 
      Opacity[0.004538691411179987, 
       RGBColor[
       0.16941216888088168`, 0.0006618741006345615, 0.3049418751380998]], 
      Opacity[0.002212658921383189, 
       RGBColor[
       0.16864232283814662`, 0.0003226704573908871, 0.30326558539904686`]], 
      Opacity[0.0008994961802626739, 
       RGBColor[
       0.16820770589098308`, 0.00013117288033045595`, 0.30231923523484977`]], 
      
      Opacity[0.00030453529255353325`, 
       RGBColor[
       0.16801079192396232`, 0.000044410162447671115`, 0.30189046786570106`]], 
      Opacity[0.00008576215571930192, 
       RGBColor[
       0.16793838466637356`, 0.000012506633419793681`, 0.30173280576679906`]], 
      Opacity[0.000020076862558226415`, 
       RGBColor[
       0.16791664483117016`, 2.9277944115251163`*^-6, 0.30168546868814017`]], 
      
      Opacity[3.9318389117665695`*^-6, 
       RGBColor[
       0.16791130131915188`, 5.733772375789023*^-7, 0.301673833537903]], 
      Opacity[7.050983291134365*^-7, 
       RGBColor[
       0.16791023336611194`, 1.0282398166381548`*^-7, 0.30167150813954635`]], 
      
      Opacity[2.1644525855387157`*^-7, 
       RGBColor[
       0.16791007163680066`, 3.1564056214324934`*^-8, 0.30167115598447897`]], 
      
      Opacity[2.0333352786719846`*^-7, 
       RGBColor[
       0.1679100672972164, 2.9651981968733487`*^-8, 0.30167114653531624`]], 
      Opacity[2.5072828440514337`*^-7, 
       RGBColor[
       0.16791008298344, 3.6563525190437286`*^-8, 0.301671180691049]], 
      Opacity[2.585259001459862*^-7, 
       RGBColor[
       0.16791008556421377`, 3.7700645879641066`*^-8, 0.30167118631051615`]], 
      
      Opacity[2.2268730978557946`*^-7, 
       RGBColor[
       0.16791007370272984`, 3.2474330051168006`*^-8, 0.3016711604829056]], 
      Opacity[1.6005738535861388`*^-7, 
       RGBColor[
       0.1679100529741288, 2.3341053265529203`*^-8, 0.3016711153477236]], 
      Opacity[9.58710221200558*^-8, 
       RGBColor[
       0.16791003173039384`, 1.398080212863181*^-8, 0.301671069090871]], 
      Opacity[1.6517557196663002`*^-8, 
       RGBColor[
       0.16791000546680931`, 2.408743473348184*^-9, 0.30167101190362205`]], 
      Opacity[8.409631508702091*^-8, 
       RGBColor[
       0.16791002783332376`, 1.2263705079793397`*^-8, 0.3016710606052541]], 
      Opacity[3.5402864336350853`*^-7, 
       RGBColor[
       0.16791011717271848`, 5.162774216107723*^-8, 0.3016712551359815]], 
      Opacity[1.2330595743045625`*^-6, 
       RGBColor[
       0.16791040810523408`, 1.7981618991794088`*^-7, 0.3016718886226315]], 
      Opacity[3.555687477471947*^-6, 
       RGBColor[
       0.16791117682446216`, 5.185233447447503*^-7, 0.30167356245880483`]], 
      Opacity[8.496270266664603*^-6, 
       RGBColor[
       0.16791281200717165`, 1.239004975673107*^-6, 0.3016771229629125]], 
      Opacity[0.000016839759326947015`, 
       RGBColor[
       0.16791557344840854`, 2.455729978021968*^-6, 0.3016831358217874]], 
      Opacity[0.000027717248051570406`, 
       RGBColor[
       0.16791917356650074`, 4.041986326941915*^-6, 0.30169097484502366`]], 
      Opacity[0.00003793464793558919, 
       RGBColor[
       0.1679225552152534, 5.531982395500458*^-6, 0.3016983381654676]], 
      Opacity[0.00004323280781686918, 
       RGBColor[
       0.16792430874511002`, 6.304609236312404*^-6, 0.3017021563627988]], 
      Opacity[0.00004109221135523237, 
       RGBColor[
       0.16792360027275535`, 5.992447595541361*^-6, 0.3017006137102779]], 
      Opacity[0.00003263865194429872, 
       RGBColor[
       0.16792080240157856`, 4.759671113207682*^-6, 0.30169452152757575`]], 
      Opacity[0.000021759163914051595`, 
       RGBColor[
       0.16791720162177698`, 3.173123206988126*^-6, 0.3016866810635103]], 
      Opacity[0.000012426399297316771`, 
       RGBColor[
       0.16791411276040488`, 1.8121328625202108`*^-6, 0.30167995526856434`]], 
      
      Opacity[6.838372644428281*^-6, 
       RGBColor[
       0.1679122632934588, 9.972349591086722*^-7, 0.30167592817445416`]], 
      Opacity[5.570060225844455*^-6, 
       RGBColor[
       0.16791184352060493`, 8.122778722915343*^-7, 0.3016750141463387]], 
      Opacity[8.66636907764716*^-6, 
       RGBColor[
       0.16791286830470709`, 1.2638103628075493`*^-6, 0.3016772455471381]], 
      Opacity[0.000015992071352171146`, 
       RGBColor[
       0.1679152928894586, 2.3321122509957442`*^-6, 0.3016825249229026]], 
      Opacity[0.000026368248290151997`, 
       RGBColor[
       0.1679187270885893, 3.845262663014096*^-6, 0.3016900026683804]], 
      Opacity[0.00003669972871317687, 
       RGBColor[
       0.16792214649453233`, 5.35189501443791*^-6, 0.30169744820265315`]], 
      Opacity[0.00004279494192698371, 
       RGBColor[
       0.1679241638248116, 6.240755568853846*^-6, 0.30170184080826484`]], 
      Opacity[0.00004196449580013938, 
       RGBColor[
       0.1679238889723892, 6.11965220809735*^-6, 0.3017012423349729]], 
      Opacity[0.000035702414738237796`, 
       RGBColor[
       0.16792181641392495`, 5.206457435538607*^-6, 0.3016967294735769]], 
      Opacity[0.00003161162920001309, 
       RGBColor[
       0.1679204624882717, 4.6099011258648844`*^-6, 0.3016937813884351]], 
      Opacity[0.000048191005868989824`, 
       RGBColor[
       0.16792594975793607`, 7.027659688350561*^-6, 0.3017057295616064]], 
      Opacity[0.00012864985199334398`, 
       RGBColor[
       0.1679525791900543, 0.000018760915288295917`, 0.30176371341985686`]], 
      Opacity[0.000361312692628654, 
       RGBColor[
       0.16802958351735423`, 0.00005268996982089792, 0.3019313853393707]], 
      Opacity[0.0008800065972834895, 
       RGBColor[
       0.16820125543150027`, 0.00012833072847710122`, 0.30230518977843]], 
      Opacity[0.0017987302507131175`, 
       RGBColor[
       0.1685053250315864, 0.0002623075373757134, 0.30296728157638414`]], 
      Opacity[0.00307271024875927, 
       RGBColor[
       0.16892697368194776`, 0.0004480911232251852, 0.3038853941168801]], 
      Opacity[0.004387150338019382, 
       RGBColor[
       0.16936201339251414`, 0.0006397749750451231, 0.3048326648209187]], 
      Opacity[0.005238215256097217, 
       RGBColor[
       0.1696436900080244, 0.0007638851592816728, 0.30544599734989225`]], 
      Opacity[0.005232123416246403, 
       RGBColor[
       0.1696416737942257, 0.0007629967906623532, 0.3054416071753446]], 
      Opacity[0.004371914386555211, 
       RGBColor[
       0.16935697075575243`, 0.000637553127212988, 0.30482168480700395`]], 
      Opacity[0.003054969662667722, 
       RGBColor[
       0.16892110208726527`, 0.0004455040263286768, 0.30387260910095254`]], 
      Opacity[0.0017839233775343462`, 
       RGBColor[
       0.1685004244066932, 0.0002601482617210019, 0.30295661078408614`]], 
      Opacity[0.0008696641693588604, 
       RGBColor[
       0.16819783240226704`, 0.00012682249965940067`, 0.3022977363546782]], 
      Opacity[0.00035352772757052864`, 
       RGBColor[
       0.16802700693058292`, 0.000051554693971646344`, 0.3019257749890841]], 
      Opacity[0.0001196854002173511, 
       RGBColor[
       0.1679496122290358, 0.000017453635740208155`, 0.30175725305501055`]], 
      Opacity[0.000033701472075769116`, 
       RGBColor[
       0.16792115416273234`, 4.914661407749516*^-6, 0.3016952874646332]], 
      Opacity[7.883408067309858*^-6, 
       RGBColor[
       0.1679126091684147, 1.1496317224019881`*^-6, 0.30167668129469816`]], 
      Opacity[1.5301937615297436`*^-6, 
       RGBColor[
       0.16791050644761718`, 2.231470545043742*^-7, 0.30167210275678114`]], 
      Opacity[2.4621204338962227`*^-7, 
       RGBColor[
       0.1679100814887015, 3.590492501483737*^-8, 0.301671177436353]], 
      Opacity[3.082570744486924*^-8, 
       RGBColor[
       0.16791001020237206`, 4.4952907221759205`*^-9, 0.3016710222150023]], 
      Opacity[2.551776685855431*^-17, 
       RGBColor[0.16791, 3.721237568190837*^-18, 0.301671]], 
      Opacity[1.6797150788794035`*^-17, 
       RGBColor[0.16791, 2.4495164055812664`*^-18, 0.301671]], 
      Opacity[8.49776568247089*^-18, 
       RGBColor[0.16791, 1.2392230510834383`*^-18, 0.301671]], 
      Opacity[2.0610873733658712`*^-20, 
       RGBColor[0.16791, 3.005668876750362*^-21, 0.301671]], 
      Opacity[0., 
       RGBColor[0.16791, 0., 0.301671]], 
      Opacity[0., 
       RGBColor[0.16791, 0., 0.301671]], 
      Opacity[2.3796370729471306`*^-9, 
       RGBColor[
       0.16791000078758753`, 3.470207610091875*^-10, 0.3016710017149207]], 
      Opacity[1.2115514791552052`*^-8, 
       RGBColor[
       0.16791000400986708`, 1.7667967988813858`*^-9, 0.30167100873122504`]], 
      
      Opacity[5.1003890673009885`*^-8, 
       RGBColor[
       0.1679100168807373, 7.437860654043747*^-9, 0.3016710367567087]], 
      Opacity[1.7764335423804165`*^-7, 
       RGBColor[
       0.1679100587945499, 2.5905602445318562`*^-8, 0.30167112802131235`]], 
      Opacity[5.122574873225158*^-7, 
       RGBColor[
       0.1679101695416557, 7.47021405508516*^-8, 0.3016713691659397]], 
      Opacity[1.2240317220993916`*^-6, 
       RGBColor[
       0.16791040511728944`, 1.7849966473091435`*^-7, 0.3016718821165762]], 
      Opacity[2.426046217877543*^-6, 
       RGBColor[
       0.16791080294754632`, 3.5378857319980523`*^-7, 0.3016727483661124]], 
      Opacity[3.9930954809036305`*^-6, 
       RGBColor[
       0.1679113215932141, 5.823102389514302*^-7, 0.30167387768335613`]], 
      Opacity[5.464929322794725*^-6, 
       RGBColor[
       0.16791180872547198`, 7.969467083940422*^-7, 0.30167493838219744`]], 
      Opacity[6.22770417932319*^-6, 
       RGBColor[
       0.16791206118076116`, 9.081816165236917*^-7, 0.30167548808718686`]], 
      Opacity[5.917942949621308*^-6, 
       RGBColor[
       0.16791195865921085`, 8.630093594243516*^-7, 0.3016752648531722]], 
      Opacity[4.69712079800401*^-6, 
       RGBColor[
       0.16791155460419166`, 6.849777440459502*^-7, 0.3016743850496205]], 
      Opacity[3.1247200525302653`*^-6, 
       RGBColor[
       0.1679110341873459, 4.5567567546205075`*^-7, 0.3016732518757517]], 
      Opacity[1.7735223033166793`*^-6, 
       RGBColor[
       0.1679105869819673, 2.5863148055661293`*^-7, 0.30167227811509606`]], 
      Opacity[9.620618263719183*^-7, 
       RGBColor[
       0.16791031841321785`, 1.4029678345530184`*^-7, 0.3016716933240937]], 
      Opacity[7.757856872080863*^-7, 
       RGBColor[
       0.16791025676147858`, 1.1313226819986043`*^-7, 0.3016715590814371]], 
      Opacity[1.2228381574293042`*^-6, 
       RGBColor[
       0.16791040472225582`, 1.783256080544421*^-7, 0.3016718812564162]], 
      Opacity[2.283212686604747*^-6, 
       RGBColor[
       0.1679107556739896, 3.329592621744359*^-7, 0.3016726454310142]], 
      Opacity[3.784705789595431*^-6, 
       RGBColor[
       0.1679112526225613, 5.519209203085332*^-7, 0.30167372750424093`]], 
      Opacity[5.278696499012651*^-6, 
       RGBColor[
       0.1679117470880688, 7.697885097895357*^-7, 0.30167480417075676`]], 
      Opacity[6.164390547259641*^-6, 
       RGBColor[
       0.16791204022587367`, 8.989486351456795*^-7, 0.3016754424592809]], 
      Opacity[6.078111699790176*^-6, 
       RGBColor[
       0.16791201167019804`, 8.863666529399775*^-7, 0.30167538028115254`]], 
      Opacity[5.379793993675591*^-6, 
       RGBColor[
       0.16791178054826617`, 7.84531484646036*^-7, 0.30167487702816254`]], 
      Opacity[5.825936148904281*^-6, 
       RGBColor[
       0.16791192820775683`, 8.495920739206841*^-7, 0.30167519854710956`]], 
      Opacity[0.000012464349406264287`, 
       RGBColor[
       0.16791412532073727`, 1.8176670995839485`*^-6, 0.30167998261787204`]], 
      
      Opacity[0.00003824713207187743, 
       RGBColor[
       0.167922658638003, 5.5775517321067935`*^-6, 0.3016985633617852]], 
      Opacity[0.00011035154875689149`, 
       RGBColor[
       0.16794652300795146`, 0.00001609248690210238, 0.3017505264768146]], 
      Opacity[0.0002701135557446799, 
       RGBColor[
       0.1679993993754994, 0.00003939046535248653, 0.30186566133162807`]], 
      Opacity[0.0005527522861229971, 
       RGBColor[
       0.16809294420303722`, 0.00008060746790367067, 0.3020693491157284]], 
      Opacity[0.0009445801987669846, 
       RGBColor[
       0.16822262733055382`, 0.00013774745028844625`, 0.3023517257000284]], 
      Opacity[0.0013488218121520703`, 
       RGBColor[
       0.16835641901563925`, 0.00019669771371443168`, 0.30264304840149026`]], 
      
      Opacity[0.001610559117792204, 
       RGBColor[
       0.16844304610699204`, 0.00023486667654507232`, 0.30283167326451194`]], 
      
      Opacity[0.001608717542097176, 
       RGBColor[
       0.1684424366014209, 0.00023459812088740087`, 0.30283034610573195`]], 
      Opacity[0.0013442402139121267`, 
       RGBColor[
       0.16835490264590242`, 0.00019602958254185142`, 0.30263974660491094`]], 
      
      Opacity[0.0009393198750733654, 
       RGBColor[
       0.16822088632332508`, 0.00013698034107163882`, 0.3023479347699058]], 
      Opacity[0.0005485084964952624, 
       RGBColor[
       0.16809153963768164`, 0.00007998859911778663, 0.30206629076592506`]], 
      Opacity[0.0002673984963880107, 
       RGBColor[
       0.16799850077339015`, 0.0000389945302013462, 0.30186370468391976`]], 
      Opacity[0.00010870035269630788`, 
       RGBColor[
       0.16794597651225177`, 0.000015851694169448636`, 0.30174933651793584`]], 
      Opacity[0.000036800073365302515`, 
       RGBColor[
       0.1679221797055617, 5.366528202809242*^-6, 0.3016975205175118]], 
      Opacity[0.00001036230569579924, 
       RGBColor[
       0.1679134296081712, 1.5111275787583021`*^-6, 0.30167846774896184`]], 
      Opacity[2.42393816313965*^-6, 
       RGBColor[
       0.16791080224984428`, 3.5348115709517773`*^-7, 0.3016727468469116]], 
      Opacity[4.7049385543393554`*^-7, 
       RGBColor[
       0.16791015571916315`, 6.86117801823549*^-8, 0.30167133906836024`]], 
      Opacity[7.570365037597669*^-8, 
       RGBColor[
       0.1679100250556069, 1.103980882770041*^-8, 0.3016710545569561]], 
      Opacity[9.478084601755975*^-9, 
       RGBColor[
       0.16791000313695786`, 1.3821822532531607`*^-9, 0.30167100683052195`]], 
      
      Opacity[1.3191790289217397`*^-17, 
       RGBColor[0.16791, 1.923749279787565*^-18, 0.301671]], 
      Opacity[9.353111832871228*^-18, 
       RGBColor[0.16791, 1.3639575643470915`*^-18, 0.301671]], 
      Opacity[4.731787775026094*^-18, 
       RGBColor[0.16791, 6.900332043448572*^-19, 0.301671]], 
      Opacity[1.1476696817695156`*^-20, 
       RGBColor[0.16791, 1.6736384337027758`*^-21, 0.301671]], 
      Opacity[0., 
       RGBColor[0.16791, 0., 0.301671]], 
      Opacity[0., 
       RGBColor[0.16791, 0., 0.301671]], 
      Opacity[2.2961878346446518`*^-10, 
       RGBColor[
       0.16791000007599685`, 3.348514186709886*^-11, 0.3016710001654782]], 
      Opacity[1.1690647212136709`*^-9, 
       RGBColor[
       0.16791000038692488`, 1.7048386656799035`*^-10, 0.3016710008425038]], 
      Opacity[4.921528290641387*^-9, 
       RGBColor[
       0.16791000162887626`, 7.177029271238642*^-10, 0.30167100354677223`]], 
      Opacity[1.7141374521182067`*^-8, 
       RGBColor[
       0.16791000567327388`, 2.4997143046343253`*^-9, 0.3016710123531853]], 
      Opacity[4.9429360696938287`*^-8, 
       RGBColor[
       0.16791001635961575`, 7.208248081294808*^-9, 0.30167103562200037`]], 
      Opacity[1.1811072942665218`*^-7, 
       RGBColor[
       0.16791003909106086`, 1.72240026325635*^-8, 0.3016710851182452]], 
      Opacity[2.3409694634854188`*^-7, 
       RGBColor[
       0.16791007747897269`, 3.413818913620649*^-8, 0.30167116870542904`]], 
      Opacity[3.853065335793101*^-7, 
       RGBColor[
       0.1679101275247493, 5.6188974371166614`*^-8, 0.301671277676856]], 
      Opacity[5.273284807754534*^-7, 
       RGBColor[
       0.16791017452969637`, 7.68999326749782*^-8, 0.30167138002707417`]], 
      Opacity[6.00931062336506*^-7, 
       RGBColor[
       0.16791019888991332`, 8.763334415016779*^-8, 0.3016714330698639]], 
      Opacity[5.710412121614464*^-7, 
       RGBColor[
       0.16791018899728158`, 8.327452881983097*^-8, 0.301671411529301]], 
      Opacity[4.5324018446121244`*^-7, 
       RGBColor[
       0.16791015000872256`, 6.60956897670458*^-8, 0.3016713266342469]], 
      Opacity[3.015142155926667*^-7, 
       RGBColor[
       0.16791009979203933`, 4.396960096964336*^-8, 0.3016712172906819]], 
      Opacity[1.711328301792624*^-7, 
       RGBColor[
       0.16791005663976435`, 2.4956177409404106`*^-8, 0.3016711233294069]], 
      Opacity[9.283241761444155*^-8, 
       RGBColor[
       0.16791003072470811`, 1.3537684621373329`*^-8, 0.3016710669010557]], 
      Opacity[7.485796927255039*^-8, 
       RGBColor[
       0.16791002477571215`, 1.0916483761278146`*^-8, 0.3016710539475035]], 
      Opacity[1.1799501875479105`*^-7, 
       RGBColor[
       0.16791003905276417`, 1.7207128628597676`*^-8, 0.3016710850348566]], 
      Opacity[2.2031113816006547`*^-7, 
       RGBColor[
       0.1679100729162893, 3.212781465386288*^-8, 0.30167115877048234`]], 
      Opacity[3.651811811713495*^-7, 
       RGBColor[
       0.16791012086386947`, 5.325410871976746*^-8, 0.3016712631732229]], 
      Opacity[5.092852551829734*^-7, 
       RGBColor[
       0.1679101685579372, 7.426870207794928*^-8, 0.3016713670239566]], 
      Opacity[5.958238742584813*^-7, 
       RGBColor[
       0.16791019719958933`, 8.688856658992486*^-8, 0.3016714293892932]], 
      Opacity[5.957697599701937*^-7, 
       RGBColor[
       0.16791019718167915`, 8.688067514222617*^-8, 0.30167142935029495`]], 
      Opacity[5.79569227892542*^-7, 
       RGBColor[
       0.16791019181979552`, 8.451816321372532*^-8, 0.3016714176751417]], 
      Opacity[8.791600463504256*^-7, 
       RGBColor[
       0.16791029097524887`, 1.282072765640492*^-7, 0.301671633579699]], 
      Opacity[2.5663533654650484`*^-6, 
       RGBColor[
       0.16791084938494683`, 3.7424946351134486`*^-7, 0.30167284948053485`]], 
      
      Opacity[8.541581802202357*^-6, 
       RGBColor[
       0.16791282700391244`, 1.2456127242762723`*^-6, 0.3016771556173412]], 
      Opacity[0.000024974156688160512`, 
       RGBColor[
       0.16791826568664941`, 3.6419632884416322`*^-6, 0.30168899799563487`]], 
      
      Opacity[0.00006126660713607063, 
       RGBColor[
       0.16793027738445718`, 8.93446520669604*^-6, 0.3017151526871784]], 
      Opacity[0.00012543187527370035`, 
       RGBColor[
       0.16795151413758658`, 0.000018291640060213525`, 0.30176139433730775`]], 
      Opacity[0.0002143734965389498, 
       RGBColor[
       0.1679809511104001, 0.00003126193265135754, 0.3018254914330086]], 
      Opacity[0.00030612973433206665`, 
       RGBColor[
       0.16801131963572, 0.00004464267874423656, 0.3018916169237665]], 
      Opacity[0.0003655398186914112, 
       RGBColor[
       0.16803098256757637`, 0.00005330640857109904, 0.3019344316803293]], 
      Opacity[0.0003651242059230906, 
       RGBColor[
       0.1680308450123847, 0.00005324580006033603, 0.30193413216283677`]], 
      Opacity[0.0003050976328721593, 
       RGBColor[
       0.16801097804151266`, 0.00004449216813145132, 0.3018908731245743]], 
      Opacity[0.00021319446200285388`, 
       RGBColor[
       0.16798056088581131`, 0.00003108999489386354, 0.30182464174432044`]], 
      Opacity[0.0001244932912865034, 
       RGBColor[
       0.1679512034948198, 0.000018154767033141063`, 0.30176071793286635`]], 
      Opacity[0.000060690626842914215`, 
       RGBColor[
       0.16793008675248997`, 8.850470415250854*^-6, 0.30171473759845563`]], 
      Opacity[0.00002467139147169814, 
       RGBColor[
       0.16791816548056684`, 3.5978112549158803`*^-6, 0.3016887798034007]], 
      Opacity[8.352401982381644*^-6, 
       RGBColor[
       0.16791276439114317`, 1.2180247673612877`*^-6, 0.30167701928210416`]], 
      
      Opacity[2.351901398206746*^-6, 
       RGBColor[
       0.167910778407865, 3.4297608753148306`*^-7, 0.3016726949325508]], 
      Opacity[5.501539640248313*^-7, 
       RGBColor[
       0.1679101820842374, 8.022855646288706*^-8, 0.30167139647659647`]], 
      Opacity[1.0678657712096912`*^-7, 
       RGBColor[
       0.16791003534311072`, 1.55726096552154*^-8, 0.30167107695732726`]], 
      Opacity[1.7182230118975924`*^-8, 
       RGBColor[
       0.16791000568679584`, 2.5056722470445734`*^-9, 0.30167101238262845`]], 
      
      Opacity[2.1512123823852554`*^-9, 
       RGBColor[
       0.16791000071198592`, 3.137097528503265*^-10, 0.3016710015503031]], 
      Opacity[0., 
       RGBColor[0.16791, 0., 0.301671]], 
      Opacity[0., 
       RGBColor[0.16791, 0., 0.301671]], 
      Opacity[0., 
       RGBColor[0.16791, 0., 0.301671]], 
      Opacity[0., 
       RGBColor[0.16791, 0., 0.301671]], 
      Opacity[0., 
       RGBColor[0.16791, 0., 0.301671]], 
      Opacity[0., 
       RGBColor[0.16791, 0., 0.301671]], 
      Opacity[4.272779324362294*^-17, 
       RGBColor[
       0.16791000000000003`, 6.230963324706398*^-18, 0.3016710000000001]], 
      Opacity[4.126693644562889*^-17, 
       RGBColor[0.16791, 6.01792762967182*^-18, 0.3016710000000001]], 
      Opacity[3.353513557178847*^-17, 
       RGBColor[0.16791, 4.8904046751363014`*^-18, 0.301671]], 
      Opacity[3.350734221438449*^-17, 
       RGBColor[0.16791, 4.886351589837296*^-18, 0.301671]], 
      Opacity[1.76558216558268*^-17, 
       RGBColor[0.16791, 2.57473575987763*^-18, 0.301671]], 
      Opacity[2.0156809209515414`*^-17, 
       RGBColor[0.16791, 2.939452974121002*^-18, 0.301671]], 
      Opacity[1.3194624377147353`*^-17, 
       RGBColor[0.16791, 1.924162572789847*^-18, 0.301671]], 
      Opacity[1.8492627907670076`*^-17, 
       RGBColor[0.16791, 2.6967666130834337`*^-18, 0.301671]], 
      Opacity[1.7431450458663943`*^-17, 
       RGBColor[0.16791, 2.5420158697426324`*^-18, 0.301671]], 
      Opacity[1.5756874128934462`*^-17, 
       RGBColor[0.16791, 2.2978136092731395`*^-18, 0.301671]], 
      Opacity[1.1072665804513123`*^-17, 
       RGBColor[0.16791, 1.6147188819527695`*^-18, 0.301671]], 
      Opacity[2.435279016146203*^-18, 
       RGBColor[0.16791, 3.5513498552370915`*^-19, 0.301671]], 
      Opacity[0., 
       RGBColor[0.16791, 0., 0.301671]], 
      Opacity[0., 
       RGBColor[0.16791, 0., 0.301671]], 
      Opacity[0., 
       RGBColor[0.16791, 0., 0.301671]], 
      Opacity[0., 
       RGBColor[0.16791, 0., 0.301671]], 
      Opacity[0., 
       RGBColor[0.16791, 0., 0.301671]], 
      Opacity[0., 
       RGBColor[0.16791, 0., 0.301671]], 
      Opacity[0., 
       RGBColor[0.16791, 0., 0.301671]], 
      Opacity[0., 
       RGBColor[0.16791, 0., 0.301671]], 
      Opacity[3.965635323204633*^-10, 
       RGBColor[
       0.1679100001312505, 5.783057439254989*^-11, 0.3016710002857894]], 
      Opacity[3.1567169317426078`*^-9, 
       RGBColor[
       0.16791000104477735`, 4.603417573198336*^-10, 0.3016710022749348]], 
      Opacity[1.9608812762417545`*^-8, 
       RGBColor[
       0.1679100064899209, 2.8595390467981616`*^-9, 0.30167101413138114`]], 
      Opacity[1.0095428607771454`*^-7, 
       RGBColor[
       0.1679100334127997, 1.4722090851627136`*^-8, 0.3016710727542004]], 
      Opacity[4.312035848027856*^-7, 
       RGBColor[
       0.167910142715278, 6.288210830520916*^-8, 0.3016713107532452]], 
      Opacity[1.5296952365741702`*^-6, 
       RGBColor[
       0.16791050628262058`, 2.230743549690409*^-7, 0.30167210239751174`]], 
      Opacity[4.5125106290988105`*^-6, 
       RGBColor[
       0.1679114935038379, 6.580561760338266*^-7, 0.30167425200757003`]], 
      Opacity[0.000011083464558865533`, 
       RGBColor[
       0.16791366828983167`, 1.6162936565248783`*^-6, 0.30167898746276967`]], 
      
      Opacity[0.00002269502895204263, 
       RGBColor[
       0.16791751136465424`, 3.309599731655531*^-6, 0.30168735550850073`]], 
      Opacity[0.000038788551866779056`, 
       RGBColor[
       0.16792283783149592`, 5.656506590975045*^-6, 0.30169895354397336`]], 
      Opacity[0.00005539101144910454, 
       RGBColor[
       0.1679283327409029, 8.077631318094672*^-6, 0.3017109183521878]], 
      Opacity[0.00006614067901780883, 
       RGBColor[
       0.16793189055407826`, 9.645247599878168*^-6, 0.30171866525921626`]], 
      Opacity[0.00006606548179823716, 
       RGBColor[
       0.16793186566608456`, 9.63428164349003*^-6, 0.301718611067227]], 
      Opacity[0.0000552042892127539, 
       RGBColor[
       0.16792827094151902`, 8.050401748807667*^-6, 0.30171078378804467`]], 
      Opacity[0.00003857535251310416, 
       RGBColor[
       0.16792276726899114`, 5.6254158827321695`*^-6, 0.3016987998987038]], 
      Opacity[0.000022525784918491367`, 
       RGBColor[
       0.16791745535002417`, 3.284918996098455*^-6, 0.30168723354028315`]], 
      Opacity[0.000010981346807543282`, 
       RGBColor[
       0.16791363449196037`, 1.6014018983743353`*^-6, 0.3016789138701008]], 
      Opacity[4.464035388461571*^-6, 
       RGBColor[
       0.1679114774600069, 6.509870665938713*^-7, 0.30167421707317044`]], 
      Opacity[1.5112815209679602`*^-6, 
       RGBColor[
       0.1679105001882405, 2.2038909608006254`*^-7, 0.30167208912739507`]], 
      Opacity[4.255524494201738*^-7, 
       RGBColor[
       0.16791014084492398`, 6.205800730118036*^-8, 0.3016713066806709]], 
      Opacity[9.954472032267765*^-8, 
       RGBColor[
       0.16791003294627627`, 1.4516534892457449`*^-8, 0.301671071738376]], 
      Opacity[1.932193647159064*^-8, 
       RGBColor[
       0.16791000639497358`, 2.8177040838578036`*^-9, 0.3016710139246395]], 
      Opacity[3.10894838377369*^-9, 
       RGBColor[
       0.16791000102896741`, 4.533757043628809*^-10, 0.3016710022405097]], 
      Opacity[3.8923981221564393`*^-10, 
       RGBColor[
       0.16791000012882654`, 5.6762561562742556`*^-11, 0.30167100028051147`]], 
      Opacity[0., 
       RGBColor[0.16791, 0., 0.301671]], 
      Opacity[0., 
       RGBColor[0.16791, 0., 0.301671]], 
      Opacity[0., 
       RGBColor[0.16791, 0., 0.301671]], 
      Opacity[0., 
       RGBColor[0.16791, 0., 0.301671]], 
      Opacity[0., 
       RGBColor[0.16791, 0., 0.301671]], 
      Opacity[0., 
       RGBColor[0.16791, 0., 0.301671]], 
      Opacity[1.4237703105190743`*^-17, 
       RGBColor[0.16791, 2.0762739926837302`*^-18, 0.301671]], 
      Opacity[1.427294309836139*^-17, 
       RGBColor[0.16791, 2.0814130155150106`*^-18, 0.301671]], 
      Opacity[1.0914576650138977`*^-17, 
       RGBColor[0.16791, 1.591664854394579*^-18, 0.301671]], 
      Opacity[1.260884545428028*^-17, 
       RGBColor[0.16791, 1.8387388542289663`*^-18, 0.301671]], 
      Opacity[3.0612428677520716`*^-18, 
       RGBColor[0.16791, 4.464188433094198*^-19, 0.301671]], 
      Opacity[3.69835059622111*^-18, 
       RGBColor[0.16791, 5.393278046344952*^-19, 0.301671]], 
      Opacity[8.254507481527708*^-19, 
       RGBColor[0.16791, 1.203748882785799*^-19, 0.301671]], 
      Opacity[0., 
       RGBColor[0.16791, 0., 0.301671]], 
      Opacity[0., 
       RGBColor[0.16791, 0., 0.301671]], 
      Opacity[0., 
       RGBColor[0.16791, 0., 0.301671]], 
      Opacity[0., 
       RGBColor[0.16791, 0., 0.301671]], 
      Opacity[0., 
       RGBColor[0.16791, 0., 0.301671]], 
      Opacity[0., 
       RGBColor[0.16791, 0., 0.301671]], 
      Opacity[0., 
       RGBColor[0.16791, 0., 0.301671]], 
      Opacity[0., 
       RGBColor[0.16791, 0., 0.301671]], 
      Opacity[0., 
       RGBColor[0.16791, 0., 0.301671]], 
      Opacity[0., 
       RGBColor[0.16791, 0., 0.301671]], 
      Opacity[0., 
       RGBColor[0.16791, 0., 0.301671]], 
      Opacity[0., 
       RGBColor[0.16791, 0., 0.301671]], 
      Opacity[0., 
       RGBColor[0.16791, 0., 0.301671]], 
      Opacity[6.713121905229058*^-11, 
       RGBColor[
       0.1679100000222184, 9.789697339917818*^-12, 0.30167100004837916`]], 
      Opacity[5.343772048694078*^-10, 
       RGBColor[
       0.1679100001768626, 7.792784303451822*^-11, 0.30167100038510686`]], 
      Opacity[3.3194313687495673`*^-9, 
       RGBColor[
       0.16791000109863088`, 4.840702865141639*^-10, 0.30167100239219735`]], 
      Opacity[1.7089807531008886`*^-8, 
       RGBColor[
       0.16791000565620676`, 2.4921943275856036`*^-9, 0.3016710123160227]], 
      Opacity[7.299527943006392*^-8, 
       RGBColor[
       0.16791002415921844`, 1.0644849042685033`*^-8, 0.3016710526051285]], 
      Opacity[2.589508420866707*^-7, 
       RGBColor[
       0.16791008570485663`, 3.776261485689289*^-8, 0.30167118661675685`]], 
      Opacity[7.638896949888924*^-7, 
       RGBColor[
       0.1679102528242668, 1.1139748421964979`*^-7, 0.30167155050841427`]], 
      Opacity[1.8762380984693414`*^-6, 
       RGBColor[
       0.16791062097777296`, 2.736104510083532*^-7, 0.301672352138754]], 
      Opacity[3.841874329153082*^-6, 
       RGBColor[
       0.16791127154360996`, 5.60257767270877*^-7, 0.3016737687035951]], 
      Opacity[6.566228313632323*^-6, 
       RGBColor[
       0.16791217322195848`, 9.575483472926159*^-7, 0.3016757320496144]], 
      Opacity[9.376736438860445*^-6, 
       RGBColor[
       0.16791310341470847`, 1.3674027236287827`*^-6, 0.30167775748389036`]], 
      
      Opacity[0.000011196468502977213`, 
       RGBColor[
       0.16791370569070185`, 1.6327729403318448`*^-6, 0.3016790689007344]], 
      Opacity[0.000011183738919413332`, 
       RGBColor[
       0.16791370147759666`, 1.6309165943260242`*^-6, 0.3016790597269716]], 
      Opacity[9.345127606448077*^-6, 
       RGBColor[
       0.16791309295314585`, 1.3627932303564466`*^-6, 0.3016777347045175]], 
      Opacity[6.5301373650190534`*^-6, 
       RGBColor[
       0.16791216127695166`, 9.522852302418258*^-7, 0.30167570604013816`]], 
      Opacity[3.813224253029054*^-6, 
       RGBColor[
       0.16791126206130574`, 5.560797472977648*^-7, 0.30167374805649366`]], 
      Opacity[1.8589513363697385`*^-6, 
       RGBColor[
       0.1679106152563802, 2.7108953493783676`*^-7, 0.30167233968079304`]], 
      Opacity[7.556836785346714*^-7, 
       RGBColor[
       0.1679102501083248, 1.1020080674846259`*^-7, 0.3016715445946271]], 
      Opacity[2.558337198548649*^-7, 
       RGBColor[
       0.16791008467318394`, 3.7308047166156654`*^-8, 0.30167118437035656`]], 
      
      Opacity[7.203864045055675*^-8, 
       RGBColor[
       0.1679100238426, 1.0505343069083566`*^-8, 0.3016710519157124]], 
      Opacity[1.6851192654970223`*^-8, 
       RGBColor[
       0.16791000557723249`, 2.457397292015596*^-9, 0.3016710121440614]], 
      Opacity[3.2708683229139686`*^-9, 
       RGBColor[
       0.167910001082558, 4.769883725053515*^-10, 0.3016710023571997]], 
      Opacity[5.262909573431444*^-10, 
       RGBColor[
       0.1679100001741863, 7.674863137986145*^-11, 0.3016710003792794]], 
      Opacity[6.589152907045483*^-11, 
       RGBColor[
       0.1679100000218081, 9.608914242443496*^-12, 0.3016710000474857]], 
      Opacity[0., 
       RGBColor[0.16791, 0., 0.301671]], 
      Opacity[0., 
       RGBColor[0.16791, 0., 0.301671]], 
      Opacity[0., 
       RGBColor[0.16791, 0., 0.301671]], 
      Opacity[0., 
       RGBColor[0.16791, 0., 0.301671]], 
      Opacity[0., 
       RGBColor[0.16791, 0., 0.301671]], 
      Opacity[0., 
       RGBColor[0.16791, 0., 0.301671]], 
      Opacity[1.775335046240347*^-10, 
       RGBColor[
       0.1679100000587582, 2.5889583155199655`*^-11, 0.3016710001279422]], 
      Opacity[6.288197748019082*^-11, 
       RGBColor[
       0.16791000002081202`, 9.17003350091244*^-12, 0.30167100004531683`]], 
      Opacity[1.4738786684436516`*^-17, 
       RGBColor[0.16791, 2.1493466502649645`*^-18, 0.301671]], 
      Opacity[1.9048126857775673`*^-17, 
       RGBColor[0.16791, 2.777774625018089*^-18, 0.301671]], 
      Opacity[2.3419340504804057`*^-17, 
       RGBColor[0.16791, 3.415225563890412*^-18, 0.301671]], 
      Opacity[2.3662713667453802`*^-17, 
       RGBColor[0.16791, 3.450716496970947*^-18, 0.301671]], 
      Opacity[0., 
       RGBColor[0.16791, 0., 0.301671]], 
      Opacity[0., 
       RGBColor[0.16791, 0., 0.301671]], 
      Opacity[3.116621115925217*^-17, 
       RGBColor[0.16791, 4.54494613368171*^-18, 0.301671]], 
      Opacity[0., 
       RGBColor[0.16791, 0., 0.301671]], 
      Opacity[1.4258933883600738`*^-17, 
       RGBColor[0.16791, 2.0793700618130993`*^-18, 0.301671]], 
      Opacity[0., 
       RGBColor[0.16791, 0., 0.301671]], 
      Opacity[3.17211543722534*^-11, 
       RGBColor[
       0.16791000001049874`, 4.625873102874565*^-12, 0.30167100002286035`]], 
      Opacity[4.733740746299167*^-18, 
       RGBColor[0.16791, 6.903180047394701*^-19, 0.301671]], 
      Opacity[1.4048915014415265`*^-17, 
       RGBColor[0.16791, 2.0487431613333676`*^-18, 0.301671]], 
      Opacity[0., 
       RGBColor[0.16791, 0., 0.301671]], 
      Opacity[1.8778159705446722`*^-11, 
       RGBColor[
       0.167910000006215, 2.7384055095703077`*^-12, 0.3016710000135328]], 
      Opacity[6.093376656421277*^-20, 
       RGBColor[0.16791, 8.885927305747223*^-21, 0.301671]], 
      Opacity[1.4251929276220413`*^-17, 
       RGBColor[0.16791, 2.078348584962144*^-18, 0.301671]], 
      Opacity[0., 
       RGBColor[0.16791, 0., 0.301671]], 
      Opacity[3.1590012448856197`*^-17, 
       RGBColor[0.16791, 4.606748770607736*^-18, 0.301671]], 
      Opacity[5.984911250905281*^-18, 
       RGBColor[0.16791, 8.727752985834164*^-19, 0.301671]], 
      Opacity[1.4130173879369232`*^-17, 
       RGBColor[0.16791, 2.060593083103222*^-18, 0.301671]], 
      Opacity[0., 
       RGBColor[0.16791, 0., 0.301671]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]
       ], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.4492753623188421`, 
       RGBColor[0.5165465652173931, 0.7875320000000009, 0.9853355217391305]], 
      
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.4492753623188421`, 
       RGBColor[0.5165465652173931, 0.7875320000000009, 0.9853355217391305]], 
      
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.4492753623188421`, 
       RGBColor[0.5165465652173931, 0.7875320000000009, 0.9853355217391305]], 
      
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.4492753623188421`, 
       RGBColor[0.5165465652173931, 0.7875320000000009, 0.9853355217391305]], 
      
      Opacity[1.4855072463768133`, 
       RGBColor[0.559132304347828, 0.810380000000001, 0.9875634347826088]], 
      Opacity[1.5217391304347843`, 
       RGBColor[0.6017180434782627, 0.833228000000001, 0.989791347826087]], 
      Opacity[1.4492753623188421`, 
       RGBColor[0.5165465652173931, 0.7875320000000009, 0.9853355217391305]], 
      
      Opacity[1.4855072463768133`, 
       RGBColor[0.559132304347828, 0.810380000000001, 0.9875634347826088]], 
      Opacity[1.5217391304347843`, 
       RGBColor[0.6017180434782627, 0.833228000000001, 0.989791347826087]], 
      Opacity[1.4855072463768133`, 
       RGBColor[0.559132304347828, 0.810380000000001, 0.9875634347826088]], 
      Opacity[1.5217391304347843`, 
       RGBColor[0.6017180434782627, 0.833228000000001, 0.989791347826087]], 
      Opacity[1.5579710144927554`, 
       RGBColor[0.6443037826086977, 0.8560760000000011, 0.9920192608695654]], 
      
      Opacity[1.5579710144927554`, 
       RGBColor[0.6443037826086977, 0.8560760000000011, 0.9920192608695654]], 
      
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.4492753623188421`, 
       RGBColor[0.5165465652173931, 0.7875320000000009, 0.9853355217391305]], 
      
      Opacity[1.4855072463768133`, 
       RGBColor[0.559132304347828, 0.810380000000001, 0.9875634347826088]], 
      Opacity[1.5217391304347843`, 
       RGBColor[0.6017180434782627, 0.833228000000001, 0.989791347826087]], 
      Opacity[1.5579710144927554`, 
       RGBColor[0.6443037826086977, 0.8560760000000011, 0.9920192608695654]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.4492753623188421`, 
       RGBColor[0.5165465652173931, 0.7875320000000009, 0.9853355217391305]], 
      
      Opacity[1.4855072463768133`, 
       RGBColor[0.559132304347828, 0.810380000000001, 0.9875634347826088]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.4492753623188421`, 
       RGBColor[0.5165465652173931, 0.7875320000000009, 0.9853355217391305]], 
      
      Opacity[1.4855072463768133`, 
       RGBColor[0.559132304347828, 0.810380000000001, 0.9875634347826088]], 
      Opacity[1.5217391304347843`, 
       RGBColor[0.6017180434782627, 0.833228000000001, 0.989791347826087]], 
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.4492753623188421`, 
       RGBColor[0.5165465652173931, 0.7875320000000009, 0.9853355217391305]], 
      
      Opacity[1.4855072463768133`, 
       RGBColor[0.559132304347828, 0.810380000000001, 0.9875634347826088]], 
      Opacity[1.5217391304347843`, 
       RGBColor[0.6017180434782627, 0.833228000000001, 0.989791347826087]], 
      Opacity[1.5579710144927554`, 
       RGBColor[0.6443037826086977, 0.8560760000000011, 0.9920192608695654]], 
      
      Opacity[1.5942028985507264`, 
       RGBColor[0.6868895217391324, 0.8789240000000011, 0.9942471739130436]], 
      
      Opacity[1.5579710144927554`, 
       RGBColor[0.6443037826086977, 0.8560760000000011, 0.9920192608695654]], 
      
      Opacity[1.5942028985507264`, 
       RGBColor[0.6868895217391324, 0.8789240000000011, 0.9942471739130436]], 
      
      Opacity[1.5942028985507264`, 
       RGBColor[0.6868895217391324, 0.8789240000000011, 0.9942471739130436]], 
      
      Opacity[1.5217391304347843`, 
       RGBColor[0.6017180434782627, 0.833228000000001, 0.989791347826087]], 
      Opacity[1.5579710144927554`, 
       RGBColor[0.6443037826086977, 0.8560760000000011, 0.9920192608695654]], 
      
      Opacity[1.5942028985507264`, 
       RGBColor[0.6868895217391324, 0.8789240000000011, 0.9942471739130436]], 
      
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.4492753623188421`, 
       RGBColor[0.5165465652173931, 0.7875320000000009, 0.9853355217391305]], 
      
      Opacity[1.4855072463768133`, 
       RGBColor[0.559132304347828, 0.810380000000001, 0.9875634347826088]], 
      Opacity[1.5217391304347843`, 
       RGBColor[0.6017180434782627, 0.833228000000001, 0.989791347826087]], 
      Opacity[1.5579710144927554`, 
       RGBColor[0.6443037826086977, 0.8560760000000011, 0.9920192608695654]], 
      
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.4492753623188421`, 
       RGBColor[0.5165465652173931, 0.7875320000000009, 0.9853355217391305]], 
      
      Opacity[1.4855072463768133`, 
       RGBColor[0.559132304347828, 0.810380000000001, 0.9875634347826088]], 
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.4492753623188421`, 
       RGBColor[0.5165465652173931, 0.7875320000000009, 0.9853355217391305]], 
      
      Opacity[1.4855072463768133`, 
       RGBColor[0.559132304347828, 0.810380000000001, 0.9875634347826088]], 
      Opacity[1.5579710144927554`, 
       RGBColor[0.6443037826086977, 0.8560760000000011, 0.9920192608695654]], 
      
      Opacity[1.5942028985507264`, 
       RGBColor[0.6868895217391324, 0.8789240000000011, 0.9942471739130436]], 
      
      Opacity[1.5217391304347843`, 
       RGBColor[0.6017180434782627, 0.833228000000001, 0.989791347826087]], 
      Opacity[1.5579710144927554`, 
       RGBColor[0.6443037826086977, 0.8560760000000011, 0.9920192608695654]], 
      
      Opacity[1.5942028985507264`, 
       RGBColor[0.6868895217391324, 0.8789240000000011, 0.9942471739130436]], 
      
      Opacity[1.6304347826086976`, 
       RGBColor[0.7294752608695674, 0.9017720000000011, 0.9964750869565219]], 
      
      Opacity[1.6304347826086976`, 
       RGBColor[0.7294752608695674, 0.9017720000000011, 0.9964750869565219]], 
      
      Opacity[1.6304347826086976`, 
       RGBColor[0.7294752608695674, 0.9017720000000011, 0.9964750869565219]], 
      
      Opacity[1.5942028985507264`, 
       RGBColor[0.6868895217391324, 0.8789240000000011, 0.9942471739130436]], 
      
      Opacity[1.6304347826086976`, 
       RGBColor[0.7294752608695674, 0.9017720000000011, 0.9964750869565219]], 
      
      Opacity[1.4492753623188421`, 
       RGBColor[0.5165465652173931, 0.7875320000000009, 0.9853355217391305]], 
      
      Opacity[1.4855072463768133`, 
       RGBColor[0.559132304347828, 0.810380000000001, 0.9875634347826088]], 
      Opacity[1.5217391304347843`, 
       RGBColor[0.6017180434782627, 0.833228000000001, 0.989791347826087]], 
      Opacity[1.5579710144927554`, 
       RGBColor[0.6443037826086977, 0.8560760000000011, 0.9920192608695654]], 
      
      Opacity[1.5942028985507264`, 
       RGBColor[0.6868895217391324, 0.8789240000000011, 0.9942471739130436]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.4492753623188421`, 
       RGBColor[0.5165465652173931, 0.7875320000000009, 0.9853355217391305]], 
      
      Opacity[1.4855072463768133`, 
       RGBColor[0.559132304347828, 0.810380000000001, 0.9875634347826088]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.5217391304347843`, 
       RGBColor[0.6017180434782627, 0.833228000000001, 0.989791347826087]], 
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.4492753623188421`, 
       RGBColor[0.5165465652173931, 0.7875320000000009, 0.9853355217391305]], 
      
      Opacity[1.4855072463768133`, 
       RGBColor[0.559132304347828, 0.810380000000001, 0.9875634347826088]], 
      Opacity[1.5217391304347843`, 
       RGBColor[0.6017180434782627, 0.833228000000001, 0.989791347826087]], 
      Opacity[1.6304347826086976`, 
       RGBColor[0.7294752608695674, 0.9017720000000011, 0.9964750869565219]], 
      
      Opacity[1.5579710144927554`, 
       RGBColor[0.6443037826086977, 0.8560760000000011, 0.9920192608695654]], 
      
      Opacity[1.5942028985507264`, 
       RGBColor[0.6868895217391324, 0.8789240000000011, 0.9942471739130436]], 
      
      Opacity[1.6304347826086976`, 
       RGBColor[0.7294752608695674, 0.9017720000000011, 0.9964750869565219]], 
      
      Opacity[1.6304347826086976`, 
       RGBColor[0.7294752608695674, 0.9017720000000011, 0.9964750869565219]], 
      
      Opacity[1.5217391304347843`, 
       RGBColor[0.6017180434782627, 0.833228000000001, 0.989791347826087]], 
      Opacity[1.5579710144927554`, 
       RGBColor[0.6443037826086977, 0.8560760000000011, 0.9920192608695654]], 
      
      Opacity[1.5942028985507264`, 
       RGBColor[0.6868895217391324, 0.8789240000000011, 0.9942471739130436]], 
      
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.4492753623188421`, 
       RGBColor[0.5165465652173931, 0.7875320000000009, 0.9853355217391305]], 
      
      Opacity[1.4855072463768133`, 
       RGBColor[0.559132304347828, 0.810380000000001, 0.9875634347826088]], 
      Opacity[1.5217391304347843`, 
       RGBColor[0.6017180434782627, 0.833228000000001, 0.989791347826087]], 
      Opacity[1.5579710144927554`, 
       RGBColor[0.6443037826086977, 0.8560760000000011, 0.9920192608695654]], 
      
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.4492753623188421`, 
       RGBColor[0.5165465652173931, 0.7875320000000009, 0.9853355217391305]], 
      
      Opacity[1.4855072463768133`, 
       RGBColor[0.559132304347828, 0.810380000000001, 0.9875634347826088]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.5579710144927554`, 
       RGBColor[0.6443037826086977, 0.8560760000000011, 0.9920192608695654]], 
      
      Opacity[1.4492753623188421`, 
       RGBColor[0.5165465652173931, 0.7875320000000009, 0.9853355217391305]], 
      
      Opacity[1.4855072463768133`, 
       RGBColor[0.559132304347828, 0.810380000000001, 0.9875634347826088]], 
      Opacity[1.5217391304347843`, 
       RGBColor[0.6017180434782627, 0.833228000000001, 0.989791347826087]], 
      Opacity[1.5579710144927554`, 
       RGBColor[0.6443037826086977, 0.8560760000000011, 0.9920192608695654]], 
      
      Opacity[1.5942028985507264`, 
       RGBColor[0.6868895217391324, 0.8789240000000011, 0.9942471739130436]], 
      
      Opacity[1.6304347826086976`, 
       RGBColor[0.7294752608695674, 0.9017720000000011, 0.9964750869565219]], 
      
      Opacity[1.6304347826086976`, 
       RGBColor[0.7294752608695674, 0.9017720000000011, 0.9964750869565219]], 
      
      Opacity[1.5942028985507264`, 
       RGBColor[0.6868895217391324, 0.8789240000000011, 0.9942471739130436]], 
      
      Opacity[1.5217391304347843`, 
       RGBColor[0.6017180434782627, 0.833228000000001, 0.989791347826087]], 
      Opacity[1.5579710144927554`, 
       RGBColor[0.6443037826086977, 0.8560760000000011, 0.9920192608695654]], 
      
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.4492753623188421`, 
       RGBColor[0.5165465652173931, 0.7875320000000009, 0.9853355217391305]], 
      
      Opacity[1.4855072463768133`, 
       RGBColor[0.559132304347828, 0.810380000000001, 0.9875634347826088]], 
      Opacity[1.5217391304347843`, 
       RGBColor[0.6017180434782627, 0.833228000000001, 0.989791347826087]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.4492753623188421`, 
       RGBColor[0.5165465652173931, 0.7875320000000009, 0.9853355217391305]], 
      
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.5579710144927554`, 
       RGBColor[0.6443037826086977, 0.8560760000000011, 0.9920192608695654]], 
      
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.4492753623188421`, 
       RGBColor[0.5165465652173931, 0.7875320000000009, 0.9853355217391305]], 
      
      Opacity[1.4855072463768133`, 
       RGBColor[0.559132304347828, 0.810380000000001, 0.9875634347826088]], 
      Opacity[1.5217391304347843`, 
       RGBColor[0.6017180434782627, 0.833228000000001, 0.989791347826087]], 
      Opacity[1.5942028985507264`, 
       RGBColor[0.6868895217391324, 0.8789240000000011, 0.9942471739130436]], 
      
      Opacity[1.6304347826086976`, 
       RGBColor[0.7294752608695674, 0.9017720000000011, 0.9964750869565219]], 
      
      Opacity[1.5579710144927554`, 
       RGBColor[0.6443037826086977, 0.8560760000000011, 0.9920192608695654]], 
      
      Opacity[1.6304347826086976`, 
       RGBColor[0.7294752608695674, 0.9017720000000011, 0.9964750869565219]], 
      
      Opacity[1.5942028985507264`, 
       RGBColor[0.6868895217391324, 0.8789240000000011, 0.9942471739130436]], 
      
      Opacity[1.6304347826086976`, 
       RGBColor[0.7294752608695674, 0.9017720000000011, 0.9964750869565219]], 
      
      Opacity[1.5942028985507264`, 
       RGBColor[0.6868895217391324, 0.8789240000000011, 0.9942471739130436]], 
      
      Opacity[1.5942028985507264`, 
       RGBColor[0.6868895217391324, 0.8789240000000011, 0.9942471739130436]], 
      
      Opacity[1.5579710144927554`, 
       RGBColor[0.6443037826086977, 0.8560760000000011, 0.9920192608695654]], 
      
      Opacity[1.4855072463768133`, 
       RGBColor[0.559132304347828, 0.810380000000001, 0.9875634347826088]], 
      Opacity[1.5217391304347843`, 
       RGBColor[0.6017180434782627, 0.833228000000001, 0.989791347826087]], 
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.4492753623188421`, 
       RGBColor[0.5165465652173931, 0.7875320000000009, 0.9853355217391305]], 
      
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.4492753623188421`, 
       RGBColor[0.5165465652173931, 0.7875320000000009, 0.9853355217391305]], 
      
      Opacity[1.4855072463768133`, 
       RGBColor[0.559132304347828, 0.810380000000001, 0.9875634347826088]], 
      Opacity[1.5217391304347843`, 
       RGBColor[0.6017180434782627, 0.833228000000001, 0.989791347826087]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.4855072463768133`, 
       RGBColor[0.559132304347828, 0.810380000000001, 0.9875634347826088]], 
      Opacity[1.5217391304347843`, 
       RGBColor[0.6017180434782627, 0.833228000000001, 0.989791347826087]], 
      Opacity[1.5579710144927554`, 
       RGBColor[0.6443037826086977, 0.8560760000000011, 0.9920192608695654]], 
      
      Opacity[1.4492753623188421`, 
       RGBColor[0.5165465652173931, 0.7875320000000009, 0.9853355217391305]], 
      
      Opacity[1.5217391304347843`, 
       RGBColor[0.6017180434782627, 0.833228000000001, 0.989791347826087]], 
      Opacity[1.5579710144927554`, 
       RGBColor[0.6443037826086977, 0.8560760000000011, 0.9920192608695654]], 
      
      Opacity[1.5942028985507264`, 
       RGBColor[0.6868895217391324, 0.8789240000000011, 0.9942471739130436]], 
      
      Opacity[1.4855072463768133`, 
       RGBColor[0.559132304347828, 0.810380000000001, 0.9875634347826088]], 
      Opacity[1.5217391304347843`, 
       RGBColor[0.6017180434782627, 0.833228000000001, 0.989791347826087]], 
      Opacity[1.5579710144927554`, 
       RGBColor[0.6443037826086977, 0.8560760000000011, 0.9920192608695654]], 
      
      Opacity[1.5942028985507264`, 
       RGBColor[0.6868895217391324, 0.8789240000000011, 0.9942471739130436]], 
      
      Opacity[1.5217391304347843`, 
       RGBColor[0.6017180434782627, 0.833228000000001, 0.989791347826087]], 
      Opacity[1.5579710144927554`, 
       RGBColor[0.6443037826086977, 0.8560760000000011, 0.9920192608695654]], 
      
      Opacity[1.5217391304347843`, 
       RGBColor[0.6017180434782627, 0.833228000000001, 0.989791347826087]], 
      Opacity[1.5579710144927554`, 
       RGBColor[0.6443037826086977, 0.8560760000000011, 0.9920192608695654]], 
      
      Opacity[1.4492753623188421`, 
       RGBColor[0.5165465652173931, 0.7875320000000009, 0.9853355217391305]], 
      
      Opacity[1.4855072463768133`, 
       RGBColor[0.559132304347828, 0.810380000000001, 0.9875634347826088]], 
      Opacity[1.5217391304347843`, 
       RGBColor[0.6017180434782627, 0.833228000000001, 0.989791347826087]], 
      Opacity[1.4492753623188421`, 
       RGBColor[0.5165465652173931, 0.7875320000000009, 0.9853355217391305]], 
      
      Opacity[1.4855072463768133`, 
       RGBColor[0.559132304347828, 0.810380000000001, 0.9875634347826088]], 
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.4492753623188421`, 
       RGBColor[0.5165465652173931, 0.7875320000000009, 0.9853355217391305]], 
      
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.4492753623188421`, 
       RGBColor[0.5165465652173931, 0.7875320000000009, 0.9853355217391305]], 
      
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.4492753623188421`, 
       RGBColor[0.5165465652173931, 0.7875320000000009, 0.9853355217391305]], 
      
      Opacity[1.4855072463768133`, 
       RGBColor[0.559132304347828, 0.810380000000001, 0.9875634347826088]], 
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.4492753623188421`, 
       RGBColor[0.5165465652173931, 0.7875320000000009, 0.9853355217391305]], 
      
      Opacity[1.4855072463768133`, 
       RGBColor[0.559132304347828, 0.810380000000001, 0.9875634347826088]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.4492753623188421`, 
       RGBColor[0.5165465652173931, 0.7875320000000009, 0.9853355217391305]], 
      
      Opacity[1.4855072463768133`, 
       RGBColor[0.559132304347828, 0.810380000000001, 0.9875634347826088]], 
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.4492753623188421`, 
       RGBColor[0.5165465652173931, 0.7875320000000009, 0.9853355217391305]], 
      
      Opacity[1.4855072463768133`, 
       RGBColor[0.559132304347828, 0.810380000000001, 0.9875634347826088]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.4492753623188421`, 
       RGBColor[0.5165465652173931, 0.7875320000000009, 0.9853355217391305]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.4492753623188421`, 
       RGBColor[0.5165465652173931, 0.7875320000000009, 0.9853355217391305]], 
      
      Opacity[1.4855072463768133`, 
       RGBColor[0.559132304347828, 0.810380000000001, 0.9875634347826088]], 
      Opacity[1.5217391304347843`, 
       RGBColor[0.6017180434782627, 0.833228000000001, 0.989791347826087]], 
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.4492753623188421`, 
       RGBColor[0.5165465652173931, 0.7875320000000009, 0.9853355217391305]], 
      
      Opacity[1.4855072463768133`, 
       RGBColor[0.559132304347828, 0.810380000000001, 0.9875634347826088]], 
      Opacity[1.5217391304347843`, 
       RGBColor[0.6017180434782627, 0.833228000000001, 0.989791347826087]], 
      Opacity[1.5579710144927554`, 
       RGBColor[0.6443037826086977, 0.8560760000000011, 0.9920192608695654]], 
      
      Opacity[1.4855072463768133`, 
       RGBColor[0.559132304347828, 0.810380000000001, 0.9875634347826088]], 
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.4492753623188421`, 
       RGBColor[0.5165465652173931, 0.7875320000000009, 0.9853355217391305]], 
      
      Opacity[1.4855072463768133`, 
       RGBColor[0.559132304347828, 0.810380000000001, 0.9875634347826088]], 
      Opacity[1.5217391304347843`, 
       RGBColor[0.6017180434782627, 0.833228000000001, 0.989791347826087]], 
      Opacity[1.4492753623188421`, 
       RGBColor[0.5165465652173931, 0.7875320000000009, 0.9853355217391305]], 
      
      Opacity[1.4855072463768133`, 
       RGBColor[0.559132304347828, 0.810380000000001, 0.9875634347826088]], 
      Opacity[1.5217391304347843`, 
       RGBColor[0.6017180434782627, 0.833228000000001, 0.989791347826087]], 
      Opacity[1.5579710144927554`, 
       RGBColor[0.6443037826086977, 0.8560760000000011, 0.9920192608695654]], 
      
      Opacity[1.5942028985507264`, 
       RGBColor[0.6868895217391324, 0.8789240000000011, 0.9942471739130436]], 
      
      Opacity[1.5579710144927554`, 
       RGBColor[0.6443037826086977, 0.8560760000000011, 0.9920192608695654]], 
      
      Opacity[1.5942028985507264`, 
       RGBColor[0.6868895217391324, 0.8789240000000011, 0.9942471739130436]], 
      
      Opacity[1.4492753623188421`, 
       RGBColor[0.5165465652173931, 0.7875320000000009, 0.9853355217391305]], 
      
      Opacity[1.4855072463768133`, 
       RGBColor[0.559132304347828, 0.810380000000001, 0.9875634347826088]], 
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.4492753623188421`, 
       RGBColor[0.5165465652173931, 0.7875320000000009, 0.9853355217391305]], 
      
      Opacity[1.4855072463768133`, 
       RGBColor[0.559132304347828, 0.810380000000001, 0.9875634347826088]], 
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.4492753623188421`, 
       RGBColor[0.5165465652173931, 0.7875320000000009, 0.9853355217391305]], 
      
      Opacity[1.4855072463768133`, 
       RGBColor[0.559132304347828, 0.810380000000001, 0.9875634347826088]], 
      Opacity[1.5217391304347843`, 
       RGBColor[0.6017180434782627, 0.833228000000001, 0.989791347826087]], 
      Opacity[1.5579710144927554`, 
       RGBColor[0.6443037826086977, 0.8560760000000011, 0.9920192608695654]], 
      
      Opacity[1.5942028985507264`, 
       RGBColor[0.6868895217391324, 0.8789240000000011, 0.9942471739130436]], 
      
      Opacity[1.5579710144927554`, 
       RGBColor[0.6443037826086977, 0.8560760000000011, 0.9920192608695654]], 
      
      Opacity[1.5942028985507264`, 
       RGBColor[0.6868895217391324, 0.8789240000000011, 0.9942471739130436]], 
      
      Opacity[1.6304347826086976`, 
       RGBColor[0.7294752608695674, 0.9017720000000011, 0.9964750869565219]], 
      
      Opacity[1.6304347826086976`, 
       RGBColor[0.7294752608695674, 0.9017720000000011, 0.9964750869565219]], 
      
      Opacity[1.5217391304347843`, 
       RGBColor[0.6017180434782627, 0.833228000000001, 0.989791347826087]], 
      Opacity[1.5579710144927554`, 
       RGBColor[0.6443037826086977, 0.8560760000000011, 0.9920192608695654]], 
      
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.4492753623188421`, 
       RGBColor[0.5165465652173931, 0.7875320000000009, 0.9853355217391305]], 
      
      Opacity[1.4855072463768133`, 
       RGBColor[0.559132304347828, 0.810380000000001, 0.9875634347826088]], 
      Opacity[1.5217391304347843`, 
       RGBColor[0.6017180434782627, 0.833228000000001, 0.989791347826087]], 
      Opacity[1.5217391304347843`, 
       RGBColor[0.6017180434782627, 0.833228000000001, 0.989791347826087]], 
      Opacity[1.5579710144927554`, 
       RGBColor[0.6443037826086977, 0.8560760000000011, 0.9920192608695654]], 
      
      Opacity[1.5942028985507264`, 
       RGBColor[0.6868895217391324, 0.8789240000000011, 0.9942471739130436]], 
      
      Opacity[1.6304347826086976`, 
       RGBColor[0.7294752608695674, 0.9017720000000011, 0.9964750869565219]], 
      
      Opacity[1.6304347826086976`, 
       RGBColor[0.7294752608695674, 0.9017720000000011, 0.9964750869565219]], 
      
      Opacity[1.6304347826086976`, 
       RGBColor[0.7294752608695674, 0.9017720000000011, 0.9964750869565219]], 
      
      Opacity[1.5942028985507264`, 
       RGBColor[0.6868895217391324, 0.8789240000000011, 0.9942471739130436]], 
      
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.4492753623188421`, 
       RGBColor[0.5165465652173931, 0.7875320000000009, 0.9853355217391305]], 
      
      Opacity[1.4855072463768133`, 
       RGBColor[0.559132304347828, 0.810380000000001, 0.9875634347826088]], 
      Opacity[1.5217391304347843`, 
       RGBColor[0.6017180434782627, 0.833228000000001, 0.989791347826087]], 
      Opacity[1.5579710144927554`, 
       RGBColor[0.6443037826086977, 0.8560760000000011, 0.9920192608695654]], 
      
      Opacity[1.5579710144927554`, 
       RGBColor[0.6443037826086977, 0.8560760000000011, 0.9920192608695654]], 
      
      Opacity[1.5942028985507264`, 
       RGBColor[0.6868895217391324, 0.8789240000000011, 0.9942471739130436]], 
      
      Opacity[1.6304347826086976`, 
       RGBColor[0.7294752608695674, 0.9017720000000011, 0.9964750869565219]], 
      
      Opacity[1.6304347826086976`, 
       RGBColor[0.7294752608695674, 0.9017720000000011, 0.9964750869565219]], 
      
      Opacity[1.5942028985507264`, 
       RGBColor[0.6868895217391324, 0.8789240000000011, 0.9942471739130436]], 
      
      Opacity[1.5579710144927554`, 
       RGBColor[0.6443037826086977, 0.8560760000000011, 0.9920192608695654]], 
      
      Opacity[1.4855072463768133`, 
       RGBColor[0.559132304347828, 0.810380000000001, 0.9875634347826088]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.4492753623188421`, 
       RGBColor[0.5165465652173931, 0.7875320000000009, 0.9853355217391305]], 
      
      Opacity[1.4855072463768133`, 
       RGBColor[0.559132304347828, 0.810380000000001, 0.9875634347826088]], 
      Opacity[1.5217391304347843`, 
       RGBColor[0.6017180434782627, 0.833228000000001, 0.989791347826087]], 
      Opacity[1.6304347826086976`, 
       RGBColor[0.7294752608695674, 0.9017720000000011, 0.9964750869565219]], 
      
      Opacity[1.6304347826086976`, 
       RGBColor[0.7294752608695674, 0.9017720000000011, 0.9964750869565219]], 
      
      Opacity[1.5942028985507264`, 
       RGBColor[0.6868895217391324, 0.8789240000000011, 0.9942471739130436]], 
      
      Opacity[1.6304347826086976`, 
       RGBColor[0.7294752608695674, 0.9017720000000011, 0.9964750869565219]], 
      
      Opacity[1.5942028985507264`, 
       RGBColor[0.6868895217391324, 0.8789240000000011, 0.9942471739130436]], 
      
      Opacity[1.5579710144927554`, 
       RGBColor[0.6443037826086977, 0.8560760000000011, 0.9920192608695654]], 
      
      Opacity[1.4855072463768133`, 
       RGBColor[0.559132304347828, 0.810380000000001, 0.9875634347826088]], 
      Opacity[1.5217391304347843`, 
       RGBColor[0.6017180434782627, 0.833228000000001, 0.989791347826087]], 
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.4492753623188421`, 
       RGBColor[0.5165465652173931, 0.7875320000000009, 0.9853355217391305]], 
      
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.4855072463768133`, 
       RGBColor[0.559132304347828, 0.810380000000001, 0.9875634347826088]], 
      Opacity[1.5217391304347843`, 
       RGBColor[0.6017180434782627, 0.833228000000001, 0.989791347826087]], 
      Opacity[1.5217391304347843`, 
       RGBColor[0.6017180434782627, 0.833228000000001, 0.989791347826087]], 
      Opacity[1.5579710144927554`, 
       RGBColor[0.6443037826086977, 0.8560760000000011, 0.9920192608695654]], 
      
      Opacity[1.5217391304347843`, 
       RGBColor[0.6017180434782627, 0.833228000000001, 0.989791347826087]], 
      Opacity[1.5579710144927554`, 
       RGBColor[0.6443037826086977, 0.8560760000000011, 0.9920192608695654]], 
      
      Opacity[1.5942028985507264`, 
       RGBColor[0.6868895217391324, 0.8789240000000011, 0.9942471739130436]], 
      
      Opacity[1.5217391304347843`, 
       RGBColor[0.6017180434782627, 0.833228000000001, 0.989791347826087]], 
      Opacity[1.5579710144927554`, 
       RGBColor[0.6443037826086977, 0.8560760000000011, 0.9920192608695654]], 
      
      Opacity[1.5942028985507264`, 
       RGBColor[0.6868895217391324, 0.8789240000000011, 0.9942471739130436]], 
      
      Opacity[1.5217391304347843`, 
       RGBColor[0.6017180434782627, 0.833228000000001, 0.989791347826087]], 
      Opacity[1.5579710144927554`, 
       RGBColor[0.6443037826086977, 0.8560760000000011, 0.9920192608695654]], 
      
      Opacity[1.4492753623188421`, 
       RGBColor[0.5165465652173931, 0.7875320000000009, 0.9853355217391305]], 
      
      Opacity[1.4855072463768133`, 
       RGBColor[0.559132304347828, 0.810380000000001, 0.9875634347826088]], 
      Opacity[1.5217391304347843`, 
       RGBColor[0.6017180434782627, 0.833228000000001, 0.989791347826087]], 
      Opacity[1.5579710144927554`, 
       RGBColor[0.6443037826086977, 0.8560760000000011, 0.9920192608695654]], 
      
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.4492753623188421`, 
       RGBColor[0.5165465652173931, 0.7875320000000009, 0.9853355217391305]], 
      
      Opacity[1.4855072463768133`, 
       RGBColor[0.559132304347828, 0.810380000000001, 0.9875634347826088]], 
      Opacity[1.5217391304347843`, 
       RGBColor[0.6017180434782627, 0.833228000000001, 0.989791347826087]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.4492753623188421`, 
       RGBColor[0.5165465652173931, 0.7875320000000009, 0.9853355217391305]], 
      
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.4492753623188421`, 
       RGBColor[0.5165465652173931, 0.7875320000000009, 0.9853355217391305]], 
      
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.4492753623188421`, 
       RGBColor[0.5165465652173931, 0.7875320000000009, 0.9853355217391305]], 
      
      Opacity[1.4855072463768133`, 
       RGBColor[0.559132304347828, 0.810380000000001, 0.9875634347826088]], 
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.4492753623188421`, 
       RGBColor[0.5165465652173931, 0.7875320000000009, 0.9853355217391305]], 
      
      Opacity[1.4855072463768133`, 
       RGBColor[0.559132304347828, 0.810380000000001, 0.9875634347826088]], 
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.4492753623188421`, 
       RGBColor[0.5165465652173931, 0.7875320000000009, 0.9853355217391305]], 
      
      Opacity[1.4855072463768133`, 
       RGBColor[0.559132304347828, 0.810380000000001, 0.9875634347826088]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.4492753623188421`, 
       RGBColor[0.5165465652173931, 0.7875320000000009, 0.9853355217391305]], 
      
      Opacity[1.4855072463768133`, 
       RGBColor[0.559132304347828, 0.810380000000001, 0.9875634347826088]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.413043478260871, 
       RGBColor[0.473960826086958, 0.7646840000000008, 0.9831076086956523]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.3768115942029, 
       RGBColor[0.43137508695652327`, 0.7418360000000008, 0.980879695652174]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.3405797101449288`, 
       RGBColor[0.3887893478260883, 0.7189880000000007, 0.9786517826086957]], 
      
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2681159420289865`, 
       RGBColor[0.3036178695652186, 0.6732920000000007, 0.9741959565217392]], 
      
      Opacity[1.3043478260869577`, 
       RGBColor[
       0.34620360869565353`, 0.6961400000000008, 0.9764238695652174]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[1.1231884057971022`, 
       RGBColor[
       0.26805291304347834`, 0.5601494782608701, 0.9305369130434785]], 
      Opacity[1.1594202898550734`, 
       RGBColor[0.27213065217391313`, 0.589211913043479, 0.9426926521739134]], 
      Opacity[1.1956521739130443`, 
       RGBColor[
       0.27620839130434793`, 0.6182743478260877, 0.9548483913043482]], 
      Opacity[1.2318840579710155`, 
       RGBColor[0.28028613043478273`, 0.6473367826086964, 0.967004130434783]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[1.05072463768116, 
       RGBColor[
       0.25989743478260874`, 0.5020246086956527, 0.9062254347826089]], 
      Opacity[1.086956521739131, 
       RGBColor[
       0.26397517391304354`, 0.5310870434782613, 0.9183811739130436]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.8695652173913045, 
       RGBColor[
       0.2395087391304348, 0.35671243478260883`, 0.8454467391304349]], 
      Opacity[0.9057971014492757, 
       RGBColor[
       0.2435864782608696, 0.38577486956521767`, 0.8576024782608697]], 
      Opacity[0.9420289855072467, 
       RGBColor[
       0.24766421739130437`, 0.41483730434782634`, 0.8697582173913044]], 
      Opacity[0.9782608695652178, 
       RGBColor[0.2517419565217392, 0.4438997391304351, 0.8819139565217393]], 
      
      Opacity[1.014492753623189, 
       RGBColor[
       0.25581969565217394`, 0.47296217391304385`, 0.8940696956521741]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.7971014492753624, 
       RGBColor[
       0.24155126086956522`, 0.3044423652173913, 0.8131742173913044]], 
      Opacity[0.8333333333333336, 
       RGBColor[
       0.23543100000000003`, 0.32765000000000016`, 0.8332910000000001]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.6521739130434783, 
       RGBColor[
       0.2660323043478261, 0.21161182608695656`, 0.7327070869565218]], 
      Opacity[0.6884057971014493, 
       RGBColor[
       0.25991204347826086`, 0.23481946086956523`, 0.7528238695652174]], 
      Opacity[0.7246376811594203, 
       RGBColor[
       0.25379178260869567`, 0.2580270956521739, 0.7729406521739131]], 
      Opacity[0.7608695652173912, 
       RGBColor[
       0.24767152173913043`, 0.2812347304347826, 0.7930574347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.5434782608695653, 
       RGBColor[
       0.2843930869565217, 0.14198892173913044`, 0.6723567391304348]], 
      Opacity[0.5797101449275363, 
       RGBColor[
       0.2782728260869565, 0.16519655652173915`, 0.6924735217391305]], 
      Opacity[0.6159420289855072, 
       RGBColor[
       0.2721525652173913, 0.18840419130434782`, 0.7125903043478261]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.5072463768115942, 
       RGBColor[
       0.29051334782608695`, 0.11878128695652176`, 0.6522399565217392]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.43478260869565216`, 
       RGBColor[0.3027538695652174, 0.07236601739130434, 0.6120063913043479]], 
      Opacity[0.4710144927536233, 
       RGBColor[
       0.29663360869565214`, 0.09557365217391309, 0.6321231739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.32608695652173914`, 
       RGBColor[
       0.2758348695652174, 0.047553026086956524`, 0.5366703913043479]], 
      Opacity[0.36231884057971014`, 
       RGBColor[
       0.2878265217391304, 0.052836695652173915`, 0.5627814347826088]], 
      Opacity[0.3985507246376812, 
       RGBColor[
       0.29981817391304344`, 0.05812036521739131, 0.5888924782608695]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.2898550724637681, 
       RGBColor[
       0.26384321739130434`, 0.04226935652173913, 0.510559347826087]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.2536231884057971, 
       RGBColor[
       0.25185156521739127`, 0.03698568695652174, 0.48444830434782615`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.18115942028985507`, 
       RGBColor[
       0.22786826086956521`, 0.026418347826086958`, 0.4322262173913044]], 
      Opacity[0.21739130434782608`, 
       RGBColor[
       0.23985991304347826`, 0.03170201739130435, 0.4583372608695653]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.14492753623188406`, 
       RGBColor[
       0.21587660869565217`, 0.021134678260869566`, 0.4061151739130435]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.10869565217391304`, 
       RGBColor[
       0.20388495652173913`, 0.015851008695652175`, 0.38000413043478265`]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.07246376811594203, 
       RGBColor[
       0.1918933043478261, 0.010567339130434783`, 0.3538930869565218]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]], 
      Opacity[0.036231884057971016`, 
       RGBColor[
       0.17990165217391305`, 0.0052836695652173915`, 0.3277820434782609]]},
    VertexNormals->CompressedData["
1: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
xdthO/H+bNOuHTB/tLfU54kW2G2gTcPxrphjhX87maDGxlMqT0kVTFabif3T
XylRbYfTtiMzQwM+7eeKgDIs3uC4RbxPjOEfDD0b/u2/NUAZHMNWif3i2Y03
90vwmqJcp0+/W5W1IfMpqy8RN2540XEvyx6dZXxd59trCr6qoRk4rzqVteVX
Mbmg85RzsQ4c9nA4YlMv7gc2RSSEbqs8jIq23Pgo6eYKVbvV5XE+eZwvzK8T
pI9q80SkLd55wLmk43L4842XXSTjW/WBMVeyUuK+x9r6gUsXx9862k+cGT0M
xz81SG1ZdgGb02NueDviMr8Tq+Rc4Mxf2e3BWYcgQ2ScBeexyLMp6fNf7aFD
qYNmj7AxZLU3P8XlDHixy0kl1BTuaDwJNkzEQIxBI4cYb9n7aRKy1OBgrRrn
RTpxGLkSX4vrwejwyw4FOXFIqh4e2LyPDYS9xudwfHx2q9DqNDNkFw16nTWZ
wxwH5wm++q3uFHgo7Tt2jnTPdnf3a2x8L7mOlXWDlqZsVwtWc5viLU3YM4x1
gOxvdDf+mc8eSSbRvGTwttjVjTneJuM6NQ+tm9SukzStP10rTBzEitfzrvft
O4PFmVeSGFNK9ty1GsVevCbzXqlafxivSA4p0CF4d7/4OCZm8IvAW2Js9dRq
crApO4Fji5PjmMx6nquBkPqV3U8qMQFmOpure8awD2m/CXy4XzWh6Ew1Ru2t
u2Hm6kes6eISeX23MrClU7UC++7x6MH12R6M5EWWc6+EakLZ6yDSRpuNTINr
jsT79byjV4/ZB5nUZJNaP+ZlUnXlYFHrPHYv6WKPZ9MtkrObaObPX3cwyfX1
Y539fKzqyCtSW86lCMGVHmzBjJxfa1Odu9yU8heSA33AkGfPJPbxALnOjgaF
vZeZ729St8/+ixpKG8AqL4vAgwZD1FW8qNCNt1nFFaxscKPoBNEvd3IaH6yG
0KOFrKiMe9wCcCzbkvAbnznSRCf50qDMzJvlnPuEIFCujciro+7boZNqNENq
bHB5WfZtJ7QW+hF+qVX43IU0jhlM+OWzm2dfC8NzRWHi+fvCX7LZFWjg551X
g7dzt8PZNg3C781qmPGgpKSHN80BBj7q3PDlfAzBt8zWUb+EvSihRMDitMDQ
RiiYpyLk/1P1u6I94yeWqlo1bnP5L/Y+rZ6Mb2hr3libQaJbodvh2rWAjZ8k
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
SEB7CyPOshB+8s5ezoa5inz0L0NoVb0rBFWMG57AOnhtWyUS+Hiy0HEFN68I
NW805lhFp4Hf/6uHBoy5chBV/+nndS1v9EUqug7zWkUfXv2RL5iLHtSKczoa
eiNZeZ+6M1jfkrfX/4d4HmKSbufrNfVGGWwv6PD8x88VCiePnM5HJwxIy3K3
vNGafTCJicC/ipWH7F8qRPtP/abjTSOhNw3UYdzfd6/48M3Uq4VIa2x9lkMr
BBnmSjzpIOKF36Zno0i/85H0mQCn4RwvZPGNsyODOH/MmYBTSPMe4ttcoWk8
6oFULy8Y2RF4xsM3e6fy76F7fYipS+Au8uCYiMNzPKPnqgT3rd5DzQ+Ymi/d
ckMl29fcsL5HmMO/K8qXC9Bn/02FbwtdUIWYODOeY1WccrrM4X4Bqg3YUnXm
pxNyqw4xxP2konydd1rE8xGfyapUo5UzYj3HsUWU+F1axos2JrUFSPKZ+6cW
igO673RxSwKxvlp7xCP9UAFSkYjvMbplhTi+fPu2SuB96OODnoh7aNa/M3hA
xgy9TVwotiTOk1uSe5BtOh9t7lWmq9lliOjWb2o1EvjxU6p/1C7no4ksVV5b
K2X06vi+LmFi34i4Ak3f6jzUQN544aNxGKhvtimEE/glacpjZaNUNJ7weqGX
zgGtHbKj4jk79OJRQR1Xc1HPVSqD3ZIuRG4/dlwDz800cwrat5KFrnEI9azQ
zGBDNurGaeJ+eJs+GWt7Nh3dF1pcqZS0hWu7tfzw/HR5mcLbeeHJKHJ/8JiI
lTNUdYiE1+M6eLm7/9U9JBRJap6w9rsLv78wW2DdBq2QCz8uVgQj0tqvO8oL
PqDXalSH+/of2I60Wwrbw5tvQrsTD7jDBW6+Fz243/9Edw4PyRd4WL1y+e5Z
AI/coz+4L16ESeHFxaxo8JUXqtv5ww3VdfvHYp5kAY/cugpvKBxPijyyd0QD
BgVkDqfhfN3HhHs7mhNB4tVHlh+SZBSll0zGc4HNBeJMvpPjINz/d6qjUACa
ndxehPtNbFUsVnP1ouFxwza6taf6KMnpEKMu3verVrWIRCRcDhIePqEth66q
GJHxXObw/TfawCQenvx8OK59i4zOT37mwHyAW62+b54UxIK10Pojp5VAVPh0
HuE8aul/h8Kko2Jg4LLKWfe/5ohun3MLzjuV/B1uEtOPAcbgJ7YC7dfRzYbw
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
O5MEokWczedxvOUTdWzjdDRKKNp1friDuF+nOGqsd1TlZZ3p/zoOmb1dUlSl
JsaZ2LMP11c6L+5XaLOJQaVPnurQmpLgsLC43m2Cu9DJLUkmhyKGhIlluhNk
+EcVyor1mmZU+4aKS0PR75f5awwfkyDIszcO66KMvSrUo78fipYThPoYUlIg
gH3kPNYPMQsUK+P6FI68lAR5TBYSYbxJ8yHWd/r7Ju5L1oI7OqCFaJsqyNB9
i0UM1z/OPTj2ZOCGJ2rppcyVD0yG5IXrPVj/RFKM/zn1Iy+kEP5e5I12KrSI
0eriunL1mH5VPXt/JOVuLVJJQ7yf05HDE3ieVvfMvY+ooEsf1TreUCeBS9fR
NqzfZVqQlWVaqYMyNatqwgm/kmfi2EvcD3fT/8hZqkdGKJ3efvj0Yiqof5aO
UMR1i9+6c5GDOZwV/JGe75YMu4/L5ZYRXNSyonw91xiUTU7mUMWlwiB/6W58
vr9o0Ay2RnpwtdJ31aQ4HdhKtK/hvpA3+8v4aphtgeXo3SnZ3BQIOZz2BOcb
x8Xnyz+9agsZhaspBYNpsDDgN4P9gr+F0zfHo23hdPf7jnXaTOh5aiCF89KH
bw6ZLIjIQgh9of8DfzI0lwf8xPrVWzv/bJp814alBwHPOp4nA2894sZ6BZbd
TlqP+E1hKnuPUyt7Goz5Wavi537psHWz34A2mJz5t3ejhwwDMt3MWPd1+pLC
YoOJAzKd9xotOZgAz9iU+7mIfSmWlurIhet66AfHoZ8uv8hwnPpwO9a7Xqw/
/OXbxEUkJM/573EICahuu8dgHYY9LGyCEZ6hqCMza1T3WzCQY88qmeM4yZzb
R5UlByRnVpUX4hUJw0OnnuP6VtcWHhraR8Hov3q/VfeD4SDmht5rE1y+wvkT
c2U08lu2pnu3xwvyunz7lQg+SKIuf2edgCYYmbZDZW/BFYfU7/wE/9pYmvMl
NgQtD14yO8Qaieq7Qw+dx/qTnKohXNGEfy31SbFyLgpRrayRcb7EX5/iYU5r
MopdOVNaLW6BJBmUE3G/4EHHR3UH3pBR1kPp+4+u+KNOsFTC+7bsa5ry1XNJ
SP20qwi1bBQiM3Ne0SD4kRbVbFWSHHrs2R9a15+OSmjjnuJ67WD+qTHmGGf0
Ym+L2ZJ2BposY/fE++HAakPBmUeB6OxPgVr+yQw0f8dVC+cDX/jternQLxK5
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
MZeBdX9MLKowkt7Q7alHNT0zrp3EOFNIqDaFy2OR6AolSd63MjROJ2YwQsxn
3OSX2dCSRHR+KIarzqoC9Ty1lMF5UCOSR648KkxFYfd/awapViLVMafMAGL8
ZWOUNmHDGWjfKc51JbEqlOJyV+seHueLqussxD6n47lrRHu4Gi287wr8QIxT
rTGz1UkvDDEeeDdsmFSBWo90zYYT8ksCAiaf6sYjFVGlSsPRXGTPoCJaQuyL
vXfTOk5vpyBOI4P4Kbt8lGn2wPQ/zOsbRy8hr5WJBstS5pR2C9CSYUwUrnc4
KsF8feVoDnK64k1Tn1uEcsUE6nHfgQJdF6GeH3HoPTddXOBOLqI+1dGB8yVO
npDgULoXgyiuHJNvMytG1i9OjdUTcq51Mj5pt0xAii+6AvLXU9EeiqQEHIdU
EBnWNd+XjhLoD1KJ6Wcg7VrjLHz/6LA9oHnSIBaVkZtz63BkIo8wXXacb5nK
O0NhHheNBD99o7F3jEZJ3qnBOG+wuNmT0lYxCuVdnzR89D4BjY9dcGQm8GN3
97gqd/ogk1uuikqmgahFRPVnF4G7MLR6JkcGIm/+l4c8L0UggcV2+lycr2tf
FRxHb4RYiqPXPpB5op5/F+pxfyKl2LNaV6ZNUbAft9XnQE9kFntw5QOBX9Nu
Hz7JqICSnJVEXALcEeetmaM477fR2yrxNw1C+XzhY9ZMrujwg/cZOK/40dfs
H3OTp9GHtj/GbrSO6O60MCf2oxKYDtyOEZYDHh2VXFUFW/SUykYO51esf9cs
TwwyBkkpGeE/GTao6JF/MPbT6F3tr13aZwIXTh5jz/hjiwpJLPywnPdOOrSr
jfaoVbbsV425Grr36kQMxvvSKyq7dqyRWbG9ftuQJWrzLPyJ/TT9Kxwx3QNm
IHKDvH5a3w60Nr22NrEfuFFo1dt/FY5ezrxhRWYOs84qmvh5lT0WoT6xjnAm
WWl/g7MXKupOKMX8Ksanj9wrOO0Fm7yDB5L1gtHxZO8KPM+B2znNU59sodbB
Wq1DxR/1FUfL4fpKDj9Nsr8HHOG/rOBTj6Iikc3cSDiO994JsXvxKeUqSB5Y
WxgIjEapXJprhdi//fkgNdLRFUh7mFesOePQusQVLlwn1R1p5drS7Aqy4aGG
F+LiUWfi7rI9gedxGPd9f+0JMqnVLaTnktFN49P9OM7MO5we3NB7FT7tveHz
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
R5XNz4Zq9SBCpzod9/M/FQWwlw==
     "]], 
   {RGBColor[0.3315753, 0.4561011, 0.6388182], PointSize[0.0075], 
    Point3DBox[CompressedData["
1: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
g8IRslr8kP//AM7jTcY=
     "]]}},
  AspectRatio->1,
  Axes->None,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  Boxed->False,
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageMargins->{{281., 281.}, {6., 0.}},
  ImageSize->550,
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-6, 5}, {-6, 5}, All},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-3.799835250436561, 2.353170965270043, 0.8735257751941138},
  ViewVertical->{0., 0., 1.}]], "Text",
 CellChangeTimes->{
  3.72779292850991*^9, 3.730589271854888*^9, {3.735569915002151*^9, 
   3.735569920326988*^9}, 
   3.738510136465407*^9},ExpressionUUID->"ae48f60e-1e25-4ecb-b345-\
39e7e3fea692"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
/w/qQILY
    "], {{0, 100}, {450, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{250.08984375, Automatic},
  ImageSizeRaw->{450, 100},
  PlotRange->{{0, 450}, {0, 100}}]], "WolframULogo",ExpressionUUID->"6449e467-\
a376-40cc-9cce-4930ea4aeb69"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"fc96e66c-467d-4859-b563-1aa5d0e6d5a3"],

Cell[CellGroupData[{

Cell["Learning Objectives", "Section",
 CellChangeTimes->{{3.71994775976054*^9, 3.7199477622405987`*^9}, {
   3.720191968879251*^9, 3.720191974055264*^9}, {3.720894915481367*^9, 
   3.72089491754312*^9}, {3.720897534619431*^9, 3.72089753512813*^9}, 
   3.7269459274619637`*^9, {3.727461147456134*^9, 
   3.727461151826571*^9}},ExpressionUUID->"de85c62e-50a3-40fb-b1af-\
0adef5f1b80d"],

Cell[CellGroupData[{

Cell["Statistical Distributions and Properties", "Subsection",
 CellChangeTimes->{{3.692632836328558*^9, 3.6926328485446014`*^9}, {
  3.69377504459628*^9, 3.693775081196045*^9}, {3.6984102710444937`*^9, 
  3.698410278770835*^9}, {3.701112723902215*^9, 
  3.7011127377568007`*^9}},ExpressionUUID->"1c342a4c-2c04-42e0-8e87-\
3f2e30ca19c3"],

Cell["\<\
This section will be an overview of the distribution-related functions in the \
Wolfram Language\[Trademark] for the following:\
\>", "Text",
 CellChangeTimes->{{3.6926329421204023`*^9, 3.692633016629648*^9}, {
   3.692633110138451*^9, 3.69263314299903*^9}, {3.6926332154511023`*^9, 
   3.6926332994578257`*^9}, {3.6926333609576383`*^9, 
   3.6926334530836577`*^9}, {3.693775088874196*^9, 3.6937750916227784`*^9}, {
   3.698410283506276*^9, 3.69841032073713*^9}, {3.7011127407968206`*^9, 
   3.7011128298599806`*^9}, 3.701780061741167*^9, {3.7111011299970713`*^9, 
   3.711101133523342*^9}, {3.714922733278976*^9, 
   3.714922767843892*^9}},ExpressionUUID->"9396d793-86e1-4807-99d0-\
6f1e13c1159e"],

Cell[CellGroupData[{

Cell["Distributions: types, properties, simulation", "Item",
 CellChangeTimes->{{3.688381240743415*^9, 3.688381241570215*^9}, {
  3.693775104763894*^9, 3.6937751067334814`*^9}, {3.701112860714531*^9, 
  3.701112923234913*^9}, {3.7017800408833933`*^9, 
  3.7017800460988674`*^9}},ExpressionUUID->"43a4175b-ff09-4107-9baa-\
f35ad8c8309b"],

Cell["Descriptive statistics (including robust estimators)", "Item",
 CellChangeTimes->{{3.688333112095577*^9, 3.6883331336209764`*^9}, {
   3.688380653155815*^9, 3.688380656353815*^9}, {3.688470486798664*^9, 
   3.6884704915044017`*^9}, {3.6937750715941067`*^9, 3.693775097351942*^9}, {
   3.7011128328438306`*^9, 3.7011128718027563`*^9}, 
   3.7017800492505913`*^9},ExpressionUUID->"44885ab7-cc3c-4db0-b16c-\
27cddd3f2c6e"],

Cell["Data fitting to distributions and hypothesis testing", "Item",
 CellChangeTimes->{{3.6883811932318153`*^9, 3.688381193983615*^9}, {
  3.688381502148015*^9, 3.688381515209215*^9}, {3.688472200291486*^9, 
  3.6884722122575326`*^9}, {3.6937750992707295`*^9, 3.69377510229711*^9}, {
  3.7011128539386187`*^9, 3.701112857514968*^9}, {3.7011129357380037`*^9, 
  3.701112974561736*^9}, {3.7017800533399086`*^9, 
  3.7017800554437346`*^9}},ExpressionUUID->"56d937ca-7093-4f33-8d02-\
4e4998e311f6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Regression Models", "Subsection",
 CellChangeTimes->{{3.6926328595298605`*^9, 3.6926328612980385`*^9}, {
   3.693775328392662*^9, 3.693775331015445*^9}, {3.7008459900765705`*^9, 
   3.7008459987904773`*^9}, 
   3.7011903872231417`*^9},ExpressionUUID->"bae11d0f-ee8f-42ff-8bcf-\
b74a348cae35"],

Cell["\<\
We will briefly describe the various regression models in the Wolfram Language\
\>", "Text",
 CellChangeTimes->{{3.6926330290082893`*^9, 3.6926330592519026`*^9}, {
   3.6926331674539165`*^9, 3.6926332116447506`*^9}, {3.692633482454481*^9, 
   3.69263350519979*^9}, 3.693775351169916*^9, {3.701112978320898*^9, 
   3.7011130101048117`*^9}, {3.7021385842222705`*^9, 
   3.7021386112532706`*^9}},ExpressionUUID->"af0ff5b4-6b01-4c6a-a093-\
ae38be68cff6"],

Cell[CellGroupData[{

Cell["Linear Regression", "Item",
 CellChangeTimes->{
  3.688381454341015*^9, {3.6883815657430153`*^9, 3.688381638481015*^9}, 
   3.6884085610410833`*^9, 3.6937753414773784`*^9, {3.7011130129044256`*^9, 
   3.7011130146729336`*^9}, {3.701113050512274*^9, 
   3.7011130517846713`*^9}},ExpressionUUID->"b5275449-d419-4f98-a920-\
b038bb4bb18b"],

Cell["Nonlinear Regression", "Item",
 CellChangeTimes->{{3.692640528320154*^9, 3.6926405321959047`*^9}, 
   3.693775342647371*^9, {3.701113017936597*^9, 
   3.7011130558885403`*^9}},ExpressionUUID->"ebbeb8a1-4309-44f5-a7ed-\
08845f9e2a43"],

Cell["Poisson Regression", "Item",
 CellChangeTimes->{{3.692640528320154*^9, 3.6926405321959047`*^9}, 
   3.693775342647371*^9, {3.701113017936597*^9, 
   3.7011130480487843`*^9}},ExpressionUUID->"798b268f-cda7-438f-be25-\
b9cec1ced1de"],

Cell["Logistic Regression", "Item",
 CellChangeTimes->{{3.692640528320154*^9, 3.6926405321959047`*^9}, 
   3.693775342647371*^9, {3.701113017936597*^9, 
   3.7011130642878933`*^9}},ExpressionUUID->"06565d66-3bc7-4d27-959f-\
d7618d941f0f"],

Cell["Link functions", "Item",
 CellChangeTimes->{{3.692640528320154*^9, 3.6926405321959047`*^9}, 
   3.693775342647371*^9, {3.701113017936597*^9, 3.7011130300641546`*^9}, {
   3.701113070927517*^9, 
   3.70111307533698*^9}},ExpressionUUID->"21f110af-7fd6-4e66-b159-\
e4f0d853895f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Time Series Models", "Subsection",
 CellChangeTimes->{{3.6926328595298605`*^9, 3.6926328612980385`*^9}, {
  3.693775328392662*^9, 3.693775331015445*^9}, {3.7008459900765705`*^9, 
  3.7008459987904773`*^9}, {3.7011130920642824`*^9, 
  3.701113100055436*^9}},ExpressionUUID->"8a53264d-0790-4e88-b768-\
b83a2a529c7a"],

Cell["\<\
Next we will briefly describe the various time series models and use it to \
make forecasts using the following data\
\>", "Text",
 CellChangeTimes->{{3.6926405710422077`*^9, 3.6926406031615973`*^9}, 
   3.6937753536201005`*^9, {3.7011130777844915`*^9, 3.7011131037201395`*^9}, {
   3.701113289117835*^9, 3.701113309429593*^9}, {3.7011133474442916`*^9, 
   3.701113369555894*^9}, {3.701780069173744*^9, 
   3.7017800764549026`*^9}},ExpressionUUID->"f2358c61-fbc3-451a-b98b-\
15bceac851c3"],

Cell[CellGroupData[{

Cell["Airline passenger data", "Item",
 CellChangeTimes->{
  3.6883812447058153`*^9, {3.688381289377015*^9, 3.688381332666415*^9}, 
   3.6937753437393637`*^9, {3.701113312380582*^9, 3.7011133271574926`*^9}, {
   3.7017800188333764`*^9, 
   3.701780021871786*^9}},ExpressionUUID->"7010f8db-250c-4794-8f4c-\
24368148a986"],

Cell["Temperature data at your current location ", "Item",
 CellChangeTimes->{
  3.6883812447058153`*^9, {3.688381289377015*^9, 3.688381332666415*^9}, 
   3.6937753437393637`*^9, {3.701113312380582*^9, 3.7011133801407185`*^9}, {
   3.701780026193751*^9, 
   3.701780026640964*^9}},ExpressionUUID->"908986c7-31e4-47a6-aaba-\
3a84a434f002"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"3cd59e09-9b3a-4620-a825-6c649084f5e5"],

Cell[CellGroupData[{

Cell["Introduction to Statistical Functions", "Section",
 CellChangeTimes->{{3.7008478228075123`*^9, 3.700847838734667*^9}, {
  3.7008479646365323`*^9, 3.700847971813517*^9}, {3.700910497896631*^9, 
  3.70091051216129*^9}},ExpressionUUID->"c7b79bbc-4067-4794-8ed9-\
7db47d923326"],

Cell[CellGroupData[{

Cell["Descriptive Statistics and Robust Estimators", "Subsection",
 CellChangeTimes->{
  3.702143393356271*^9},ExpressionUUID->"e318702f-9833-4142-aadc-\
b8bb3722ff74"],

Cell[TextData[{
 "The Wolfram Language\[CloseCurlyQuote]s descriptive statistics functions \
(shown in smaller fonts) operate both on explicit data and on symbolic \
representations of statistical distributions. When operating on explicit \
data, the functions routinely handle huge datasets, which can contain not \
only numbers but also symbolic elements representing, for example, \
parametrized or unknown data. ",
 StyleBox["The Wolfram Language provides a variety of robust estimators (less \
affected by outliers, shown here in larger fonts) for different applications, \
including location, dispersion and shape characterization. They are useful in \
outlier detection and parametric estimation",
  CellDingbat->Cell["hkao      ", "TentativeID"]],
 ". "
}], "Text",
 CellChangeTimes->{{3.7009102399902983`*^9, 
  3.7009103471964903`*^9}},ExpressionUUID->"61d88baf-f6e2-4aed-bcd1-\
54de3d4a5416"],

Cell[BoxData[
 GraphicsBox[{
   TagBox[InsetBox[
     StyleBox["\<\"BiweightMidvariance\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.03287928604978863],
      FontColor->RGBColor[1, 0.75, 0]], {0, 0}, Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 51]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"FindDistributionParameters\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.03287928604978863],
      FontColor->RGBColor[0.915, 0.3325, 0.2125]], {0., 58.5}, Center, 
     Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 54]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"BiweightLocation\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.03287928604978863],
      FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {2., -58.5}, Center,
      Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 43]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"EstimatedDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.03287928604978863],
      FontColor->RGBColor[0.571589, 0.586483, 0.]], {0., 116.5}, Center, 
     Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 53]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"InterquartileRange\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.02959135744480977],
      FontColor->RGBColor[
       0.6753413537738198, 0.3589675436319385, 0.5991466155654507]], {0., -115.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          Part[{
           AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, CentralMoment, 
            CharacteristicFunction, ContraharmonicMean, Correlation, 
            Covariance, Cumulant, Entropy, EventData, EventSeries, 
            Expectation, FactorialMoment, GeometricMean, GoodmanKruskalGamma, 
            HarmonicMean, HoeffdingD, InverseCDF, KendallTau, Kurtosis, Mean, 
            MeanDeviation, Moment, PDF, PillaiTrace, Probability, Skewness, 
            SpearmanRho, StandardDeviation, TemporalData, TimeSeries, 
            Variance, WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 47]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"QuartileSkewness\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.03287928604978863],
      FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {-393., -167.5}, 
     Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 52]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"QnDispersion\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.03287928604978863],
      FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {-478., -43.5}, 
     Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 49]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"SnDispersion\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.03287928604978863],
      FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {480., -58.5}, 
     Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 50]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"TakeLargest\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.03287928604978863],
      FontColor->RGBColor[
       0.838355547812947, 0.44746667828057946`, 0.0208888695323676]], {454., -116.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 64]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"WinsorizedMean\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.03287928604978863],
      FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {-524., -101.5}, 
     Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 40]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"MedianDeviation\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.03287928604978863],
      FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {518., 161.5}, 
     Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 46]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"WinsorizedVariance\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.02959135744480977],
      FontColor->RGBColor[
       0.9324333565611593, 0.5282889043741062, 0.0921900209050434]], {211., -170.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 45]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"SpatialMedian\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.02959135744480977],
      FontColor->RGBColor[0.8996399512215667, 0.7463488834690629, 0.]], {-533., 114.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 41]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"QuartileDeviation\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.02959135744480977],
      FontColor->RGBColor[0.5407932311309059, 0.715, 0.09762679674248334]], {569., 0.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 48]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"TrimmedMean\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.03287928604978863],
      FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {631., 101.5}, 
     Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 39]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"TrimmedVariance\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.02959135744480977],
      FontColor->RGBColor[
       0.28240003484173815`, 0.6090799721266095, 0.7538800418100857]], {-322., 171.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 44]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"CentralFeature\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.02959135744480977],
      FontColor->RGBColor[
       0.8439466852489265, 0.3467106629502147, 0.3309221912517893]], {-544., 12.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 42]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"Ordering\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.03287928604978863],
      FontColor->RGBColor[0.736782672705901, 0.358, 0.5030266573755369]], {793., -116.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 59]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"TakeSmallest\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.02959135744480977],
      FontColor->RGBColor[
       0.8613800418100862, 0.48092002787339083`, 0.02824203762907758]], {-767., 168.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 65]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"RankedMin\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.03287928604978863],
      FontColor->RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]], {734., -176.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 60]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"Commonest\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.02959135744480977],
      FontColor->RGBColor[
       0.5833680111493557, 0.4126186601628758, 0.8290799721266107]], {-848., -200.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 38]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"RankedMax\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.02959135744480977],
      FontColor->RGBColor[
       0.9874666782805795, 0.6948333914028977, 0.033839968642435214`]], {860., -52.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 61]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"GoodmanKruskalGamma\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.01972757162987318],
      FontColor->RGBColor[
       0.9637822400302223, 0.5764112001511111, 0.0977879519184]], {31., 209.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 17]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"CharacteristicFunction\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.01972757162987318],
      FontColor->RGBColor[
       0.6184987019729621, 0.39212575718243875`, 0.7412532450675947]], {0., -215.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 6]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"Quartiles\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.02959135744480977],
      FontColor->RGBColor[
       0.16397784358994957`, 0.7038177251280403, 0.6117734123079395]], {-824., -29.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 63]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"Quantile\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.02959135744480977],
      FontColor->RGBColor[0.7748409210981391, 0.358, 0.4444755060028629]], {-818., 66.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 62]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"Median\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.03287928604978863],
      FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {-817., -152.5}, 
     Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 37]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"StandardDeviation\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.01972757162987318],
      FontColor->RGBColor[0.9810598048862722, 0.7553955338762525, 0.]], {-387., 216.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 31]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"MinMax\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.02959135744480977],
      FontColor->RGBColor[
       0.47401116530937026`, 0.47809330081437784`, 0.85]], {814., 203.5}, 
     Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 57]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"HoeffdingD\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.01972757162987318],
      FontColor->RGBColor[0.37977756485605163`, 0.715, 0.3025558265468435]], {110., 164.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 19]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"ContraharmonicMean\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.016439643024894316`],
      FontColor->RGBColor[
       0.9038177251280404, 0.3492734123079395, 0.18454431282010084`]], {-379., -212.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 7]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"HarmonicMean\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.01972757162987318],
      FontColor->RGBColor[0.7132613816472081, 0.358, 0.5392132590042952]], {357., -215.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 18]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"MeanDeviation\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.01972757162987318],
      FontColor->RGBColor[0.5472001045252132, 0.43417993728487203`, 0.85]], {416., 209.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 24]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"WeightedData\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.016439643024894316`],
      FontColor->RGBColor[
       0.6319174318193065, 0.38429816477207124`, 0.7077064204517338]], {-539., 60.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 35]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"SpearmanRho\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.016439643024894316`],
      FontColor->RGBColor[
       0.9930578157165594, 0.7227890785827968, 0.01874389756528967]], {542., 47.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 30]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"AbsoluteCorrelation\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.016439643024894316`],
      FontColor->RGBColor[
       0.8168067340273636, 0.3521386531945273, 0.3761554432877274]], {656., -221.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 1]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"BlomqvistBeta\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.016439643024894316`],
      FontColor->RGBColor[
       0.9052934053395919, 0.510195603559728, 0.06776406480563275]], {-682., 213.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 3]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"TemporalData\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.016439643024894316`],
      FontColor->RGBColor[
       0.7896667828057927, 0.3575666434388414, 0.4213886953236787]], {759., 49.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 32]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"FactorialMoment\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.016439643024894316`],
      FontColor->RGBColor[
       0.8342400905885153, 0.4628267270590103, 0.0038160815296638794`]], {-868., 109.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 15]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"Sort\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.03287928604978863],
      FontColor->RGBColor[
       0.9728288904374106, 0.621644452187053, 0.07336199581899142]], {-860., -89.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 58]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"Covariance\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.01972757162987318],
      FontColor->RGBColor[
       0.8878600487784333, 0.33792799024431336`, 0.2577332520359445]], {-869., 16.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 9]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"Max\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.03287928604978863],
      FontColor->RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]], {847., 146.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 56]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"GeometricMean\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.016439643024894316`],
      FontColor->RGBColor[
       0.596786740995709, 0.404791067752503, 0.7955331475107271]], {-918., 211.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 16]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"Expectation\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.016439643024894316`],
      FontColor->RGBColor[0.2187618985811806, 0.715, 0.5074848563512248]], {905., 0.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 14]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"Correlation\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.01972757162987318],
      FontColor->RGBColor[0.7678998606330495, 0.7317110956258943, 0.]], {914., -222.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 8]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"CentralMoment\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.016439643024894316`],
      FontColor->RGBColor[0.6361597700445392, 0.7170733077827265, 0.]], {0., 243.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 5]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"Entropy\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.01972757162987318],
      FontColor->RGBColor[
       0.35558897405758294`, 0.5505288207539337, 0.8417067688690995]], {-537., -241.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 11]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"Probability\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.016439643024894316`],
      FontColor->RGBColor[
       0.8745421494417032, 0.39318677583744527`, 0.11135537360425793`]], {257., 243.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 28]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"EventSeries\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.016439643024894316`],
      FontColor->RGBColor[0.7513196300394465, 0.358, 0.48066210763162087`]], {0., -250.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 13]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"InverseCDF\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.016439643024894316`],
      FontColor->RGBColor[0.8493197142977551, 0.7407577460330839, 0.]], {-190., -250.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 20]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"Kurtosis\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.01972757162987318],
      FontColor->RGBColor[
       0.8564488486273256, 0.42032672705901153`, 0.06612212156831418]], {-364., -247.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 22]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"TimeSeries\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.016439643024894316`],
      FontColor->RGBColor[
       0.19193353076984873`, 0.681453175384121, 0.6453202369238185]], {186., -250.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 33]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"KendallTau\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.016439643024894316`],
      FontColor->RGBColor[
       0.8607200975568693, 0.34335598048862614`, 0.30296650407188447`]], {-209., 250.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 21]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"Min\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.02959135744480977],
      FontColor->RGBColor[
       0.8857244243136628, 0.3764133635295058, 0.1393110607841571]], {613., 216.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 55]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"EventData\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.016439643024894316`],
      FontColor->RGBColor[
       0.9784200278733908, 0.649600139366954, 0.058265924741844846`]], {359., -250.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 12]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"BinCounts\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.016439643024894316`],
      FontColor->RGBColor[
       0.23716678280579248`, 0.645266573755366, 0.699600139366951]], {-380., 250.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 2]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"Skewness\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.016439643024894316`],
      FontColor->RGBColor[0.5019668524892619, 0.46131988850644284`, 0.85]], {424., 243.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 29]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"PillaiTrace\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.016439643024894316`],
      FontColor->RGBColor[0.47929071933511125`, 0.715, 0.1759027208462221]], {-545., 250.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 27]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"Cumulant\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.016439643024894316`],
      FontColor->RGBColor[0.428777913273419, 0.5052332520359486, 0.85]], {-690., -243.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 10]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"Variance\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.016439643024894316`],
      FontColor->RGBColor[
       0.8781534541180211, 0.4921023027453475, 0.04333810870621905]], {697., 249.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 34]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"Moment\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.016439643024894316`],
      FontColor->RGBColor[
       0.9492067688690977, 0.5394711792460651, 0.10728609198218791`]], {-694., 244.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 25]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"WilksW\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.016439643024894316`],
      FontColor->RGBColor[0.7175796237092107, 0.7261199581899123, 0.]], {-825., 244.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 36]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"Mean\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.016439643024894316`],
      FontColor->RGBColor[
       0.3103557220216354, 0.5867154223826917, 0.7874268664259625]], {488., -250.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 23]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"CDF\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.016439643024894316`],
      FontColor->RGBColor[
       0.6536293927965667, 0.37163285420200276`, 0.6534265180085832]], {373., 90.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 4]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"PDF\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.016439643024894316`],
      FontColor->RGBColor[0.6897400905885174, 0.358, 0.5753998606330502]], {-807., -243.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{AbsoluteCorrelation, BinCounts, BlomqvistBeta, CDF, 
            CentralMoment, CharacteristicFunction, ContraharmonicMean, 
            Correlation, Covariance, Cumulant, Entropy, EventData, 
            EventSeries, Expectation, FactorialMoment, GeometricMean, 
            GoodmanKruskalGamma, HarmonicMean, HoeffdingD, InverseCDF, 
            KendallTau, Kurtosis, Mean, MeanDeviation, Moment, PDF, 
            PillaiTrace, Probability, Skewness, SpearmanRho, 
            StandardDeviation, TemporalData, TimeSeries, Variance, 
            WeightedData, WilksW, Median, Commonest, TrimmedMean, 
            WinsorizedMean, SpatialMedian, CentralFeature, BiweightLocation, 
            TrimmedVariance, WinsorizedVariance, MedianDeviation, 
            InterquartileRange, QuartileDeviation, QnDispersion, SnDispersion,
             BiweightMidvariance, QuartileSkewness, EstimatedDistribution, 
            FindDistributionParameters, Min, Max, MinMax, Sort, Ordering, 
            RankedMin, RankedMax, Quantile, Quartiles, TakeLargest, 
            TakeSmallest}, 26]]]], Method -> "Preemptive", PassEventsDown -> 
      Automatic, PassEventsUp -> True}]]},
  DefaultBaseStyle->{"Graphics", FontFamily -> "Helvetica"},
  ImageSize->Full,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
  PlotRange->{{-1064.5, 1064.5}, {-269., 269.}}]], "Output",
 GeneratedCell->False,
 CellChangeTimes->{
  3.700909548388214*^9},ExpressionUUID->"71b02a66-b2ba-4ba6-84b0-\
a9c966683cbe"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Hypothesis Testing", "Subsection",
 CellChangeTimes->{{3.7009103536264734`*^9, 
  3.7009103581945667`*^9}},ExpressionUUID->"d1be2708-d925-4004-9b01-\
71b6d6065ef6"],

Cell["\<\
Hypothesis tests give quantitative answers to common questions, such as how \
good the fit is between data and a particular distribution, whether these \
distributions have the same mean or median, and whether these datasets have \
the same variability. The Wolfram Language provides high-level functions for \
these types of questions and will automatically select the tests applicable \
for the data and distributions given. \
\>", "Text",
 CellChangeTimes->{
  3.700910450513461*^9},ExpressionUUID->"454d405e-dce7-4845-afc6-\
6b4560e1e759"],

Cell[BoxData[
 GraphicsBox[{
   TagBox[InsetBox[
     StyleBox["\<\"VarianceEquivalenceTest\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.032603632976245925`],
      FontColor->RGBColor[1, 0.75, 0]], {0, 0}, Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
            BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
            KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
            MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
            ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
            LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
            PairedZTest, SignTest, SignedRankTest, TTest, ZTest, VarianceTest,
             VarianceEquivalenceTest, ConoverTest, BrownForsytheTest, 
            FisherRatioTest, LeveneTest, SiegelTukeyTest, IndependenceTest, 
            CorrelationTest, PearsonCorrelationTest, SpearmanRankTest, 
            KendallTauTest, HoeffdingDTest, GoodmanKruskalGammaTest, 
            BlomqvistBetaTest, WilksWTest, PillaiTraceTest, UnitRootTest, 
            AutocorrelationTest, HypothesisTestData, SignificanceLevel, 
            AlternativeHypothesis, VerifyTestAssumptions}, 25]]]], Method -> 
      "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"PearsonChiSquareTest\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.032603632976245925`],
      FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {0., 58.}, Center, 
     Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
            BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
            KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
            MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
            ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
            LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
            PairedZTest, SignTest, SignedRankTest, TTest, ZTest, VarianceTest,
             VarianceEquivalenceTest, ConoverTest, BrownForsytheTest, 
            FisherRatioTest, LeveneTest, SiegelTukeyTest, IndependenceTest, 
            CorrelationTest, PearsonCorrelationTest, SpearmanRankTest, 
            KendallTauTest, HoeffdingDTest, GoodmanKruskalGammaTest, 
            BlomqvistBetaTest, WilksWTest, PillaiTraceTest, UnitRootTest, 
            AutocorrelationTest, HypothesisTestData, SignificanceLevel, 
            AlternativeHypothesis, VerifyTestAssumptions}, 12]]]], Method -> 
      "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"AlternativeHypothesis\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.032603632976245925`],
      FontColor->RGBColor[0.915, 0.3325, 0.2125]], {0., -58.}, Center, 
     Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
            BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
            KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
            MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
            ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
            LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
            PairedZTest, SignTest, SignedRankTest, TTest, ZTest, VarianceTest,
             VarianceEquivalenceTest, ConoverTest, BrownForsytheTest, 
            FisherRatioTest, LeveneTest, SiegelTukeyTest, IndependenceTest, 
            CorrelationTest, PearsonCorrelationTest, SpearmanRankTest, 
            KendallTauTest, HoeffdingDTest, GoodmanKruskalGammaTest, 
            BlomqvistBetaTest, WilksWTest, PillaiTraceTest, UnitRootTest, 
            AutocorrelationTest, HypothesisTestData, SignificanceLevel, 
            AlternativeHypothesis, VerifyTestAssumptions}, 45]]]], Method -> 
      "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"KolmogorovSmirnovTest\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.028528178854215186`],
      FontColor->RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]], {0., 114.},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
            BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
            KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
            MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
            ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
            LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
            PairedZTest, SignTest, SignedRankTest, TTest, ZTest, VarianceTest,
             VarianceEquivalenceTest, ConoverTest, BrownForsytheTest, 
            FisherRatioTest, LeveneTest, SiegelTukeyTest, IndependenceTest, 
            CorrelationTest, PearsonCorrelationTest, SpearmanRankTest, 
            KendallTauTest, HoeffdingDTest, GoodmanKruskalGammaTest, 
            BlomqvistBetaTest, WilksWTest, PillaiTraceTest, UnitRootTest, 
            AutocorrelationTest, HypothesisTestData, SignificanceLevel, 
            AlternativeHypothesis, VerifyTestAssumptions}, 7]]]], Method -> 
      "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"MannWhitneyTest\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.032603632976245925`],
      FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {0., -117.}, Center,
      Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
            BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
            KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
            MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
            ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
            LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
            PairedZTest, SignTest, SignedRankTest, TTest, ZTest, VarianceTest,
             VarianceEquivalenceTest, ConoverTest, BrownForsytheTest, 
            FisherRatioTest, LeveneTest, SiegelTukeyTest, IndependenceTest, 
            CorrelationTest, PearsonCorrelationTest, SpearmanRankTest, 
            KendallTauTest, HoeffdingDTest, GoodmanKruskalGammaTest, 
            BlomqvistBetaTest, WilksWTest, PillaiTraceTest, UnitRootTest, 
            AutocorrelationTest, HypothesisTestData, SignificanceLevel, 
            AlternativeHypothesis, VerifyTestAssumptions}, 17]]]], Method -> 
      "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"GoodmanKruskalGammaTest\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.028528178854215186`],
      FontColor->RGBColor[
       0.5833680111493557, 0.4126186601628758, 0.8290799721266107]], {0., 165.},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
            BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
            KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
            MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
            ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
            LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
            PairedZTest, SignTest, SignedRankTest, TTest, ZTest, VarianceTest,
             VarianceEquivalenceTest, ConoverTest, BrownForsytheTest, 
            FisherRatioTest, LeveneTest, SiegelTukeyTest, IndependenceTest, 
            CorrelationTest, PearsonCorrelationTest, SpearmanRankTest, 
            KendallTauTest, HoeffdingDTest, GoodmanKruskalGammaTest, 
            BlomqvistBetaTest, WilksWTest, PillaiTraceTest, UnitRootTest, 
            AutocorrelationTest, HypothesisTestData, SignificanceLevel, 
            AlternativeHypothesis, VerifyTestAssumptions}, 37]]]], Method -> 
      "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"SiegelTukeyTest\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.032603632976245925`],
      FontColor->RGBColor[0.571589, 0.586483, 0.]], {-550., -114.}, Center, 
     Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
            BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
            KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
            MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
            ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
            LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
            PairedZTest, SignTest, SignedRankTest, TTest, ZTest, VarianceTest,
             VarianceEquivalenceTest, ConoverTest, BrownForsytheTest, 
            FisherRatioTest, LeveneTest, SiegelTukeyTest, IndependenceTest, 
            CorrelationTest, PearsonCorrelationTest, SpearmanRankTest, 
            KendallTauTest, HoeffdingDTest, GoodmanKruskalGammaTest, 
            BlomqvistBetaTest, WilksWTest, PillaiTraceTest, UnitRootTest, 
            AutocorrelationTest, HypothesisTestData, SignificanceLevel, 
            AlternativeHypothesis, VerifyTestAssumptions}, 30]]]], Method -> 
      "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"CramerVonMisesTest\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.032603632976245925`],
      FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {629., -117.}, 
     Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
            BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
            KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
            MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
            ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
            LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
            PairedZTest, SignTest, SignedRankTest, TTest, ZTest, VarianceTest,
             VarianceEquivalenceTest, ConoverTest, BrownForsytheTest, 
            FisherRatioTest, LeveneTest, SiegelTukeyTest, IndependenceTest, 
            CorrelationTest, PearsonCorrelationTest, SpearmanRankTest, 
            KendallTauTest, HoeffdingDTest, GoodmanKruskalGammaTest, 
            BlomqvistBetaTest, WilksWTest, PillaiTraceTest, UnitRootTest, 
            AutocorrelationTest, HypothesisTestData, SignificanceLevel, 
            AlternativeHypothesis, VerifyTestAssumptions}, 5]]]], Method -> 
      "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"WatsonUSquareTest\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.028528178854215186`],
      FontColor->RGBColor[
       0.9728288904374106, 0.621644452187053, 0.07336199581899142]], {642., 109.},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
            BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
            KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
            MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
            ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
            LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
            PairedZTest, SignTest, SignedRankTest, TTest, ZTest, VarianceTest,
             VarianceEquivalenceTest, ConoverTest, BrownForsytheTest, 
            FisherRatioTest, LeveneTest, SiegelTukeyTest, IndependenceTest, 
            CorrelationTest, PearsonCorrelationTest, SpearmanRankTest, 
            KendallTauTest, HoeffdingDTest, GoodmanKruskalGammaTest, 
            BlomqvistBetaTest, WilksWTest, PillaiTraceTest, UnitRootTest, 
            AutocorrelationTest, HypothesisTestData, SignificanceLevel, 
            AlternativeHypothesis, VerifyTestAssumptions}, 14]]]], Method -> 
      "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"MardiaCombinedTest\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.032603632976245925`],
      FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {-222., -175.}, 
     Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
            BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
            KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
            MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
            ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
            LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
            PairedZTest, SignTest, SignedRankTest, TTest, ZTest, VarianceTest,
             VarianceEquivalenceTest, ConoverTest, BrownForsytheTest, 
            FisherRatioTest, LeveneTest, SiegelTukeyTest, IndependenceTest, 
            CorrelationTest, PearsonCorrelationTest, SpearmanRankTest, 
            KendallTauTest, HoeffdingDTest, GoodmanKruskalGammaTest, 
            BlomqvistBetaTest, WilksWTest, PillaiTraceTest, UnitRootTest, 
            AutocorrelationTest, HypothesisTestData, SignificanceLevel, 
            AlternativeHypothesis, VerifyTestAssumptions}, 9]]]], Method -> 
      "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"LocationEquivalenceTest\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.024452724732184444`],
      FontColor->RGBColor[
       0.6753413537738198, 0.3589675436319385, 0.5991466155654507]], {432., -173.},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
            BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
            KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
            MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
            ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
            LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
            PairedZTest, SignTest, SignedRankTest, TTest, ZTest, VarianceTest,
             VarianceEquivalenceTest, ConoverTest, BrownForsytheTest, 
            FisherRatioTest, LeveneTest, SiegelTukeyTest, IndependenceTest, 
            CorrelationTest, PearsonCorrelationTest, SpearmanRankTest, 
            KendallTauTest, HoeffdingDTest, GoodmanKruskalGammaTest, 
            BlomqvistBetaTest, WilksWTest, PillaiTraceTest, UnitRootTest, 
            AutocorrelationTest, HypothesisTestData, SignificanceLevel, 
            AlternativeHypothesis, VerifyTestAssumptions}, 16]]]], Method -> 
      "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"LogRankTest\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.032603632976245925`],
      FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {-579., 58.}, 
     Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
            BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
            KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
            MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
            ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
            LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
            PairedZTest, SignTest, SignedRankTest, TTest, ZTest, VarianceTest,
             VarianceEquivalenceTest, ConoverTest, BrownForsytheTest, 
            FisherRatioTest, LeveneTest, SiegelTukeyTest, IndependenceTest, 
            CorrelationTest, PearsonCorrelationTest, SpearmanRankTest, 
            KendallTauTest, HoeffdingDTest, GoodmanKruskalGammaTest, 
            BlomqvistBetaTest, WilksWTest, PillaiTraceTest, UnitRootTest, 
            AutocorrelationTest, HypothesisTestData, SignificanceLevel, 
            AlternativeHypothesis, VerifyTestAssumptions}, 2]]]], Method -> 
      "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"AndersonDarlingTest\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.024452724732184444`],
      FontColor->RGBColor[
       0.8439466852489265, 0.3467106629502147, 0.3309221912517893]], {-594., -51.},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
            BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
            KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
            MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
            ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
            LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
            PairedZTest, SignTest, SignedRankTest, TTest, ZTest, VarianceTest,
             VarianceEquivalenceTest, ConoverTest, BrownForsytheTest, 
            FisherRatioTest, LeveneTest, SiegelTukeyTest, IndependenceTest, 
            CorrelationTest, PearsonCorrelationTest, SpearmanRankTest, 
            KendallTauTest, HoeffdingDTest, GoodmanKruskalGammaTest, 
            BlomqvistBetaTest, WilksWTest, PillaiTraceTest, UnitRootTest, 
            AutocorrelationTest, HypothesisTestData, SignificanceLevel, 
            AlternativeHypothesis, VerifyTestAssumptions}, 3]]]], Method -> 
      "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"HoeffdingDTest\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.028528178854215186`],
      FontColor->RGBColor[
       0.838355547812947, 0.44746667828057946`, 0.0208888695323676]], {565., -55.},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
            BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
            KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
            MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
            ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
            LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
            PairedZTest, SignTest, SignedRankTest, TTest, ZTest, VarianceTest,
             VarianceEquivalenceTest, ConoverTest, BrownForsytheTest, 
            FisherRatioTest, LeveneTest, SiegelTukeyTest, IndependenceTest, 
            CorrelationTest, PearsonCorrelationTest, SpearmanRankTest, 
            KendallTauTest, HoeffdingDTest, GoodmanKruskalGammaTest, 
            BlomqvistBetaTest, WilksWTest, PillaiTraceTest, UnitRootTest, 
            AutocorrelationTest, HypothesisTestData, SignificanceLevel, 
            AlternativeHypothesis, VerifyTestAssumptions}, 36]]]], Method -> 
      "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"BrownForsytheTest\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.024452724732184444`],
      FontColor->RGBColor[
       0.8857244243136628, 0.3764133635295058, 0.1393110607841571]], {-588., 112.},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
            BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
            KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
            MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
            ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
            LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
            PairedZTest, SignTest, SignedRankTest, TTest, ZTest, VarianceTest,
             VarianceEquivalenceTest, ConoverTest, BrownForsytheTest, 
            FisherRatioTest, LeveneTest, SiegelTukeyTest, IndependenceTest, 
            CorrelationTest, PearsonCorrelationTest, SpearmanRankTest, 
            KendallTauTest, HoeffdingDTest, GoodmanKruskalGammaTest, 
            BlomqvistBetaTest, WilksWTest, PillaiTraceTest, UnitRootTest, 
            AutocorrelationTest, HypothesisTestData, SignificanceLevel, 
            AlternativeHypothesis, VerifyTestAssumptions}, 27]]]], Method -> 
      "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"IndependenceTest\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.024452724732184444`],
      FontColor->RGBColor[
       0.9874666782805795, 0.6948333914028977, 0.033839968642435214`]], {588., 50.},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
            BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
            KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
            MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
            ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
            LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
            PairedZTest, SignTest, SignedRankTest, TTest, ZTest, VarianceTest,
             VarianceEquivalenceTest, ConoverTest, BrownForsytheTest, 
            FisherRatioTest, LeveneTest, SiegelTukeyTest, IndependenceTest, 
            CorrelationTest, PearsonCorrelationTest, SpearmanRankTest, 
            KendallTauTest, HoeffdingDTest, GoodmanKruskalGammaTest, 
            BlomqvistBetaTest, WilksWTest, PillaiTraceTest, UnitRootTest, 
            AutocorrelationTest, HypothesisTestData, SignificanceLevel, 
            AlternativeHypothesis, VerifyTestAssumptions}, 31]]]], Method -> 
      "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"SignificanceLevel\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.024452724732184444`],
      FontColor->RGBColor[
       0.16397784358994957`, 0.7038177251280403, 0.6117734123079395]], {-614., 158.},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
            BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
            KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
            MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
            ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
            LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
            PairedZTest, SignTest, SignedRankTest, TTest, ZTest, VarianceTest,
             VarianceEquivalenceTest, ConoverTest, BrownForsytheTest, 
            FisherRatioTest, LeveneTest, SiegelTukeyTest, IndependenceTest, 
            CorrelationTest, PearsonCorrelationTest, SpearmanRankTest, 
            KendallTauTest, HoeffdingDTest, GoodmanKruskalGammaTest, 
            BlomqvistBetaTest, WilksWTest, PillaiTraceTest, UnitRootTest, 
            AutocorrelationTest, HypothesisTestData, SignificanceLevel, 
            AlternativeHypothesis, VerifyTestAssumptions}, 44]]]], Method -> 
      "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"ConoverTest\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.032603632976245925`],
      FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {612., 164.}, Center,
      Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
            BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
            KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
            MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
            ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
            LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
            PairedZTest, SignTest, SignedRankTest, TTest, ZTest, VarianceTest,
             VarianceEquivalenceTest, ConoverTest, BrownForsytheTest, 
            FisherRatioTest, LeveneTest, SiegelTukeyTest, IndependenceTest, 
            CorrelationTest, PearsonCorrelationTest, SpearmanRankTest, 
            KendallTauTest, HoeffdingDTest, GoodmanKruskalGammaTest, 
            BlomqvistBetaTest, WilksWTest, PillaiTraceTest, UnitRootTest, 
            AutocorrelationTest, HypothesisTestData, SignificanceLevel, 
            AlternativeHypothesis, VerifyTestAssumptions}, 26]]]], Method -> 
      "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"VerifyTestAssumptions\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.020377270610153705`],
      FontColor->RGBColor[0.7132613816472081, 0.358, 0.5392132590042952]], {-630., 0.},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
            BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
            KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
            MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
            ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
            LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
            PairedZTest, SignTest, SignedRankTest, TTest, ZTest, VarianceTest,
             VarianceEquivalenceTest, ConoverTest, BrownForsytheTest, 
            FisherRatioTest, LeveneTest, SiegelTukeyTest, IndependenceTest, 
            CorrelationTest, PearsonCorrelationTest, SpearmanRankTest, 
            KendallTauTest, HoeffdingDTest, GoodmanKruskalGammaTest, 
            BlomqvistBetaTest, WilksWTest, PillaiTraceTest, UnitRootTest, 
            AutocorrelationTest, HypothesisTestData, SignificanceLevel, 
            AlternativeHypothesis, VerifyTestAssumptions}, 46]]]], Method -> 
      "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"MardiaSkewnessTest\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.024452724732184444`],
      FontColor->RGBColor[
       0.9324333565611593, 0.5282889043741062, 0.0921900209050434]], {657., 0.},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          Part[{
           DistributionFitTest, LogRankTest, AndersonDarlingTest, 
            BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
            KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
            MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
            ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
            LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
            PairedZTest, SignTest, SignedRankTest, TTest, ZTest, VarianceTest,
             VarianceEquivalenceTest, ConoverTest, BrownForsytheTest, 
            FisherRatioTest, LeveneTest, SiegelTukeyTest, IndependenceTest, 
            CorrelationTest, PearsonCorrelationTest, SpearmanRankTest, 
            KendallTauTest, HoeffdingDTest, GoodmanKruskalGammaTest, 
            BlomqvistBetaTest, WilksWTest, PillaiTraceTest, UnitRootTest, 
            AutocorrelationTest, HypothesisTestData, SignificanceLevel, 
            AlternativeHypothesis, VerifyTestAssumptions}, 11]]]], Method -> 
      "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"SignTest\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.032603632976245925`],
      FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {-761., -173.}, 
     Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
            BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
            KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
            MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
            ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
            LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
            PairedZTest, SignTest, SignedRankTest, TTest, ZTest, VarianceTest,
             VarianceEquivalenceTest, ConoverTest, BrownForsytheTest, 
            FisherRatioTest, LeveneTest, SiegelTukeyTest, IndependenceTest, 
            CorrelationTest, PearsonCorrelationTest, SpearmanRankTest, 
            KendallTauTest, HoeffdingDTest, GoodmanKruskalGammaTest, 
            BlomqvistBetaTest, WilksWTest, PillaiTraceTest, UnitRootTest, 
            AutocorrelationTest, HypothesisTestData, SignificanceLevel, 
            AlternativeHypothesis, VerifyTestAssumptions}, 20]]]], Method -> 
      "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"FisherRatioTest\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.028528178854215186`],
      FontColor->RGBColor[0.736782672705901, 0.358, 0.5030266573755369]], {-626., 208.},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
            BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
            KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
            MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
            ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
            LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
            PairedZTest, SignTest, SignedRankTest, TTest, ZTest, VarianceTest,
             VarianceEquivalenceTest, ConoverTest, BrownForsytheTest, 
            FisherRatioTest, LeveneTest, SiegelTukeyTest, IndependenceTest, 
            CorrelationTest, PearsonCorrelationTest, SpearmanRankTest, 
            KendallTauTest, HoeffdingDTest, GoodmanKruskalGammaTest, 
            BlomqvistBetaTest, WilksWTest, PillaiTraceTest, UnitRootTest, 
            AutocorrelationTest, HypothesisTestData, SignificanceLevel, 
            AlternativeHypothesis, VerifyTestAssumptions}, 28]]]], Method -> 
      "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"KendallTauTest\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.028528178854215186`],
      FontColor->RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]], {-5., 216.},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
            BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
            KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
            MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
            ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
            LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
            PairedZTest, SignTest, SignedRankTest, TTest, ZTest, VarianceTest,
             VarianceEquivalenceTest, ConoverTest, BrownForsytheTest, 
            FisherRatioTest, LeveneTest, SiegelTukeyTest, IndependenceTest, 
            CorrelationTest, PearsonCorrelationTest, SpearmanRankTest, 
            KendallTauTest, HoeffdingDTest, GoodmanKruskalGammaTest, 
            BlomqvistBetaTest, WilksWTest, PillaiTraceTest, UnitRootTest, 
            AutocorrelationTest, HypothesisTestData, SignificanceLevel, 
            AlternativeHypothesis, VerifyTestAssumptions}, 35]]]], Method -> 
      "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"PillaiTraceTest\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.028528178854215186`],
      FontColor->RGBColor[0.8996399512215667, 0.7463488834690629, 0.]], {463., 219.},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
            BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
            KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
            MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
            ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
            LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
            PairedZTest, SignTest, SignedRankTest, TTest, ZTest, VarianceTest,
             VarianceEquivalenceTest, ConoverTest, BrownForsytheTest, 
            FisherRatioTest, LeveneTest, SiegelTukeyTest, IndependenceTest, 
            CorrelationTest, PearsonCorrelationTest, SpearmanRankTest, 
            KendallTauTest, HoeffdingDTest, GoodmanKruskalGammaTest, 
            BlomqvistBetaTest, WilksWTest, PillaiTraceTest, UnitRootTest, 
            AutocorrelationTest, HypothesisTestData, SignificanceLevel, 
            AlternativeHypothesis, VerifyTestAssumptions}, 40]]]], Method -> 
      "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"SpearmanRankTest\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.020377270610153705`],
      FontColor->RGBColor[
       0.9637822400302223, 0.5764112001511111, 0.0977879519184]], {602., -216.},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
            BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
            KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
            MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
            ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
            LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
            PairedZTest, SignTest, SignedRankTest, TTest, ZTest, VarianceTest,
             VarianceEquivalenceTest, ConoverTest, BrownForsytheTest, 
            FisherRatioTest, LeveneTest, SiegelTukeyTest, IndependenceTest, 
            CorrelationTest, PearsonCorrelationTest, SpearmanRankTest, 
            KendallTauTest, HoeffdingDTest, GoodmanKruskalGammaTest, 
            BlomqvistBetaTest, WilksWTest, PillaiTraceTest, UnitRootTest, 
            AutocorrelationTest, HypothesisTestData, SignificanceLevel, 
            AlternativeHypothesis, VerifyTestAssumptions}, 34]]]], Method -> 
      "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"KuiperTest\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.024452724732184444`],
      FontColor->RGBColor[
       0.28240003484173815`, 0.6090799721266095, 0.7538800418100857]], {860., -169.},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
            BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
            KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
            MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
            ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
            LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
            PairedZTest, SignTest, SignedRankTest, TTest, ZTest, VarianceTest,
             VarianceEquivalenceTest, ConoverTest, BrownForsytheTest, 
            FisherRatioTest, LeveneTest, SiegelTukeyTest, IndependenceTest, 
            CorrelationTest, PearsonCorrelationTest, SpearmanRankTest, 
            KendallTauTest, HoeffdingDTest, GoodmanKruskalGammaTest, 
            BlomqvistBetaTest, WilksWTest, PillaiTraceTest, UnitRootTest, 
            AutocorrelationTest, HypothesisTestData, SignificanceLevel, 
            AlternativeHypothesis, VerifyTestAssumptions}, 8]]]], Method -> 
      "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"MardiaKurtosisTest\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.020377270610153705`],
      FontColor->RGBColor[
       0.6184987019729621, 0.39212575718243875`, 0.7412532450675947]], {0., -224.},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
            BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
            KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
            MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
            ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
            LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
            PairedZTest, SignTest, SignedRankTest, TTest, ZTest, VarianceTest,
             VarianceEquivalenceTest, ConoverTest, BrownForsytheTest, 
            FisherRatioTest, LeveneTest, SiegelTukeyTest, IndependenceTest, 
            CorrelationTest, PearsonCorrelationTest, SpearmanRankTest, 
            KendallTauTest, HoeffdingDTest, GoodmanKruskalGammaTest, 
            BlomqvistBetaTest, WilksWTest, PillaiTraceTest, UnitRootTest, 
            AutocorrelationTest, HypothesisTestData, SignificanceLevel, 
            AlternativeHypothesis, VerifyTestAssumptions}, 10]]]], Method -> 
      "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"BaringhausHenzeTest\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.016301816488122962`],
      FontColor->RGBColor[0.37977756485605163`, 0.715, 0.3025558265468435]], {-364., -220.},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
            BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
            KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
            MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
            ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
            LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
            PairedZTest, SignTest, SignedRankTest, TTest, ZTest, VarianceTest,
             VarianceEquivalenceTest, ConoverTest, BrownForsytheTest, 
            FisherRatioTest, LeveneTest, SiegelTukeyTest, IndependenceTest, 
            CorrelationTest, PearsonCorrelationTest, SpearmanRankTest, 
            KendallTauTest, HoeffdingDTest, GoodmanKruskalGammaTest, 
            BlomqvistBetaTest, WilksWTest, PillaiTraceTest, UnitRootTest, 
            AutocorrelationTest, HypothesisTestData, SignificanceLevel, 
            AlternativeHypothesis, VerifyTestAssumptions}, 4]]]], Method -> 
      "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"DistributionFitTest\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.020377270610153705`],
      FontColor->RGBColor[
       0.8613800418100862, 0.48092002787339083`, 0.02824203762907758]], {851., 212.},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
            BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
            KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
            MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
            ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
            LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
            PairedZTest, SignTest, SignedRankTest, TTest, ZTest, VarianceTest,
             VarianceEquivalenceTest, ConoverTest, BrownForsytheTest, 
            FisherRatioTest, LeveneTest, SiegelTukeyTest, IndependenceTest, 
            CorrelationTest, PearsonCorrelationTest, SpearmanRankTest, 
            KendallTauTest, HoeffdingDTest, GoodmanKruskalGammaTest, 
            BlomqvistBetaTest, WilksWTest, PillaiTraceTest, UnitRootTest, 
            AutocorrelationTest, HypothesisTestData, SignificanceLevel, 
            AlternativeHypothesis, VerifyTestAssumptions}, 1]]]], Method -> 
      "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"JarqueBeraALMTest\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.016301816488122962`],
      FontColor->RGBColor[
       0.8564488486273256, 0.42032672705901153`, 0.06612212156831418]], {-698., -230.},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
            BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
            KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
            MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
            ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
            LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
            PairedZTest, SignTest, SignedRankTest, TTest, ZTest, VarianceTest,
             VarianceEquivalenceTest, ConoverTest, BrownForsytheTest, 
            FisherRatioTest, LeveneTest, SiegelTukeyTest, IndependenceTest, 
            CorrelationTest, PearsonCorrelationTest, SpearmanRankTest, 
            KendallTauTest, HoeffdingDTest, GoodmanKruskalGammaTest, 
            BlomqvistBetaTest, WilksWTest, PillaiTraceTest, UnitRootTest, 
            AutocorrelationTest, HypothesisTestData, SignificanceLevel, 
            AlternativeHypothesis, VerifyTestAssumptions}, 6]]]], Method -> 
      "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"HypothesisTestData\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.016301816488122962`],
      FontColor->RGBColor[0.428777913273419, 0.5052332520359486, 0.85]], {-333., -253.},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
            BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
            KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
            MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
            ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
            LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
            PairedZTest, SignTest, SignedRankTest, TTest, ZTest, VarianceTest,
             VarianceEquivalenceTest, ConoverTest, BrownForsytheTest, 
            FisherRatioTest, LeveneTest, SiegelTukeyTest, IndependenceTest, 
            CorrelationTest, PearsonCorrelationTest, SpearmanRankTest, 
            KendallTauTest, HoeffdingDTest, GoodmanKruskalGammaTest, 
            BlomqvistBetaTest, WilksWTest, PillaiTraceTest, UnitRootTest, 
            AutocorrelationTest, HypothesisTestData, SignificanceLevel, 
            AlternativeHypothesis, VerifyTestAssumptions}, 43]]]], Method -> 
      "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"PairedTTest\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.024452724732184444`],
      FontColor->RGBColor[0.5407932311309059, 0.715, 0.09762679674248334]], {340., -259.},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
            BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
            KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
            MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
            ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
            LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
            PairedZTest, SignTest, SignedRankTest, TTest, ZTest, VarianceTest,
             VarianceEquivalenceTest, ConoverTest, BrownForsytheTest, 
            FisherRatioTest, LeveneTest, SiegelTukeyTest, IndependenceTest, 
            CorrelationTest, PearsonCorrelationTest, SpearmanRankTest, 
            KendallTauTest, HoeffdingDTest, GoodmanKruskalGammaTest, 
            BlomqvistBetaTest, WilksWTest, PillaiTraceTest, UnitRootTest, 
            AutocorrelationTest, HypothesisTestData, SignificanceLevel, 
            AlternativeHypothesis, VerifyTestAssumptions}, 18]]]], Method -> 
      "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"WilksWTest\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.024452724732184444`],
      FontColor->RGBColor[0.7748409210981391, 0.358, 0.4444755060028629]], {-369., 255.},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
            BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
            KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
            MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
            ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
            LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
            PairedZTest, SignTest, SignedRankTest, TTest, ZTest, VarianceTest,
             VarianceEquivalenceTest, ConoverTest, BrownForsytheTest, 
            FisherRatioTest, LeveneTest, SiegelTukeyTest, IndependenceTest, 
            CorrelationTest, PearsonCorrelationTest, SpearmanRankTest, 
            KendallTauTest, HoeffdingDTest, GoodmanKruskalGammaTest, 
            BlomqvistBetaTest, WilksWTest, PillaiTraceTest, UnitRootTest, 
            AutocorrelationTest, HypothesisTestData, SignificanceLevel, 
            AlternativeHypothesis, VerifyTestAssumptions}, 39]]]], Method -> 
      "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"LeveneTest\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.024452724732184444`],
      FontColor->RGBColor[
       0.47401116530937026`, 0.47809330081437784`, 0.85]], {629., -259.}, 
     Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
            BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
            KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
            MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
            ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
            LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
            PairedZTest, SignTest, SignedRankTest, TTest, ZTest, VarianceTest,
             VarianceEquivalenceTest, ConoverTest, BrownForsytheTest, 
            FisherRatioTest, LeveneTest, SiegelTukeyTest, IndependenceTest, 
            CorrelationTest, PearsonCorrelationTest, SpearmanRankTest, 
            KendallTauTest, HoeffdingDTest, GoodmanKruskalGammaTest, 
            BlomqvistBetaTest, WilksWTest, PillaiTraceTest, UnitRootTest, 
            AutocorrelationTest, HypothesisTestData, SignificanceLevel, 
            AlternativeHypothesis, VerifyTestAssumptions}, 29]]]], Method -> 
      "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"BlomqvistBetaTest\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.016301816488122962`],
      FontColor->RGBColor[
       0.6536293927965667, 0.37163285420200276`, 0.6534265180085832]], {-3., 257.},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
            BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
            KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
            MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
            ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
            LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
            PairedZTest, SignTest, SignedRankTest, TTest, ZTest, VarianceTest,
             VarianceEquivalenceTest, ConoverTest, BrownForsytheTest, 
            FisherRatioTest, LeveneTest, SiegelTukeyTest, IndependenceTest, 
            CorrelationTest, PearsonCorrelationTest, SpearmanRankTest, 
            KendallTauTest, HoeffdingDTest, GoodmanKruskalGammaTest, 
            BlomqvistBetaTest, WilksWTest, PillaiTraceTest, UnitRootTest, 
            AutocorrelationTest, HypothesisTestData, SignificanceLevel, 
            AlternativeHypothesis, VerifyTestAssumptions}, 38]]]], Method -> 
      "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"PearsonCorrelationTest\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.016301816488122962`],
      FontColor->RGBColor[
       0.9052934053395919, 0.510195603559728, 0.06776406480563275]], {7., -260.},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
            BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
            KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
            MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
            ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
            LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
            PairedZTest, SignTest, SignedRankTest, TTest, ZTest, VarianceTest,
             VarianceEquivalenceTest, ConoverTest, BrownForsytheTest, 
            FisherRatioTest, LeveneTest, SiegelTukeyTest, IndependenceTest, 
            CorrelationTest, PearsonCorrelationTest, SpearmanRankTest, 
            KendallTauTest, HoeffdingDTest, GoodmanKruskalGammaTest, 
            BlomqvistBetaTest, WilksWTest, PillaiTraceTest, UnitRootTest, 
            AutocorrelationTest, HypothesisTestData, SignificanceLevel, 
            AlternativeHypothesis, VerifyTestAssumptions}, 33]]]], Method -> 
      "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"SignedRankTest\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.016301816488122962`],
      FontColor->RGBColor[
       0.8168067340273636, 0.3521386531945273, 0.3761554432877274]], {275., 263.},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
            BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
            KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
            MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
            ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
            LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
            PairedZTest, SignTest, SignedRankTest, TTest, ZTest, VarianceTest,
             VarianceEquivalenceTest, ConoverTest, BrownForsytheTest, 
            FisherRatioTest, LeveneTest, SiegelTukeyTest, IndependenceTest, 
            CorrelationTest, PearsonCorrelationTest, SpearmanRankTest, 
            KendallTauTest, HoeffdingDTest, GoodmanKruskalGammaTest, 
            BlomqvistBetaTest, WilksWTest, PillaiTraceTest, UnitRootTest, 
            AutocorrelationTest, HypothesisTestData, SignificanceLevel, 
            AlternativeHypothesis, VerifyTestAssumptions}, 21]]]], Method -> 
      "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"ShapiroWilkTest\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.016301816488122962`],
      FontColor->RGBColor[0.5472001045252132, 0.43417993728487203`, 0.85]], {536., 260.},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
            BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
            KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
            MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
            ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
            LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
            PairedZTest, SignTest, SignedRankTest, TTest, ZTest, VarianceTest,
             VarianceEquivalenceTest, ConoverTest, BrownForsytheTest, 
            FisherRatioTest, LeveneTest, SiegelTukeyTest, IndependenceTest, 
            CorrelationTest, PearsonCorrelationTest, SpearmanRankTest, 
            KendallTauTest, HoeffdingDTest, GoodmanKruskalGammaTest, 
            BlomqvistBetaTest, WilksWTest, PillaiTraceTest, UnitRootTest, 
            AutocorrelationTest, HypothesisTestData, SignificanceLevel, 
            AlternativeHypothesis, VerifyTestAssumptions}, 13]]]], Method -> 
      "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"TTest\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.032603632976245925`],
      FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {871., -52.}, 
     Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
            BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
            KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
            MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
            ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
            LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
            PairedZTest, SignTest, SignedRankTest, TTest, ZTest, VarianceTest,
             VarianceEquivalenceTest, ConoverTest, BrownForsytheTest, 
            FisherRatioTest, LeveneTest, SiegelTukeyTest, IndependenceTest, 
            CorrelationTest, PearsonCorrelationTest, SpearmanRankTest, 
            KendallTauTest, HoeffdingDTest, GoodmanKruskalGammaTest, 
            BlomqvistBetaTest, WilksWTest, PillaiTraceTest, UnitRootTest, 
            AutocorrelationTest, HypothesisTestData, SignificanceLevel, 
            AlternativeHypothesis, VerifyTestAssumptions}, 22]]]], Method -> 
      "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"VarianceTest\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.020377270610153705`],
      FontColor->RGBColor[
       0.35558897405758294`, 0.5505288207539337, 0.8417067688690995]], {-649., 252.},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
            BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
            KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
            MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
            ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
            LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
            PairedZTest, SignTest, SignedRankTest, TTest, ZTest, VarianceTest,
             VarianceEquivalenceTest, ConoverTest, BrownForsytheTest, 
            FisherRatioTest, LeveneTest, SiegelTukeyTest, IndependenceTest, 
            CorrelationTest, PearsonCorrelationTest, SpearmanRankTest, 
            KendallTauTest, HoeffdingDTest, GoodmanKruskalGammaTest, 
            BlomqvistBetaTest, WilksWTest, PillaiTraceTest, UnitRootTest, 
            AutocorrelationTest, HypothesisTestData, SignificanceLevel, 
            AlternativeHypothesis, VerifyTestAssumptions}, 24]]]], Method -> 
      "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"PairedZTest\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.020377270610153705`],
      FontColor->RGBColor[0.7678998606330495, 0.7317110956258943, 0.]], {788., 251.},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
            BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
            KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
            MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
            ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
            LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
            PairedZTest, SignTest, SignedRankTest, TTest, ZTest, VarianceTest,
             VarianceEquivalenceTest, ConoverTest, BrownForsytheTest, 
            FisherRatioTest, LeveneTest, SiegelTukeyTest, IndependenceTest, 
            CorrelationTest, PearsonCorrelationTest, SpearmanRankTest, 
            KendallTauTest, HoeffdingDTest, GoodmanKruskalGammaTest, 
            BlomqvistBetaTest, WilksWTest, PillaiTraceTest, UnitRootTest, 
            AutocorrelationTest, HypothesisTestData, SignificanceLevel, 
            AlternativeHypothesis, VerifyTestAssumptions}, 19]]]], Method -> 
      "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"AutocorrelationTest\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.016301816488122962`],
      FontColor->RGBColor[
       0.9038177251280404, 0.3492734123079395, 0.18454431282010084`]], {-672., -265.},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
            BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
            KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
            MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
            ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
            LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
            PairedZTest, SignTest, SignedRankTest, TTest, ZTest, VarianceTest,
             VarianceEquivalenceTest, ConoverTest, BrownForsytheTest, 
            FisherRatioTest, LeveneTest, SiegelTukeyTest, IndependenceTest, 
            CorrelationTest, PearsonCorrelationTest, SpearmanRankTest, 
            KendallTauTest, HoeffdingDTest, GoodmanKruskalGammaTest, 
            BlomqvistBetaTest, WilksWTest, PillaiTraceTest, UnitRootTest, 
            AutocorrelationTest, HypothesisTestData, SignificanceLevel, 
            AlternativeHypothesis, VerifyTestAssumptions}, 42]]]], Method -> 
      "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"CorrelationTest\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.016301816488122962`],
      FontColor->RGBColor[
       0.23716678280579248`, 0.645266573755366, 0.699600139366951]], {-910., 35.},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
            BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
            KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
            MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
            ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
            LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
            PairedZTest, SignTest, SignedRankTest, TTest, ZTest, VarianceTest,
             VarianceEquivalenceTest, ConoverTest, BrownForsytheTest, 
            FisherRatioTest, LeveneTest, SiegelTukeyTest, IndependenceTest, 
            CorrelationTest, PearsonCorrelationTest, SpearmanRankTest, 
            KendallTauTest, HoeffdingDTest, GoodmanKruskalGammaTest, 
            BlomqvistBetaTest, WilksWTest, PillaiTraceTest, UnitRootTest, 
            AutocorrelationTest, HypothesisTestData, SignificanceLevel, 
            AlternativeHypothesis, VerifyTestAssumptions}, 32]]]], Method -> 
      "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"UnitRootTest\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.016301816488122962`],
      FontColor->RGBColor[0.6361597700445392, 0.7170733077827265, 0.]], {-894., 66.},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
            BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
            KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
            MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
            ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
            LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
            PairedZTest, SignTest, SignedRankTest, TTest, ZTest, VarianceTest,
             VarianceEquivalenceTest, ConoverTest, BrownForsytheTest, 
            FisherRatioTest, LeveneTest, SiegelTukeyTest, IndependenceTest, 
            CorrelationTest, PearsonCorrelationTest, SpearmanRankTest, 
            KendallTauTest, HoeffdingDTest, GoodmanKruskalGammaTest, 
            BlomqvistBetaTest, WilksWTest, PillaiTraceTest, UnitRootTest, 
            AutocorrelationTest, HypothesisTestData, SignificanceLevel, 
            AlternativeHypothesis, VerifyTestAssumptions}, 41]]]], Method -> 
      "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"LocationTest\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.016301816488122962`],
      FontColor->RGBColor[0.9810598048862722, 0.7553955338762525, 0.]], {873., -252.},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
            BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
            KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
            MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
            ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
            LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
            PairedZTest, SignTest, SignedRankTest, TTest, ZTest, VarianceTest,
             VarianceEquivalenceTest, ConoverTest, BrownForsytheTest, 
            FisherRatioTest, LeveneTest, SiegelTukeyTest, IndependenceTest, 
            CorrelationTest, PearsonCorrelationTest, SpearmanRankTest, 
            KendallTauTest, HoeffdingDTest, GoodmanKruskalGammaTest, 
            BlomqvistBetaTest, WilksWTest, PillaiTraceTest, UnitRootTest, 
            AutocorrelationTest, HypothesisTestData, SignificanceLevel, 
            AlternativeHypothesis, VerifyTestAssumptions}, 15]]]], Method -> 
      "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"ZTest\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.020377270610153705`],
      FontColor->RGBColor[
       0.8878600487784333, 0.33792799024431336`, 0.2577332520359445]], {254., -216.},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{DistributionFitTest, LogRankTest, AndersonDarlingTest, 
            BaringhausHenzeTest, CramerVonMisesTest, JarqueBeraALMTest, 
            KolmogorovSmirnovTest, KuiperTest, MardiaCombinedTest, 
            MardiaKurtosisTest, MardiaSkewnessTest, PearsonChiSquareTest, 
            ShapiroWilkTest, WatsonUSquareTest, LocationTest, 
            LocationEquivalenceTest, MannWhitneyTest, PairedTTest, 
            PairedZTest, SignTest, SignedRankTest, TTest, ZTest, VarianceTest,
             VarianceEquivalenceTest, ConoverTest, BrownForsytheTest, 
            FisherRatioTest, LeveneTest, SiegelTukeyTest, IndependenceTest, 
            CorrelationTest, PearsonCorrelationTest, SpearmanRankTest, 
            KendallTauTest, HoeffdingDTest, GoodmanKruskalGammaTest, 
            BlomqvistBetaTest, WilksWTest, PillaiTraceTest, UnitRootTest, 
            AutocorrelationTest, HypothesisTestData, SignificanceLevel, 
            AlternativeHypothesis, VerifyTestAssumptions}, 23]]]], Method -> 
      "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]]},
  DefaultBaseStyle->{"Graphics", FontFamily -> "Helvetica"},
  ImageSize->Full,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
  PlotRange->{{-1073.5, 1073.5}, {-286.5, 286.5}}]], "Output",
 GeneratedCell->False,
 CellChangeTimes->{
  3.7009089823498373`*^9},ExpressionUUID->"21f0ba23-ccf8-4840-bbbb-\
95df75cace20"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"d3adc702-5983-440a-988a-42b97138b914"],

Cell[CellGroupData[{

Cell["Introduction to Distributions", "Section",
 CellChangeTimes->{{3.7009110587352543`*^9, 3.7009110628059874`*^9}, {
  3.7009125686198883`*^9, 
  3.700912570898864*^9}},ExpressionUUID->"4d845600-e61d-4716-9a67-\
4dd0db4a23d5"],

Cell[TextData[{
 "The collection of ",
 StyleBox[ButtonBox["parametric distributions",
  BaseStyle->"Link",
  ButtonData->"paclet:guide/ParametricStatisticalDistributions"],
  FontFamily->"Arial",
  FontWeight->"Bold"],
 " in the Wolfram Language has been selected in order to provide complete \
modeling frameworks for a variety of areas.  The result is the most extensive \
collection of parametric distributions ever assembled, including various \
univariate and multivariate continuous and discrete distributions.  Similarly \
the Wolfram Language has ",
 StyleBox[ButtonBox["Nonparametric Distributions",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/guide/\
NonparametricStatisticalDistributions.html"], None},
  ButtonNote->
   "https://reference.wolfram.com/language/guide/\
NonparametricStatisticalDistributions.html"],
  FontFamily->"Arial",
  FontWeight->"Bold"],
 ", that can be directly constructed from data, ",
 StyleBox[ButtonBox["Derived Distributions",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/guide/DerivedDistributions.\
html"], None},
  ButtonNote->
   "http://reference.wolfram.com/language/guide/DerivedDistributions.html"],
  FontFamily->"Arial",
  FontWeight->"Bold"],
 " (distributions that can be constructed from other distributions) and ",
 StyleBox[ButtonBox["Formula Distributions",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/ProbabilityDistribution"],
  FontFamily->"Arial",
  FontWeight->"Bold"],
 " "
}], "Text",
 CellChangeTimes->{{3.700912717615545*^9, 3.7009128250135517`*^9}, {
   3.7009129080844746`*^9, 3.7009130238575907`*^9}, {3.700913337245345*^9, 
   3.700913357772579*^9}, {3.700913405623987*^9, 3.7009134056249895`*^9}, {
   3.700913528562766*^9, 3.700913528563769*^9}, 3.702138593887271*^9, {
   3.7021387101692705`*^9, 
   3.702138711073271*^9}},ExpressionUUID->"54164689-ff1d-4fed-b6ea-\
3b71549b7afb"],

Cell[TextData[Cell[BoxData[
 GraphicsBox[{
   TagBox[InsetBox[
     StyleBox["\<\"CircularOrthogonalMatrixDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.017596782302664656`],
      FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {0, 0}, Center, 
     Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 23]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"CircularSymplecticMatrixDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.017596782302664656`],
      FontColor->RGBColor[1, 0.75, 0]], {2.5, 63.5}, Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 26]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"NegativeMultinomialDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.017596782302664656`],
      FontColor->RGBColor[
       0.16397784358994957`, 0.7038177251280403, 0.6117734123079395]], {7.5, -67.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 104]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"TsallisQExponentialDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.017596782302664656`],
      FontColor->RGBColor[0.37977756485605163`, 0.715, 0.3025558265468435]], {-5.5, 122.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 146]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"WignerSemicircleDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.017596782302664656`],
      FontColor->RGBColor[0.9810598048862722, 0.7553955338762525, 0.]], {-32.5, -126.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 160]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"ExponentialPowerDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.017596782302664656`],
      FontColor->RGBColor[
       0.9728288904374106, 0.621644452187053, 0.07336199581899142]], {-16.5, 181.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 42]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"InverseChiSquareDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.017596782302664656`],
      FontColor->RGBColor[0.8996399512215667, 0.7463488834690629, 0.]], {-0.5, -185.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 68]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"ShiftedGompertzDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.017596782302664656`],
      FontColor->RGBColor[
       0.8878600487784333, 0.33792799024431336`, 0.2577332520359445]], {11.5, 239.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 128]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"GraphPropertyDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.017596782302664656`],
      FontColor->RGBColor[0.736782672705901, 0.358, 0.5030266573755369]], {-0.5, -243.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 57]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"MatrixPropertyDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.017596782302664656`],
      FontColor->RGBColor[
       0.6753413537738198, 0.3589675436319385, 0.5991466155654507]], {-0.5, 298.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 89]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"BernoulliGraphDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.017596782302664656`],
      FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {-19.5, -314.5}, 
     Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 10]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"BetaNegativeBinomialDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.014663985252220546`],
      FontColor->RGBColor[
       0.6536293927965667, 0.37163285420200276`, 0.6534265180085832]], {850.5, -121.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 13]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"InverseWishartMatrixDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.017596782302664656`],
      FontColor->RGBColor[
       0.8439466852489265, 0.3467106629502147, 0.3309221912517893]], {908.5, -243.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 71]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"PolyaAeppliDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.017596782302664656`],
      FontColor->RGBColor[0.7678998606330495, 0.7317110956258943, 0.]], {-768.5, -229.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 118]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"NoncentralChiSquareDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.014663985252220546`],
      FontColor->RGBColor[
       0.3103557220216354, 0.5867154223826917, 0.7874268664259625]], {813.5, -297.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 106]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"BirnbaumSaundersDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.017596782302664656`],
      FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {879.5, 283.5}, 
     Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 17]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"ExpGammaDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.017596782302664656`],
      FontColor->RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]], {802.5, 166.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 40]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"BarabasiAlbertGraphDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.014663985252220546`],
      FontColor->RGBColor[
       0.9052934053395919, 0.510195603559728, 0.06776406480563275]], {-818.5, 293.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 2]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"MultivariatePoissonDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.017596782302664656`],
      FontColor->RGBColor[
       0.9874666782805795, 0.6948333914028977, 0.033839968642435214`]], {937.5, -176.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 100]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"HyperbolicDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.017596782302664656`],
      FontColor->RGBColor[
       0.5833680111493557, 0.4126186601628758, 0.8290799721266107]], {-826.5, -46.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 64]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"TriangularDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.017596782302664656`],
      FontColor->RGBColor[0.7132613816472081, 0.358, 0.5392132590042952]], {-765.5, -301.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 144]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"TsallisQGaussianDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.017596782302664656`],
      FontColor->RGBColor[
       0.8564488486273256, 0.42032672705901153`, 0.06612212156831418]], {-924.5, -166.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 147]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"NakagamiDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.017596782302664656`],
      FontColor->RGBColor[0.7748409210981391, 0.358, 0.4444755060028629]], {-809.5, 179.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 102]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"NoncentralBetaDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.017596782302664656`],
      FontColor->RGBColor[
       0.8613800418100862, 0.48092002787339083`, 0.02824203762907758]], {918.5, -57.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 105]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"SmoothKernelDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.017596782302664656`],
      FontColor->RGBColor[
       0.9637822400302223, 0.5764112001511111, 0.0977879519184]], {-946.5, 118.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 133]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"DagumDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.017596782302664656`],
      FontColor->RGBColor[0.571589, 0.586483, 0.]], {-849.5, 51.5}, Center, 
     Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 31]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"LindleyDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.017596782302664656`],
      FontColor->RGBColor[
       0.9324333565611593, 0.5282889043741062, 0.0921900209050434]], {-775.5, -104.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 79]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"CopulaDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.017596782302664656`],
      FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {833.5, 105.5}, 
     Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 29]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"TukeyLambdaDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.014663985252220546`],
      FontColor->RGBColor[0.38354466123747527`, 0.5323732032575149, 0.85]], {-769.5, 234.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 148]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"SkewNormalDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.017596782302664656`],
      FontColor->RGBColor[
       0.35558897405758294`, 0.5505288207539337, 0.8417067688690995]], {939.5, 28.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 131]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"GaussianOrthogonalMatrixDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.011731188201776438`],
      FontColor->RGBColor[
       0.5788038738141875, 0.715, 0.049249615145579635`]], {722.5, 337.5}, 
     Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 52]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"UniformSumDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.017596782302664656`],
      FontColor->RGBColor[0.5472001045252132, 0.43417993728487203`, 0.85]], {1256.5, 223.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 151]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"BetaBinomialDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.017596782302664656`],
      FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {-1447.5, -105.5}, 
     Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 11]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"WalleniusHypergeometricDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.011731188201776438`],
      FontColor->RGBColor[
       0.8949268664259606, 0.5032845776173072, 0.05843417978336459]], {-1003.5, 339.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 156]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"TracyWidomDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.014663985252220546`],
      FontColor->RGBColor[
       0.9046334610863751, 0.334573307782725, 0.22977756485604156`]], {1420.5, 108.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 142]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"WaringYuleDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.014663985252220546`],
      FontColor->RGBColor[0.7277983389807635, 0.358, 0.5168487092603637]], {-1383.5, -300.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 157]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"MultinomialDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.017596782302664656`],
      FontColor->RGBColor[
       0.47401116530937026`, 0.47809330081437784`, 0.85]], {-1454.5, 236.5}, 
     Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 97]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"HoytDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.017596782302664656`],
      FontColor->RGBColor[
       0.838355547812947, 0.44746667828057946`, 0.0208888695323676]], {-1385.5, 10.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 63]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"CircularRealMatrixDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.014663985252220546`],
      FontColor->RGBColor[
       0.9038177251280404, 0.3492734123079395, 0.18454431282010084`]], {-60.5, 352.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 25]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"FisherHypergeometricDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.011731188201776438`],
      FontColor->RGBColor[
       0.922066817647527, 0.5213778784316846, 0.08286013588277422]], {791.5, -348.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 47]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"ZipfDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.017596782302664656`],
      FontColor->RGBColor[
       0.8168067340273636, 0.3521386531945273, 0.3761554432877274]], {-1365.5, -224.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 162]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"WattsStrogatzGraphDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.011731188201776438`],
      FontColor->RGBColor[
       0.6453361616656581, 0.37647057236169945`, 0.6741595958358548]], {-1364.5, -349.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 158]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"InverseGaussianDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.014663985252220546`],
      FontColor->RGBColor[0.2187618985811806, 0.715, 0.5074848563512248]], {1484.5, 337.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 70]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"MarchenkoPasturDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.014663985252220546`],
      FontColor->RGBColor[0.8493197142977551, 0.7407577460330839, 0.]], {-0.5, -371.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 86]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"NoncentralFRatioDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.014663985252220546`],
      FontColor->RGBColor[
       0.9492067688690977, 0.5394711792460651, 0.10728609198218791`]], {692.5, 383.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 107]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"BinormalDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.017596782302664656`],
      FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {-691.5, -360.5}, 
     Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 16]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"GumbelDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.017596782302664656`],
      FontColor->RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]], {1465.5, 161.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 58]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"BenfordDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.017596782302664656`],
      FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {1441.5, -352.5}, 
     Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 5]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"RayleighDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.014663985252220546`],
      FontColor->RGBColor[
       0.19193353076984873`, 0.681453175384121, 0.6453202369238185]], {-1402.5, 173.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 124]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"InverseGammaDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.014663985252220546`],
      FontColor->RGBColor[0.7513196300394465, 0.358, 0.48066210763162087`]], {-1511.5, -47.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 69]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"MarginalDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.014663985252220546`],
      FontColor->RGBColor[
       0.8607200975568693, 0.34335598048862614`, 0.30296650407188447`]], {-1491.5, 290.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 87]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"MaxwellDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.017596782302664656`],
      FontColor->RGBColor[
       0.8857244243136628, 0.3764133635295058, 0.1393110607841571]], {-1570.5, 68.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 92]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"PoissonConsulDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.014663985252220546`],
      FontColor->RGBColor[0.5019668524892619, 0.46131988850644284`, 0.85]], {-784.5, 384.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 116]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"QuantityDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.014663985252220546`],
      FontColor->RGBColor[
       0.7896667828057927, 0.3575666434388414, 0.4213886953236787]], {1537.5, -111.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 123]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"LaplaceDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.014663985252220546`],
      FontColor->RGBColor[
       0.8342400905885153, 0.4628267270590103, 0.0038160815296638794`]], {1562.5, 0.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 77]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"MatrixTDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.017596782302664656`],
      FontColor->RGBColor[0.5407932311309059, 0.715, 0.09762679674248334]], {-1415.5, 388.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 90]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"HypoexponentialDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.011731188201776438`],
      FontColor->RGBColor[0.15725938678540247`, 0.715, 0.5857607804549424]], {732.5, -390.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 67]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"PascalDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.017596782302664656`],
      FontColor->RGBColor[
       0.6184987019729621, 0.39212575718243875`, 0.7412532450675947]], {1345.5, 390.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 113]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"ExtremeValueDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.014663985252220546`],
      FontColor->RGBColor[0.428777913273419, 0.5052332520359486, 0.85]], {-6.5, 401.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 43]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"HypergeometricDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.011731188201776438`],
      FontColor->RGBColor[0.7658565873730018, 0.358, 0.4582975578876895]], {-1240.5, -400.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 66]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"BeniniDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.017596782302664656`],
      FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {-570.5, -418.5}, 
     Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 6]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"DavisDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.017596782302664656`],
      FontColor->RGBColor[0.915, 0.3325, 0.2125]], {1289.5, -410.5}, Center, 
     Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 33]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"BorelTannerDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.014663985252220546`],
      FontColor->RGBColor[0.6361597700445392, 0.7170733077827265, 0.]], {9.5, -422.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 18]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"UniformGraphDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.011731188201776438`],
      FontColor->RGBColor[
       0.8064401951137368, 0.3542119609772526, 0.39343300814377197`]], {1503.5, -292.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 150]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"LevyDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.014663985252220546`],
      FontColor->RGBColor[
       0.596786740995709, 0.404791067752503, 0.7955331475107271]], {658.5, 223.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 78]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"ExponentialDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.011731188201776438`],
      FontColor->RGBColor[
       0.26512246998569167`, 0.6229020240114467, 0.73314696398283]], {1554.5, 59.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 41]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"PriceGraphDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.011731188201776438`],
      FontColor->RGBColor[
       0.3383114092015346, 0.5643508726387724, 0.8209736910418415]], {-1600.5, -162.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 120]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"SkellamDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.014663985252220546`],
      FontColor->RGBColor[
       0.6319174318193065, 0.38429816477207124`, 0.7077064204517338]], {1608.5, 277.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 130]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"BenktanderWeibullDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.011731188201776438`],
      FontColor->RGBColor[0.31827505306025683`, 0.715, 0.3808317506505822]], {636.5, 428.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 8]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"ProbabilityDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.011731188201776438`],
      FontColor->RGBColor[
       0.9603267270590103, 0.5591336352950514, 0.10711783694067224`]], {1564.5, -48.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 121]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"HistogramDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.011731188201776438`],
      FontColor->RGBColor[
       0.9840111653093676, 0.677555826546838, 0.04316985366470745]], {1643.5, -166.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 60]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"PearsonDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.014663985252220546`],
      FontColor->RGBColor[0.47929071933511125`, 0.715, 0.1759027208462221]], {1668.5, -229.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 114]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"UniformDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.014663985252220546`],
      FontColor->RGBColor[
       0.969373377466199, 0.6043668873309952, 0.08269188084126262]], {-582.5, 433.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 149]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"ReliabilityDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.011731188201776438`],
      FontColor->RGBColor[0.7042770479220728, 0.358, 0.5530353108891188]], {-1609.5, 335.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 125]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"ProductDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.014663985252220546`],
      FontColor->RGBColor[
       0.9930578157165594, 0.7227890785827968, 0.01874389756528967]], {576.5, -436.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 122]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"ArcSinDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.014663985252220546`],
      FontColor->RGBColor[
       0.23716678280579248`, 0.645266573755366, 0.699600139366951]], {-1062.5, 442.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 1]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"FisherZDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.014663985252220546`],
      FontColor->RGBColor[
       0.9784200278733908, 0.649600139366954, 0.058265924741844846`]], {-1542.5, 442.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 48]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"EmpiricalDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.011731188201776438`],
      FontColor->RGBColor[
       0.8335801463353031, 0.3487839707329394, 0.3481997561078282]], {1167.5, 440.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 37]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"WakebyDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.011731188201776438`],
      FontColor->RGBColor[
       0.2198892179497479, 0.6590886256402017, 0.6788670615396974]], {1608.5, 440.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 155]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"KDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.017596782302664656`],
      FontColor->RGBColor[
       0.28240003484173815`, 0.6090799721266095, 0.7538800418100857]], {-1691.5, -438.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 73]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"StandbyDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.011731188201776438`],
      FontColor->RGBColor[0.529922539669161, 0.44454647619850335`, 0.85]], {-1677.5, 119.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 137]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"OrderDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.014663985252220546`],
      FontColor->RGBColor[0.6897400905885174, 0.358, 0.5753998606330502]], {-0.5, 450.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 110]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"PERTDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.014663985252220546`],
      FontColor->RGBColor[
       0.8745421494417032, 0.39318677583744527`, 0.11135537360425793`]], {-1070.5, -446.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 115]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"SplicedDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.011731188201776438`],
      FontColor->RGBColor[
       0.8633598745697435, 0.40996018814538476`, 0.08339968642435877]], {1751.5, -402.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 135]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"SechDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.014663985252220546`],
      FontColor->RGBColor[
       0.8781534541180211, 0.4921023027453475, 0.04333810870621905]], {-398.5, -472.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 127]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"SliceDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.014663985252220546`],
      FontColor->RGBColor[0.7175796237092107, 0.7261199581899123, 0.]], {1032.5, -464.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 132]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"GeometricDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.011731188201776438`],
      FontColor->RGBColor[
       0.8926354502560807, 0.366046824615879, 0.15658862564020168`]], {43.5, -468.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 55]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"HalfNormalDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.011731188201776438`],
      FontColor->RGBColor[0.4567336004533182, 0.4884598397280091, 0.85]], {455.5, 469.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 59]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"CensoredDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.011731188201776438`],
      FontColor->RGBColor[
       0.845266573755366, 0.437100139366951, 0.03816643438841502]], {1465.5, -460.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 20]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"JohnsonDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.011731188201776438`],
      FontColor->RGBColor[
       0.8510135028964549, 0.47400900193096995`, 0.018912152606809424`]], {-441.5, 478.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 72]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"DirichletDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.011731188201776438`],
      FontColor->RGBColor[0.9307395679624266, 0.7498043964402695, 0.]], {475.5, -482.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 35]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"PoissonDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.011731188201776438`],
      FontColor->RGBColor[
       0.8774935098648088, 0.34000129802703827`, 0.2750108168919853]], {-855.5, 487.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 117]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"MeixnerDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.011731188201776438`],
      FontColor->RGBColor[
       0.6102054708420535, 0.39696347534213544`, 0.7619863228948663]], {894.5, 481.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 93]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"CoxianDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.011731188201776438`],
      FontColor->RGBColor[
       0.5750747800184488, 0.4174563783225715, 0.8498130499538777]], {1291.5, 481.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 30]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"SuzukiDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.011731188201776438`],
      FontColor->RGBColor[
       0.9986489531525362, 0.7507447657626809, 0.0036478264881522893`]], {-1467.5, 487.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 141]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"NormalDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.011731188201776438`],
      FontColor->RGBColor[0.7989994773739094, 0.735166608597101, 0.]], {-1437.5, -487.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 109]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"FRatioDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.011731188201776438`],
      FontColor->RGBColor[
       0.6670481226429111, 0.3638052617916352, 0.6198796933927223]], {1673.5, 481.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 49]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"RiceDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.011731188201776438`],
      FontColor->RGBColor[0.4177882075393331, 0.715, 0.25417864494993975`]], {-1767.5, -212.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 126]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"BetaPrimeDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.008798391151332328],
      FontColor->RGBColor[0.6672593867853922, 0.7205288207539324, 0.]], {-0.5, 490.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 14]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]], 
   TagBox[InsetBox[
     StyleBox["\<\"ChiDistribution\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.008798391151332328],
      FontColor->RGBColor[
       0.9107287510704583, 0.33890687339431275`, 0.20182187767614543`]], {-680.5, 0.5},
      Center, Automatic],
    EventHandlerTag[{"MouseClicked" :> SystemOpen[
        StringExpression["paclet:ref/", 
         ToString[
          
          Part[{"ArcSinDistribution", "BarabasiAlbertGraphDistribution", 
            "BatesDistribution", "BeckmannDistribution", 
            "BenfordDistribution", "BeniniDistribution", 
            "BenktanderGibratDistribution", "BenktanderWeibullDistribution", 
            "BernoulliDistribution", "BernoulliGraphDistribution", 
            "BetaBinomialDistribution", "BetaDistribution", 
            "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", 
            "BinomialDistribution", "BinormalDistribution", 
            "BirnbaumSaundersDistribution", "BorelTannerDistribution", 
            "CauchyDistribution", "CensoredDistribution", "ChiDistribution", 
            "ChiSquareDistribution", "CircularOrthogonalMatrixDistribution", 
            "CircularQuaternionMatrixDistribution", 
            "CircularRealMatrixDistribution", 
            "CircularSymplecticMatrixDistribution", 
            "CircularUnitaryMatrixDistribution", 
            "CompoundPoissonDistribution", "CopulaDistribution", 
            "CoxianDistribution", "DagumDistribution", "DataDistribution", 
            "DavisDistribution", "DegreeGraphDistribution", 
            "DirichletDistribution", "DiscreteUniformDistribution", 
            "EmpiricalDistribution", "ErlangDistribution", 
            "EstimatedDistribution", "ExpGammaDistribution", 
            "ExponentialDistribution", "ExponentialPowerDistribution", 
            "ExtremeValueDistribution", "FailureDistribution", 
            "FindDistribution", "FirstPassageTimeDistribution", 
            "FisherHypergeometricDistribution", "FisherZDistribution", 
            "FRatioDistribution", "FrechetDistribution", "GammaDistribution", 
            "GaussianOrthogonalMatrixDistribution", 
            "GaussianSymplecticMatrixDistribution", 
            "GaussianUnitaryMatrixDistribution", "GeometricDistribution", 
            "GompertzMakehamDistribution", "GraphPropertyDistribution", 
            "GumbelDistribution", "HalfNormalDistribution", 
            "HistogramDistribution", "HjorthDistribution", 
            "HotellingTSquareDistribution", "HoytDistribution", 
            "HyperbolicDistribution", "HyperexponentialDistribution", 
            "HypergeometricDistribution", "HypoexponentialDistribution", 
            "InverseChiSquareDistribution", "InverseGammaDistribution", 
            "InverseGaussianDistribution", "InverseWishartMatrixDistribution",
             "JohnsonDistribution", "KDistribution", 
            "KernelMixtureDistribution", "KumaraswamyDistribution", 
            "LandauDistribution", "LaplaceDistribution", "LevyDistribution", 
            "LindleyDistribution", "LogGammaDistribution", 
            "LogisticDistribution", "LogLogisticDistribution", 
            "LogMultinormalDistribution", "LogNormalDistribution", 
            "LogSeriesDistribution", "MarchenkoPasturDistribution", 
            "MarginalDistribution", "MatrixNormalDistribution", 
            "MatrixPropertyDistribution", "MatrixTDistribution", 
            "MaxStableDistribution", "MaxwellDistribution", 
            "MeixnerDistribution", "MinStableDistribution", 
            "MixtureDistribution", "MoyalDistribution", 
            "MultinomialDistribution", "MultinormalDistribution", 
            "MultivariateHypergeometricDistribution", 
            "MultivariatePoissonDistribution", "MultivariateTDistribution", 
            "NakagamiDistribution", "NegativeBinomialDistribution", 
            "NegativeMultinomialDistribution", "NoncentralBetaDistribution", 
            "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution",
             "NoncentralStudentTDistribution", "NormalDistribution", 
            "OrderDistribution", "ParameterMixtureDistribution", 
            "ParetoDistribution", "PascalDistribution", "PearsonDistribution",
             "PERTDistribution", "PoissonConsulDistribution", 
            "PoissonDistribution", "PolyaAeppliDistribution", 
            "PowerDistribution", "PriceGraphDistribution", 
            "ProbabilityDistribution", "ProductDistribution", 
            "QuantityDistribution", "RayleighDistribution", 
            "ReliabilityDistribution", "RiceDistribution", "SechDistribution",
             "ShiftedGompertzDistribution", "SinghMaddalaDistribution", 
            "SkellamDistribution", "SkewNormalDistribution", 
            "SliceDistribution", "SmoothKernelDistribution", 
            "SpatialGraphDistribution", "SplicedDistribution", 
            "StableDistribution", "StandbyDistribution", 
            "StationaryDistribution", "StudentTDistribution", 
            "SurvivalDistribution", "SuzukiDistribution", 
            "TracyWidomDistribution", "TransformedDistribution", 
            "TriangularDistribution", "TruncatedDistribution", 
            "TsallisQExponentialDistribution", "TsallisQGaussianDistribution",
             "TukeyLambdaDistribution", "UniformDistribution", 
            "UniformGraphDistribution", "UniformSumDistribution", 
            "VarianceGammaDistribution", "VoigtDistribution", 
            "VonMisesDistribution", "WakebyDistribution", 
            "WalleniusHypergeometricDistribution", "WaringYuleDistribution", 
            "WattsStrogatzGraphDistribution", "WeibullDistribution", 
            "WignerSemicircleDistribution", "WishartMatrixDistribution", 
            "ZipfDistribution"}, 21]]]], Method -> "Preemptive", 
      PassEventsDown -> Automatic, PassEventsUp -> True}]]},
  DefaultBaseStyle->{"Graphics", FontFamily -> "Helvetica"},
  ImageSize->Full,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
  PlotRange->{{-1989., 1989.}, {-510., 510.}}]], "Output",
 GeneratedCell->False,
 CellChangeTimes->{
  3.7009085805654535`*^9},ExpressionUUID->"c073ac51-ebe9-4893-b5f9-\
c59b1d3a08a6"]], "Text",
 CellChangeTimes->{3.7009126237942686`*^9, 
  3.7009135733531303`*^9},ExpressionUUID->"df674479-ad8b-4186-ae52-\
4a066d7abef7"],

Cell[TextData[StyleBox["Once you have defined your distribution, you can \
extract different properties from it. Let\[CloseCurlyQuote]s try and evaluate \
a few of them",
 FontFamily->"Arial",
 FontSize->18]], "Text",
 CellChangeTimes->{{3.7009141219956613`*^9, 3.7009141645639915`*^9}, {
  3.70091754284169*^9, 3.7009175619912663`*^9}, {3.7009178945137177`*^9, 
  3.7009178958403916`*^9}},
 FontSize->14,ExpressionUUID->"995dc77d-5e1c-4429-a930-67546b2f6c00"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox[ButtonBox["Probability",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Probability"],
  FontFamily->"Arial",
  FontWeight->"Bold"],
 " and ",
 StyleBox[ButtonBox["Expectation",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Expectation"],
  FontFamily->"Arial",
  FontWeight->"Bold"]
}], "Subsection",
 CellChangeTimes->{{3.7009194333580647`*^9, 3.7009194391894536`*^9}, {
  3.701780111169987*^9, 
  3.7017801395054364`*^9}},ExpressionUUID->"e558872b-438b-41b0-9b25-\
9b62caf65c78"],

Cell["Discrete univariate probabilities", "Text",
 CellChangeTimes->{{3.70091956341164*^9, 
  3.700919573683778*^9}},ExpressionUUID->"759535e6-44ad-49a2-8eaf-\
c0df19e7d5b1"],

Cell[BoxData[
 RowBox[{"Probability", "[", 
  RowBox[{
   RowBox[{"x", "\[GreaterEqual]", "1"}], ",", 
   RowBox[{"x", "\[Distributed]", 
    RowBox[{"BinomialDistribution", "[", 
     RowBox[{"n", ",", "p"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.464438230084673*^9, 3.4644382499356575`*^9}, {
  3.4644492945610094`*^9, 3.4644493235449076`*^9}, {3.464636742349842*^9, 
  3.4646367510287104`*^9}, {3.4816427187453485`*^9, 3.4816427200304766`*^9}, {
  3.5007597456065845`*^9, 3.5007597469277163`*^9}},
 CellTags->{"Probability", "BinomialDistribution"},
 CellLabel->"In[17]:=",ExpressionUUID->"6716010f-1dbb-457b-9a7b-6493e276f18e"],

Cell["Nonlinear conditions", "Text",
 CellChangeTimes->{{3.7009196364254904`*^9, 
  3.700919659137491*^9}},ExpressionUUID->"31c79a58-1a7f-4a09-b7c7-\
0e53a59db8b9"],

Cell[BoxData[
 RowBox[{"Probability", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "-", "3"}], ")"}], "2"], "\[GreaterEqual]", "x"}], ",", 
   RowBox[{"x", "\[Distributed]", 
    RowBox[{"ZipfDistribution", "[", "\[Rho]", "]"}]}]}], "]"}]], "Input",
 CellTags->"ZipfDistribution",
 CellLabel->"In[18]:=",ExpressionUUID->"aa5b7cd9-3dc3-4a6d-90a1-e8057150404d"],

Cell["Logical combinations", "Text",
 CellChangeTimes->{{3.700919662802209*^9, 
  3.7009196640655394`*^9}},ExpressionUUID->"65e855ad-981a-4f40-bbff-\
a7dffe6f3519"],

Cell[BoxData[
 RowBox[{"Probability", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"k", "^", "2"}], ">", "10"}], "||", 
    RowBox[{"k", "<", "2"}]}], ",", 
   RowBox[{"k", "\[Distributed]", 
    RowBox[{"PoissonDistribution", "[", "\[Lambda]", "]"}]}]}], 
  "]"}]], "Input",
 CellTags->"PoissonDistribution",
 CellLabel->"In[19]:=",ExpressionUUID->"458d4365-d890-475c-ba9d-a48ce39ee8e6"],

Cell["Multivariate probabilities", "Text",
 CellChangeTimes->{{3.7009196772754455`*^9, 
  3.700919678065497*^9}},ExpressionUUID->"7bd986c5-5c53-4ee3-bcd6-\
8e0827d1cade"],

Cell[BoxData[
 RowBox[{"Probability", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"X", "\[LessEqual]", 
     RowBox[{"1", "/", "2"}]}], "&&", 
    RowBox[{"Y", "\[LessEqual]", "1"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"X", ",", "Y"}], "}"}], "\[Distributed]", 
    RowBox[{"DirichletDistribution", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}]}]}], "]"}]], "Input",
 CellTags->"DirichletDistribution",
 CellLabel->"In[20]:=",ExpressionUUID->"9d7ab4cd-de2b-4ad1-81cd-8bfd07660d63"],

Cell["Conditional probabilities", "Text",
 CellChangeTimes->{{3.7009196898175783`*^9, 
  3.700919690065233*^9}},ExpressionUUID->"90d9e0b5-ce72-4744-88e0-\
a74d31ff4a48"],

Cell[BoxData[
 RowBox[{"Probability", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "2"], ">", "1"}], "\[Conditioned]", 
    RowBox[{"x", ">", 
     RowBox[{"1", "/", "2"}]}]}], ",", 
   RowBox[{"x", "\[Distributed]", 
    RowBox[{"LaplaceDistribution", "[", 
     RowBox[{"0", ",", 
      RowBox[{"1", "/", "2"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{3.700919813785037*^9},
 CellTags->"LaplaceDistribution",
 CellLabel->"In[21]:=",ExpressionUUID->"9fe74489-335e-405c-af29-8203fbc4e012"],

Cell["Polynomial expectation", "Text",
 CellChangeTimes->{{3.7009197590073633`*^9, 
  3.7009197671759434`*^9}},ExpressionUUID->"86ae3324-450b-4777-9091-\
642d5746c6f1"],

Cell[BoxData[
 RowBox[{"Expectation", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"2", 
     RowBox[{"x", "^", "4"}]}], "+", "3"}], ",", 
   RowBox[{"x", "\[Distributed]", 
    RowBox[{"NormalDistribution", "[", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.700919847920245*^9, 3.700919862806574*^9}},
 CellTags->"NormalDistribution",
 CellLabel->"In[22]:=",ExpressionUUID->"b1fe13b2-6486-45ee-afef-7723181b6aeb"],

Cell["Expectation of an arbitrary expression", "Text",
 CellChangeTimes->{{3.700919879869646*^9, 
  3.700919910400275*^9}},ExpressionUUID->"57dacd7b-248a-41c0-bb14-\
0de4db7ee255"],

Cell[BoxData[
 RowBox[{"Expectation", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"E", "^", 
     RowBox[{"(", 
      RowBox[{"-", "x"}], ")"}]}], "+", 
    RowBox[{"3", "x"}]}], ",", 
   RowBox[{"x", "\[Distributed]", 
    RowBox[{"ChiSquareDistribution", "[", "\[Nu]", "]"}]}]}], "]"}]], "Input",\

 CellTags->"ChiSquareDistribution",
 CellLabel->"In[23]:=",
 CellID->117362026,ExpressionUUID->"f551123e-9ceb-4dac-8db6-78c915005e4a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"b1810bed-f37e-4a94-b24c-c65f45457d7f"],

Cell[CellGroupData[{

Cell["Distribution Properties", "Section",
 CellChangeTimes->{{3.7009200037390428`*^9, 
  3.7009200292913857`*^9}},ExpressionUUID->"a16c7f69-6943-4045-8959-\
f03127821653"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Distribution Functions ", "Subsection"]], "Subsection",
 CellChangeTimes->{{3.70091790296106*^9, 3.7009179445118327`*^9}, {
   3.7009200882960863`*^9, 3.70092010580622*^9}, 3.7011106755291386`*^9, {
   3.7016053836551085`*^9, 3.7016054322010965`*^9}, {3.70160569892819*^9, 
   3.701605708880863*^9}, {3.7017804565310035`*^9, 3.7017804862059345`*^9}, {
   3.701780526763813*^9, 3.7017805267658477`*^9}, {3.7113725656413436`*^9, 
   3.7113725848090715`*^9}, {3.716914511089142*^9, 
   3.716914511479541*^9}},ExpressionUUID->"cc9ea6f1-5f35-4b42-b261-\
ceb09f256c48"],

Cell[TextData[{
 "In this section, you will see how to obtain the probability density \
function ",
 StyleBox[ButtonBox["PDF",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/PDF"],
  FontWeight->"Bold"],
 " (or probability mass function in discrete cases), cumulative density \
function ",
 StyleBox[ButtonBox["CDF",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/CDF"],
  FontWeight->"Bold"],
 ", survival function ",
 StyleBox[ButtonBox["SurvivalFunction",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/SurvivalFunction"],
  FontWeight->"Bold"],
 "and ",
 StyleBox[ButtonBox["HazardFunction ",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/HazardFunction"],
  FontWeight->"Bold"],
 "and visualize them using different built-in visualization techniques. For \
the different classes of distributions (depending on discrete versus \
continuous or univariate versus multivariate), the visualization function \
used will vary. First, look at the definitions of these functions: "
}], "Text",
 CellChangeTimes->{{3.7113719048548126`*^9, 3.7113720126637354`*^9}, {
   3.7113720712573667`*^9, 3.7113721632468653`*^9}, {3.7113722215061417`*^9, 
   3.7113723387832685`*^9}, 3.714736472057023*^9, {3.71492298491696*^9, 
   3.714923028387615*^9}, {3.714924298412901*^9, 3.714924309872278*^9}, {
   3.7169026737882037`*^9, 3.7169026755538263`*^9}, {3.7169139129091377`*^9, 
   3.716913915556974*^9}, {3.717093321150418*^9, 3.717093321150418*^9}, {
   3.7170933799089007`*^9, 3.717093444875598*^9}, {3.7171552523709173`*^9, 
   3.717155289346523*^9}, {3.7189839823427773`*^9, 
   3.7189839986936064`*^9}},ExpressionUUID->"4ef5e643-dd28-4dfc-95fb-\
1a42959321b7"],

Cell[BoxData[
 StyleBox[
  TabViewBox[{{1,"\<\"PDF\"\>"->
   FrameBox[
    TagBox[GridBox[{
       {"\[SpanFromLeft]", 
        InterpretationBox[Cell[BoxData[
          StyleBox["\<\"Univariate\"\>",
           StripOnInput->False,
           FontFamily->"Helvetica"]], "Text", "TR",ExpressionUUID->
          "f4c52799-f369-4d42-8b1b-088bc4d6731f"],
         Text[
          Style["Univariate", FontFamily -> "Helvetica"]]], 
        InterpretationBox[Cell[BoxData[
          StyleBox["\<\"Multivariate\"\>",
           StripOnInput->False,
           FontFamily->"Helvetica"]], "Text", "TR",ExpressionUUID->
          "843f4f42-b4df-4502-8c59-71544651accd"],
         Text[
          Style["Multivariate", FontFamily -> "Helvetica"]]]},
       {
        InterpretationBox[Cell[BoxData[
          StyleBox["\<\"Discrete\"\>",
           StripOnInput->False,
           FontFamily->"Helvetica"]], "Text", "TR",ExpressionUUID->
          "8aba3056-0e1e-42f0-bb89-b66e19477b3c"],
         Text[
          Style["Discrete", FontFamily -> "Helvetica"]]], 
        TagBox[
         FormBox[
          TagBox[
           RowBox[{"Probability", "[", 
            RowBox[{
             RowBox[{"X", "\[LongEqual]", "k"}], ",", "\[Ellipsis]"}], "]"}],
           HoldForm],
          TraditionalForm],
         TraditionalForm,
         Editable->True], 
        TagBox[
         FormBox[
          TagBox[
           RowBox[{"Probability", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               SubscriptBox["X", "1"], "\[LongEqual]", 
               SubscriptBox["k", "1"]}], "\[And]", "\[CenterEllipsis]", 
              "\[And]", 
              RowBox[{
               SubscriptBox["X", "n"], "\[LongEqual]", 
               SubscriptBox["k", "n"]}]}], ",", "\[Ellipsis]"}], "]"}],
           HoldForm],
          TraditionalForm],
         TraditionalForm,
         Editable->True]},
       {
        InterpretationBox[Cell[BoxData[
          StyleBox["\<\"Continuous\"\>",
           StripOnInput->False,
           FontFamily->"Helvetica"]], "Text", "TR",ExpressionUUID->
          "60e705f5-162e-440d-a13f-e00381e68fcb"],
         Text[
          Style["Continuous", FontFamily -> "Helvetica"]]], 
        TagBox[
         FormBox[
          TagBox[
           RowBox[{
            UnderscriptBox["lim", 
             RowBox[{"\[Epsilon]", "\[Rule]", "0"}]], "\[ThinSpace]", 
            FractionBox[
             RowBox[{"Probability", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"x", "-", "\[Epsilon]"}], "<", "X", "\[LessEqual]", 
                "x"}], ",", "\[Ellipsis]"}], "]"}], "\[Epsilon]"]}],
           HoldForm],
          TraditionalForm],
         TraditionalForm,
         Editable->True], 
        TagBox[
         FormBox[
          TagBox[
           RowBox[{"Limit", "[", 
            RowBox[{
             RowBox[{
              FractionBox["1", 
               RowBox[{
                SubscriptBox["\[Epsilon]", "1"], " ", "\[CenterEllipsis]", 
                " ", 
                SubscriptBox["\[Epsilon]", "n"]}]], 
              RowBox[{"Probability", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   SubscriptBox["x", "1"], "-", 
                   SubscriptBox["\[Epsilon]", "1"]}], "<", 
                  SubscriptBox["X", "1"], "\[LessEqual]", 
                  SubscriptBox["x", "1"]}], "\[And]", "\[CenterEllipsis]", 
                 "\[And]", 
                 RowBox[{
                  RowBox[{
                   SubscriptBox["x", "n"], "-", 
                   SubscriptBox["\[Epsilon]", "n"]}], "<", 
                  SubscriptBox["X", "n"], "\[LessEqual]", 
                  SubscriptBox["x", "n"]}]}], ",", "\[Ellipsis]"}], "]"}]}], 
             ",", 
             RowBox[{
              SubscriptBox["\[Epsilon]", "1"], "\[Rule]", "0"}], ",", 
             "\[Ellipsis]", ",", 
             RowBox[{
              SubscriptBox["\[Epsilon]", "n"], "\[Rule]", "0"}]}], "]"}],
           HoldForm],
          TraditionalForm],
         TraditionalForm,
         Editable->True]}
      },
      AutoDelete->False,
      GridBoxDividers->{
       "Columns" -> {False, True, True, False}, 
        "Rows" -> {False, True, True, False}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{4}}}],
     "Grid"],
    Background->RGBColor[0.95, 0.95, 0.95],
    FrameMargins->10,
    FrameStyle->GrayLevel[0.5],
    RoundingRadius->10,
    StripOnInput->False]}, {2,"\<\"CDF\"\>"->
   FrameBox[
    TagBox[GridBox[{
       {"\[SpanFromLeft]", 
        InterpretationBox[Cell[BoxData[
          StyleBox["\<\"Univariate\"\>",
           StripOnInput->False,
           FontFamily->"Helvetica"]], "Text", "TR",ExpressionUUID->
          "951d4bbd-434d-4da8-9be6-688fa7f2a4a6"],
         Text[
          Style["Univariate", FontFamily -> "Helvetica"]]], 
        InterpretationBox[Cell[BoxData[
          StyleBox["\<\"Multivariate\"\>",
           StripOnInput->False,
           FontFamily->"Helvetica"]], "Text", "TR",ExpressionUUID->
          "8c8f53db-43fb-43aa-95f0-87c5a660382c"],
         Text[
          Style["Multivariate", FontFamily -> "Helvetica"]]]},
       {
        InterpretationBox[Cell[BoxData[
          StyleBox["\<\"Discrete\"\>",
           StripOnInput->False,
           FontFamily->"Helvetica"]], "Text", "TR",ExpressionUUID->
          "2d1ab91d-8b41-48d9-9fd4-a535ea2d68af"],
         Text[
          Style["Discrete", FontFamily -> "Helvetica"]]], 
        TagBox[
         FormBox[
          TagBox[
           RowBox[{"Probability", "[", 
            RowBox[{
             RowBox[{"X", "\[LessEqual]", "k"}], ",", "\[Ellipsis]"}], "]"}],
           HoldForm],
          TraditionalForm],
         TraditionalForm,
         Editable->True], 
        TagBox[
         FormBox[
          TagBox[
           RowBox[{"Probability", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               SubscriptBox["X", "1"], "\[LessEqual]", 
               SubscriptBox["k", "1"]}], "\[And]", "\[CenterEllipsis]", 
              "\[And]", 
              RowBox[{
               SubscriptBox["X", "n"], "\[LessEqual]", 
               SubscriptBox["k", "n"]}]}], ",", "\[Ellipsis]"}], "]"}],
           HoldForm],
          TraditionalForm],
         TraditionalForm,
         Editable->True]},
       {
        InterpretationBox[Cell[BoxData[
          StyleBox["\<\"Continuous\"\>",
           StripOnInput->False,
           FontFamily->"Helvetica"]], "Text", "TR",ExpressionUUID->
          "78014752-29d9-4b90-b00d-50116e2b9b8b"],
         Text[
          Style["Continuous", FontFamily -> "Helvetica"]]], 
        TagBox[
         FormBox[
          TagBox[
           RowBox[{"Probability", "[", 
            RowBox[{
             RowBox[{"X", "\[LessEqual]", "x"}], ",", "\[Ellipsis]"}], "]"}],
           HoldForm],
          TraditionalForm],
         TraditionalForm,
         Editable->True], 
        TagBox[
         FormBox[
          TagBox[
           RowBox[{"Probability", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               SubscriptBox["X", "1"], "\[LessEqual]", 
               SubscriptBox["x", "1"]}], "\[And]", "\[CenterEllipsis]", 
              "\[And]", 
              RowBox[{
               SubscriptBox["X", "n"], "\[LessEqual]", 
               SubscriptBox["x", "n"]}]}], ",", "\[Ellipsis]"}], "]"}],
           HoldForm],
          TraditionalForm],
         TraditionalForm,
         Editable->True]}
      },
      AutoDelete->False,
      GridBoxDividers->{
       "Columns" -> {False, True, True, False}, 
        "Rows" -> {False, True, True, False}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{4}}}],
     "Grid"],
    Background->RGBColor[0.95, 0.95, 0.95],
    FrameMargins->10,
    FrameStyle->GrayLevel[0.5],
    RoundingRadius->10,
    StripOnInput->False]}, {3,"\<\"SF\"\>"->
   FrameBox[
    TagBox[GridBox[{
       {"\[SpanFromLeft]", 
        InterpretationBox[Cell[BoxData[
          StyleBox["\<\"Univariate\"\>",
           StripOnInput->False,
           FontFamily->"Helvetica"]], "Text", "TR",ExpressionUUID->
          "91f4c6f2-784a-4405-b823-a6dc6d3e81ec"],
         Text[
          Style["Univariate", FontFamily -> "Helvetica"]]], 
        InterpretationBox[Cell[BoxData[
          StyleBox["\<\"Multivariate\"\>",
           StripOnInput->False,
           FontFamily->"Helvetica"]], "Text", "TR",ExpressionUUID->
          "cf26ea85-9aea-48ec-865a-4bf24be7f273"],
         Text[
          Style["Multivariate", FontFamily -> "Helvetica"]]]},
       {
        InterpretationBox[Cell[BoxData[
          StyleBox["\<\"Discrete\"\>",
           StripOnInput->False,
           FontFamily->"Helvetica"]], "Text", "TR",ExpressionUUID->
          "ce352509-9ec6-426c-be21-868d22e8b79e"],
         Text[
          Style["Discrete", FontFamily -> "Helvetica"]]], 
        TagBox[
         FormBox[
          TagBox[
           RowBox[{"Probability", "[", 
            RowBox[{
             RowBox[{"X", ">", "k"}], ",", "\[Ellipsis]"}], "]"}],
           HoldForm],
          TraditionalForm],
         TraditionalForm,
         Editable->True], 
        TagBox[
         FormBox[
          TagBox[
           RowBox[{"Probability", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               SubscriptBox["X", "1"], ">", 
               SubscriptBox["k", "1"]}], "\[And]", "\[CenterEllipsis]", 
              "\[And]", 
              RowBox[{
               SubscriptBox["X", "n"], ">", 
               SubscriptBox["k", "n"]}]}], ",", "\[Ellipsis]"}], "]"}],
           HoldForm],
          TraditionalForm],
         TraditionalForm,
         Editable->True]},
       {
        InterpretationBox[Cell[BoxData[
          StyleBox["\<\"Continuous\"\>",
           StripOnInput->False,
           FontFamily->"Helvetica"]], "Text", "TR",ExpressionUUID->
          "055ab1e5-3bc4-41d1-8368-a31155b78534"],
         Text[
          Style["Continuous", FontFamily -> "Helvetica"]]], 
        TagBox[
         FormBox[
          TagBox[
           RowBox[{"Probability", "[", 
            RowBox[{
             RowBox[{"X", ">", "x"}], ",", "\[Ellipsis]"}], "]"}],
           HoldForm],
          TraditionalForm],
         TraditionalForm,
         Editable->True], 
        TagBox[
         FormBox[
          TagBox[
           RowBox[{"Probability", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               SubscriptBox["X", "1"], ">", 
               SubscriptBox["x", "1"]}], "\[And]", "\[CenterEllipsis]", 
              "\[And]", 
              RowBox[{
               SubscriptBox["X", "n"], ">", 
               SubscriptBox["x", "n"]}]}], ",", "\[Ellipsis]"}], "]"}],
           HoldForm],
          TraditionalForm],
         TraditionalForm,
         Editable->True]}
      },
      AutoDelete->False,
      GridBoxDividers->{
       "Columns" -> {False, True, True, False}, 
        "Rows" -> {False, True, True, False}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{4}}}],
     "Grid"],
    Background->RGBColor[0.95, 0.95, 0.95],
    FrameMargins->10,
    FrameStyle->GrayLevel[0.5],
    RoundingRadius->10,
    StripOnInput->False]}, {4,"\<\"HF\"\>"->
   FrameBox[
    TagBox[GridBox[{
       {"\[SpanFromLeft]", 
        InterpretationBox[Cell[BoxData[
          StyleBox["\<\"Univariate\"\>",
           StripOnInput->False,
           FontFamily->"Helvetica"]], "Text", "TR",ExpressionUUID->
          "8aff8952-3540-4acb-840f-75e753ca1059"],
         Text[
          Style["Univariate", FontFamily -> "Helvetica"]]], 
        InterpretationBox[Cell[BoxData[
          StyleBox["\<\"Multivariate\"\>",
           StripOnInput->False,
           FontFamily->"Helvetica"]], "Text", "TR",ExpressionUUID->
          "c891761e-88a7-4809-b7e7-46784f9b5de8"],
         Text[
          Style["Multivariate", FontFamily -> "Helvetica"]]]},
       {
        InterpretationBox[Cell[BoxData[
          StyleBox["\<\"Discrete\"\>",
           StripOnInput->False,
           FontFamily->"Helvetica"]], "Text", "TR",ExpressionUUID->
          "e5e7e2d2-b773-447e-b76e-4ac9977f0908"],
         Text[
          Style["Discrete", FontFamily -> "Helvetica"]]], 
        TagBox[
         FormBox[
          TagBox[
           RowBox[{"Probability", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"X", "\[LongEqual]", "k"}], "\[Conditioned]", 
              RowBox[{"X", "\[GreaterEqual]", "k"}]}], ",", "\[Ellipsis]"}], 
            "]"}],
           HoldForm],
          TraditionalForm],
         TraditionalForm,
         Editable->True], 
        TagBox[
         FormBox[
          TagBox[
           RowBox[{"Probability", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SubscriptBox["X", "1"], "\[LongEqual]", 
                 SubscriptBox["k", "1"]}], "\[And]", "\[CenterEllipsis]", 
                "\[And]", 
                RowBox[{
                 SubscriptBox["X", "n"], "\[LongEqual]", 
                 SubscriptBox["k", "n"]}]}], ")"}], "\[Conditioned]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SubscriptBox["X", "1"], "\[GreaterEqual]", 
                 SubscriptBox["k", "1"]}], "\[And]", "\[CenterEllipsis]", 
                "\[And]", 
                RowBox[{
                 SubscriptBox["X", "n"], "\[GreaterEqual]", 
                 SubscriptBox["k", "n"]}]}], ")"}]}], ",", "\[Ellipsis]"}], 
            "]"}],
           HoldForm],
          TraditionalForm],
         TraditionalForm,
         Editable->True]},
       {
        InterpretationBox[Cell[BoxData[
          StyleBox["\<\"Continuous\"\>",
           StripOnInput->False,
           FontFamily->"Helvetica"]], "Text", "TR",ExpressionUUID->
          "ce2ed7ba-f808-4bf7-898f-20cd16d500a4"],
         Text[
          Style["Continuous", FontFamily -> "Helvetica"]]], 
        TagBox[
         FormBox[
          TagBox[
           RowBox[{
            UnderscriptBox["lim", 
             RowBox[{"\[Epsilon]", "\[Rule]", "0"}]], "\[ThinSpace]", 
            FractionBox[
             RowBox[{"Probability", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"x", "<", "X", "\[LessEqual]", 
                 RowBox[{"x", "+", "\[Epsilon]"}]}], "\[Conditioned]", 
                RowBox[{"X", "\[GreaterEqual]", "x"}]}], ",", "\[Ellipsis]"}],
               "]"}], "\[Epsilon]"]}],
           HoldForm],
          TraditionalForm],
         TraditionalForm,
         Editable->True], 
        TagBox[
         FormBox[
          TagBox[
           RowBox[{"Limit", "[", 
            RowBox[{
             RowBox[{
              FractionBox["1", 
               RowBox[{
                SubscriptBox["\[Epsilon]", "1"], " ", "\[CenterEllipsis]", 
                " ", 
                SubscriptBox["\[Epsilon]", "n"]}]], 
              RowBox[{"Probability", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    SubscriptBox["x", "1"], "<", 
                    SubscriptBox["X", "1"], "\[LessEqual]", 
                    RowBox[{
                    SubscriptBox["x", "1"], "+", 
                    SubscriptBox["\[Epsilon]", "1"]}]}], "\[And]", 
                   "\[CenterEllipsis]", "\[And]", 
                   RowBox[{
                    SubscriptBox["x", "n"], "<", 
                    SubscriptBox["X", "n"], "\[LessEqual]", 
                    RowBox[{
                    SubscriptBox["x", "n"], "+", 
                    SubscriptBox["\[Epsilon]", "n"]}]}]}], ")"}], 
                 "\[Conditioned]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    SubscriptBox["X", "1"], "\[GreaterEqual]", 
                    SubscriptBox["x", "1"]}], "\[And]", "\[CenterEllipsis]", 
                   "\[And]", 
                   RowBox[{
                    SubscriptBox["X", "n"], "\[GreaterEqual]", 
                    SubscriptBox["x", "n"]}]}], ")"}]}], ",", "\[Ellipsis]"}],
                "]"}]}], ",", 
             RowBox[{
              SubscriptBox["\[Epsilon]", "1"], "\[Rule]", "0"}], ",", 
             "\[Ellipsis]", ",", 
             RowBox[{
              SubscriptBox["\[Epsilon]", "n"], "\[Rule]", "0"}]}], "]"}],
           HoldForm],
          TraditionalForm],
         TraditionalForm,
         Editable->True]}
      },
      AutoDelete->False,
      GridBoxDividers->{
       "Columns" -> {False, True, True, False}, 
        "Rows" -> {False, True, True, False}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{4}}}],
     "Grid"],
    Background->RGBColor[0.95, 0.95, 0.95],
    FrameMargins->10,
    FrameStyle->GrayLevel[0.5],
    RoundingRadius->10,
    StripOnInput->False]}}, 4], "Text",
  StripOnInput->False]], "Output",
 CellFrame->False,
 ShowCellLabel->False,
 Background->None,ExpressionUUID->"ed6d77dd-9f92-4d80-9e7a-edab94db1b85"],

Cell["Univariate continuous:", "Text",
 CellChangeTimes->{{3.700919338294924*^9, 3.7009193431357093`*^9}, 
   3.714923038122826*^9},ExpressionUUID->"64986a8f-d9c2-4145-8848-\
b34c767cf972"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"func", "[", 
         RowBox[{
          RowBox[{"NormalDistribution", "[", 
           RowBox[{"0", ",", "\[Sigma]"}], "]"}], ",", "x"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Sigma]", ",", 
          RowBox[{"{", 
           RowBox[{".75", ",", "1", ",", "2"}], "}"}]}], "}"}]}], "]"}], "//",
       "Evaluate"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "6"}], ",", "6"}], "}"}], ",", 
     RowBox[{"Filling", "\[Rule]", "Axis"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"func", ",", "PDF", ",", "\"\<ProbabilityFunction\>\""}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
      "PDF", ",", "CDF", ",", "SurvivalFunction", ",", "HazardFunction"}], 
      "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.701023388160427*^9, 3.7010233944970603`*^9}, {
  3.701023474221032*^9, 3.701023529152525*^9}, {3.7010235617927885`*^9, 
  3.701023671848793*^9}},
 CellTags->{
  "Manipulate", "Plot", "Table", "Evaluate", "Filling", "Axis", "PDF", "CDF", 
   "SurvivalFunction", "HazardFunction"},
 CellLabel->"In[24]:=",
 CellID->2002640062,ExpressionUUID->"0e640288-aa84-4bf7-a629-156ca0884fdc"],

Cell["Univariate discrete:", "Text",
 CellChangeTimes->{{3.7009201642970667`*^9, 3.7009201690592794`*^9}, 
   3.714923040114696*^9},ExpressionUUID->"dad1f40a-523e-4468-a4f0-\
a794fb4be399"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"DiscretePlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"func", "[", 
         RowBox[{
          RowBox[{"GeometricDistribution", "[", "p", "]"}], ",", "k"}], "]"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"p", ",", 
          RowBox[{"{", 
           RowBox[{"0.1", ",", "0.2", ",", "0.5"}], "}"}]}], "}"}]}], "]"}], "//",
       "Evaluate"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "14"}], "}"}], ",", 
     RowBox[{"ExtentSize", "\[Rule]", "Right"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"func", ",", "PDF", ",", "\"\<ProbabilityFunction\>\""}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
      "PDF", ",", "CDF", ",", "SurvivalFunction", ",", "HazardFunction"}], 
      "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.700920225156905*^9, {3.701023716954303*^9, 3.701023736212229*^9}},
 CellTags->{"DiscretePlot", "GeometricDistribution", "ExtentSize"},
 CellLabel->"In[25]:=",
 CellID->1700090275,ExpressionUUID->"1a9c76f8-3474-4144-8412-404887c7b89d"],

Cell["Multivariate continuous:", "Text",
 CellChangeTimes->{{3.7009205069311213`*^9, 3.7009205117878256`*^9}, 
   3.714923042074422*^9},ExpressionUUID->"4f4f9975-68ac-4c32-830e-\
8903634a0b54"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"func", "[", 
      RowBox[{
       RowBox[{"BinormalDistribution", "[", 
        RowBox[{"1", "/", "2"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"MaxRecursion", "\[Rule]", "0"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"func", ",", "PDF", ",", "\"\<ProbabilityFunction\>\""}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
      "PDF", ",", "CDF", ",", "SurvivalFunction", ",", "HazardFunction"}], 
      "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7010237681374207`*^9, 3.701023781387746*^9}},
 CellTags->{"BinormalDistribution", "Plot3D", "PlotRange", "MaxRecursion"},
 CellLabel->"In[26]:=",ExpressionUUID->"405e4657-31c4-4454-8dde-81802694b9ff"],

Cell["Multivariate discrete:", "Text",
 CellChangeTimes->{{3.700919347990507*^9, 3.700919353062909*^9}, 
   3.714923047202057*^9},ExpressionUUID->"4c13c396-1b1b-4df6-a620-\
994a6c3eb2d2"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"DiscretePlot3D", "[", 
    RowBox[{
     RowBox[{"func", "[", 
      RowBox[{
       RowBox[{"MultinomialDistribution", "[", 
        RowBox[{"10", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "/", "3"}], ",", 
           RowBox[{"2", "/", "3"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}], ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "1"}], ",", "7"}], "}"}], ",", 
     RowBox[{"ExtentSize", "\[Rule]", "Right"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"func", ",", "PDF", ",", "\"\<ProbabilityFunction\>\""}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
      "PDF", ",", "CDF", ",", "SurvivalFunction", ",", "HazardFunction"}], 
      "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.7009204563668585`*^9, {3.701023801800787*^9, 3.701023814690076*^9}},
 CellTags->"DiscretePlot3D",
 CellLabel->"In[27]:=",
 CellID->2140205674,ExpressionUUID->"93302dba-070d-4d29-b0dd-3c4c328ff23e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Moments ", "Subsection"]], "Subsection",
 CellChangeTimes->{{3.700927224771658*^9, 3.700927254330775*^9}, 
   3.7017749734025197`*^9, 
   3.7113725430295677`*^9},ExpressionUUID->"2a53a894-cbb4-491c-967b-\
325cee29c063"],

Cell[TextData[{
 "In the Wolfram Language, you can obtain the raw moment, ",
 StyleBox[ButtonBox["Moment",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Moment"],
  FontWeight->"Bold"],
 ";",
 ButtonBox[" ",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Moment"],
 "the moment about the mean, ",
 StyleBox[ButtonBox["CentralMoment",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/CentralMoment"],
  FontWeight->"Bold"],
 "; the factorial moment, ",
 StyleBox[ButtonBox["FactorialMoment",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/FactorialMoment"],
  FontWeight->"Bold"],
 "; and the cumulant, ",
 StyleBox[ButtonBox["Cumulant",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Cumulant"],
  FontWeight->"Bold"],
 ". The formulas used in these computations follow: "
}], "Text",
 CellChangeTimes->{{3.7113740149174013`*^9, 3.7113740316250134`*^9}, {
   3.711374157686369*^9, 3.711374294181261*^9}, {3.711374462996851*^9, 
   3.711374539992614*^9}, {3.714923061886035*^9, 3.714923103016838*^9}, 
   3.716913801408943*^9, {3.7169138333589163`*^9, 3.716913883837237*^9}, {
   3.7170934588606167`*^9, 3.717093536407013*^9}, {3.7171553005050445`*^9, 
   3.7171553500476923`*^9}, {3.717163810866045*^9, 3.717163811895546*^9}, {
   3.7189840034059906`*^9, 3.718984089315735*^9}, {3.7189852713658285`*^9, 
   3.718985353004943*^9}},ExpressionUUID->"2423d7f5-1c12-4f50-b5cc-\
3ae32d7c8384"],

Cell[BoxData[
 TabViewBox[{{1,"\<\"Moment\"\>"->
  FrameBox[
   StyleBox[
    TagBox[GridBox[{
       {"\[SpanFromLeft]", 
        InterpretationBox[Cell[BoxData[
          StyleBox["\<\"Moment\"\>",
           StripOnInput->False,
           FontFamily->"Helvetica"]], "Text", "TR",ExpressionUUID->
          "d0eab942-3ada-4eba-aaf1-9134c8629210"],
         Text[
          Style["Moment", FontFamily -> "Helvetica"]]], 
        InterpretationBox[Cell[BoxData[
          StyleBox["\<\"Generating Function\"\>",
           StripOnInput->False,
           FontFamily->"Helvetica"]], "Text", "TR",ExpressionUUID->
          "c4302fa3-9069-4fc5-a111-f4ac37912362"],
         Text[
          Style["Generating Function", FontFamily -> "Helvetica"]]]},
       {
        InterpretationBox[Cell[BoxData[
          StyleBox["\<\"Univariate\"\>",
           StripOnInput->False,
           FontFamily->"Helvetica"]], "Text", "TR",ExpressionUUID->
          "06a76ef7-4161-4b6b-8819-6032e7f0861f"],
         Text[
          Style["Univariate", FontFamily -> "Helvetica"]]], 
        TagBox[
         FormBox[
          TagBox[
           RowBox[{
            SubscriptBox["\[Mu]", "n"], "\[LongEqual]", 
            RowBox[{"Expectation", "[", 
             RowBox[{
              SuperscriptBox["X", "n"], ",", "\[Ellipsis]"}], "]"}]}],
           HoldForm],
          TraditionalForm],
         TraditionalForm,
         Editable->True], 
        TagBox[
         FormBox[
          TagBox[
           RowBox[{
            RowBox[{"MGF", "(", "t", ")"}], "\[LongEqual]", 
            RowBox[{
             RowBox[{
              SubscriptBox["\[ScriptCapitalG]", "n"], "[", 
              FractionBox[
               SubscriptBox["\[Mu]", "n"], 
               RowBox[{"n", "!"}]], "]"}], 
             RowBox[{"(", "t", ")"}]}]}],
           HoldForm],
          TraditionalForm],
         TraditionalForm,
         Editable->True]},
       {
        InterpretationBox[Cell[BoxData[
          StyleBox["\<\"Multivariate\"\>",
           StripOnInput->False,
           FontFamily->"Helvetica"]], "Text", "TR",ExpressionUUID->
          "fe319d92-079b-4ffa-a597-638e05a2270a"],
         Text[
          Style["Multivariate", FontFamily -> "Helvetica"]]], 
        TagBox[
         FormBox[
          TagBox[
           RowBox[{
            SubscriptBox["\[Mu]", 
             RowBox[{
              SubscriptBox["n", "1"], ",", "\[Ellipsis]", ",", 
              SubscriptBox["n", "k"]}]], "\[LongEqual]", 
            RowBox[{"Expectation", "[", 
             RowBox[{
              RowBox[{
               SubsuperscriptBox["X", "1", 
                SubscriptBox["n", "1"]], " ", "\[CenterEllipsis]", " ", 
               SubsuperscriptBox["X", "k", 
                SubscriptBox["n", "k"]]}], ",", "\[Ellipsis]"}], "]"}]}],
           HoldForm],
          TraditionalForm],
         TraditionalForm,
         Editable->True], 
        TagBox[
         FormBox[
          TagBox[
           RowBox[{
            RowBox[{"MGF", "(", 
             RowBox[{
              SubscriptBox["t", "1"], ",", "\[Ellipsis]", ",", 
              SubscriptBox["t", "k"]}], ")"}], "\[LongEqual]", 
            RowBox[{
             RowBox[{
              SubscriptBox["\[ScriptCapitalG]", 
               RowBox[{
                SubscriptBox["n", "1"], ",", "\[Ellipsis]", ",", 
                SubscriptBox["n", "k"]}]], "[", 
              FractionBox[
               SubscriptBox["\[Mu]", 
                RowBox[{
                 SubscriptBox["n", "1"], ",", "\[Ellipsis]", ",", 
                 SubscriptBox["n", "k"]}]], 
               RowBox[{
                RowBox[{
                 SubscriptBox["n", "1"], "!"}], " ", "\[CenterEllipsis]", " ", 
                RowBox[{
                 SubscriptBox["n", "k"], "!"}]}]], "]"}], 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["t", "1"], ",", "\[Ellipsis]", ",", 
               SubscriptBox["t", "k"]}], ")"}]}]}],
           HoldForm],
          TraditionalForm],
         TraditionalForm,
         Editable->True]}
      },
      AutoDelete->False,
      GridBoxDividers->{
       "Columns" -> {False, True, True, False}, 
        "Rows" -> {False, True, True, False}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{4}}}],
     "Grid"], "Text",
    StripOnInput->False],
   Background->RGBColor[0.95, 0.95, 0.95],
   FrameMargins->10,
   FrameStyle->GrayLevel[0.5],
   RoundingRadius->10,
   StripOnInput->False]}, {2,"\<\"CentralMoment\"\>"->
  FrameBox[
   StyleBox[
    TagBox[GridBox[{
       {"\[SpanFromLeft]", 
        InterpretationBox[Cell[BoxData[
          StyleBox["\<\"Moment\"\>",
           StripOnInput->False,
           FontFamily->"Helvetica"]], "Text", "TR",ExpressionUUID->
          "a3db2a60-3195-4e2e-8538-f6dab6eb4e9c"],
         Text[
          Style["Moment", FontFamily -> "Helvetica"]]], 
        InterpretationBox[Cell[BoxData[
          StyleBox["\<\"Generating Function\"\>",
           StripOnInput->False,
           FontFamily->"Helvetica"]], "Text", "TR",ExpressionUUID->
          "6dd534b9-7022-4f6c-bd7e-da73bfa2706b"],
         Text[
          Style["Generating Function", FontFamily -> "Helvetica"]]]},
       {
        InterpretationBox[Cell[BoxData[
          StyleBox["\<\"Univariate\"\>",
           StripOnInput->False,
           FontFamily->"Helvetica"]], "Text", "TR",ExpressionUUID->
          "1ab07970-0cb1-4bc7-8d5d-29837071ca5f"],
         Text[
          Style["Univariate", FontFamily -> "Helvetica"]]], 
        TagBox[
         FormBox[
          TagBox[
           RowBox[{
            SubscriptBox[
             OverscriptBox["\[Mu]", "~"], "n"], "\[LongEqual]", 
            RowBox[{"Expectation", "[", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"X", "-", "\[Mu]"}], ")"}], "n"], ",", 
              "\[Ellipsis]"}], "]"}]}],
           HoldForm],
          TraditionalForm],
         TraditionalForm,
         Editable->True], 
        TagBox[
         FormBox[
          TagBox[
           RowBox[{
            RowBox[{"CMGF", "(", "t", ")"}], "\[LongEqual]", 
            RowBox[{
             RowBox[{
              SubscriptBox["\[ScriptCapitalG]", "n"], "[", 
              FractionBox[
               SubscriptBox[
                OverscriptBox["\[Mu]", "~"], "n"], 
               RowBox[{"n", "!"}]], "]"}], 
             RowBox[{"(", "t", ")"}]}]}],
           HoldForm],
          TraditionalForm],
         TraditionalForm,
         Editable->True]},
       {
        InterpretationBox[Cell[BoxData[
          StyleBox["\<\"Multivariate\"\>",
           StripOnInput->False,
           FontFamily->"Helvetica"]], "Text", "TR",ExpressionUUID->
          "51b28375-6216-461e-ad5f-9c76fc9c91ab"],
         Text[
          Style["Multivariate", FontFamily -> "Helvetica"]]], 
        TagBox[
         FormBox[
          TagBox[
           RowBox[{
            SubscriptBox[
             OverscriptBox["\[Mu]", "~"], 
             RowBox[{
              SubscriptBox["n", "1"], ",", "\[Ellipsis]", ",", 
              SubscriptBox["n", "k"]}]], "\[LongEqual]", 
            RowBox[{"Expectation", "[", 
             RowBox[{
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  SubscriptBox["X", "1"], "-", 
                  SubscriptBox["\[Mu]", 
                   SubscriptBox["X", "1"]]}], ")"}], 
                SubscriptBox["n", "1"]], " ", "\[CenterEllipsis]", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  SubscriptBox["X", "k"], "-", 
                  SubscriptBox["\[Mu]", 
                   SubscriptBox["X", "k"]]}], ")"}], 
                SubscriptBox["n", "k"]]}], ",", "\[Ellipsis]"}], "]"}]}],
           HoldForm],
          TraditionalForm],
         TraditionalForm,
         Editable->True], 
        TagBox[
         FormBox[
          TagBox[
           RowBox[{
            RowBox[{"CMGF", "(", 
             RowBox[{
              SubscriptBox["t", "1"], ",", "\[Ellipsis]", ",", 
              SubscriptBox["t", "k"]}], ")"}], "\[LongEqual]", 
            RowBox[{
             RowBox[{
              SubscriptBox["\[ScriptCapitalG]", 
               RowBox[{
                SubscriptBox["n", "1"], ",", "\[Ellipsis]", ",", 
                SubscriptBox["n", "k"]}]], "[", 
              FractionBox[
               SubscriptBox[
                OverscriptBox["\[Mu]", "~"], 
                RowBox[{
                 SubscriptBox["n", "1"], ",", "\[Ellipsis]", ",", 
                 SubscriptBox["n", "k"]}]], 
               RowBox[{
                RowBox[{
                 SubscriptBox["n", "1"], "!"}], " ", "\[CenterEllipsis]", " ", 
                RowBox[{
                 SubscriptBox["n", "k"], "!"}]}]], "]"}], 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["t", "1"], ",", "\[Ellipsis]", ",", 
               SubscriptBox["t", "k"]}], ")"}]}]}],
           HoldForm],
          TraditionalForm],
         TraditionalForm,
         Editable->True]}
      },
      AutoDelete->False,
      GridBoxDividers->{
       "Columns" -> {False, True, True, False}, 
        "Rows" -> {False, True, True, False}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{4}}}],
     "Grid"], "Text",
    StripOnInput->False],
   Background->RGBColor[0.95, 0.95, 0.95],
   FrameMargins->10,
   FrameStyle->GrayLevel[0.5],
   RoundingRadius->10,
   StripOnInput->False]}, {3,"\<\"FactorialMoment\"\>"->
  FrameBox[
   StyleBox[
    TagBox[GridBox[{
       {"\[SpanFromLeft]", 
        InterpretationBox[Cell[BoxData[
          StyleBox["\<\"Moment\"\>",
           StripOnInput->False,
           FontFamily->"Helvetica"]], "Text", "TR",ExpressionUUID->
          "6ae77d2a-3be6-4c42-8501-92aac391715b"],
         Text[
          Style["Moment", FontFamily -> "Helvetica"]]], 
        InterpretationBox[Cell[BoxData[
          StyleBox["\<\"Generating Function\"\>",
           StripOnInput->False,
           FontFamily->"Helvetica"]], "Text", "TR",ExpressionUUID->
          "13e55763-4b13-4b59-8e6e-5c4c70712a55"],
         Text[
          Style["Generating Function", FontFamily -> "Helvetica"]]]},
       {
        InterpretationBox[Cell[BoxData[
          StyleBox["\<\"Univariate\"\>",
           StripOnInput->False,
           FontFamily->"Helvetica"]], "Text", "TR",ExpressionUUID->
          "cd1a4716-95b9-4499-ae1b-18e7af52a91e"],
         Text[
          Style["Univariate", FontFamily -> "Helvetica"]]], 
        TagBox[
         FormBox[
          TagBox[
           RowBox[{
            SubscriptBox[
             OverscriptBox["\[Mu]", "_"], "n"], "\[LongEqual]", 
            RowBox[{"Expectation", "[", 
             RowBox[{
              TemplateBox[{"X","n"},
               "FactorialPower"], ",", "\[Ellipsis]"}], "]"}]}],
           HoldForm],
          TraditionalForm],
         TraditionalForm,
         Editable->True], 
        TagBox[
         FormBox[
          TagBox[
           RowBox[{
            RowBox[{"FMGF", "(", "t", ")"}], "\[LongEqual]", 
            RowBox[{
             RowBox[{
              SubscriptBox["\[ScriptCapitalG]", "n"], "[", 
              FractionBox[
               SubscriptBox[
                OverscriptBox["\[Mu]", "_"], "n"], 
               RowBox[{"n", "!"}]], "]"}], 
             RowBox[{"(", 
              RowBox[{"t", "-", "1"}], ")"}]}]}],
           HoldForm],
          TraditionalForm],
         TraditionalForm,
         Editable->True]},
       {
        InterpretationBox[Cell[BoxData[
          StyleBox["\<\"Multivariate\"\>",
           StripOnInput->False,
           FontFamily->"Helvetica"]], "Text", "TR",ExpressionUUID->
          "96cf96f4-ea61-4cc4-b142-1526e5cba777"],
         Text[
          Style["Multivariate", FontFamily -> "Helvetica"]]], 
        TagBox[
         FormBox[
          TagBox[
           RowBox[{
            SubscriptBox[
             OverscriptBox["\[Mu]", "_"], 
             RowBox[{
              SubscriptBox["n", "1"], ",", "\[Ellipsis]", ",", 
              SubscriptBox["n", "k"]}]], "\[LongEqual]", 
            RowBox[{"Expectation", "[", 
             RowBox[{
              RowBox[{
               TemplateBox[{RowBox[{"(", 
                   SubscriptBox["X", "1"], ")"}],SubscriptBox["n", "1"]},
                "FactorialPower"], " ", "\[CenterEllipsis]", " ", 
               TemplateBox[{RowBox[{"(", 
                   SubscriptBox["X", "k"], ")"}],SubscriptBox["n", "k"]},
                "FactorialPower"]}], ",", "\[Ellipsis]"}], "]"}]}],
           HoldForm],
          TraditionalForm],
         TraditionalForm,
         Editable->True], 
        TagBox[
         FormBox[
          TagBox[
           RowBox[{
            RowBox[{"FMGF", "(", 
             RowBox[{
              SubscriptBox["t", "1"], ",", "\[Ellipsis]", ",", 
              SubscriptBox["t", "k"]}], ")"}], "\[LongEqual]", 
            RowBox[{
             RowBox[{
              SubscriptBox["\[ScriptCapitalG]", 
               RowBox[{
                SubscriptBox["n", "1"], ",", "\[Ellipsis]", ",", 
                SubscriptBox["n", "k"]}]], "[", 
              FractionBox[
               SubscriptBox[
                OverscriptBox["\[Mu]", "_"], 
                RowBox[{
                 SubscriptBox["n", "1"], ",", "\[Ellipsis]", ",", 
                 SubscriptBox["n", "k"]}]], 
               RowBox[{
                RowBox[{
                 SubscriptBox["n", "1"], "!"}], " ", "\[CenterEllipsis]", " ", 
                RowBox[{
                 SubscriptBox["n", "k"], "!"}]}]], "]"}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SubscriptBox["t", "1"], "-", "1"}], ",", "\[Ellipsis]", ",", 
               RowBox[{
                SubscriptBox["t", "k"], "-", "1"}]}], ")"}]}]}],
           HoldForm],
          TraditionalForm],
         TraditionalForm,
         Editable->True]}
      },
      AutoDelete->False,
      GridBoxDividers->{
       "Columns" -> {False, True, True, False}, 
        "Rows" -> {False, True, True, False}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{4}}}],
     "Grid"], "Text",
    StripOnInput->False],
   Background->RGBColor[0.95, 0.95, 0.95],
   FrameMargins->10,
   FrameStyle->GrayLevel[0.5],
   RoundingRadius->10,
   StripOnInput->False]}}, 3]], "Output",
 CellFrame->False,
 ShowCellLabel->False,
 CellChangeTimes->{{3.4957433498349795`*^9, 3.495743359444949*^9}, {
   3.4957526082651424`*^9, 3.495752629701286*^9}, 3.495829915942067*^9, {
   3.4959043952851906`*^9, 3.4959043993465967`*^9}, {3.495926598766968*^9, 
   3.495926604054735*^9}, {3.5002942014773054`*^9, 3.500294231284286*^9}},
 Background->None,ExpressionUUID->"a6d06096-32f2-48c0-a319-d1b271a7e026"],

Cell[TextData[{
 "Compute the second ",
 StyleBox[ButtonBox["Moment",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Moment"],
  FontWeight->"Bold"],
 " ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Mu]", "2"], TraditionalForm]], "InlineMath",
  ExpressionUUID->"d2269375-6c40-4fcd-82d8-767db697ff9b"],
 " of a univariate distribution: "
}], "Text",
 CellChangeTimes->{{3.711374549456812*^9, 3.7113745789140587`*^9}, {
  3.711374723898681*^9, 3.7113747376748877`*^9}, {3.7170935793463774`*^9, 
  3.7170935803620687`*^9}},ExpressionUUID->"46dde62e-e96f-4a97-b778-\
7d4d9b78945e"],

Cell[BoxData[
 RowBox[{"Moment", "[", 
  RowBox[{
   RowBox[{"NormalDistribution", "[", 
    RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", "2"}], "]"}]], "Input",
 CellLabel->"In[28]:=",
 CellID->375227910,ExpressionUUID->"95543a11-0c48-4ca1-b196-e772cccb7b04"],

Cell[TextData[{
 "The second and third instances of ",
 StyleBox[ButtonBox["CentralMoment",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/CentralMoment"],
  FontWeight->"Bold"],
 " as measures of dispersion and skewness: "
}], "Text",
 CellChangeTimes->{{3.711374795784052*^9, 3.711374814658884*^9}, {
   3.7113752276753435`*^9, 3.7113752333751297`*^9}, {3.7149231318235683`*^9, 
   3.7149231415831633`*^9}, 
   3.717093558517429*^9},ExpressionUUID->"0b7086f3-4e28-4254-bf5a-\
deaf591ed3de"],

Cell[BoxData[
 RowBox[{"CentralMoment", "[", 
  RowBox[{
   RowBox[{"NormalDistribution", "[", 
    RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{3.711374975636175*^9},
 CellLabel->"In[29]:=",ExpressionUUID->"5de70631-3fcd-4420-ae08-c12ad6b99bc0"],

Cell["\<\
Zero-skewed, positively skewed and negatively skewed distributions:\
\>", "Text",
 CellChangeTimes->{{3.7113751812922416`*^9, 3.711375208238285*^9}, 
   3.714923149888424*^9},ExpressionUUID->"a0ff7e74-8323-4ff0-b8a5-\
d08e651f7398"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"CentralMoment", "[", 
     RowBox[{
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"1", ",", "2"}], "]"}], ",", "3"}], "]"}], ",", " ", 
    RowBox[{"CentralMoment", "[", 
     RowBox[{
      RowBox[{"ChiSquareDistribution", "[", "2", "]"}], ",", "3"}], "]"}], 
    ",", 
    RowBox[{"CentralMoment", "[", 
     RowBox[{
      RowBox[{"GumbelDistribution", "[", 
       RowBox[{"1", ",", "2"}], "]"}], ",", "3"}], "]"}]}], "}"}], "//", 
  "N"}]], "Input",
 CellChangeTimes->{{3.711375008002101*^9, 3.7113750231813693`*^9}, {
  3.711375059060602*^9, 3.711375171128991*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"a59d7a2b-bc81-4c94-bcb9-b4513c2a7512"],

Cell[TextData[{
 "Tabulate moments up to order 5 for the ",
 Cell[BoxData[
  ButtonBox[
   StyleBox["GammaDistribution", "Text",
    FontWeight->Bold],
   BaseStyle->"Link",
   ButtonData->"paclet://ref/GammaDistribution"]],ExpressionUUID->
  "6b6b9acc-c811-4ea1-8bd3-bfa616035fa2"],
 ":"
}], "Text",
 CellChangeTimes->{{3.701605725868549*^9, 3.701605753816755*^9}, {
  3.701781127398024*^9, 3.701781145501835*^9}, {3.7113752140120063`*^9, 
  3.7113752192919736`*^9}, {3.71492315714417*^9, 3.714923169846197*^9}, {
  3.7170935963308735`*^9, 3.7170936000341697`*^9}, {3.7171553598426895`*^9, 
  3.7171553660145226`*^9}},ExpressionUUID->"aa6e3696-eb93-47d6-b72a-\
91372d124671"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MomentTabView", "[", 
  RowBox[{
   RowBox[{"GammaDistribution", "[", 
    RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.7016929130103164`*^9, 3.7016929291249743`*^9}, 
   3.70177049844841*^9, 3.7017705668711357`*^9},
 CellTags->"GammaDistribution",
 CellLabel->"In[31]:=",ExpressionUUID->"8945dc80-ee1b-4c27-9b54-f1822b8c59bd"],

Cell[BoxData[
 TabViewBox[{{1,"\<\"Moment\"\>"->
  TagBox[GridBox[{
     {
      RowBox[{"\[Alpha]", " ", "\[Beta]"}]},
     {
      RowBox[{"\[Alpha]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "\[Alpha]"}], ")"}], " ", 
       SuperscriptBox["\[Beta]", "2"]}]},
     {
      RowBox[{"\[Alpha]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "\[Alpha]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "\[Alpha]"}], ")"}], " ", 
       SuperscriptBox["\[Beta]", "3"]}]},
     {
      RowBox[{"\[Alpha]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "\[Alpha]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "\[Alpha]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", "\[Alpha]"}], ")"}], " ", 
       SuperscriptBox["\[Beta]", "4"]}]},
     {
      RowBox[{"\[Alpha]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "\[Alpha]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "\[Alpha]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", "\[Alpha]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"4", "+", "\[Alpha]"}], ")"}], " ", 
       SuperscriptBox["\[Beta]", "5"]}]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {{
         RGBColor[0.8, 0.9, 0.9], 
         GrayLevel[1]}}},
    GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {
        RGBColor[0.2, 0.2, 0.2], {False}, 
        RGBColor[0.2, 0.2, 0.2]}},
    GridBoxItemSize->{"Columns" -> {{30}}}],
   "Grid"]}, {2,"\<\"CentralMoment\"\>"->
  TagBox[GridBox[{
     {"0"},
     {
      RowBox[{"\[Alpha]", " ", 
       SuperscriptBox["\[Beta]", "2"]}]},
     {
      RowBox[{"2", " ", "\[Alpha]", " ", 
       SuperscriptBox["\[Beta]", "3"]}]},
     {
      RowBox[{"3", " ", "\[Alpha]", " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "\[Alpha]"}], ")"}], " ", 
       SuperscriptBox["\[Beta]", "4"]}]},
     {
      RowBox[{"4", " ", "\[Alpha]", " ", 
       RowBox[{"(", 
        RowBox[{"6", "+", 
         RowBox[{"5", " ", "\[Alpha]"}]}], ")"}], " ", 
       SuperscriptBox["\[Beta]", "5"]}]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {{
         RGBColor[1., 0.8500000000000001, 0.8], 
         GrayLevel[1]}}},
    GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {
        RGBColor[0.2, 0.2, 0.2], {False}, 
        RGBColor[0.2, 0.2, 0.2]}},
    GridBoxItemSize->{"Columns" -> {{30}}}],
   "Grid"]}, {3,"\<\"FactorialMoment\"\>"->
  TagBox[GridBox[{
     {
      RowBox[{"\[Alpha]", " ", "\[Beta]"}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[Alpha]"}], " ", "\[Beta]"}], "+", 
       RowBox[{"\[Alpha]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}], " ", 
        SuperscriptBox["\[Beta]", "2"]}]}]},
     {
      RowBox[{
       RowBox[{"2", " ", "\[Alpha]", " ", "\[Beta]"}], "-", 
       RowBox[{"3", " ", "\[Alpha]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}], " ", 
        SuperscriptBox["\[Beta]", "2"]}], "+", 
       RowBox[{"\[Alpha]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"2", "+", "\[Alpha]"}], ")"}], " ", 
        SuperscriptBox["\[Beta]", "3"]}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", "6"}], " ", "\[Alpha]", " ", "\[Beta]"}], "+", 
       RowBox[{"11", " ", "\[Alpha]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}], " ", 
        SuperscriptBox["\[Beta]", "2"]}], "-", 
       RowBox[{"6", " ", "\[Alpha]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"2", "+", "\[Alpha]"}], ")"}], " ", 
        SuperscriptBox["\[Beta]", "3"]}], "+", 
       RowBox[{"\[Alpha]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"2", "+", "\[Alpha]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"3", "+", "\[Alpha]"}], ")"}], " ", 
        SuperscriptBox["\[Beta]", "4"]}]}]},
     {
      RowBox[{
       RowBox[{"24", " ", "\[Alpha]", " ", "\[Beta]"}], "-", 
       RowBox[{"50", " ", "\[Alpha]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}], " ", 
        SuperscriptBox["\[Beta]", "2"]}], "+", 
       RowBox[{"35", " ", "\[Alpha]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"2", "+", "\[Alpha]"}], ")"}], " ", 
        SuperscriptBox["\[Beta]", "3"]}], "-", 
       RowBox[{"10", " ", "\[Alpha]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"2", "+", "\[Alpha]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"3", "+", "\[Alpha]"}], ")"}], " ", 
        SuperscriptBox["\[Beta]", "4"]}], "+", 
       RowBox[{"\[Alpha]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"2", "+", "\[Alpha]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"3", "+", "\[Alpha]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"4", "+", "\[Alpha]"}], ")"}], " ", 
        SuperscriptBox["\[Beta]", "5"]}]}]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {{
         RGBColor[0.9, 0.9, 1.], 
         GrayLevel[1]}}},
    GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {
        RGBColor[0.2, 0.2, 0.2], {False}, 
        RGBColor[0.2, 0.2, 0.2]}},
    GridBoxItemSize->{"Columns" -> {{30}}}],
   "Grid"]}, {4,"\<\"Cumulant\"\>"->
  TagBox[GridBox[{
     {
      RowBox[{"\[Alpha]", " ", "\[Beta]"}]},
     {
      RowBox[{"\[Alpha]", " ", 
       SuperscriptBox["\[Beta]", "2"]}]},
     {
      RowBox[{"2", " ", "\[Alpha]", " ", 
       SuperscriptBox["\[Beta]", "3"]}]},
     {
      RowBox[{"6", " ", "\[Alpha]", " ", 
       SuperscriptBox["\[Beta]", "4"]}]},
     {
      RowBox[{"24", " ", "\[Alpha]", " ", 
       SuperscriptBox["\[Beta]", "5"]}]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {{
         RGBColor[0.95, 0.8, 0.8500000000000001], 
         GrayLevel[1]}}},
    GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {
        RGBColor[0.2, 0.2, 0.2], {False}, 
        RGBColor[0.2, 0.2, 0.2]}},
    GridBoxItemSize->{"Columns" -> {{30}}}],
   "Grid"]}}, 1]], "Output", "Output",
 CellFrame->False,
 CellMargins->{{100, 100}, {40, 0}},
 GeneratedCell->False,
 ShowCellLabel->False,
 CellChangeTimes->{3.7391235596911917`*^9},
 Background->None,
 CellTags->
  "GammaDistribution",ExpressionUUID->"58e049c9-0161-494c-abc4-3c64a3223cf2"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"931553af-c3a9-483f-926c-b25b7c0e8129"],

Cell[CellGroupData[{

Cell["Simulation of Distributions", "Section",
 CellChangeTimes->{{3.700927491230589*^9, 3.7009274930063066`*^9}, {
   3.7010138256015587`*^9, 3.7010138353091135`*^9}, 
   3.701092341987426*^9},ExpressionUUID->"75d633a2-3d91-4a40-908c-\
7511d11a990b"],

Cell["Univariate Continuous", "Text",
 CellChangeTimes->{{3.7010102130986695`*^9, 3.70101021664564*^9}, {
  3.701010250487895*^9, 
  3.701010254613285*^9}},ExpressionUUID->"b114a0aa-f46f-4a22-ba74-\
6f325a1d2ca7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"1", ",", "3"}], "]"}], ",", 
     RowBox[{"10", "^", "4"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Histogram", "[", 
    RowBox[{"data", ",", "20", ",", "\"\<ProbabilityDensity\>\""}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"1", ",", "3"}], "]"}], ",", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "9"}], ",", "9"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Thick"}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7010102405652523`*^9, 3.70101024097149*^9}},
 CellTags->{"RandomVariate", "Show", "PlotStyle", "Thick"},
 CellLabel->"In[32]:=",
 CellID->980116677,ExpressionUUID->"3e2586c9-0949-4fc6-a9a6-15700be2a0ce"],

Cell["Multivariate Discrete", "Text",
 CellChangeTimes->{{3.70101024497163*^9, 
  3.7010102691887226`*^9}},ExpressionUUID->"6121429f-2f76-4981-a1a0-\
f3ea74a3509b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"MultivariatePoissonDistribution", "[", 
      RowBox[{"1", ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3"}], "}"}]}], "]"}], ",", 
     RowBox[{"10", "^", "4"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Histogram3D", "[", 
    RowBox[{"data", ",", "20", ",", "\"\<Probability\>\"", ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "10"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "10"}], "}"}], ",", "All"}], "}"}]}]}], "]"}], ",",
    "\[IndentingNewLine]", 
   RowBox[{"DiscretePlot3D", "[", 
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"MultivariatePoissonDistribution", "[", 
        RowBox[{"1", ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "3"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "10"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"ExtentSize", "\[Rule]", "Full"}]}], "]"}]}], "}"}]}], "Input",
 CellChangeTimes->{
  3.7010102386432314`*^9, 3.7010102762672224`*^9, {3.701092714324895*^9, 
   3.701092717790072*^9}},
 CellTags->"MultivariatePoissonDistribution",
 CellLabel->"In[34]:=",
 CellID->1621417849,ExpressionUUID->"5169e219-3ea1-425f-9813-51466e5f39b5"],

Cell["Mixture Distributions", "Text",
 CellChangeTimes->{{3.701010332366341*^9, 
  3.70101033675733*^9}},ExpressionUUID->"70302da0-2b28-4a53-ad23-\
272156c389cd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[ScriptCapitalD]", " ", "=", 
   RowBox[{"MixtureDistribution", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"0", ",", "1"}], "]"}], ",", 
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"6", ",", "2"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{"\[ScriptCapitalD]", ",", 
     RowBox[{"10", "^", "5"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Histogram", "[", 
    RowBox[{"data", ",", "50", ",", "\"\<PDF\>\""}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{"\[ScriptCapitalD]", ",", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "20"}], ",", "20"}], "}"}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7010103510269213`*^9, 3.7010103576043634`*^9}, 
   3.701620964279334*^9},
 CellTags->"MixtureDistribution",
 CellLabel->"In[36]:=",
 CellID->181972816,ExpressionUUID->"2e641f77-824f-4fda-b725-63b19035ce28"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"1f0f32e2-1022-4c1a-b709-34049a551e66"],

Cell[CellGroupData[{

Cell["Fitting Data to Known Distributions", "Section",
 CellChangeTimes->{{3.701010876186033*^9, 3.70101088822723*^9}, {
   3.701010937687173*^9, 3.7010109437647867`*^9}, {3.701092357491291*^9, 
   3.70109236977061*^9}, {3.7010927664839134`*^9, 3.7010927876589575`*^9}, {
   3.7011047358198805`*^9, 3.7011047362891283`*^9}, {3.7011906502941384`*^9, 
   3.701190658358275*^9}, 3.7011906893410892`*^9, {3.7021435160692706`*^9, 
   3.7021435215882707`*^9}},ExpressionUUID->"cb9fcfe6-6712-4775-adb2-\
f3d365278b9a"],

Cell[TextData[{
 "The lottery.txt file contains information on the Maryland Pick 3 lottery. \
The winning numbers are returned as three-digit numbers from 000 to 999. If \
the lottery is fair, you would expect the winning numbers to come from a \
uniform distribution defined on the interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"0", ",", "999"}], "}"}], $CellContext`MR]],ExpressionUUID->
  "79978386-17fc-4a06-8dc8-9ac1eff1ca34"],
 ". Let\[CloseCurlyQuote]s go ahead and check that visually and \
quantitatively."
}], "Text",
 CellChangeTimes->{{3.7010108951965528`*^9, 3.7010109231001806`*^9}, {
   3.7010971539151525`*^9, 3.7010971583238373`*^9}, {3.7011047432806787`*^9, 
   3.7011047583226185`*^9}, 
   3.7021392448412704`*^9},ExpressionUUID->"34449b10-ca89-45b2-a649-\
d022c57c07ac"],

Cell[CellGroupData[{

Cell["Visualizations", "Subsection",
 CellChangeTimes->{{3.7010110071169386`*^9, 3.701011014407653*^9}, {
  3.70109280131522*^9, 
  3.7010928238759637`*^9}},ExpressionUUID->"f5da713d-74be-4dc1-bd3a-\
41ab5fe0d8c3"],

Cell[TextData[{
 StyleBox[ButtonBox["Import",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Import"],
  FontFamily->"Arial",
  FontWeight->"Bold"],
 " the data:"
}], "Text",
 CellChangeTimes->{{3.701782257905594*^9, 3.7017822721000767`*^9}, {
   3.7017823532373347`*^9, 3.701782353240342*^9}, 
   3.7017830987434654`*^9},ExpressionUUID->"830f14ca-87cf-428f-aff3-\
a7b115614237"],

Cell[BoxData[
 RowBox[{
  RowBox[{"lotDat", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<lottery.txt\>\""}],
        "}"}], "]"}], ",", "\"\<List\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7010228225208683`*^9, 3.701022908196435*^9}},
 CellTags->{"Import", "FileNameJoin", "NotebookDirectory"},
 CellLabel->"In[39]:=",ExpressionUUID->"bf965b4c-9fcd-45dd-920d-5869e353b597"],

Cell[TextData[{
 "Visualize the data by plotting a ",
 StyleBox[ButtonBox["Histogram",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Histogram"],
  FontFamily->"Arial",
  FontWeight->"Bold"],
 ", along with ",
 StyleBox[ButtonBox["DistributionChart",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/DistributionChart"],
  FontFamily->"Arial",
  FontWeight->"Bold"],
 " and ",
 StyleBox[ButtonBox["BoxWhiskerChart",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/BoxWhiskerChart"],
  FontFamily->"Arial",
  FontWeight->"Bold"],
 ". Finally, ",
 StyleBox[ButtonBox["QuantilePlot",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/QuantilePlot"],
  FontFamily->"Arial",
  FontWeight->"Bold"],
 " will help compare the data to a UniformDistribution."
}], "Text",
 CellChangeTimes->{{3.701782276393424*^9, 3.7017823394900618`*^9}, {
   3.7017823810928993`*^9, 3.70178238109493*^9}, {3.701782411682684*^9, 
   3.7017824593556128`*^9}, 
   3.7021393049262705`*^9},ExpressionUUID->"4f6f2035-448e-47d3-92d1-\
dcedf5b15556"],

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Histogram", "[", 
      RowBox[{"lotDat", ",", "10", ",", 
       RowBox[{"PlotLabel", "\[Rule]", " ", "\"\<Histogram\>\""}]}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"DistributionChart", "[", 
      RowBox[{"lotDat", ",", 
       RowBox[{"PlotLabel", "\[Rule]", " ", "\"\<DistributionChart\>\""}]}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"BoxWhiskerChart", "[", 
      RowBox[{"lotDat", ",", 
       RowBox[{"PlotLabel", "\[Rule]", " ", "\"\<BoxWhiskerChart\>\""}]}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"QuantilePlot", "[", 
      RowBox[{"lotDat", ",", 
       RowBox[{"UniformDistribution", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", "999"}], "}"}], "]"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", " ", "\"\<QuantilePlot\>\""}]}], 
      "]"}]}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "1000"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7010924999284587`*^9, 3.701092609967659*^9}, {
  3.7016206939002943`*^9, 3.7016207655244455`*^9}},
 CellTags->{
  "GraphicsRow", "Histogram", "DistributionChart", "BoxWhiskerChart", 
   "QuantilePlot", "PlotLabel"},
 CellLabel->"In[40]:=",ExpressionUUID->"09ce6826-322f-4f60-834b-59a28fbc5466"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Quantitative fitting", "Subsection",
 CellChangeTimes->{{3.7010110204613075`*^9, 3.7010110260287714`*^9}, 
   3.7011106702626143`*^9},ExpressionUUID->"2a58fc9b-bb8b-4395-a427-\
d01dbfca14a9"],

Cell[TextData[{
 "Now let\[CloseCurlyQuote]s do a quantitative test. ",
 StyleBox[ButtonBox["DistributionFitTest",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/DistributionFitTest"],
  FontWeight->"Bold"],
 " can be used to determine if your assumptions about the fairness of the \
lottery are reasonable."
}], "Text",
 CellChangeTimes->{{3.701782515115138*^9, 
  3.701782535747085*^9}},ExpressionUUID->"e544785f-be3f-4103-8243-\
f008809aa584"],

Cell[BoxData[
 RowBox[{"ftTst", "=", " ", 
  RowBox[{"DistributionFitTest", "[", 
   RowBox[{"lotDat", ",", 
    RowBox[{"UniformDistribution", "[", 
     RowBox[{"{", 
      RowBox[{"0", ",", "999"}], "}"}], "]"}], ",", 
    "\"\<HypothesisTestData\>\""}], "]"}]}]], "Input",
 CellTags->{"DistributionFitTest", "UniformDistribution"},
 CellLabel->"In[41]:=",ExpressionUUID->"c0c7fe95-5b87-4496-bd35-dcba8229be67"],

Cell["Here are the properties available from the test.", "Text",
 CellChangeTimes->{
  3.7017825650246534`*^9},ExpressionUUID->"63b64eaa-7b4c-46cf-92ab-\
aff579c098c5"],

Cell[BoxData[
 RowBox[{"ftTst", "[", "\"\<Properties\>\"", "]"}]], "Input",
 CellLabel->"In[42]:=",ExpressionUUID->"3709cb4d-2521-4dcb-937c-70463b17e43c"],

Cell["The tests that are relevant for this particular case:", "Text",
 CellChangeTimes->{{3.7017825723217664`*^9, 3.7017825987198067`*^9}, 
   3.702139294606271*^9},ExpressionUUID->"7113f7c5-9c11-41e9-b0f7-\
5b79d1ed64c2"],

Cell[BoxData[
 RowBox[{"ftTst", "[", 
  RowBox[{"\"\<TestDataTable\>\"", ",", "All"}], "]"}]], "Input",
 CellChangeTimes->{{3.701620788468025*^9, 3.7016207908653603`*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"b3dfbf7b-9d1e-4d67-9fd2-2a3c49ee0f50"],

Cell[BoxData[
 RowBox[{"Column", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"ftTst", "[", "\"\<ShortTestConclusion\>\"", "]"}], ",", 
       "\"\<Text\>\""}], "]"}], ",", 
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"ftTst", "[", "\"\<TestConclusion\>\"", "]"}], ",", 
       "\"\<Text\>\""}], "]"}]}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellTags->{"Column", "Style", "Frame"},
 CellLabel->"In[44]:=",ExpressionUUID->"b4d1d859-0715-4eed-9235-9f142f4dd1f9"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"bafa571b-260a-4cf8-9cfc-12ceeb52baad"],

Cell[CellGroupData[{

Cell["Fitting Data to Distributions", "Section",
 CellChangeTimes->{{3.7009276831155105`*^9, 3.700927699954995*^9}, {
  3.701092781003353*^9, 3.7010927839310904`*^9}, {3.701190694133506*^9, 
  3.7011907624283905`*^9}, {3.712854147541174*^9, 3.712854150933155*^9}, {
  3.714923456676571*^9, 
  3.71492345970831*^9}},ExpressionUUID->"d0bc8a29-b6f0-4920-8706-\
f51df7e16ff6"],

Cell[TextData[{
 "In the case that you have no prior knowledge of the distribution to fit the \
data points, there are two alternatives:\n \ti)  Use a nonparametric \
distribution estimator.\n \tii) Use ",
 StyleBox[ButtonBox["FindDistribution",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/FindDistribution"],
  FontWeight->"Bold"],
 " to select parametric distribution based on parameter fit."
}], "Text",
 CellChangeTimes->{{3.703352877501788*^9, 3.703353052875039*^9}, {
  3.711101584051982*^9, 3.7111015921398444`*^9}, {3.712855682898327*^9, 
  3.7128556833465443`*^9}, {3.712866405399271*^9, 3.7128664386411867`*^9}, {
  3.714923476149344*^9, 3.714923488747405*^9}, {3.7149243663677597`*^9, 
  3.714924372269952*^9}, {3.714925324789109*^9, 3.7149253322211657`*^9}, {
  3.7170961670629563`*^9, 
  3.717096167078556*^9}},ExpressionUUID->"444e9f6a-80ad-4fb9-ae1a-\
1d9e6886759a"],

Cell["\<\
In the US, the largest wind power center is situated at Alta Wind Energy \
Center in California. Visualize the location and then analyze the wind data \
obtained there, using the built-in functions in the Wolfram Language:\
\>", "Text",
 CellChangeTimes->{
  3.701010702071081*^9, {3.701098111521795*^9, 3.7010981799537554`*^9}, {
   3.7010982409159217`*^9, 3.7010983009246597`*^9}, {3.701104416383812*^9, 
   3.7011044199091187`*^9}, {3.701104599809561*^9, 3.7011046574981155`*^9}, {
   3.701107997432572*^9, 3.701107998408327*^9}, {3.7011909910697055`*^9, 
   3.701190998509407*^9}, {3.701193038419842*^9, 3.701193062923031*^9}, {
   3.7017750748734937`*^9, 3.701775077201642*^9}, {3.7097501124778976`*^9, 
   3.709750133369647*^9}, {3.7097502409797277`*^9, 3.70975027469802*^9}, 
   3.7128557589877653`*^9, {3.7128664817843747`*^9, 3.712866484056391*^9}, {
   3.714923502444582*^9, 3.714923529706172*^9}, {3.714924646430085*^9, 
   3.714924653796187*^9}, {3.7149253644364758`*^9, 
   3.714925370996011*^9}},ExpressionUUID->"3eec7ccc-fdc6-402c-aec4-\
1b759be5af7c"],

Cell[BoxData[
 RowBox[{"GeoGraphics", "[", 
  RowBox[{
   RowBox[{"GeoMarker", "[", 
    TemplateBox[{"\"Alta Wind Energy Center\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Company\"", ",", "\"AltaWindEnergyCenter::4h269\""}], 
        "]"}],"\"Entity[\\\"Company\\\", \\\"AltaWindEnergyCenter::4h269\\\"]\
\"","\"company\""},
     "Entity"], "]"}], ",", 
   RowBox[{"GeoRange", "\[Rule]", 
    TemplateBox[{"200","\"km\"","kilometers","\"Kilometers\""},
     "Quantity"]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.709747040626931*^9, 3.709747058650145*^9}},
 CellTags->{"GeoGraphics", "GeoMarker", "GeoRange"},
 CellLabel->"In[45]:=",ExpressionUUID->"9053e2ab-a9e5-489f-a20e-94e938145f34"],

Cell[BoxData[
 GraphicsBox[{{
    {Texture[
      FormBox[
       GraphicsBox[
        TagBox[
         RasterBox[CompressedData["
1:eJzsvdl7XOed59dPkotc5i/I8yS3fdnPOJ2ZZKbTrXh6RppJx3Ic2y13Ym3d
oiVPa7Uoy5nW2pYlu21tLWtriRIpihQ5IkVK3E2Ci7gANEECEImFwlKAAJCg
sRTBxWqd1Oct/ApvnTr7eU+9pwrn4otTOHX2Osvvc37b/3Drf/rGnf/VH/zB
H9z/31b+fOP7P/rf7rvv+6tv/u8q//xfP7z/rr/+4R23/7sfPnDHX99x3x/f
+l9XRv6PlT//fUX/TeXzl1fHHT+NXSj5fpd3XRg8YGxZ1+YHnYkNNzqlt77m
jK/9U2f69LtO/3hJHZ+5+aqmxgecuUvDnsfvOstYLDmXy9oyF0u1oXwWMf1I
1wfVde24vWF7WJ98np4J/43Y/msz3dXPF0844+u/7pTe/pdqf6b2PGD9t2qW
zlZ+szePjDpvVcRwy+kDzt7+DfnSuQ+srn/X2c01sS0yzGJd+wc22T/eK1iP
P/Wo8+uXX3C++uorZ80bLzv33nOXc+TQDiU+v/vOGqfnTI9z992rnPXvvup8
1ntMTffAA/c509PTzsDAgHPXHbc5F8Z7Pa63UqB+X9HecxuMqWtkZ+g6RUxr
ct2FCpnQzq41mSw36nURV1Pn9ma27ELtLn87baVxB1zgZgBdsyefV/wh+nJx
pDYfw4tTQ0r68hiWNU6AGTiuOoN4qXT6I8UGaj1x97+yXZNbv6u4RfhCST4z
rGjh3Drrv1OzBXO8c6zf2XzqU+f9zm7jttzx4Y8D1x/HHs+NXa7zhwEGSb1f
ltnM1m9gcnn3PXSP4gqYQ1QqlRRXMB6u0L/btXO788brrzkHDx5smAf2GDnf
5TrXw589Jm2r6nUXvs6BycPW7ctChby06cPnnQ+3vWR0mQcGN0e6LpLo4vlD
ztW5ocyWX6id5W8j8d49DXtct2hfxuUOeIDtxX8g2w2DMF5YBH64cKGnZrdP
bLrZGevZrXwTuga7PlbcwGcZxtWZT56trSfOfGePrXfe/tXDziOrH1R65x/u
rfEH2wuPTO+6W/lAbDNA4/mS/FyLqo2dY8rX0TG4xdk/uF0NDw9tTa/z25Xt
01+xa4LWz3RNs8+zsn8rYtt01dnGbhtZm37f4Apkhpzp1tv+ytm8aWMdP6QR
jPLt73zLxR7hzx6T9lUU7pid77duWxYq5KfdveudDet/4Wze9qKxZUbl8SSC
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
+AQdd/JrTOwX7CH9BRP3NZfaVSF9PcJyPeRzVr3Ls9LseKfijNGT76sh0n02
bL9XvJffeOSbI5EDVkgknZP0/TC8T3UckyKeKvKxD9n+tFxl5hyN9vyhx6n9
Z2B2oqeHbduvUHOlcjlickQ7sweaXRiwfi2alNS0MrlMljd8fIOq12t7/7JX
82wlqbM7PxvOHml6muelX3lav00Qd4wM9cRfXu+rtd4epZFe39/IazzMYZK5
YA/E58TsEUFh3CHr1bmDcUm4IwtWEV8MnCHbyf+Sx7E468+fcfvF94wfUDo7
cVDFh3SX9kbrb94K8ohLMrbcgF4aDT05kjBPiJ9Jctg3n/rUSG1dM+dutOeP
uu6u2H4GZit6Ctq2+wplL2EHv7iqqPPb3o+sNDraPr0F6Smo+plnsGzit+CP
9q7Pa95WCrU5xwdqfSWC7bj49VzRSoizSsIdSO/t4XWcvLiDnPn+cbPnCjY6
vQXHSwPV2lIzJRUzRW0qxGdTLHI2YNt17vDLR2/qb77EGbokF0Vkal1B+e/w
h3VWSMsCfn3Yk/Zn97T5/WOeTK4nbB06ezAuDVfBmyJyf5KdX9GeP7OlTqd8
oSfy9K2o61dHrdt8hZKJfHDyL8LipUwxQzuzx4c7/9HZseX1tqgzS04GPo/s
1jGm4q7gj6z4xq7s2FdR6+yW5+PXimp37sBnNDSQjDvU/Pg7ltjDXW/MiztM
xVd5ScXfVdiD2lTUzZ2enlbis8rdMLGOAJbQuSMKc2Rdq0ptR8yax0nlx3XY
mtbZIYHt3eBXkJinCP6CuHa65/QhnLG98hwxnfMh64E5Pu77uGEb0+abU/8s
2fkV7fmj6hwMdUSevlVV5Hm0nsj5hgP2n31f8Qf/u4VvwzQrtDt7fPzhr53F
+c+tX5NplDanPKpgtNKprSr/o5Vr8i6Odzi/O/K4M7X1FueLTf+n0wz7xq+H
IDH+Uersxo1XanfugNfScMf1uV5nfP3Xq/ke21bVfE9hOeVZ6dLcuPJxwBtf
ffWVEp9VXw4Dy48Sa6X8CpZ9HeLXaNr6fHI96LFsnSUiqOZrWLLvsevdPPHO
sf4GezyUX2JMV1czN0Rx+nckORbvd3Z7frfx5InEvKOzCz6w6OdXjGf4wP4l
1rb/fMxKiuVzYPcViiZhirDpvGrkmpDUurJ9HLLQ1j2/dnZ/8k8t7fcwklMe
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
XJo6V2GQ15wHf/K40jPr9tT6kOPrcPvasdOzei4mvvdW9osavlIDV+eRwGda
ZR9UPrzBbYnLHYUKRZbPfcFUn3GuIzhgemB/094pcI2aWBf+DuKu2oE92Bd+
gyyWTR/BWm3dxeDjjq1E/M14f0dm72jzzB3yvk2PuYqaMxzGHaZ8HfwuXtzx
yOoHa7b9wvH7nHLXj9U20c9QqTIOpmC8J2sIjzAMYY7yiYcCNX/o9mp+kUhj
Dsk1V/KaRj7rQ+17ege6/R2whvg7+N5z+fo63Mt1T7c0nv0QLRxZVfe/Pl5i
WN3yqynWKvFW1FzHr0GMOXnk4zPdzuSl02p8VjVsbcuPKfT+6La3MU/c4SXO
He7xHXs/rDufpA8g/ceR17sdsUkuDkWPJbeta6p3zwFff0YW73eHpo4m+m3o
D0JuFj0KGeqfGcpnqaVVaAXK575guh4uec1cG6r+fIhtmlZx+neECXt93/Y1
zsSwGQ6zKfJuTPcSFF3Y9QNlS810rA6edqnGn9RAkrzq8nw02zuKbPfvCJLk
kAcxh5/PIivu4Pl96dQrzhebbla2MLXK3n72rxvirBgHWzLd7OEHlH8D1kBZ
X9OeqqyT9/0i/AY15qgM8b9du9Rd9734FtR3leGXV0fVUNnwQ4dVz411z//Q
N7+DfoLr3/rF8npZPmJ5FV0d76hw+DtOeWirs1ixpRleGftYfRbxv4zT96eW
W17ZRraD/VPbe6lbbafXMUharysvarXccVNM0HZ54nGV0m7h3HE/5/tKVeYg
ngrm6B6uvzaI+67ye8Z1bDOUu4f6tSW7Kmr9qngaS8QGcWL09T4ihVaQfO4L
WfX+w47nOskiz1lEjJXJvqDEXO3/+B01tH3fSSupd2E69/96eahWW7d8/iPv
6VzM4ZYpBlH+DgP1eDP7DbTeHHH20wR3wGOSizF28FnFEXXv/pe4g/ijtS89
XJdXTg6C1zJN96ZMpYqtrmKnKvsjuR5Rfg/J81DaeUddPSvxc/D/U08+lllf
DOEObCnFHRF+V7hjPmZfGOu/kSb8HGntd+Kx8JkwbCVfgb6twiF+PLLr7Ift
xSop7RbOHRVPvcQPXAdvVViDuCqYw92DHN9GljZHM6XiRyrsJMo6jiQOG5CP
HmfZZZ86voXaXE3mDpG8e8iq9pXpmGd4iVzzdmAPhE/AdN6/Xlv3+rwrJ79i
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
93ns4trlA5nGCHLW2r6GNIi9NsQKXH0qta8jyqZHnquNs/fR8U1xGtNoiYWq
P2tRhzruunTRmq9Ijs3WbJthjblYSzwKebyT42OG2em659yWPgHmHWnajeMs
n3+GeMfiu19JdF/b7/Pu53aC9pC2Y/Z9432eBazdDu23HX06NN3MH7CcxGal
+xbxXjwsxkiG6Zgj+ClgzyPGCrFPrGGPy/WFtoJzIA4Pn3n6OxhJeQf07SI4
Jxj3s6kYqdx9ZWnGNHiH4l0Y3iuKsUI6sJ2ziecWcI5bNXs1M8pQA8VFYG7h
/x7qIeCzFDFWEu9geG15O7LktCprLisgcr7Y0XQgNirufWLqOWnnHOAf0Knb
/q/HQfR55BlzleQdU3XoFbKJf/fWHdnvh4YdjLbhPVWRGsAkNroKKn9HIrtg
h99B5xHXf3G1DHX7WWwjana4pCmna9jRlQPwP4gchOOhsE7kGbAzcS/A38Ny
YWEb2KQmc/ZCX5FkXoQvIup36DPkc+Ca4dMBt8I8odI5gGfsvzhC7/3APRq8
I5+5lZGUd0Qdi2OsjIwf2PITZ6yP45brO38/1S1X/eai7azytcKvwf4NfLrQ
bhvxXZ2Ic6hBbZtTpOQdHu2Atjztu5ei6gPmgbBrotqt0IHPqedg04A/hX0f
eenOkUeDri2D/Uo+j4I0kUn8CuAc4B4bo8XZpuwbKULzEscRVD4OESLvSPse
kuoH7mjLo/okzbXEtQm+DhfjrJrYqZcOexv5duPi2jj2je1zfGf/CNYvL41n
juUBN0AcE8PkvKniHTK4P5iPwecCHwd4BzgHclmBd+C9Zp73Rq5dEgVVvl/x
npmc+26T/7i4WCuO7Ynahp55IfzeBfu9eS/qGJxBnvLW+Qb2vejbcCVPLeK7
UKvcdjvKDujUKmtDTdA7Bdscw/OO1OgZOtDIiZJiLCCXFeKsylQvkKG6HnAN
yl1VcK0/0n2g1iD4x1j2mioyoI9O+o5eZVOjngfew+rY21ltcl2dIe5VU2Oe
Ua+fVNso5qRSHQt9HqaBiKpZrsMPorQUqjirqH3jzlk5ek+jbnnIe/q0z3it
66zfX+jKs9zXIsB1BrWuu2534l0P6ZNHT5GNbkI7wIDeO695U8U7VO3GdtC9
g/dA4w3OwUD7wAny5h3Qg+P8XKMQEPmYCPwW9r4jzEcFPiXWZwSgiQUufHKE
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
93EuerqCrBu+SvOz9gnUmlo1TRt9/Nj65JbPzL4uvo6NszuDefg2wjVyTbCV
0+Reac1ecjii5pP3wXiYjzaxld8RHL+vO8gxL2r72udk15EafMYHafu+clQR
+/ayIx+oZ5VlvUtLp72Zp3/fm975cbFVDvRfqf3R6v6h93g36w6TMnweVT82
/BwTx58LPpu2ZBF9A/PAtFvaib8y6+xuztZyW9T+Vh9HK7s6Kl8hDeRnJF12
ev8DErdEja7wONAeGm8VdT7ijqOZvyNunTi/Rdy6Zi2uLNcJewf9Ad2iP/S+
LSs/qExqvslkPg6zNoN+r7ct4/9G4edY7/9x7XO9XtVik9rW7B8bOYmdjH7A
hxLEcq13Rt5EkXFWXA+0xn89tJ1u9z86smDfXnbkQ80WSLfOhbHngriqMy9/
dZu9zz3SzJayrTvKtnOraltnPZYs60X1D2Rb/HdXVZepjdKu74Pauhq/RF4C
3znt+VfGM+hwT8Jm3020UbO8eHwvaf0vSf0drTTI5WbLbk4G+R5ZtYdec/V/
dKN/oFOIsju13zg+hqw9+VSLmTXtVHNcOH6X/3lS5qM5ovpyqNYwpzGeVn4J
tKz53+R0x4z4OaI0B1rEffcc27FvLzvyIa3uCGJHfN1x8p07I+39ZvcONiZ5
4DNLp6XvYLf7O8zjztu+7pSaWfTsoI921PlQTVZV7VEba2Puedr1WQ//geSb
1+vUxvW6KIKkvdAVxii52jnvP0n/jqjp4Vir2HXISXnq04Fu0r7pWVD/h7N/
7KF+GvXZFPEMnByOC0e+Jfxms6apm9XIrcWsTW8bY6v9oEvIldT/Jpv54kkp
upYu+i1Kd7g4K0c09u1lRz4k1R2X10a8uReuk//0yZ3/tiGuKkxSe4pcjyJ1
R1/C/tFl0S0+j7SgOeLqMareqLLuMDH9H5e3WvtBNNYc/4bZX3DlxEOljTmL
7pCclFA+/G+aHG+z77ypO6KWa6UponLLm2mPoM5uvTaXmVuTBnweGnuldb2c
DklOu30tC48N83UGPg7xc/jvialqFlfVLsRuaa+sTtAda3OnvfX57b8BeRGl
O5zmcMRj31525Kg7LjZfZnNyby2Pw/8vH3v+Cy3tfe6RJHYkugNtULTuqIpN
2825Hs2IirGKOje2x5kU8zlss+WilhF/IbnbEXZ9UTZtWt2hfhliwrLu08yJ
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
MJ//FPV7oC1M3cEry+i8PMaK3sCflep8GTV6qc8r/T5i7hNHeawPPCw9O7iH
5nL2h3U7RffwSFL/z+GoYd9udrTBxjl5Ljfz9O97b515wroGcLojGo23iuqp
pDnntsfYDsSvUKsx6/poA+z3KN+CaoewttCat8zTmKgoDRDWHVtrE1KHqlnM
Deg220Wfn0t/7Ta2w7HF6Y5WPhnyrbGjw/1FWu0vbl4z3YFmCPLE65/vuP2b
ge4A9AU+Dd4XpTu03lgSP0ckRm1kcmNm3rk3l/vBkR00h9axcrojHUX6OxyO
dFTAdnZkRn0dp976lnX73+mOeNAV6A70B5/VTuQVLaJ557bHmQU9Fsn1aGHL
x6E9+jhPNR/Qdr0Q19dP9cjlrei4D3Ma48MWjXt2rTrG1DJt49uvWs+VWq9Z
t9NMd7S8RvXccjPHI2ucCus10x3TE0NXzrn/GV/BxPhg7XloPVec59USu0Su
+XLtPfN1GrFN6xlrDXFt0RrNrnPi80a/d805j+gL6SgP/KrEWH2wUqsHOzPl
cv7TUHTvQIcjOfZtZ0dGyOuo9+coyqanTi01a6lhS89w2xojCmrsKosrwzl9
L/JFdUc4vxzQIuR9qM+jk2OupLZuhv7Bpr9DdYzYoSuNy4R1hRkLxbxaH5Ur
fhGmiTbZmAiefcf5RMyegcB1ulIHeTo2lus3W/FxXoppv7YT69ROrnVYd5jn
OW2cPjZM0blJWXQRtciS+LLSYuo2avO2ut6OlOd3qzEeUr+PDdPO7vQuHL5N
3q+tnPcWXc5NKqiju75Yzf9HR69RAfvZkYnlg7WY7YF9t5TmS8C2t60zmlF1
3QE7j0yK1tC8DuapjRvuc2573GnJkmfezOZFd2jcsOqKsH1ivldb8LIxDVuU
MYVzqlXH6HbjxqbX5sWTU8K7Y1PyWTVPUht0c+5gYLtuTu3NcH6n2qrrqvFe
4Rx3jqVVbHb4/Miz0wTHnFabhK9f2u1wnaN6J+aB1Cjj+j3xmSCXvoj99DJh
rWHmZ1E7lxq6cp3pn1mi7sNPsLRyRlhZ60w/C8+D0uY5ORzFYN9+dmQAX8dj
V4m/o0g7Pny/VNXnocwt5/ucMy+ww589PhloD61theZgOloEncGr5ppTB8v2
uDMdayjPXO329zPmHWJ3cE6wjcH0ZZh+iKj8kKi4KpbJ0p9DNQjXyNQgafIp
pVZrvb5uq94eUeNrR3eQX8K+yfUwp+v1qd2nye65onNUs0CdgLz9HGGCXh++
9qBHpO1j7iWIsbo096b4OVaXzpe67/mlgeA/5thEfnXWysbleDiqQQVsaEdq
Vo4+KDbE8CtfK1V3TLx/XLRHVf0ejE2ZWTrdxvcif8x6umDqEPwfZg6I2ulM
y2qv2wT7L/xsLQ//jfo7NA/EfD4azgfADo16vtdu7U/WR2+gP5Q0fY+lr2C9
TmuzurZR4yRPIuu46YcncV7+/tu9DuE4qyQajpwOal1RKxd4X6uXuH1Z9I/G
uDXbpuZyaG/2do+rFfip1GcldXb359O/ztEc7VGO3rARX7W2ftYbnz/s9Y3/
yukOh6Nt7NvQjvRIH7BHP+q9PfRYqbrDpG98t3Wd0YzBmWr10ta+ImZslWoR
tIbmeqBHNOZKX22PPQtmnnm79d2jYplUg0TRrEdcXj0H0BqqP/YOpuubpfUg
pLdHin22ozvEZvb32cxWThozlsXGR2dQT3dhYUHgPdPM66nvue//68HJyPpv
QE0y7q8icjmSIPk6/Aa3OJ8O45y1sa72KLedS47m6GTdIfGRGfLvHI58sW9D
O9Kx2v+I/N+N7P5S4bZ7s3vH6Y7kNPvPRXugN9Aj+DZUawCfO1V3QNY8c0Vr
VjXTCqatzPNvYvzXm+yzXd1BXJXp3yAHRXM+0myH2qz63Jx+dfg+GH8czB8Z
GW66TBjJ5ajnO0hudAqtI+f0Ygi256Oxa61gnwo+DvTGhx9+KPCeaVyrMG+c
HPKOnBmRfo4maAytVdXsGpeB1Cauaw9e8/AjOSLuw3qvwEsLfdZr566vnxNs
n5PM418clvxy2+Nw9Dr27WhHOmaf+Iz8zxXt64jSHWa+sNMd+aFaQ+OqajWU
arqjk/sKltXPHBsZu5Q+2q1qp7arO5r1IkyDWSNpZvcOeX6v8ULKzMiBhs8T
Q+9sWyYNYif7+0uybHjfMD64fVocHI9CzFuc7mBemOPHDnrvnT8W9Bk3seHf
iEP6t5M3U69VJnV2c+pN3020kwNOzw4zn9z2sXQ0F5vUwHY4SsO+He1Iztrw
46X5Ojrd30Ht36Tfg6JrgrbCjMHSmCT1d3Rybw85thL6ma++d0r+T6Nq7YbJ
K84qD8z6uuRfNL9HsvfvUPB1pI3tCsbKeV5v/NxqefNzqzgrhZg1cvZtX5u4
axA17ezICck115oB7faI7Cba0RxbY7+s+Trqvi2nO9rH5Xg47GPflnYk49L7
x73pnR+X/7YyfB29pDuUWv8HezYP+0dn/KY+DrOmrlJl30ecLWrmmTP+PG1/
9AbPyKNq/kdRJd0h52O5P1Fvjzx0x9xz1zT08CiTpHnlUdrR9nOBVhD/Bloz
THwfr91sfVw2z5v20sm6Pv0B0RxbU7uDaWXqjpnF097gzDvC5PvdE5vk+gc6
7GPfnnZEawzyFWee/n3JH5fX+v9Zkf060uiOqtfU7aQ4qzhMP4j53va4omjl
k1mePCL6g+XS1H+KPTf1XoALU8OJ9IZSNd0BZp2kuN4eeeiO+Zd3yG+IWUcr
aV2qy6GxJN1nVC+Obuy5xzFJrWf/fiRujmuJbyk41/Ve7YkpevkCyeMak0cO
5rQydceZ2QPGf0n3xCbhG15fyF6fwuFoH/s2tqMRiaWiN0ddZwC6Y9z/Dzt2
8O5Sbfdm904VdQd1fu1/p/JF9cblrZnKa49WLJzd33Z8PnYccf7kcpDToXnl
Zt/AZlRRd0DQly6mtwc6q53+HaB1tLL1LSyWjtUivr3/8p5nvF07fxHAZz3X
aD3isA717UusDYpevmja/Y5tnX9WfB34PIJtrk6UWkO323THldobky7Hw2EZ
+3a2I6Q5Hv2ocO7o/d7BM096b515wpod3+ze6QbdkcZ+71Rbv2qQ69GqFlGc
PwT/Bv+Z6I2s+2/Wn9w2QW8PtMdyf8O8PPwduv1WuSRpaXY+td+K7XNbGL6t
/+ILO72HH37A++Qnr5a8FXTH6vKEt9R3t+SaP/k3t3nfvuWG2jVFG7SA9YlF
S7IsDJw+KOuk1R2V0Hr+mNETEnPnvyeXQ+Krxh8P5gO+pK3NeXm/snguWD7J
PjbXa/3G6f8XhfYin54clPgq4lsZ0/9YOCV9O5hn/Ty1iakFXY6Hwy72bW1H
jY2Z/YHmmB962roN3wu6A9SHkGTZquR3V9VuTnq+W9VBRXeEbVWWJ48jjzEk
yT/PgtQ38rVBGPwU9N7gNTxd8gLMae/cW4vRef56WYf5ui72Uzvjk9qvPIN/
446Ge6jVuaBWsJ6zNLZq0mUvb3X2PY39y7VDd9C/kuv19Zu/5t144w2iOeC6
a6/xvnbjHwrU67rpph0yH73Curd94xbvhhuu9+6770eiIXbs+Ip36y03y2t4
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
e6YxL++e8lVja+yXNV9HRP/QxYJypcJ0mmbNG/F3XOztc+CwQQVs8V5hc9Kb
e+4a0RzLB+9OtM7G+rmu0B1qpzjd4UiK5HnUe3hrXjlM9+9peo+13G6C2q3h
uJgkYy3z3GhNKp5hZI3V0Xq6bV2jkN2m1wDNsXewxs4jnZ27Gr6v8vDVcL9Q
1wofB3rjww8/FHhPXw6Np+P65pHPUzU+WBkUzbE1td23wz2VNcYKrUIehvqP
eF/W84BOZGXmhLe+6Hz5jrKpgD3eI7y/79bgvyTNeoMz73SM7mj1n+x0hyMt
6u8A7DXN+Uhz3wFaA6KecYanad5zlXMTlvrubqun+UL99yhJvFba+Cp0B3oD
0B5R5zjpdetWiBeM0h1MGzux15va86dX6pg1qXnciRBfBeHp3CP0KM/qh0Bn
UKtK/Ue8l9q6oeV4plBE/YdOA18Tcay2x+HoNezb47ly6X2fS7XXiHkfbFzw
Plhbip7nT2d+EeMijlpyOnwuLZ1OtS4+D2zfo+dfqbzuaIXTHY52QXvMDe+L
tLXj7FhsDPo2aN9t2U4XxFiodsjS20PjteZf3lHI2IivUu1h+zxVEfQzfTjC
cVZM21qbEN8ePhHN56Hnx9n+vZLnRI23qt6/PB+g1jV1IZYnj8pxmlw49l1v
7dAt3uLorxqmk2sw6h/f7Jm3tq2TlEDH/c/Lguq4qGVdv+4aLsfDUT4V0Ao5
gm4Y/+uHvdV/OiX6Q7REXU9sTE56Q7d/33tv98vb5sH5v/uFt3bmTLRmyQga
Y+b5LwR+DnLKs26rf/rNSukO+kdjk7dihnNQ552x563riLSMz7v/p6rBvZcm
v7xVXJWpV0x7Lqlt1yp2q1UuSSui1td1tTZSWv0gtXnreSJJji/pMZmY+R1V
tZPzIu3xYftKXFC9N7nEBfnvmWZuS2uP6bVCY868c6/4REzQJPoezZL38aFT
eX5G3gnv8ZOF/Y5oDaAPD/pDatFtTATwee3g170Lx++q5RXUcwuorRTp59Bl
EuYgxOmOqGWdve3Og8MW9rVCbvh6YeXoMe+//++/JfR99BPewK3fEq1x7No/
CqbD2x/518G8kzd8VT4zneXy8nmsDT9e83GoTbBxrq3tVU13VKWnutMdvQm2
Dc9Tkyxru29zEhsdmytTP7vNyaA+0vwbd6Ra3+zjkXa/afMeOimmqsyxaq2v
Zvuk5wc2v+TkGBoETUKcHf8vi6O7xbe068gZb3zwgOgPzTtq53jEL2ZqHxOd
Xh8H9+HC4oB839bXth/TRv9PRHc0TPN1VjuxVSZJ46yAvAZXR3ZG4qyicvsd
juKogF7ICfRCWF9kYengofZ8Hr6+WHjt5trvsa87VvsfyeX4qqY7eOZsWxM0
42D/Lu/wqV1Od3Qx/GeiP3jfrA9FlO7olufvYrNeOBvYpDwLT6qz0CmS4zG1
NzhXzWzUrPZrJ2mOsuCcJM0xaPDHLfdLbg92vurGBn+IP/3cU5+tzX/iM6IJ
pDd9yhwgtI760uS+2r1DajBSi2vizbvl3pl/5VbRGsFY6jpE9K9/T2pOFWzO
HRTNQR8a3cfaynnJIc/ru5g2rxzt0evP+zkH5JfbHoejl7CvF3LB1wnohXY1
R7s+j83JvcFv78zTv+//dh/P7RirpjvAtraI4ujxxwV0xzvDT4n2GB58MlWM
l7msy++oNsRbtarpFGXfmc+Y28kjVz9Fs2Va9cXQ7UTNS+pXoBdQ0NN88Oex
2zWRfiARfTzSHEfceUs6rQyK3C/1nPOqFcx2ksQEho+HmCfJ9eG/R7VICHwi
tX5R0fcBuetsA81g6g20S7OYRnwq9K5B74rfTX0g1AI28uHJ69A+lRwjtXKr
0KPDaY8Z5/dxlEwFNEMOrG1cElbXNnOBbX1waTXFGKZqueP13+ra/3i+x0h+
+cGS87Jb3T+2NUaDVqhrjLCPAw2Bb4ZcZF4HZ/a3zG9fd37njiHIM28SA56k
dm43wDPqQHskrL+qz8ibbjdGu3SLz6gZcTXQAPsf3ZFXbaRwf8XwvKzaGC2h
Pgk0OgT6wqjZa8ZQsXzSe4i4LvM3U/pSGttlPxJfVfe5VEVzKL0ec9XrustR
NvY1Q9tcel90wifveCU3Hny631vf3Ijen//biR/jwthz3srJh67Ux63/xuLz
KOI46Zldti3f6v6xrTUUfBvq44hbZn7umLdwdn/Qw/Dy1qT4Mo5F9IR3/ck7
C2yeVnaD2o9JNEjV4oLSjMfsaa7Pl6O2o+/VHg3H4aTtXd4qd75q5zTpedd7
Zd1S3VX1pbR7/uYP3n8lL0Q1QT02Cj8HGoMYLrRr2p4wE0PvBPGOwbnztyE+
GH8f0reKPpfzfdKPZ3XpvPVrG4bfD/LbbY/DHbuj+6mAbmiDy/5/Gn6Jx18f
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
uT3eYZ/ZpVPeufP9EpMVdc+YsVYaY/XroSPe8eO+DX1pIXieTzyR+NknBoPP
zZ7z63xysJP4T8rQHUXkephwfpJoLEdz8tAdvfIcXbVH2G6hfm4tbvVjtRyP
949ZH6sjH9AP6rcI15qS+8H4rD6ONPF6DZ/n+8SnoZ/Z1tmJkabP5NfHnhG9
oRpk7rlrAp/IheN3eZuj/+BdWugrNP4H3YHNnes2V6Yz+0Oy9A3NC5fj4SgW
+zZwHNTGRV+QvyH/h77emN/9ZW96eJ/oglTb8/XHB5dWvbX1tVof8rp/Q2Oo
eI6g8VPd7uNAa7TK6zg+sdebW472T/C/hMZAJ0hfP19z/Kf/8wbvIx/5iPTQ
w47GD8J7NAe2teoIfc6v+oJlmM/7tDWf+krMvy/yO8jxO79He9RiJFxMchrM
noQ6TbRHXXeYfTxaYVOz8eyjiLoWVSCPZ9rqdzC3aeoQ1SJMS1L/Ngnojs2p
K32Q+M+ARMe8dtb7YGVQ4q7wh6z3/1j0BzpEOHSLaJH1gYe9randslweMavy
vKtisa+2fIZOdziKxb4dHGZjZn9NX9R9G+RwkKs2PzUoGiHvvAnND7d93EWz
sjbqHT3/SmJbG+0husBH46T4bUZnvNF/1luYHvZeHZj2phcXvF2P/8J7+OEH
vInxgSD2iun4P4SIe2+93n9PdEmG3/tu0R2AhnO1drPDPeT6NGYDzWDWxJG+
ghH1dKvqD8I2czFdzc8PcVPNlmF+Ul2QBImz6v9Jw7S1lYlUfpQo0CNb55+t
aZEj3xINEugRU5f480Sb+MsBMV2sd2nuTYnxivq/qaLugLh+hUXe91U9F45u
wb49rKwNP17LF6/XV+H93Omfif+hCL3RKxBTdWb2QCZ7+4Yv/Qfhh/fe5Y2P
DXmHh8a8797z195f3HW3958ffMj791/8svfGG6/JtB1fv030xp7jZ73b7/y+
d+OXbxDuv++euq7L994tU3coefQTjIPfelfrKiMXpzsux6MVZdr5DbVvl/sz
x1pVVZt0yrXrlvNHjocZa6VoTazc7eXNCf++PS26An2BzsAfIvrE1x+iQ0yf
SYROWT30FxLnNYvd8dKXvPlXb/Y1+O3yzFNzTvLyrSS/H+L7pM8ZGo4xLb17
bzBuxrxy9D6ZhlZLu9+N5TOuf6CjQCzbxRvnar6NnR8PcsvmX94hvQDlNypJ
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
f8fzZmbptPOBWCBNj0I0z7Hjj4tdi/ZADym2j6PXIe9j169+4T3w93d7u3b+
wv/fmW+4dpJnXo+3Mn1WjuqTh04xa+jON6mPg+bIIx4JfYCGwSfBNlU7aK4I
OsHcTzOtwzqmhjHjr7KOzfY1LYyL0z3ZP1DjqrDRialKojlAc8rT9N1g+2iP
PMePDqEWVpDjHuEPER2y0Ce5I/Jd8o85rEU0tszpjs6EZ8u2bYlm2P6eF4X2
I3S2bDmk0R30jjg99aY3NPDMtn4eto+jl0Fz/OW93/VuuOF674f3/MC78at/
5P3wrj/3fnNpoQGedVNLVfrGheY1wDVtNl+XcSTCdl0r0J6B+D2a6Y68fAHY
PWgDzU1X3wRofJTma7Taju1z12n0Wo4Hz/exuaX2wMJg7fg3k+VBzDz1KSHN
/sqoGxbpDzFyRDQHHj3CcugmxhWlRYI4rUTfJfu2dy9D/MnbYy9YtynisP1d
LwPXj7B40ugOZXnyqLe22Gi72D6OXgb/0yc/ebX3xtGXRYPw+VDfPtEHzz79
mHfjjTd4t33jFu/4sYPejh1f8W7b8YfiE7nj9m96d33/Tu+mm3Z4j/zsYZnH
K+uJfvHXYxniclj/vvt+JNN027Z/HxzJ2ZzaKzYL8SRL9eehWqvKXC6vmk9a
ZwrdwWtUzanwftAp3RwDVRZJar12C5rLwXviy9L4erDTpV+Hb9un2Se6puzz
iw4h/0PqYvl6I8ovojnrWr+X7zo+kgtzJyLjtJi2PU/dvu3d61Q5x8P2971M
1Adi+5x3K2a8VBjs2G3XhJoerrZVJeAavfLu097nP/+5INbq1ltuFr0wNHBE
pk9PDIn+QF+gT/b/403ewGsPyvuRkWHvtju+K5piZPioLI/998brr0jNR3wo
vGdZPqNX0CpOd1yhCv6MVmj/DvpIojvQknHxSnn5GNg+Po2svTZabdv2Oa0q
q++dkuf+tsdRNKo5tEZz2rwWbHLtGZh0HfaRd4xVO6BH1oYeE42huSrh3ulm
vBZ6BO2y+PZ3pH7X4tATcu7C9bRqusq+Dd6L5JHDWxS27/eyoWeF7XPei/Ds
nPgqepY3/v429vNwcXF2rxG6AP3B++dee7zm//D1Av4JNMLA6YPedddeI9OJ
tfr1gV+Kxnh3bMr78+/9legJ9AnTsEnV98H6qjuwR1/e84z3vTu/nUp3dGus
TJX1htaYDfKxL9Se7S68drO3tjKxzV9prpf39Vqr52ek1QpxvTmy5qB06324
7TjrdrjtcRQJOdXYyOgA/A9Z8rylb4f/ncB2T7ROyhq6Vq59Pf5ZYq4mX/fW
Bx5u8JGEa2lti9/a9Qlv5unf92ZfuCFg5p275X5Cj1zetG+Xdztr6+3XLC0K
2/d3qd+lzSnr57vXoc7Ctt9tw+fBs3bF9lh7Dc45cVHXXXet5HmgGXjPc21e
H374AYmTIucD/UAt1aGxw6IxsE3xdZi6g3gs1nvxhZ3yuV3dUcsrtv870kts
6+23ORnElGyuTzbt4ZFX3rXGbGleeNpaWb3Q568oqm4ftwvP5rGF1+ZOZ94G
eR3Y2kmXR+N0gx9JNYn4Sd69V3QJvwv0N0R3TD/60RqiRT5q6BL//c6PezO+
hll483ZvYfgl5x8piKrmeFycftX6/VsWrt+5faJ0R1QPczjocnJKB+2Bv+Pn
u/6LxFrR2xltgH2JVnh1573Sq/rJv7lNpjOf6eoLoacD095+a49MI4cDvcE8
YrF4z3S0yamTByJ1R5y20HgetT9t/57kxeXQq23CvfPMc631zDSWvVlueZ5x
VtoPRLdp5pdH7TO8b91G9mvUmzkj3a47Jof3J+sbHsfmRKL+5L10TmvUbd/N
SW9r9h1v5eiDEsP1/r5bvbkXrqvpkgYfyUdl2uyer3lzx/7emzt3pCGXvZY/
Yt+O7zSOnn/Fuk0RxYWDf+JdWthfgfu0WKpeV6xXiNId8lscyvMApzvsoL07
wjk5+DfoGTj7/PUNNXSJn0v0PWzh22hlp5p2XzfpjqoR9iXoeeeVWhAS4/3U
p2v3RIqe5XmMK05vKOtGX/I8992LmgPIQWjWo7uTWV8e98aOt/fclfpPWmch
6To9pTuasXHOuzD2nPg8iMlq8InUtQjT1S8yPzUY5I8szJ11eiQBgzPvWLcn
TLtibO6Qt7I26m30/0S0h/37tFhcPatqwL1HDV0Trg/+Dvwe5jVzusMuDbqD
+Jp63w5qGpnXKZyzUwRRPg4XPxNPnr4T7c+NzU9NAO4B+kcyr5m/I2+0Zq7t
c9tLkO9Qpfzn3I7Lt1fRHGiPdrYjOdi+jZymb0c3a7krZLOTLy2d9laot0V/
WuLXInwi87u/7C0ffdDbmNkfXet3cdzlkNSZXTpVut1AbBf6Ym55IACtQb4J
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
LZH5u8r/7LHviPZYPf5jib3CF4KfpKx7Gz9HK1+HidMe3YHzeZSP1rbKmje9
NbtffmuHX705dh/4CuJsa9UdScZJrJOt/O4sGodj49iB+CpAS4WPLS6GLawr
mumMNBqEZcnhaJhWz++Yf3lHw3Tyyqte98uRD3F5oO2gGte8hyaH9xefc705
IT4O7un1sez2ULusLwxWth98Nuzb+VVEtMfY4VqtXe35sesTEn9FX8Jajyun
O1qB1iDvQzWI5n+U4avE35FW57C80x6djaura+ectxOzo/E5p975XtP9YG9H
rZ9UdyTZVtGo9khqh1MDLMnxNMudCWPW1s1TD1wYeTL4rzSnux4evQNxQcQ+
5blNcqZ2HZkK/Gv8txNjVfSxkD/O/bz4tv16nd3l87Bv41eVy/VaCegM+n2E
e5+jSeiLTg2sD9bHCx3L2oWzkvNB/w6eexF/xfNFauzS16OoXh5532+a/1Gm
/kgL2qNvfLd1W86RHdfHvHw0DzxL7rTU0fV/V9898bct94PPQuOpRGPWY6nS
jpd11X/AmDU2C5rZ8HnV2sLeT9L/Ax8P49Fj1JgxE+K3qBuWZQymXmw330P9
HWHdsbYy4Xp49BB528jq71DdgV1WdIyV5HRYyCOPA39HUTn75WPfvq8y2ovm
8mbtM/kf/EfO1GsbNFDvQUhcFn4RNMnKyYekPhbahFity2sj2/ezOSnTt2bf
keXZ/srRBwXe02ME2ObCazeLDxsdBOxr7oXran0Q/TGNv/Yn3sETD+VmSxR1
321NPBvoD3whfLb/XbgC/+FOe3Q2aA+wPY5eI2nvchN+1/gNPTjyZCXG3ypX
Is98bNUfSrNl0R4Li9l7IyaJsWrr2Oo9IIdDdUbRRXn08IjL52B63rkeLnck
O6I7LhZz/vi+FB1jRR6H7ZyO2PNagXG0j33bvuqEtQdQv21yatCbO/b3td6D
L9XsfnLRt+kR1SRGvBa9QsL+k+DVfB+1rfB263oneGW6P563hx5r+R/LMgP7
bvHGn/mcN7L7S94xXyuhW44cvkemF33/0fsDv4fqj7JzQJoz6f/P7xX94WKv
OhPn87B03lPWbqLfA79bVdGJNmtoJfWDZCHvuKowm1N7t/k7ttZqefUut7x3
WH3vlOQkFLFt4vWKjrHS+Ko13z6yfS5NiF/rjj6C9u36ToB7He2xujhu9KmJ
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
5pXTCj8txhHn/vV4XamPTB1B7/e3Ifi2a0t0Nzr/TPYK74htgZB/ULePbw9w
D77hMEUHQQORP5Z+/44W8JtV+lf5Ral1dD/kc+XGeyR5B0Dv2L531LQO7PDk
/7cLn/mwiuYcYPehTW15R5JPA+7h6h8nRh8L9v/6PaZ7YCPiY4W/FbZi/N05
A+qjGb2jSK2Z7+icU6l5NIlEfXnup/kJuXXrM7a15yDclrgGdBF8tAC/t/hA
4YcFH2Sb6dUfCl5/+tPVNcnT+s46Xhrq7e8JnG/vxZj7tmtLdDc6/0z6ymeV
F1l2ifiHvQsiDvLqK5tN59B3N34DW61rXvpX+YXidd04Xt9jOtdALrF6+cRi
n6uQe6B7wCnwoUr+L/F/SXy29qsVa+6Ld7QrjzPn3+73pbjHiaH7TYM68tRF
1g7XoB0wb9+p36idX6sZvaPoGAZsW/ot6wi2DmpQtBobzbd+izMfG7YaMHMv
f8fiyJP+VcsZ+Kr1Vj0P33Ztie5G559JeAd1y/3/bywFvGJo+uXa9o7DP9BA
4SBwDdX+aP5b2WRZk7xLkMwhVOof3QvLsYu9+8fPB2eP76n6nyK3EzoHvANO
UYtXUC+jk7wjWcOyHcfo1HsTG/3EkZ12H6gf+NzgIftG7fIM8Q/axUmS/SiO
Fh+sWnxC64qM7XCB7rHcYsx9oYhv9eSpwncK/ayio91gOlrSd285o7c0D992
bYnuRuefyW7SO4jfwNbvayLnzbYD64LRw32x39XOnVvM9+rE3HhqXcJ64yjr
RXQvVD/B9zjONUj3qPe/oRy7TPH30f8V2uWx+dfimhhZ+8M3aq0v9JycWhzt
PlYn36VwAe7B4Sc+YXU1xD3StoWPoH8IfMemDTuS9ynfcqSVwENYJ82EPjXl
G0+78v3kyb1boj5atZd5JogPIk6IeCHyFdSKG1qusBrmM3u8jyMffNu1JboZ
ReZ3F2rV0oNvwDsatcuLG9uk+R60I35i296nLA8WEBeBg9QaD7pJGcvR/Sh5
h3+kcQ/lyN26695g+vGPVmLNQ9t3ru+2+H+MGAe0DHgF8eXJPsQ5qM/XifPo
5HPU6fcrmhPcj9ymcAb4wemT6bwAvnBydsj8+cmZOrVvIAZ1PJiyP3xDvGTx
PV7RlfH5Fx9Jchg/9laJJMxHKLzPze5P3Ddx5cqNlp4nrRdzzTaO3tE8/Nu2
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
mBFxGeXWVdw2/Vi8+ND9xj3mB+4Kpl6+Oz6OC/yfeHaIx7e8CSE3Uxy6jS88
ttuveMc3rrssOPLHz1s+XPJT2b6f/btgdvCxqjEqtoQ8cGgripGCy3SKd+j/
oVvjyvNi/8y2GONHtljshqZCkXXQ6YsYkWaRZyyqM9iJfFcC3KOROuEnZ/YY
bF+e+UjraPS42PUH9u817pD0icrDRYrO05UEx2dsjGf6UP08cK1CsSBtO5/j
e2MO0nhuLv+2bYnuRdtt85f3Bb95abS6re9ABawD7jq2ddEF3KIe8MdCh6hV
+3zJ//TIL2K+0Kx/pdWUP7jF+AOaBzVJiEkn1oSYDGJNmLJMu+qduDwlj14j
vy5ye+Uf25T5DnXSVnE1DvQEdAT5SnGdVJtDWgNgG+xGmz9TqdXhs4aFgI2c
1Fw4tzz1CvMA7tHJ83nrTIPfi53YDvQD7G/Fl7jr4A5oCkxp47cfPyl8qNAs
iBeHp9z30COmcSguxHJkhVwBjqC4bfya1E9V3qoopxn9rV/9f6zuIPHdbAdP
wCeLeHD2pT/mmWrcWsf2/I5zLHD46UsNxBExHsbJ/wyxT+ga1LqBH6JVscy4
uXdMaWslLqqiBTxf9Ty4Neg76QtZIh1oNbnfF9I+OhRzjg2fVzuAE/EdHa1D
nGNh+OGmjpkV4y6bv5YvWCfzYCkmpt311DtV4wW/Ljc3F8etvY9/27ZE9yK3
fS2ewDTJKQR3ndqS+2g/IbkuuZx3XZeAfFjySUrzTYrfgZGtj8YAZyGGhBxY
xJMIRxN1grPsYfgHmgq2CxxjeHjYAO/QPO3ErYtH4COmmHa1ibu4tRizOInb
jnZS6x0kW6bdtgs+61wj5fqAT1TlvM0YX1rNjnYiD6+R71Ynx9VOiHM07B9R
S0dJtp2erGgUIT9IXu8qzhP1B+9QOzW/QRo/srw+5JjgOy/5rKIYJ/gEvANN
RDlu2IZ+3Rhu9Xd8x48qxwm5BhwHHuXmxwJp9n4Wd/RtF5doLxrhHYaobl0l
Nq39vle1eIALbFa+l5vW8bvzgoXBB5o6Xp66hvIFc8eluojt5gC1rlE7tQ/u
dd48vEWAmHXup5sDmHm472I+ZP+2bYnuRW69QhzCp11fSwdJ4yTiSp64B1wi
7f+WdvJGoUXk6Qte4u6v+E/FbEhnwaeKPuEZ+FmRH5cpy7QzTz33tOOg2dQa
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
Roe3Bdde++WK/R72zX5/9dd/FXxxxWXWpzsejnfHnd+xbdmOvpinb7bVGGgj
9uz6r18VPL3x4dQ29fOZz19sfTFOlu/9+d12fPXJOGi/9NMX2jL7s8xYNM++
XA9tSx9Z56RrkXWd1CdT+vzoxz8c847+NvmTDQw80tL+x+ZHvL+nG4VpHm8W
/3tfYim8258lzl20mXtMrap8Vz71+tJ6q6fD3wuz/Z76THAiinXEJsR+bOT/
pxEbnHHwe63jVrTd9nCbdoExH5vY2fbjcF3T0Mx1bxY8CyB5LPFT8YiZg7uD
id0vBKcWJoPn1q0Jph5+n93jhX1rM7nHkf07K9uFz+fkptvjvndNdm+9sw2D
aw2+x1HCH8ZGh4Pxnc8G009daroHPCSLdzCPXc70ue1Pmu2NbX3RR99dxTvg
HNqf7ceGXrDlD/39J4JHXtxpuOTzX4xte3c8bI8djg2v453//vfats8Pr6/i
HXASlpOcR23sx/joB7A/21x44ceNH6A10M42zOuY7JfkCOpXPEjXiLFyLcBl
l33G2gZG+4JXDr2UeZ24PhxP15Lr1Ane0YzmIfQi71iYG7dcCL7HcS7Au+1Z
4txGG7nHxo0vxN/mks89uU6xDV/f+guzK7ElsQexHRv5/zk6PbrEHk7aqacX
9gfHXv52/I17dsMN9o2bdY0ezwcY4xNrHg5u/eY3DI8+8qC1cU6mGa06v8Lx
OL9wyrVl3fz2u4ITg/cZx2uIny1MLtUIIk7IunZwjtMLi/UM6R9eAZ+YHu2P
eWnavdfYDo28ZPziucHpYLTvl/G9Nq4Z9sH65PnMDD1TuW4huE702e28w/cY
SvgFWgTYH9rH+Ase+eMXauodtGE3Y0ejI6TxDux3aRRwDmxe+RuxvQvscvXP
sWTXS7sAbMcy+gX2vI6jfV0u4raJF0hTYYoGg80PF1CfWVOOJd5Bv+74br31
G5nntGnHMzWvkzuuP48/bdpMu3iHuIblFWhB85g5PhicOnnA3tcxwuUzZ2rk
Ve4CVPLqdia+81yGd7uzRAm4BzXWmRbc98iTX459X7CD9dzHNnKUv1s2JNO8
XID9kttir7qaCfasjsUUPyU4h/btBZ8lOMf9998bHJmdNjD/8K/+Nb6uVYi+
4VchOnf3+mddS66da89nIU2HaAXSngB9z0wOBwdfecbmjTcmvoPRlhzT5O71
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
AY9gWTHlbt2PZHwJ1xAOBzckJ4HlLwunxlWiGis6R+6DeEGavxU8QHH/ea+b
uKR0MtqsJozLRdZdF/OL4f/sy7y2lfj0sZJ3tIg03tGNNU7SxqSYcvlUxe+y
Y+OV/w97D4Xrjw5UrZcvZz3eYZpHG32tGvFxU75e3/ehG9CK9uHbFl7yTtz3
UvDWicZ9V0vUh3cbsESJTqMJzUM5q/R/k/SzIp4DjQOQ5wfewVRtrMd+RW+w
nEdRnTm3phzL2JrAXZesTQf4ft7I/7nyGAH0jlinCG1M4qDd2uOAebiI8nS5
37f1nd7iEkJ7lHPSN/MieAe5gs0vLarVbjmzZqetTeuqtnF/KxJ5qzJ5h+Mz
lazhnaV3yPcpyVXcXFJwBPE8Yiey9I6k3oJ2wf2Ay0nv4Dq7cLUM+KtyniXr
ortgbPX4R6x3hNzJ6p1vuGHJenEPxqfagrHmFd4HxTUB5hlvr/KObsidKxsu
2daNvAOOQLy4xhZrHSEvSHve4KT4X4l7nBh9rGq9NI96z0+9+h2tXvtOx48s
FzSr0/m2hZNYmBuv5Gd5s/k4hrYi+n1cglb6y3vMVsZ4puQdJc5B1KlfngSa
h3QJ2Zcu78AeTNM74Bqu3sG28rPy/s46E9WXc/yw3Py8TOEdrr8S/jOqt05N
B3gH+bhUR0L5XDPfhVnvycS7DJsVzqZ2rh05XTkufIdrq2myjzycw77rD2+K
c+eqnoYh8hXC7hfvENdK+lml5a6Fd4iPiUMovqMW71DuXctv5nAc8QyOw/HQ
MsRDLCZcWsRTn1lS48PlHrWeA47Bduyv2JHkNjwb0rawB93+4Rnk2oUbAuap
S46vlcXRh1P8+CfD54nv3UXXry4a3ZDHKst+60beAeAdb8xXx4+/laHj0h5z
j0gXOTF0f/wsPjc4FczNT1Vt7+ofaB1uDcGizwXtAh8r/Kh8X9deRLP5EHz/
Hqbhzfkx0z18jyMV4e/d5Zd/PvjEJz4R44c/uK02L3DXOb+bU+F7+ok1Dy3d
N/H7uurhB4N//X/vyuY5if7ZXmO79NJLgo0vrrN27zZgiRI+0KDmsWXskP0v
jRw6ZPP4xrCs78nYXo3EdxT5/knz03J1B/JV2u93VFvc3S62J5N5e90cvVGe
LOKlsXfhHHCANXddZtxFsS1/fHqVcSxqHbLMNcFOxg7lXUM79SBUc458rdrX
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
iadQDJlqL/r8VSzBLvK9NQ44BI7Tj+PPLwwC7mAcTDFuqmmi2CrhGC1b5d7i
GYN/VP+kqI+/HunWDVt7fopaNuF5p/pz+ivWincPnFGkK9e7n+IOlp7XkBF7
etnwHUnugk58mkunhwx3tKwRmI5b9Tyhz5FTw9m2Y89mG9vkCxs68kylfley
edxx7s2Ddm9Pnt1jPikxQeSwwq9//IU92eL1O7Il67ZO15WY19/zcm3E+N7h
bPfvtmR7x7Zlk68czQ6/MmX5t868srdQ97x7ZEff/JKlm0bs23+/cQc2svvF
bN0Lz2YHTkxlK3cdsucMN/Tc0JbC50vbqpHOvwlu3NFjjAe+7FCPnfuxC0TD
XdnS+8D2gGrVuf/gDOr/rV/f0FWwZPu++/5+QeKMMiO+DEyBD27xTOIJAt5Q
XFjTb2bwSWizvvjyoV9RDi34IfJ1vbntnuytsZ80fKHTe62eIHoM1R4/sG/M
eBBhENUA9NvCFvi26NFVywN8g6bDakIEzMFYYBs09eAc09XDxYA/nD5E+XUZ
D+yFKadvXr+9AHf4HE2WpzaMj39ofqD8OGLp2+i+LQ9s9P3AJ8Ie+G+qs5di
D487Us1H6mv6cynPkfQBFmMTsQVxVIV+7blx+xYuTQBLz2nAnSg3guqWN3KU
DTXhDvm84Cn57/jl6DosD9xPHm7ScYNLpKlOcYf4i4uv788e/Yebc30I2APe
RLhDmASswT5tw53AcfzJe/8o2/SzT9u+//DH/5vtA4f5WnvSUEhnobly/+BP
dC1oydFxiLvguep8tHvcobgq2rgW4q4wYVnxHBj8SlVflufNvKr0Teu8GAZx
MViqXch+q4dSojFSfjKNB0YRhmCZms4J5mBbXEhV3KG4rSI9iM6R5uT159d5
O8E57e7l7l1bsu9+536zHz78vez40dGO8AecB3l0PV7YF/xDjbEnvFuLH/9Z
jjc4z9TxRKuaHHPpwmk75st3fTH7+/u+mm0aX2nYogxzLFvzuM29rvfR2sBl
3C9/L/v9u+2NPKzUxuuVv71+92jfruXkq53l+J5r2/z8E434lnNHLf5KnNbk
mQZ2e+a3W4yr2Ly7df2Qlvd7rHc+8PJdk6Zdlv+0eMPOYh87YhN0zxj9rO8A
vM9zbsJlA5azFx06GIPv8Ji+yWO0s7/fc+yVwXuc2fT1+A3+/XltDJ+jqvGb
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
BzH2ScvxcSh3mPMl9yY6P0XPRdmyuYPxmr1HmJY+glHPGzvmiutLfR9FvrcK
7tg4tWFouENqeky9ERzcujYzzyOJO7QOVdb28XUc3/DV+P+Jmru3fv2vc3GH
8smDa+6X5RpPZXOHTrM+fhP9HLFa/XIHGrS/R+o9UfPNve8jn5Jqzto5E2bd
2R4+iqRYqC4fhflZ2/9RML/Vy6v1anHfQM0vX4ltqPTYiiyZdXRhAOGOkB2o
oQtHvLXhp516uRGPHHn6sx1/x9h1wUsT+8UHQuwVr8RhwSXHqMMUbmPNr8aC
+8d2d42bODGd1s9Suxeuoe4UvSxenOjkPmjNWOxD6R84d0CkObNaqwqJLXVm
TmzDuMdGaCMKv1j+jqS+gNonXGvr2vWt9LvtXoIyzfq713XFZsEcSTnKaf0L
eT5NHBW2hN13T/p4RPOL2OyuYq1UcE9sU2n/Q/Zj/eed2YUIhk1jjviYJ3AH
ktgx4l2iODhXUu5gnFzzaTnx5vWV1HMT7tDcoTzy/o7ekhq84e+VyR52bask
7ji1tFDI93R6z88k51y54+k13w6+e8PfpnIHMV+X/pdOjge6+eZvJ3IH4//O
TTfG6+m6efqS9BJ9DEvnDuN+7nPOM46NzQYwhtr+GfxQ2EfhOcLLK11N4o4+
enhge6jScjlMaW9Bu3+H2NYLHZtb+nEgM4YqiqmCOT548++ldpU9HrhBfSNw
DLnnzMuzL/DHa5OH4pxp8hfwDeizWthB+nmEdr/W0kUmd6gdqexh5l0wTfxT
JndELMB6adyR1MPcnOaz+r1pNVnTmEPqBk//So53Us1W8eNEefMrp3bnvs83
hTvic6Z5NuH+cN5c+D6yYhDj/5WQk5K4Q/Pl8aVhW1Y1Rj0u2KG2LcrYYCfp
JRP5BFOvt6gHJuswXlvkS8EevFLPwVQSm3nuyC+JuQrZA/+HnV+eFmeVq+eg
uc7KCfmeyU0/FgbZ8+sbRScmfhqvSz/y04vvd3p7nDkhPozp6b1xr/OTi/Oy
nOl429EyfCi8DuLn6Lquz831XV83173R8H342KvZ5PpPRZgsKz/D9b55ebVR
4f+QcEcT/of6iLVSX0cv5oAttD4uORxm7w+mlTvwd+CvwJ+Bnt2wtuPrGLtO
/B8ab6WvjANeYCzmfJjo8KH98t4eN4yRtk9mnSbtFy4208GOr0NrPsWs8UEn
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
bZTQVnXNFWVwh8ReRceM4xr39iZual+yz8RWkq8j7fMmx8r5Ik4uo79jmsjv
/2Dpva55vXoYxswRMoXGVcEDxBkqN0ktK8MPUmbtYVv9sCu88e72x2PugEU0
F8TUqHBHkk+tX9FrPE/9W3LW777rH+J6Vurn4P0dd/wgeOt3LwqfSM/B8Nrm
d8X0w8AhcU9Cg0GIxaJPOjV7Vz6YkFfWO77hq8InbIc+IWfnXs21P+/Mpl9f
Tu67CUzQ5YdQPuj1XFDjpjUv3N5mP73Evby8Wi24o7GxVir97WrobxPMgZgu
1LOjT18OueXEXGme+aJ1/1W7TGvumjkZcd2pkC2kZ5+R442YR/wLeeUxo5j1
rMbP54OQO66fo+cEz8zNGBVsQmUF7V8Il8Q1d7VnYOTzsON0dNtwi87TZ/69
mMVW0/tNZ3GHmS/N82KNeaLuFTY5NnySjylJSdxh9uVO+l6V5vdnxXrpellj
EKaAFyJ1+S4s/4Y5bq3xpj02zW1yHKrs/d4Pdyhj7N3+UJffw/R1iF9kZ3ns
QW8IRM6yjp0+2Tp/i/W8Hnt3/PBYsOP9l4Ljp/L1eOlH2PKD9Co3VbQHC+xB
XStyzImx4pX3zD+47WnRzJ434mv7o2PvxLWsumqwn9girAFzxLGf+iwkRfQP
gVlgk17jTGMP1/e3rnpSSSxSRCa3+PxwL6/RVNNjrWwpfzTkNwv/hjIH6skd
xrOfQX571749HbMHSrMxtQeg2qXYqJLnQazT9JZObrjG0Bj5F8RFwQip9aw0
T0R7olt1kyTnJLQdqYPEcuJ/+D78KGa/D+Ue/Cbwk97nhS+iGrKrbJjQro3j
xAo8f68qtqVq7ohrgkVxT3GOvsF8eW0wrglsdtNG7+V7MCV+J455eF51nuah
0G/ezL+AJ1Ty/t3/J14OSzJPBYuo2I6yi8Y8KXPE1//26hgjSYPE6vXKM39j
X7nsofyhY7drtpr7Zc6nl3ZVx4///7rrRZmy+ziZkjpbe17u9Dun1vgLV6z6
7KrPnZ0VX8bSzns7vo1td4rPA/8IMWDqA2FbZpwW87JyRZLYw/U9LlHms0Dz
fmarQfdqL69KZHN5KGzqXorzq0fx/yTc10bWtcp7riv0gcAQ5Gx0xU6l/daG
81jvX16eKo0teunFiWmJuSL2ZNV91uinBndobdM4v9zkjiinQ2KvnroosX+d
8sWq3Etinnav64qh+Djqyyi1fs8txLWKhFuiGC5lD+J77DwPM6cj69l5XJvX
soPT1LR+HqbsOCT7XCpzqN8JTol9PzlzLmADjVUyuQObMG8/c6Q1BPBvybkV
f9uc8ASMQbyTyRymNBfDZh22of47za1grFnXf1KeSlWq2l+GH4R6WMPKHWXG
WBVVFnOoyA+Bi4QTuLbfvD1eNmg+CqzR5ReR5yxfFWZZWZxcfaxO7emqc+X8
Xuvl5XVeRm5SJkv0UBqjjEpNBd131+PoWxWwh+ZrMB37MHp8T7+5Hb9444Co
n89u2j4e55nH9zmrR7PmlYt9N7cj9mPwanKHrm/2EV8lMy7L4hJsCziB+Cm+
J44NsvpJwz06Juxp5RnsWTOWJ61XhClySEyfSa8YH+xHlFZXyhY9xl1zhxxD
enFEviaTGZQ98nAX9jy2vRmXpzFUZk1bUzAJy0xJHQHybsLzJTFeIUuoHyNv
DIzJHXwmyZ9hz7OV5ucrS1wn+MhUVV8DEpe1s5w6WNitPDtHxFCZy4jBUpnz
ibeaOvKGaPbk6pq0/arMGKsiysMb5v8XPTzwe8AeH227Jji38GKp48EHAs8Q
pyWxWhGHwCRwiPhLotq9vOo5cn5/9fIadUWskcgHZdifls9kJBhEY60amj+R
SyWOPTF2yth+Fbnjg7AHPg+ef+s91rbzsfHp7yH5EVF9XbX/lTvMHugmq8Q5
xZFtL8+6jf4b5Bh0sUg4TY8HxsC9XGxVYzt8D/avySfSv9zyo+Sxo+P7ucEq
8t0Fnt33Ul21sHr5O/ALab0A05aKe2v0YA/Ww07XuCVeTUkvypzHLe4lEl4L
mi/CZ4vE3Uu834nzcV/9XPdVc4erOmjKH3l6O1QlGKSs41jUn5b5v57T92Cv
l+dzR2YmgrmpDh/BAMIes+srubbgiqVda2L/SlaOiPN7q5fXKCrBr1EbByR8
d+tzorRWtuXjaT1XVZR7buZswBz//JtdlYy/X+7QPHNhj4S+5bCF5lPAHLa/
w2aOJO7Al2HGYGnOr3DFK9d3alGG9q/G4PBMHK7QuCDt0WD3sia2i22bMVO9
ausmSfppazxYOIay4jp45o3Po9fzbtbJs16a6K2YNgatTazP/5/fNRfb+3Ku
d6/r2ve0vnrCLEYNLHiNa4bzk1RHN9WmC7evtX+0Di7bxo9SxN8BP2Vxh/o8
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
yfi+A+L7gDck56BHb4kmKe3ZvQvuyJuDwtiQHGeLO2K77PRc4bq4VdnDmjOC
L8zuy6EcAiMNWg+rTnnucK05ibU6M/lPicv7zTV3/Tvdavm8jmbI5o+iHOi5
wwttOSw1ror+NmN7YNuTJ6I1xpiO6xuHDIKdCZvU3c+jDl8HTJW2X8oXWcuG
kT2S5qs/I4k58kjZg14b0ks7sofxf6ycnGiAjdIOYZ/nia+SXPGlqc4xfvrC
xG31Y8NXZQ/DUhqDdWRxMu4XAmuo8M+0pYYuwsZ/o+SeMYMKFqLGlqlh7m3+
8UczHfaYemDVMvLMPXfUfH/xvo5mya59ldf/ofU/6+xV6NVIETNVNM88S/T9
MHNA6lCdvhXlqbT/tV5sMUxxV+rH4HhU2aOE3BB6C2I/Ljx1UbDuwRulVpXW
zu3kPru3VwZSUt5Jr+U5c1BMX4fmR5j5EnNRzwjWJbcf7vho7yOl7Vtd9jH5
K/Z3wyLwB/nozs9xATUprzz5WA93P/OVDyYk3ooaV/ayfmKtXP9Wt1bq6/C2
avNUtPZu1PPM917xUhEvZQp2UF/G6Q/OPy+EUYizyvrN3ru7s42k66uKmrt1
5XPwPXliuLJ8Hrrc5JM28EfSPtnzqtwPZQ84g7pTXJuIaak91QBbpW9F/RCV
pRDxZfZycl70lVpd9EHJs33YAvZQ/wA9U17evl7ma6wS09ozMG8sW946unXa
w8sJvg18NO/vekHy4tsSc9V07hiFvoIrx16T/uXUuTLn9xNr5fr3u62SfHJf
e7XZKlB7t5L6vF7tlsWrxE0phxyc3im8wbw8dsjZ04ckhku2MT4nHKN9QIhR
0mfkZYy7ibntefwZTecP7bWeN1aq6n2APbDJ4Y0//vF/iphmnmsbZSBFPRKp
5zu56y3RmeXjUhNY2CJcTm8RepjoK/V+eWUd6m9RI+LkkWl5ZX0+xzKt1UVP
ks07XggOzu2X2sFME7/G+nwe/wZ+jjJ8Hf32VCxDfHent8h5xXZklAfi/Hxn
6Mzy4eB0OE76BrpmiywRa4XPo6jgFVP0JER2HBfcpeJYEH+mr9T7UhEDxivz
WZfPsj2+ix6Mg8aDnZtdL+yxcmJLPK+fulauf8vbKh9j1SJpL7MM34fnSK8i
kvzxyUPSv/Hg/HRP7jC1Qq+wUB8cmQp+u/Xlji+kpHG5zCPPUi+fR9K6LvjD
jJUqww9V9fiHmTvwZdBvBEbg/R0/vFl6idB/JIk7tN870vf4f+i3yHq6Tfs9
6/I98AffxfdLz46QOahZPOj+uLaJbZljk5irBud7jB8ec368hl1p+TM6f/Zk
d5/Jcwd/ITFXxF557qhRPsaqfYpyOFL9Gj633KuIjP99/BbqB8GvUfTeCn/A
LvhC4BiNx+qHH/iM5HeE2yjT71FGPFjRHA7T/1EFgyRtq9+c76LfU5buefjJ
VXFW5Hu4thfL4A74CUbQ/ofal117qSf5O/BlfOYzfxUzBH4S3uP70GX2e9bV
Pu1899LEvcIcJ165vpT9cW1X2jLHRpwVPo+m5ppvOfS88+M16sJvYp+XM3t/
LOxBj49+csur+j0cZvmeHe1VV98Pc5lyh2dJr34V2vrkkZu/zysF46fhjz2T
W4Vh4Id+a2BhP5dRO0tjwMrYVhGfh/25sviD/ulmrJTza6aEYwp7aB4EzEFO
Qlvi9rO4483Nv5FpcjvgAjgCNkjjDtYnVkpZAlbhOPBZckB0mf2eddkmr/Pz
O+P+KFm2eJHjS86Iy1grU4wjaV+O7XtF+p47P/eeOxqnJO5AxFtRX/fUkvd3
1PJb72Os2i0z7krnaW65P69eA+ilif198YYtZQ98IPgtitrIZeWKlFn3t4y6
uXl6f7BMY6WamCNiqqztUmMXW5q+gtjMZcQHNYI7znXqVMMXxE9pbFQSd7Ac
dviXn9wj7zWfgzx75iN8JvZ7XRf2+L9vulJ6wpdZv8qU1spyzR6aP28Kv8eH
Ryfdn3/PHY1SGndQ20p8HucWCueWu/4dbp18r8DhUBR3ZbKHz/HwGlQv7yl2
X83iE1kW2k3b90339MMRnwWjaN56U5/ll2Vvm/4Pc77Gg1VVw7as/a8i74M8
c+xnuINn9q5txr6VVBc3ygdPrZ8bSepe2Z8PX3mmb37efo/oiUJsFXWsqto3
cilc25FIe3wgs94uvQaL9l+vUp473CuNO1boEUMv83Od/yXPHRWKGq0+t2M4
ZLOHz/HwGlBFuSOVNyJ76Zl1T4jiHoQJUuZ4dOxtiblhDDq/6PirroU1qM9D
e++ZPTKaWPuqn+NSxj68OjkT+zx8L8H8gkO0B/zKqd2VfU9TuMOU3TOeeCt8
H02I1fPc4V52XnnXtUJ++Yktnjuqlu9RPlyK4qu0z6CPtfIaROSYl9W3jZqe
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
pPC4wB/kbuR5Bsu6zsecU665Q8cwrOxR1jGGOSTPvKL8atuG5tm/GV9VJnew
XRgDfbT1GvFxMA2H6HLNq696X22R57E8QFyZ8gcxWPrqmjuSzh/5EKPCHags
H0tTuSPrPJFbLjnmRzfF81z/JrZRPrfcy9RQ5ymoov4cVfHBKPQzL0P4QbLY
g5gtzx39jWOY2UP3sd/Pbn/m1ri+7vKxdyqzuzW2yozZ6dXvoojIG4c18G9k
xW6Rz8L+1t3HROOtyowrc+EHscdgxloVtf/LPsZ1x1khbHTqaPHdvfYbJqP+
MOuSW2EvZ16dPhTirIivQmYOBzFzOh+ZOfb4E7v+7/Y/JOyhPT1c/xa2Uj7H
w8uQ2uNDazdH/ghh7Qr3b9hzPcrUS1u3r8oHgUeIzWqT36hJtr5nj2xV3dsj
LZ4KFinDz6L5G3lYghpe7OtH078qfT/zHocs9tD+H3pcstYtizu0Xu4HS+/1
9KPYYyDOKukcYl/3qnVV9vF1wR0q8q9tP4Gp2ZM7u9bXdcnhZhn93Iv4ispQ
nv4d7Jf5GcZpr2P29HD9O9hKaY6Hj7XyQlEf7pg9huW64DqvIq4q4/s8e+RU
FHuFyBF5ec8R8YU4H1dBNc3O9+yRLWGPKAapTPZQW7uq2lWMVfM38qx/6t2f
drjDUf+StL4eepzImWAd8kHmJ8fkvJg5FKaovQsn2Cpaj9eO/6KmFtswlcYK
1LQye3rY4jl6Gn+UfWxdxFmptLYu00n8o7V4VaeXZ2pljH65g1oNvbiDnh7k
ehB35fo3sK3ysVZepmJ7uSbfQOWK9qP2vAvPHoWPV5uvsyba+MoeTRxbWfs3
yH4tjF0Xs0cpvbuj2KoidWSLiLwNYquKcBJ+Dte9Szgedp458WY2X7COxqKx
LO85Ob64p7ANCsP0uz/ClWdmM9chXqdq7iirb2A/3IHPwvRpwBnaa5DYqdPW
uYM7kmKt6uYOxolMnlDfjUp7dyBisJL2/8zkP4nfw/VvYGvlY628TGluNNOG
/6N1vg+TN1yN3cwl8f9fQ6sm+xbUNm/q+Mrax34+t3b7XCcOae2ng+Mbrh7I
rsYW/fDoZN/byCPNGy/yGWpZuexbotJYKj1WaT4N85jCH/gWeuWI9MMdCL8G
ny26L3ZNXdW507NdPILNavo+yj6mZcVZVdHTsOox98tXOm3mlcMgRflQe3q4
/u1rs3ysVYpGrMaTKLKVu/a7CTZ8XhljbYSvpuI8di/3aoNdb46xyeMcZP/6
+RzsoX09lg+NFbajeCbfK4ehLEkeecE8Dc0rP/b8lbXZlol2Gn1FQu4glqpI
nSvlFFVSXj55GoPYo/2cO3hI+Qk/DdOwCNJp7TOo9m7Zx9RlfkdRkZ9NPgc+
BF5d1OQ1/S2Dcofs08xa5797rZbvXR7rsS2HgsffnA5+uXlnsG37b4Pd72zp
5Lg2YGx1KZUvbP5wbdOrGIfNGw2z8WvNL/Gq99xGNr3rceQZ57DyxyD7MzG9
Je7tXdQGLStXvJfgm6IxVkjqBjuOs+o6XgkxV0XUqw4x56+oPUqeeV/n5Mxs
cHrxoPCFHXfFex2r5k+XfSyb7u+ANbDvGScxYfCN9uxz4ffQ+lmI72d8iNgq
nY+S+nGmyfXvXqs1ovnla1/dFjxh9UR+eeO/BScWdgdnlrrj+uiN1sZ8136U
WU83ycZ3cd1E49CxNo6FMo6rz/kYLrWFO+zxDht/sB9r354WHwYq8tl/f/WW
TjzSxm8Us6Nr4A7pBxj15yj0Oe3fEfJUleMrokFrCeNn4PMqtsd+4kNhmtd+
bNJBeo3YgkMkZz7iq4/PzTWaO6ryd9i1oezv7FX/q2zBfzo2YuBgITgoT755
mlz/5rVdkl8+Yj6PJ377brB4fF+w5cC8+Die2/iKMEfaNbYwd74ns+uxVyoz
x6PHeqbdHzNIFbY/28SHkfadro9ZwWPr2WN41FbbfZj4A854ec9C8PyuuQ57
vD0t7/MyCOtojnkR30DfdvTKifPKWhaqn7wOpP3KXdWyKvV4mfYsvdkjUStL
bXz6hfDaj01aRpwcdrbGX/3h993PzO26smWoLO4YxO7upbTvJP/cJXeUJde/
e63XKPo8Qjv2t+Nb5fo5cnin9CrLc63Rc4DjBH8MpQ8kKcejx/o2D3QxAWJb
vXhEaxpFfJG0zcr5pqbrzud7DI+antvRS2b8VRv3BWaAN66+4abgk5/8ZPCJ
T3xC9Fd/fXGwZt2GmD96bWfT9vGYPYrkYffTg/ylsWdkjGt/+bPVy0PWYD8u
u+xSme4nvkruacRYNcjXgcrsnZgkts35OLB3UyGbtIzvlj6JH1VTPzlJZdWz
qpI7qGNFHNPxU3ti3wKxTLa/Q99XySKeO5qpUfR5PPva6roUeQSjIOKvniRW
q602cIoGykVI8Ev0qy52GaJj7H0ew6E25JQX2Ze27Y/6OT7/xS+LHf/Xl/wf
wbd/cGdwzXdujxnknoefjLlD/R+mzG0dnNsvOdjkmq/K4U7xUXTZ0Vn+C2Pe
+LZXgm/9t2vlNV5mbJ+xX/7FS2J/h3BH0rYzBD+xH3XZwbnum/TqyOh/UZbg
jomJXwZbdz/V0x6lrtWg/g5Yh1yPOo9lG7jDHq/meNg1dXmvvc09d4yYRtDn
sWnvfCnX346J8eCZjZuHJgar9L4ulh8jVXn8IsMgjWXzPo9Wq212+rDtE6wA
V8AXsIcZW4Wvg/n/8T//7/H8Fyemg+/d/RNhE17NfBCmmXfX3d8Pfn3/FVJb
V3pIhPb+9NR4sOah+4J7770rePznDwSLx8/P5/2R2SnxYbCcV+UHuEI/t37d
E5LHyvwD01Pi6+DzvOfzjzy8RtadO7Q35g7sYeK+GBPb2Pzaxtz8ga+jaf4O
GK2qnoqmtLc53AF/ZNmj9B58b2FB1M93uWAOVAZ3wAF1cgc55UnMYcpcVmbd
K88dDZbWthohe2jjnvJqIO7e8arkgLjep0Hl+0lWL+/zaL/allNedL+azh7w
AvFVtl8DEXulfpBfvrpTmOM/f/rCmEX0lfks/9/+9FNi73/mM38ly279xufE
5ocdZN0//1RwySWfk2lesf9hB33P5/7sTy+Q9zCELiNe6m+/fJlMX3vtN+Vz
ZpwVnMG2eX/RRRfG2/j8Zz8V7N3+kLxnXCxjPgyShz2EOx7/VOHau1WJmrO9
+nb0oyOLk12+i1Vc0YM94A64tB/uoKZAFfuUR2VwB3Y9tn6vPohljRfbPymW
SvM97GVaC8xzx/Br1GzOJ7YcCE4vHijtWjx24kgn9qoB+9a38uaWew1+jEeI
8YdNbbDN+1Ub2AN78fKrvtax9ce2rYqbuvLr18syfB/4OJi+48FfyOd4hUtY
puzyyL+9Lstuu+0WeT/53K3B7o0/Fl/DySPTYu/DDizDR6FsoTyB/0LfI3hB
Y6mef+6p2BdicgccwfS6B2+UHPAX1z0q7/F33HTTDTI9MfG2fE7HBav0ug99
uOtByStvSqxVP3kweUTv8V42ZxZ7jO87EF9LsEfemCt8HEk55HUpqSd6v+yh
vbrJwyhSR9bFeD13DKlGLd4q3N9nX/ltqeyBP73V7OG5oxaNGuMPk9pglw/7
PmIrmmxhcgfLLvu7r8T+DuUTja1iuUp9HGwLqZ+EeCt8HnACNr/6OxCMQexU
nB8ecgE2q2znyitiJkH4LOAQk0GUNb56VccXEueJhMuVO/T7+G7Ednkv/JLj
PqR58i7sYltV5ZNrTFUe2ezBuTevJ66LxaUednfIGeSoJPUsr1PkQ1Rhn0ss
YAPGm+YbaRJ3/P+iPivA
          "], {{0, 802}, {798, 0}}, {0, 255}, 
          ColorFunction -> RGBColor], 
         BoxForm`ImageTag[
         "Byte", ColorSpace -> "RGB", Interleaving -> False, MetaInformation -> 
          Association[
           "Exif" -> {"Software" -> "Wolfram Language"}, 
            "GeoGraphicsMetaInformation" -> {
             "Software" -> "Wolfram Language", "TileSources" -> 
              "Wolfram Knowledgebase with data from OpenStreetMap"}]], 
         Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
        ImageSizeRaw -> {798, 802}, PlotRange -> {{0, 798}, {0, 802}}], 
       TraditionalForm]], PolygonBox[CompressedData["
1:eJxl2Hlczwkex/EOjEZq5RgauXKfbSFHVEqOKaMYhUTua0LGNcZE0iCS+1j3
uU2bFLU0+iFHD2FY5Jh2pCRqMmEN7ZDdxz729/q+PXb/8nj+0a/8+vX9vN/v
5uNnBU2ysrCwWGNpYfGffw/2+vv8cw3Czj5pltrd6aC315HAjk9/qSsnTv1m
ZIM6cnLU1VwvOzllS2OPGbXktOSZyZtryicunG5ytrp8Mt82ocxKznwZalnf
QjbZJEd6Vo0xfKZZ1aNpv8vn3QO+2PRGvjhk1yXTK/nypGfupS/k3G/6JNat
kH/cuNaxb7l84/uf46aWyrfPdaraUCLfubckIuuRfL/iWsGTh3J+jSaBDg/k
AqeIbI98ubCryW3KPbnoM7tD6/PkkvFhDU7flMsWHf2u5LpcnvC+8g/X5GdH
hkzvnSu/MO3On5Qj/5b3q3/CBflNeV9T5jm50npdl8cm+Z1jwV7707KFaxeH
Xqdkq0FRyydmyNXGXX8Vf1z+aEHTyaeOybXiZ919lCzXPnRmoF2SbH/aPrPH
n2WHW2M7TDgkNyhL2bl2v9zQ0sLu5B7ZseHQqKKdslOXvc9td8jN/Z6Hu2+V
ncd43QrfJLf6KsF3zXq5bdzD9Ix4ueN+lzaFcXLnU0u31Volu9y4YdM9VnZ7
0mzxuOWy+/vZ5auXyj3rnxuTvkTu3bHO9YKv5b4+4V4fL5T7jUpN7TpP9p1j
6Tw2UvZbGbhp1Sx50J591U/MlAMyXsx/ME3+/Jr305pT5MDi9SPdJsrD3xbm
jgmXQxxcPVaGyaPaRSenjZZDvW42+TlEHhfcIuGjEXJ4RKSl6zB50orsyNCh
8pSdDsWxAfKM4+O/SB0sz8xNu5Q/QJ5daNWjRn85sjIo0aWfPN/+gONoT3lB
63/ErfCQF/fxqUrpKS8ZvjHip+7yshmPCqp1laOj3QK7/FGO2b48e2RneeWx
W24xHeQ1Oc6HjraV4x/MbXC/lbzut/PfWTvLG23r/bNTM3mr88TpIU7y9l4n
8qMd5R2B1QKSP5F3Tx1uultP3h91sIuVg3xwy6u9He3lw8m+DsG2cuKFTcuX
2cjJ+cWvkmrIKS+7Tr5jLafarLhrYSmfaJY3sMP70P9z8NqNk48lyo8Hl3f2
TZEjLlkm3DshL4xzXP1lpjzCd4mT9Vm5R+bswdsvygPzetdxuSIf39kqMueG
fK/7vC/H3pH7lM6xrsyX0xtO6Lq+UI4dlGDR4Yk8tqn31Ivl8qoxWTPGvZTL
S/xrvXsjdzG5D9hWJedWv9S0m3U/w+0svDbfrCkn2f96ZLadnJPRMMS+nuyy
rebho43k3Pk1NgxpKj/sNrpxRUu54/3P+ye0l5/HdKrt6iLbfdvnq9vd5Bbt
L3+9oLe8w96x+afecnbeoiln/OQSX9chE/3lWX5r82yC5NLi21UpwXIb/2E5
I8bIwy4Hub4fLze94uR5eKp8pPD9syER8hWTl2flXLlu985u+xfJBR4Ouf5R
8rIy92qVMfKghWWFB1bLB73nTRiaILtdcF5VtVku2uM9LOlPsv1Wx+yR++TV
8b/n1Twim9Z2WnfyL/J507+eTU2Tl0dkvWx08oP30/b4ritZsmfHThVLzsvX
oxc+cbksR5YWxhb/KM8Lzbi27bYc9bbf6YCf5FSbvCDrh/IPz06tP/VYru7q
uWj2L3J6TJpN2xcffP+/hvs8fC0Hn9vRevs7edQPSceDrHwMtyouKrOtKXvu
jr+aU1veOLsqZHldObbGtwmejeQWLmPnvmsi1ymqsMxsKd/qFuWxsL18ZVqo
s7uLHFx4J+N1N7laq75vMnrLMUWFxQu85YLyOkt7DpDjPJpcfusvx1eMOGsK
+uDnHWQ7OTpEzjsen+kXJmdkdTbVmiiPaNxnzt+myVZJH9/eOktuOeNpSdg8
OTKmzfetF8v1+jdqUrFU3tvc3udk7Aevnz6qUfQauX12wD7/DXKJS6/8T7bJ
3nUicx7t+uD93TFg8rEDcr92tU8uSZQdfOtnfZYit9uaNs8xXT7w2r2oNPOD
rw+rtMo8Ky994Xdv9SU57e388aFX5U+f5+/rfFNuPv3yFst7PsY9wdwbzD3C
3CvMPcPcO8w9xNxLzD3F3FvMPcbca8w9x9x7TB7A5AVMnsDkDUweweQVTJ7B
5B1MHsLkJUyewuQtTB7D5DVMnsPkPUwexORFTJ7E5E1MHsXkVUyexeRdTB7G
5GVMnsbkbUwex+R1TJ7H5H1MH8D0BUyfwPQNTB/B9BVMn8H0HUwfwvQlTJ/C
9C1MH8P0NUyfw/Q9TB/E9EVMn8T0TUwfxfRVTJ/F9F1MH8b0ZUyfxvRtTB/H
9HVMn8f0fcwegNkLMHsCZm/A7BGYvQKzZ2D2DswegtlLMHsKZm/B7DGYvQaz
52D2HuN5bt6DjOe5eS8ynufmPQmzNxnPc/Me9b/mnmDuDeYeYe4V5p5h7h3m
Hhpfb76XmHuKubeYe4y515h7jrn3mDyAyQuYPIHJG8brm/MIJq9g8gwm72Dy
ECYvYfIUJm9h8hgmr2HyHCbvGe+vOQ9i8qLx85rzJCZvYvIoJq9i8qzx85nz
LiYPY/IyJk9j8jYmj2PyOibPG79fc943vr+5Dxj/H3NfwPQJTN/A9BFMX8H0
GUzfwfQhTF/C9ClM38L0MePzYu5rmD5nfB7MfQ/TBzF9EdMnMX0T00cxfdX4
+zT3WeP9NPddTB82Pn/mvozp05i+jenjmL6O6fOYvo/ZAzB7gfG8Mu8JxuuZ
9wbMHoHZKzB7Bmbv0PPgv3uI8fk37yWYPQWzt2D2GMxeg9lzjOeVee/B7EGY
vQizJxl/v+a96d+PjIWM
      "],
      VertexTextureCoordinates->CompressedData["
1:eJxlmHtUV1UWxzfmYwxnMlORFiU45kRYLjV8BHrwBYpLLM0I06EoZUTGBgsr
dcAemDQNuhSrpZniQEtEdAYf6AgioQgjkGCCgAoIoqDSQQvD8THnXtdv7/n+
+v0Dn/U7995z9t73t7/f7RXx9qwFXYjocxci66/z5+PcWdsq93yiHOydb3Ey
82SPlTq/x1bmV/Ks71OZDyyJnFpSm87cOtBav4c5Z6H52j3L6fp9zE/0n/9u
+ZRs5m1vW/c7xBxZGONxIiaH2cW+fx5z0wuTIi6UHWVOsy53/46554YZo6rf
KnB6/jHmQ62hD/9w+zhzdzdrPyeYL0w0t19XxOxj76+Yee2m6KziISeZz9n7
LWHecnPZ6mM5pU77/555RFpAZrj3KeYwP+s8wofKp1g7Yl5sn69C4nc3+MO5
ecKT7POeZk71fvGqOaHT+YV7zLE+Z5ifs1bfFn7Z3N1cwTzBjk8V841d4eYJ
wu7W9tedZVbVb1k7coqf8PmuUeYENcwPbbbiWcv8zHD7Aub+J6z4nmMumme2
43aeue2GFW/hfokfWBF1in8dc9a+OJMB4Wg7H/XMq8zqgSuFl9n5EZ5pnrbF
q4E5ws6XcKyHteEGp/xdlPfLnHZztHConU/hKGt5n0bm1+38Co810f4qW3iG
ne8mWW+FZ36TU/6Fh5lsb+xyiXmiXQ/Cc8zqvjuEH9SH8B9HWQluZh5t14tw
sLX9m8K/t+vnstSXVS5fCT+badWTcMAv9R8/Mv6KU30JT0tqHJPUKDzIrrcW
Zt/Bzdd7JQr/zi4n4fH/vrL9b8+1Ms/qZtWjsI/9+gg/qM+rzG7W7T8QDrLr
VdjTKreB15g77d8H4V59rB8IYX8rPG7XpX53/OzTLUr4QX0Lu4y3AtTmVO/C
rlZ69ws3Pmlt6EfmW4usghN+eL/1Pgg/+OhfcfTgj44tVI6+odX6hK0pKwKS
mbvW3RsXFvENc8zTua99OzGVeVDciKCMl9OZXXukpfhF7mZu9z98xif3X8wN
c9dX3A/cx7y0I/Wye/kB5ukzQnyXv3ZI1lfcqvVsPsycPcH9zm9jjjBHTfeo
9Yw7ykx9Y/tdKMhn7j77T7lHehYwZ2wMafxu5jHmuymfftm68ThzVdzyVt9z
hcw739l4LXVQEfPF3iG7Ry8qZn5sjFdA257/ML/nviGrqOMk88iAYf1PjCtl
fjp5zYqWT8qYvw4fe3NYyffMr+5sDyxNPMWcWuy2O/nZcmb/0MjRS8qFU0L9
r4bFVjB7J3WUh7qfZp64qvNmZK7wM8t2hX32xg/M9+KWu+Z1O8P896UVj3bf
KdzaMSQ2PKRS1q9sG3fyhnBR8D/enfZlFfMf3i/wqvE7yzz7p1Mz/lovXLLm
JZeRCdXMB2vKJv/Xu4Z58ZJKz8oy4TvpnVsK3qmV/VSVHisYcI75Q59rWypz
hRuOtg+/E3GeeVtKfOLzv7kg+S18ITM+U/jVJ0rSzs+qY167un5FyC/Cg5f0
9WgJqWeu69wVsy9F+M7M/pMSfxKuqtmdHBnUwDy/e1XUzE3CdRPaiwOuC09y
iTjgF3CROTRv7fMBG4S9712cGtIsXD218NaCsY1yft9vp3z6uXD+gvZRWXXC
lYkDTjWPaGIOej2p31OrhQMPnnD9c7Vw+1K/7CNDLzHnJUR4PL5K2P92too/
Ldyv/eBTbUOamWu2N1UsXC4c+kbO9JZS4YRNBcmxXpeZXc7GZ7nGCp/Mfz89
o0g4feCYuDkeV5h7107z7fkX4S33/U4XFgivy/1mXpJbi9x/cdfK8MXCgQku
k/3yhL/YOzTD87FWyV/hk717RwrPyFn6Xs/Dwvl5xy/1euQq8xSf7PDH3xTe
+tmVluHZwpWb766Z7XqNechLX0+IDxcOqogesH+vcHC8e5+fe1yX8+qQkWqe
8MFbh1dt+KdwR9qj99u7tjHvCHpo79ww4V2LAlNKM4Ubq9eXBXf5kXlY+nZV
8Ypw4tARnW9mCDv+Yj/RCvuNuS/0I9MHoF+ZOoF+ZvIC/U4r7IdmPfRLU3fQ
T7XCfqsV9mOtsF+bOEM/1wr7vVaoB7RCvaAV6gmtUG9ohXpEK9Qrpk+CntEK
9Y5WqIe0Qr2kFeoprVBvaYV6zNQR6DWtUM9phXpPK9SDWqFeNH0E9KSpG9Cb
WqEe1Qr1qnmPQM9qhXrXrAc9bPo66GXzOwJ6WivU26ZvgB7XCvW6VqjntUK9
rxX6Aa3QLxidBH5CK/Qbpp7BjzjqXfoM+hnTN8HvaIV+yPRp8EuO+hRGv2Xq
FfyYVujXHPUlfRj9nlboB019gV901IfoAvSbjvyLrkC/avoc+Fmt0O868ieM
flkr9NNaod92xF90FPp1rdDPmz4Pft8RP9F1OC8wOhLmCWZ/MG9wnF90Jc4r
tMJ5hlY473DsP48Z5yVGx8A8xcQP5i2O54uuxnmN0U0wz9EK5z2O60XX47zI
6BCYJ2mF86Zf+wrHf9hPjE+FfmN8DPQjIuxXRNjPiLDfEWE/JMJ+aXwr9FPj
66DfEmE/JsJ+TYT9nAj7PRHqAePbQS8QoZ4gQr1BhHrE+EDQK0SoZ4hQ75jz
gh4iQr1EhHrK3B/0FhHqMSLUa0So54wvBb1nfC7oQSLUi0SoJ815QW+afIAe
NfEHvWriC3qWCPUuEephItTL5jygp4lQbxOhHidCvW7yB3qeCPW+uR78ABH6
BSL0E0ToN6z6+H8/QoR+hQj9jDk/+B0i9ENmf+CXiNBPmfcF/BYR+jEi9GtE
6OeI0O8RoR80+wG/SIR+0qwHv0mEfpQI/arJJ/hZIvS7pv7ADxOhXzbxBj9N
hH6bCP04Efp1IvTzROj3iXAeQITzApNfmCcQ4byBCOcRRDivMB+YZxDhvIMI
5yGmXmBeQoTzFCKct5j1MI8x7yvMa4hwnkOE8x4inAcR4byICOdJRI550/8A
Vrgnjg==
       "]]}, 
    TagBox[
     TooltipBox[
      {Opacity[0], 
       PolygonBox[{{-116.84822512580828`, 
        36.16322292219183}, {-115.97139187634713`, 
        36.16322292219183}, {-115.97139187634713`, 
        35.28214152954916}, {-116.84822512580828`, 
        35.28214152954916}, {-116.84822512580828`, 36.16322292219183}}]},
      "\"Wolfram Knowledgebase with data from OpenStreetMap\"",
      TooltipStyle->"TextStyling"],
     Annotation[#, "Wolfram Knowledgebase with data from OpenStreetMap", 
      "Tooltip"]& ], {InsetBox[
      GraphicsBox[
       {RGBColor[0.790588, 0.201176, 0.], 
        PolygonBox[{{-0.4, 1.25}, {0, 0}, {0.4, 1.25}}], 
        RectangleBox[{-1, 1.25}, {1, 3.25},
         RoundingRadius->0.6]},
       PlotRangePadding->None], {-118.163475, 37.46085932599567}, {
      Center, Bottom}, Offset[24]], {}}}, {}},
  CoordinatesToolOptions:>{
   "DisplayFunction" -> (
     GeoGraphics`GeoGridPositionDisplay[#, {
      "Mercator", "Centering" -> GeoPosition[{35.0456557279975, -118.163475}],
        "GridOrigin" -> {-118.163475, 0}}, "ITRF00"]& ), 
    "CopiedValueFunction" -> (
     GeoGraphics`GeoGridPositionCopiedValue[#, {
      "Mercator", "Centering" -> GeoPosition[{35.0456557279975, -118.163475}],
        "GridOrigin" -> {-118.163475, 0}}, "ITRF00"]& )},
  DefaultBaseStyle->"GeoGraphics",
  Method->{"OriginalInput" -> HoldForm[
      GeoGraphics[{
        GeoMarker[
         Entity["Company", "AltaWindEnergyCenter::4h269"]]}, GeoRange -> 
       Quantity[200, "Kilometers"]]], 
    "BasicGeoRange" -> {{33.24290445964046, 
     36.848406996354534`}, {-120.35555812365288`, -115.97139187634713`}}, 
    "GeoGraphicsOptions" -> {
     GeoBackground -> GeoStyling["StreetMap", GeoServer -> {Automatic}], 
      GeoCenter -> GeoPosition[{35.0456557279975, -118.163475}], GeoGridLines -> 
      None, GeoGridLinesStyle -> GrayLevel[0.4, 0.3], GeoModel -> "ITRF00", 
      GeoProjection -> {
       "Mercator", "Centering" -> 
        GeoPosition[{35.0456557279975, -118.163475}], 
        "GridOrigin" -> {-118.163475, 0}}, 
      GeoRange -> {{33.24290445964046, 
       36.848406996354534`}, {-120.35555812365288`, -115.97139187634713`}}, 
      GeoRangePadding -> None, GeoServer -> {Automatic}, GeoZoomLevel -> 8, 
      MetaInformation -> {
       "Software" -> "Wolfram Language", "TileSources" -> 
        "Wolfram Knowledgebase with data from OpenStreetMap"}}},
  PlotRange->{{-120.35555812365288`, -115.97139187634713`}, {
   35.28214152954916, 39.687548492762524`}},
  PlotRangeClipping->True,
  PlotRangePadding->None]], "Text",
 CellChangeTimes->{3.717101052615507*^9, 3.717101114614857*^9},
 CellTags->{
  "GeoGraphics", "GeoMarker", 
   "GeoRange"},ExpressionUUID->"4558b33d-0e9f-4b41-b18d-f2fa8e4637af"],

Cell["\<\
In this example, you will try to fit wind speed data to a parametric as well \
as a nonparametric distribution and find the probability that the wind speed \
is greater than the cutoff wind speed required to generate power. \
\>", "Text",
 CellChangeTimes->{
  3.7011930443616705`*^9, {3.701775035893521*^9, 3.701775044069112*^9}, {
   3.714923536803451*^9, 3.714923550441464*^9}, {3.7149243859428673`*^9, 
   3.714924386181447*^9}, {3.7149253810439863`*^9, 3.714925381251788*^9}, {
   3.7169027154270353`*^9, 
   3.7169027313651*^9}},ExpressionUUID->"b06eb966-d179-4902-8ff6-\
5011856fb2a9"],

Cell[CellGroupData[{

Cell["Getting the Data via WeatherData", "Subsection",
 CellChangeTimes->{{3.7011045595628614`*^9, 3.7011045679631004`*^9}, {
  3.7149235576012487`*^9, 
  3.7149235583930387`*^9}},ExpressionUUID->"bb0a894a-1a62-481e-9e69-\
a4c72ee55758"],

Cell[TextData[{
 "In this example, information from ",
 StyleBox[ButtonBox["WeatherData",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/WeatherData"],
  FontWeight->"Bold"],
 " is used to investigate the feasibility of using wind to generate \
electricity. First obtain the data, then clean it to remove the missing \
values:"
}], "Text",
 CellChangeTimes->{
  3.572701094939999*^9, 3.572701133681587*^9, 3.572885751155064*^9, {
   3.5772055135208893`*^9, 3.577205529082736*^9}, {3.622302533207438*^9, 
   3.6223025427673683`*^9}, {3.6224581049336433`*^9, 3.622458120587368*^9}, {
   3.7017826315175548`*^9, 3.701782635670446*^9}, 3.710604166816247*^9, {
   3.711377863089362*^9, 3.7113778782121677`*^9}, {3.714923569330894*^9, 
   3.714923583896497*^9}, {3.714924666477887*^9, 
   3.714924667820135*^9}},ExpressionUUID->"715b6c60-e2df-422d-af8a-\
2c45419135e3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"wndData", "=", 
     RowBox[{"TimeSeries", "[", 
      RowBox[{
       RowBox[{"WeatherData", "[", 
        RowBox[{
         RowBox[{"GeoPosition", "[", 
          TemplateBox[{"\"Alta Wind Energy Center\"",RowBox[{"Entity", "[", 
              RowBox[{"\"Company\"", ",", "\"AltaWindEnergyCenter::4h269\""}],
               "]"}],"\"Entity[\\\"Company\\\", \
\\\"AltaWindEnergyCenter::4h269\\\"]\"","\"company\""},
           "Entity"], "]"}], ",", " ", "\"\<MeanWindSpeed\>\"", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2000", ",", "1", ",", "1"}], "}"}], ",", 
           RowBox[{"Date", "[", "]"}], ",", "\"\<Day\>\""}], "}"}]}], "]"}], 
       ",", 
       RowBox[{"MissingDataMethod", "\[Rule]", "Automatic"}]}], "]"}]}], 
    ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"dataclean", "=", 
    RowBox[{"QuantityMagnitude", "@", 
     RowBox[{"wndData", "[", "\"\<Values\>\"", "]"}]}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.701023992902027*^9, 3.7010239940610266`*^9}, 
   3.7010290816779957`*^9, {3.7010983755266867`*^9, 3.7010983774006*^9}, 
   3.701104439038746*^9, {3.7017897279126334`*^9, 3.7017897313917303`*^9}, {
   3.70974744192515*^9, 3.709747449000394*^9}, {3.711377858851451*^9, 
   3.711377860242182*^9}, {3.712416916266833*^9, 3.7124169300724325`*^9}, {
   3.7124169620162296`*^9, 3.7124169661572514`*^9}, {3.7124170286283913`*^9, 
   3.7124170370113173`*^9}, {3.7129166604548645`*^9, 3.7129166881782627`*^9}, 
   3.712916892522223*^9, {3.712916940608532*^9, 3.7129169449992*^9}, {
   3.712949166325085*^9, 3.712949213418456*^9}, {3.717100782958871*^9, 
   3.7171007844467945`*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"0c5ab494-7211-45ad-9a86-ff8f9c581433"],

Cell[BoxData[
 RowBox[{"DateListPlot", "[", "wndData", "]"}]], "Input",
 CellChangeTimes->{{3.7124172975170813`*^9, 3.712417309782591*^9}, {
  3.712417393200082*^9, 3.712417396100715*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"858047f5-2ad3-4769-a7fd-d9b195263b2a"],

Cell["Visualize the data in histograms for the PDF and CDF:", "Text",
 CellChangeTimes->{{3.701782657484477*^9, 3.7017826786608667`*^9}, {
   3.714923578713788*^9, 3.714923591072031*^9}, 
   3.7149246762289267`*^9},ExpressionUUID->"8b6bb528-2894-4c6f-99fe-\
152d29be2650"],

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"histplotpdf", ",", "histplotcdf"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Histogram", "[", 
       RowBox[{
        RowBox[{"QuantityMagnitude", "@", "wndData"}], ",", "45", ",", 
        "\"\<PDF\>\"", ",", 
        RowBox[{"PlotLabel", "\[Rule]", "\"\<PDF\>\""}]}], "]"}], ",", 
      RowBox[{"Histogram", "[", 
       RowBox[{
        RowBox[{"QuantityMagnitude", "@", "wndData"}], ",", "45", ",", 
        "\"\<CDF\>\"", ",", 
        RowBox[{"PlotLabel", "\[Rule]", "\"\<CDF\>\""}]}], "]"}]}], "}"}]}], 
   ",", 
   RowBox[{"ImageSize", "\[Rule]", " ", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.701104448525875*^9, {3.7016208695461655`*^9, 3.7016208860086336`*^9}},
 CellTags->{"GraphicsRow", "QuantityMagnitude", "Large"},
 CellLabel->"In[48]:=",ExpressionUUID->"6337f46b-74e5-4656-93c0-9e7a3e2edb29"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fitting to a Nonparametric Distribution", "Subsection",
 CellChangeTimes->{{3.7011045724269104`*^9, 3.701104586897176*^9}, {
  3.701104716802459*^9, 3.701104721736637*^9}, {3.714923623832388*^9, 
  3.71492363307055*^9}},ExpressionUUID->"2feea42a-8f37-41d3-b2c0-\
3d8c5998cf82"],

Cell[TextData[{
 "Since wind speed can be assumed to vary continuously, estimate a \
distribution for observations using the ",
 StyleBox[ButtonBox["SmoothKernelDistribution ",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/SmoothKernelDistribution"],
  FontWeight->"Bold"],
 "function. Find an estimated distribution and visualize the results. This \
assumes the data comes from a continuous distribution:"
}], "Text",
 CellChangeTimes->{{3.7017826948401933`*^9, 3.701782698011476*^9}, {
  3.714923649046715*^9, 
  3.714923662701948*^9}},ExpressionUUID->"7ef05b19-625b-4873-9f12-\
187db11e960a"],

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[ScriptCapitalD]", "e"], "=", 
  RowBox[{"SmoothKernelDistribution", "[", "dataclean", "]"}]}]], "Input",
 CellChangeTimes->{
  3.701104456338564*^9, {3.7113778896812534`*^9, 3.711377890806369*^9}},
 CellTags->{"SmoothKernelDistribution", "Cases", "Normal", "NumericQ"},
 CellLabel->"In[49]:=",ExpressionUUID->"dc826720-2a13-4341-ac21-cf395e319f1c"],

Cell["\<\
Visualize how good the fit is and conclude with a quantitative estimate:\
\>", "Text",
 CellChangeTimes->{{3.701782657484477*^9, 3.7017826786608667`*^9}, {
   3.701782721539009*^9, 3.701782749625435*^9}, {3.714923668669332*^9, 
   3.7149236751011763`*^9}, 
   3.714924686524621*^9},ExpressionUUID->"a8795afa-0733-4c93-a90a-\
5ef63f2a06d2"],

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Show", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"histplotpdf", ",", "\[IndentingNewLine]", 
        RowBox[{"estplot", "=", " ", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"PDF", "[", 
            RowBox[{
             SubscriptBox["\[ScriptCapitalD]", "e"], ",", "x"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", "90"}], "}"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", "Thick"}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "}"}], "]"}], ",", 
     RowBox[{"Show", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"histplotcdf", ",", "\[IndentingNewLine]", 
        RowBox[{"estplot", "=", " ", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"CDF", "[", 
            RowBox[{
             SubscriptBox["\[ScriptCapitalD]", "e"], ",", "x"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", "90"}], "}"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", "Thick"}]}], "]"}]}]}], "}"}], 
      "\[IndentingNewLine]", "]"}]}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", " ", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7011045193152156`*^9, 3.7011045207079334`*^9}, {
  3.70974789159166*^9, 3.709747926817956*^9}, {3.7129167764429264`*^9, 
  3.7129168018582067`*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"6204256d-9985-4207-9e6c-98e9aae02390"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tstData", "=", 
   RowBox[{"DistributionFitTest", "[", 
    RowBox[{"dataclean", ",", 
     SubscriptBox["\[ScriptCapitalD]", "e"], ",", 
     "\"\<HypothesisTestData\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"tstData", "[", 
  RowBox[{"\"\<TestDataTable\>\"", ",", " ", "All"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.7011045364747324`*^9, {3.71137789764028*^9, 3.7113778990464153`*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"3438f168-4916-46da-be1f-d3e91d3d2dcb"],

Cell[BoxData[
 RowBox[{"Column", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"tstData", "[", "\"\<ShortTestConclusion\>\"", "]"}], ",", 
       "\"\<Text\>\""}], "]"}], ",", 
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"tstData", "[", "\"\<TestConclusion\>\"", "]"}], ",", 
       "\"\<Text\>\""}], "]"}]}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.70974962330441*^9, 3.709749633999836*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"11454641-49a9-471f-91f5-6d2c907763e9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fitting to Parametric Distributions", "Subsection",
 CellChangeTimes->{{3.7011046615699186`*^9, 3.701104670241894*^9}, {
  3.7011047252568555`*^9, 3.7011047271609364`*^9}, {3.714923680053156*^9, 
  3.714923683668892*^9}},ExpressionUUID->"3993bd59-90e1-4945-a231-\
cb411b5127e5"],

Cell[TextData[{
 "An alternate approach would be to fit the data to known parametric \
distributions using ",
 StyleBox[ButtonBox["FindDistribution",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/FindDistribution"],
  FontFamily->"Arial",
  FontWeight->"Bold"],
 ":"
}], "Text",
 CellChangeTimes->{{3.701783148638915*^9, 3.7017832042945414`*^9}, {
  3.714923691270526*^9, 
  3.714923707684474*^9}},ExpressionUUID->"445a576a-8638-419e-9adb-\
c55297c9c4b4"],

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[ScriptCapitalD]", "p"], "=", 
  RowBox[{"FindDistribution", "[", "dataclean", "]"}]}]], "Input",
 CellChangeTimes->{{3.7010110709507256`*^9, 3.7010110985665903`*^9}, {
   3.701028905086996*^9, 3.7010289061229963`*^9}, {3.7010291143209963`*^9, 
   3.701029119374996*^9}, 3.7011044777783084`*^9, {3.71137790767367*^9, 
   3.711377908869645*^9}},
 CellTags->"FindDistribution",
 CellLabel->"In[54]:=",ExpressionUUID->"069fb744-6240-4f55-88d1-9ba9dcb883e0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tstData", "=", 
   RowBox[{"DistributionFitTest", "[", 
    RowBox[{"dataclean", ",", 
     SubscriptBox["\[ScriptCapitalD]", "p"], ",", 
     "\"\<HypothesisTestData\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"tstData", "[", 
  RowBox[{"\"\<TestDataTable\>\"", ",", " ", "All"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.7010291406489964`*^9, 3.701104485861699*^9, {3.7113779140742064`*^9, 
   3.711377915386749*^9}},
 CellTags->{"DistributionFitTest", "Normal"},
 CellLabel->"In[55]:=",ExpressionUUID->"b1e028e2-b98d-4ba6-8a6b-9d036320c8a5"],

Cell["Visualize how good the fit is:", "Text",
 CellChangeTimes->{{3.701783228676776*^9, 3.701783244932602*^9}, {
   3.7149237158771763`*^9, 3.714923720739697*^9}, 3.714924696124022*^9, 
   3.71492542070619*^9},ExpressionUUID->"05f14225-0fef-405a-9b96-\
edc6363d24bd"],

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Show", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"histplotpdf", ",", "\[IndentingNewLine]", 
        RowBox[{"estplot", "=", " ", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"PDF", "[", 
            RowBox[{
             SubscriptBox["\[ScriptCapitalD]", "p"], ",", "x"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", "90"}], "}"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", "Thick"}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "}"}], "]"}], ",", 
     RowBox[{"Show", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"histplotcdf", ",", "\[IndentingNewLine]", 
        RowBox[{"estplot", "=", " ", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"CDF", "[", 
            RowBox[{
             SubscriptBox["\[ScriptCapitalD]", "p"], ",", "x"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", "90"}], "}"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", "Thick"}]}], "]"}]}]}], "}"}], 
      "\[IndentingNewLine]", "]"}]}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", " ", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7011045016946115`*^9, 3.701104504580289*^9}, {
  3.7097479686389027`*^9, 3.7097479766043*^9}, {3.712916991153347*^9, 
  3.712916996024254*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"34d194b1-8070-470d-8bda-686bab5f7fd0"],

Cell["\<\
The cutoff wind speed for wind generation is approximately 12 km/h. You can \
find out what probability each of these models predicts for successful wind \
power generation:\
\>", "Text",
 CellChangeTimes->{{3.7017750511608753`*^9, 3.7017751149533415`*^9}, {
  3.7129174304974303`*^9, 3.7129174964883065`*^9}, {3.714923728612892*^9, 
  3.714923743578898*^9}, {3.714924707684147*^9, 3.714924708546444*^9}, {
  3.714925454120977*^9, 
  3.7149254581130867`*^9}},ExpressionUUID->"260146ea-92fc-4322-9b5f-\
06960a8406ce"],

Cell[BoxData[
 RowBox[{"Probability", "[", 
  RowBox[{
   RowBox[{"x", ">", "12.0"}], ",", 
   RowBox[{"x", "\[Distributed]", 
    SubscriptBox["\[ScriptCapitalD]", "p"]}]}], "]"}]], "Input",
 CellLabel->"In[58]:=",ExpressionUUID->"8e89c5ba-f477-42c3-8745-0886f89c73f8"],

Cell[BoxData[
 RowBox[{"Probability", "[", 
  RowBox[{
   RowBox[{"x", ">", "12.0"}], ",", 
   RowBox[{"x", "\[Distributed]", 
    SubscriptBox["\[ScriptCapitalD]", "e"]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7129170278785887`*^9, 3.71291702992701*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"ed5c5d0f-74ba-4d5e-9958-3ab12b31495a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"567c2b48-450c-4880-92df-e84bdbde65b4"],

Cell[CellGroupData[{

Cell["Linear Models", "Section",
 CellChangeTimes->{{3.700226537933625*^9, 3.7002265470444884`*^9}, {
  3.7002268594728513`*^9, 3.7002268614089303`*^9}, {3.7010928338987513`*^9, 
  3.7010928367711754`*^9}},ExpressionUUID->"e09af4c3-bab4-4008-83a7-\
492f5b1e33d2"],

Cell[TextData[{
 "LinearModelFit produces a linear model of the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox[
     OverscriptBox[
      StyleBox["y", "TI"], "^"], "TI"], "=", 
    RowBox[{
     SubscriptBox["\[Beta]", "0"], "+", 
     RowBox[{
      SubscriptBox["\[Beta]", "1"], 
      SubscriptBox["f", "1"]}], "+", 
     RowBox[{
      SubscriptBox["\[Beta]", "2"], 
      SubscriptBox["f", "2"]}], "+", 
     StyleBox["\[Ellipsis]", "TR"]}]}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"c1313805-419d-4c7f-bbc3-3c7f808f144b"],
 " under the assumption that the original ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", "i"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "ab21a91d-fb03-4b7c-9124-d65c6732b5cc"],
 " are independent normally distributed with mean ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    StyleBox[
     OverscriptBox[
      StyleBox["y", "TI"], "^"], "TI"], "i"], TraditionalForm]], "InlineMath",
  ExpressionUUID->"2287e30c-0364-46e9-a5a7-1eef1ea2bae5"],
 " and common standard deviation. "
}], "Text",
 CellChangeTimes->{{3.7011929644240627`*^9, 
  3.701192976555326*^9}},ExpressionUUID->"183e2dc3-5ff0-45b1-b77e-\
9ebfc815d584"],

Cell["\<\
In this example we are going to fetch the population and GDP of India from \
the Wolfram Data resources and then do analysis on the GDP per capita for the \
more recent years. \
\>", "Text",
 CellChangeTimes->{{3.7011929975943036`*^9, 3.7011930206355476`*^9}, {
   3.7017711064050026`*^9, 3.701771182035735*^9}, {3.7017748590855846`*^9, 
   3.7017748625888677`*^9}, 
   3.702139450302271*^9},ExpressionUUID->"d335aa6e-78d0-4b0c-a739-\
0152ba8f7cca"],

Cell[CellGroupData[{

Cell["Data manipulation", "Subsection",
 CellChangeTimes->{{3.7003926989164705`*^9, 3.7003927031876993`*^9}, 
   3.7003927504221783`*^9, 3.701110661815849*^9, {3.701622923010257*^9, 
   3.7016229247215114`*^9}},ExpressionUUID->"c06f63e1-c4c5-4355-876b-\
6dab6fd45770"],

Cell["\<\
Let us obtain the population of India for the last 5 decades The population \
data returns as a TimeSeries object and the use of Normal returns the data in \
the form of a list.\
\>", "Text",
 CellChangeTimes->{{3.7017712136442127`*^9, 3.7017712843048253`*^9}, {
   3.7017732735573316`*^9, 3.7017732946029396`*^9}, 
   3.7021394632282705`*^9},ExpressionUUID->"0c101fe0-4d56-4ccd-8ed2-\
9e5ce19700be"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"popdat", "=", 
   RowBox[{"Normal", "@", 
    RowBox[{"EntityValue", "[", 
     RowBox[{
      RowBox[{"Entity", "[", 
       RowBox[{"\"\<Country\>\"", ",", "\"\<India\>\""}], "]"}], ",", 
      RowBox[{"EntityProperty", "[", 
       RowBox[{"\"\<Country\>\"", ",", "\"\<Population\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Date\>\"", "\[Rule]", " ", 
          RowBox[{"Interval", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"DateObject", "[", 
              RowBox[{
               RowBox[{"{", "1967", "}"}], ",", "\"\<Year\>\"", ",", 
               "\"\<Gregorian\>\"", ",", 
               RowBox[{"-", "5."}]}], "]"}], ",", 
             RowBox[{"DateObject", "[", 
              RowBox[{
               RowBox[{"{", "2017", "}"}], ",", "\"\<Year\>\"", ",", 
               "\"\<Gregorian\>\"", ",", 
               RowBox[{"-", "5."}]}], "]"}]}], "}"}], "]"}]}], "}"}]}], 
       "]"}]}], "]"}]}]}], "*)"}]], "Input",
 CellLabel->"In[60]:=",ExpressionUUID->"088fd838-6ff2-4b72-95a1-c1517c4bfeb6"],

Cell[TextData[{
 "Since the time series data has a quantity, we just convert it to the \
numbers using ",
 StyleBox[ButtonBox["QuantityMagnitude",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/QuantityMagnitude"],
  FontFamily->"Arial",
  FontWeight->"Bold"],
 " and convert the date objects to the corresponding year so that it can be \
fed into the ",
 StyleBox[ButtonBox["LinearModelFit",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/LinearModelFit"],
  FontFamily->"Arial",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.701771287688732*^9, 3.701771296473937*^9}, {
  3.7017713649357357`*^9, 3.701771411111709*^9}, {3.701771781400614*^9, 
  3.70177185370356*^9}, {3.701783284308338*^9, 3.7017833264232903`*^9}, {
  3.7021394681482706`*^9, 
  3.7021394694842706`*^9}},ExpressionUUID->"0b918286-9310-4ca2-a0b3-\
83fcce4788b6"],

Cell[BoxData[
 RowBox[{"Pop", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1966", "+", "i"}], ",", 
      RowBox[{"QuantityMagnitude", "@", 
       RowBox[{"popdat", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "popdat", "]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.701622883816224*^9, 3.7016228850473022`*^9}, 
   3.7017710993744345`*^9, 3.7017714148154926`*^9, {3.701771772805915*^9, 
   3.7017717757125907`*^9}},
 CellTags->"Length",
 CellLabel->"In[61]:=",ExpressionUUID->"11d1a7ed-c55b-4dce-80fc-4d5cdfac34d5"],

Cell["\<\
Let us visualize the growth in the population, which seems to be very linear.\
\
\>", "Text",
 CellChangeTimes->{{3.701771894896352*^9, 3.7017719442065716`*^9}, {
  3.7017833555129385`*^9, 
  3.701783359627804*^9}},ExpressionUUID->"1ac84dad-3381-4181-9e0f-\
1288d3530b43"],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"Pop", ",", " ", 
   RowBox[{"Joined", "\[Rule]", " ", "False"}], ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.701771878375718*^9, 3.7017718890248404`*^9}},
 CellTags->{"ListPlot", "NumericQ"},
 CellLabel->"In[62]:=",ExpressionUUID->"3358bcf2-c8be-4b0f-bfad-b21a80933eeb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fitting a linear model", "Subsection",
 CellChangeTimes->{{3.7003927097560167`*^9, 3.7003927138197217`*^9}, 
   3.7003927583310523`*^9, {3.7011106559994555`*^9, 
   3.701110658120042*^9}},ExpressionUUID->"95769d6a-7cc6-49ce-9dc4-\
63eb7b670fc1"],

Cell["\<\
Let us fit the data to a linear model, and then visualize the fit to see if \
there is any variability unaccounted for:\
\>", "Text",
 CellChangeTimes->{{3.70177202434719*^9, 3.701772059315567*^9}, {
  3.7017796903692193`*^9, 
  3.7017796972552543`*^9}},ExpressionUUID->"61d1229b-04c8-41fd-8702-\
d773c68ca0f8"],

Cell[BoxData[
 RowBox[{"popfit", "=", " ", 
  RowBox[{"LinearModelFit", "[", 
   RowBox[{"Pop", ",", "t", ",", "t"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7017719623414373`*^9, 3.70177197078275*^9}, {
  3.7017721631066647`*^9, 3.701772164937503*^9}},
 CellTags->"LinearModelFit",
 CellLabel->"In[63]:=",ExpressionUUID->"560aafb8-940d-4dbc-b712-75a381ec9e5e"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"Pop", ",", 
     RowBox[{"Joined", "\[Rule]", "False"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"popfit", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "1967", ",", "2017"}], "}"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7017719980758386`*^9, 3.7017720145593395`*^9}, {
  3.7017721702114353`*^9, 3.7017721717765646`*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"53b2ec73-f0d8-40fc-83a5-9aabdc884a79"],

Cell["\<\
Obtain the available properties related to the LinearModelFit and evaluate a \
few of them.\
\>", "Text",
 CellChangeTimes->{{3.7017745460027847`*^9, 3.701774555580078*^9}, {
   3.7017746110174866`*^9, 3.7017746202338257`*^9}, {3.701774738671604*^9, 
   3.701774741615384*^9}, 3.701779710493414*^9, {3.7017835089589643`*^9, 
   3.701783522918831*^9}, {3.7021394779872704`*^9, 
   3.7021394782512703`*^9}},ExpressionUUID->"65fde79d-1e45-4242-ae9c-\
fd3cf0c8c952"],

Cell[BoxData[
 RowBox[{"Framed", "[", 
  RowBox[{
   RowBox[{"NiceTable", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"#", ",", "14", ",", "\"\<Text\>\""}], "]"}], "&"}], "/@", 
     RowBox[{"popfit", "[", "\"\<Properties\>\"", "]"}]}], "]"}], ",", 
   RowBox[{"RoundingRadius", "\[Rule]", " ", "12"}], ",", 
   RowBox[{"FrameMargins", "\[Rule]", " ", "15"}]}], "]"}]], "Input",
 CellChangeTimes->{3.701774711672304*^9},
 CellTags->{"Framed", "FrameMargins", "RoundingRadius"},
 CellLabel->"In[65]:=",ExpressionUUID->"a73f74b9-105a-4190-b478-cb0d148cad8c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"popfit", "[", "\"\<ANOVATable\>\"", "]"}], ",", 
   RowBox[{"popfit", "[", "\"\<AdjustedRSquared\>\"", "]"}], ",", 
   RowBox[{"popfit", "[", "\"\<AICc\>\"", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.7017833967095485`*^9, 3.7017834945379*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"f4015cdb-1ea8-47fc-aac7-c15589fe5906"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fitting several models ", "Subsection",
 CellChangeTimes->{{3.7003927239293933`*^9, 
  3.7003927448514996`*^9}},ExpressionUUID->"40205e55-07ec-4348-85d3-\
b43bc865fbfc"],

Cell["\<\
Fit multiple models simultaneously with different polynomial degrees in time:\
\
\>", "Text",
 CellChangeTimes->{{3.701772125945508*^9, 3.70177215873713*^9}, {
   3.70177219492066*^9, 3.7017721954430766`*^9}, {3.7017797168817577`*^9, 
   3.7017797183632207`*^9}, 
   3.7021394862672706`*^9},ExpressionUUID->"a03c12b6-8cf5-4a8e-ad92-\
dba20f951187"],

Cell[BoxData[
 RowBox[{"multiFit", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"LinearModelFit", "[", 
     RowBox[{"Pop", ",", "basis", ",", "t"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"basis", ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        SuperscriptBox["t", 
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", "2"}], "]"}]], ",", 
        SuperscriptBox["t", 
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", "4"}], "]"}]], ",", 
        SuperscriptBox["t", 
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", "5"}], "]"}]], ",", 
        SuperscriptBox["t", 
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", "6"}], "]"}]], ",", 
        SuperscriptBox["t", 
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", "7"}], "]"}]]}], "}"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.701772175738029*^9, 3.7017721834574094`*^9}, {
  3.7017888920755987`*^9, 3.7017888924185333`*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"a3c290da-832d-4c43-972a-8b9fc0a270fc"],

Cell["\<\
Obtain the relevant statistics for the fitted model and compare the fitted \
models:\
\>", "Text",
 CellChangeTimes->{{3.701772206928371*^9, 3.7017722134025054`*^9}, {
  3.701772305551622*^9, 3.7017723171361446`*^9}, {3.701772691085104*^9, 
  3.701772694181243*^9}, {3.701779722603941*^9, 
  3.701779724028209*^9}},ExpressionUUID->"f5eb5984-5b0e-4353-afc1-\
49e4eb74b14c"],

Cell[BoxData[
 RowBox[{"Through", "[", 
  RowBox[{"multiFit", "[", "\"\<AdjustedRSquared\>\"", "]"}], "]"}]], "Input",\

 CellTags->"AdjustedRSquared",
 CellLabel->"In[68]:=",ExpressionUUID->"eac3f11f-1ef7-45ba-9b94-de4768696306"],

Cell[BoxData[
 RowBox[{"Through", "[", 
  RowBox[{"multiFit", "[", "\"\<AIC\>\"", "]"}], "]"}]], "Input",
 CellTags->"AIC",
 CellLabel->"In[69]:=",ExpressionUUID->"8278e8a6-1af4-42da-bc6e-f2ba176ab7c1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["GDP per capita fit", "Subsection",
 CellChangeTimes->{{3.701773220499242*^9, 3.7017732267016244`*^9}, {
  3.701774846446206*^9, 
  3.701774851391302*^9}},ExpressionUUID->"4b4edf9e-2507-4975-b011-\
6537aed578ba"],

Cell["\<\
Analyzing the GDP Per Capita for India since 2000\[CloseCurlyQuote]s post the \
1990\[CloseCurlyQuote]s economic depression.\
\>", "Text",
 CellChangeTimes->{{3.7017732299231243`*^9, 3.7017732656033506`*^9}, {
  3.701779732984062*^9, 
  3.7017797449800296`*^9}},ExpressionUUID->"ba232140-9315-43a6-9b13-\
22009cac0973"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"GDP", "=", 
    RowBox[{"Normal", "@", 
     RowBox[{"EntityValue", "[", 
      RowBox[{
       RowBox[{"Entity", "[", 
        RowBox[{"\"\<Country\>\"", ",", "\"\<India\>\""}], "]"}], ",", 
       RowBox[{"EntityProperty", "[", 
        RowBox[{"\"\<Country\>\"", ",", "\"\<GDP\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Date\>\"", "\[Rule]", " ", 
           RowBox[{"Interval", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"DateObject", "[", 
               RowBox[{
                RowBox[{"{", "2000", "}"}], ",", "\"\<Year\>\"", ",", 
                "\"\<Gregorian\>\"", ",", 
                RowBox[{"-", "5."}]}], "]"}], ",", 
              RowBox[{"DateObject", "[", 
               RowBox[{
                RowBox[{"{", "2015", "}"}], ",", "\"\<Year\>\"", ",", 
                "\"\<Gregorian\>\"", ",", 
                RowBox[{"-", "5."}]}], "]"}]}], "}"}], "]"}]}], "}"}]}], 
        "]"}]}], "]"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Pop2000", "=", 
    RowBox[{"Normal", "@", 
     RowBox[{"EntityValue", "[", 
      RowBox[{
       RowBox[{"Entity", "[", 
        RowBox[{"\"\<Country\>\"", ",", "\"\<India\>\""}], "]"}], ",", 
       RowBox[{"EntityProperty", "[", 
        RowBox[{"\"\<Country\>\"", ",", "\"\<Population\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Date\>\"", "\[Rule]", " ", 
           RowBox[{"Interval", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"DateObject", "[", 
               RowBox[{
                RowBox[{"{", "2000", "}"}], ",", "\"\<Year\>\"", ",", 
                "\"\<Gregorian\>\"", ",", 
                RowBox[{"-", "5."}]}], "]"}], ",", 
              RowBox[{"DateObject", "[", 
               RowBox[{
                RowBox[{"{", "2015", "}"}], ",", "\"\<Year\>\"", ",", 
                "\"\<Gregorian\>\"", ",", 
                RowBox[{"-", "5."}]}], "]"}]}], "}"}], "]"}]}], "}"}]}], 
        "]"}]}], "]"}]}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.7017730122011366`*^9, 3.7017730169075603`*^9}, {
  3.701773458233071*^9, 3.701773462657734*^9}, {3.7017748169974627`*^9, 
  3.7017748301050873`*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"30b1a5e6-a8d6-4614-a69e-9b227b88a834"],

Cell[BoxData[
 RowBox[{"GDPperCapita", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"i", "+", "1999"}], ",", 
      RowBox[{
       RowBox[{"QuantityMagnitude", "@", 
        RowBox[{"GDP", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "/", 
       RowBox[{"QuantityMagnitude", "@", 
        RowBox[{"Pop2000", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "GDP", "]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.701773393353733*^9, {3.7017735391417484`*^9, 3.7017735512336826`*^9}},
 CellTags->"Length",
 CellLabel->"In[71]:=",ExpressionUUID->"4371bc1d-e59c-44ff-802d-be274a91c554"],

Cell[BoxData[
 RowBox[{"GDPperCapitafit", "=", " ", 
  RowBox[{"LinearModelFit", "[", 
   RowBox[{"GDPperCapita", ",", 
    SuperscriptBox["t", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "3"}], "]"}]], ",", "t"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.701773638011853*^9, 3.701773660244567*^9}, 
   3.7017738117867785`*^9},
 CellLabel->"In[72]:=",ExpressionUUID->"caaa89fd-0486-44ae-87dd-1541efafd2cd"],

Cell["Plot the fit to the actual data:", "Text",
 CellChangeTimes->{{3.7017797619298477`*^9, 3.701779770532638*^9}, 
   3.7021394938662705`*^9},ExpressionUUID->"74e76d2d-f54a-4704-ae79-\
421f02e2a9b2"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"GDPperCapita", ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"GDPperCapitafit", "[", "t", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "2000", ",", " ", "2015"}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.701773678867749*^9, 3.701773697706502*^9}, {
  3.7017741810750437`*^9, 3.7017741869134593`*^9}, {3.7017742245147333`*^9, 
  3.7017742456916876`*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"44a40d5e-4af7-47a7-b19a-d9eaab47189e"],

Cell["Plot the Residuals and Cook\[CloseCurlyQuote]s Distance of the best \
fit:", "Text",
 CellChangeTimes->{{3.701773856705379*^9, 3.701773863225628*^9}, {
   3.7017740606841*^9, 3.701774070583214*^9}, {3.701779753399268*^9, 
   3.701779754542698*^9}, 
   3.7021394968182707`*^9},ExpressionUUID->"fc49c1a9-fd13-4948-90a9-\
7e6f663fe3e9"],

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"GDPperCapitafit", "[", "\"\<FitResiduals\>\"", "]"}], ",", 
       RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<Residuals\>\""}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}], ",", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"GDPperCapitafit", "[", "\"\<CookDistances\>\"", "]"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
       RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<Cook's Distances\>\""}]}], 
      "]"}]}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "700"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7017738685256352`*^9, 3.7017740537257233`*^9}, {
  3.701774142847085*^9, 3.7017741608104954`*^9}, {3.7017741993703628`*^9, 
  3.7017742141935043`*^9}},
 CellTags->{"Residuals", "Cook's Distances"},
 CellLabel->"In[74]:=",ExpressionUUID->"b85d7f63-a2df-4476-a70e-61cdd3efcde9"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"48a68e56-842c-4b7f-a391-0e1a0a533f3e"],

Cell[CellGroupData[{

Cell["Nonlinear Model Fit", "Section",
 CellChangeTimes->{{3.7003953636438746`*^9, 
  3.700395374963683*^9}},ExpressionUUID->"31a8da2f-8a1f-4460-98f5-\
588068a1236e"],

Cell["\<\
Linear models are fitted using linear algebra, a process that is, in most \
cases, robust and fast. Nonlinear models, on the other hand, require the \
construction of a merit function and then minimizing the merit function based \
on varying a set of parameters present in the model. This process can be slow \
and often requires more attention on the part of the statistician.\
\>", "Text",
 CellChangeTimes->{
  3.7003953941873665`*^9},ExpressionUUID->"168cacd9-b1fe-4cd6-9029-\
caf4d2e0dca4"],

Cell["\<\
In this example, we will import a file that contains data on total production \
from different sources of energy for the year 2010. We will look at the \
renewable energy sources and try to find a relationship that defines the \
growth in the production of renewable sources over the time. For convenience \
the data cleaning is done in the initialization cells, which is present at \
the end of the notebook.\
\>", "Text",
 CellChangeTimes->{{3.7011075815572667`*^9, 3.7011076536256943`*^9}, {
  3.7011077015723944`*^9, 3.7011077675298653`*^9}, {3.7011080306976757`*^9, 
  3.701108031265195*^9}, {3.7016232383647976`*^9, 3.701623265643396*^9}, {
  3.702139538184271*^9, 
  3.7021395384562707`*^9}},ExpressionUUID->"f41efb01-da20-4d19-bc84-\
556412029893"],

Cell[CellGroupData[{

Cell["Fitting a nonlinear model", "Subsection",
 CellChangeTimes->{{3.7003927097560167`*^9, 3.7003927138197217`*^9}, 
   3.7003927583310523`*^9, {3.7008218114730673`*^9, 3.7008218135383515`*^9}, {
   3.701110690639105*^9, 
   3.701110692894101*^9}},ExpressionUUID->"d2887620-fec5-4a23-80f4-\
2e49944aaeb0"],

Cell["First let us visualize the data we imported:", "Text",
 CellChangeTimes->{{3.701623352334812*^9, 3.7016233663986883`*^9}, 
   3.702139552639271*^9},ExpressionUUID->"f1f0c854-6b2c-4930-84ea-\
2ec59e5e9723"],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"elecdata", ",", 
   RowBox[{"Mesh", "\[Rule]", " ", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.70162332106483*^9, 3.701623336287741*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"d3d96c43-6ea4-486e-85a9-ecc930fa3af8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"a", ",", "b", ",", "c", ",", "t"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"model", "=", 
  RowBox[{"NonlinearModelFit", "[", 
   RowBox[{"elecdata", ",", 
    RowBox[{"a", "+", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"b", " ", 
       RowBox[{"(", 
        RowBox[{"t", "-", "c"}], ")"}]}]]}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", 
      RowBox[{"{", 
       RowBox[{"c", ",", "1990"}], "}"}]}], "}"}], ",", "t"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{
  3.701623290717334*^9, {3.7021395915772705`*^9, 3.7021396093982706`*^9}},
 CellTags->"NonlinearModelFit",
 CellLabel->"In[76]:=",ExpressionUUID->"83b76d02-6b8f-4749-bcac-dfbc0a942828"],

Cell[BoxData[
 RowBox[{"model", "[", "\"\<BestFit\>\"", "]"}]], "Input",
 CellTags->"BestFit",
 CellLabel->"In[78]:=",ExpressionUUID->"232ecf65-aebf-43df-90d7-c602beac603b"],

Cell["The fit appears to be a good one.", "Text",
 CellChangeTimes->{{3.574506892772797*^9, 3.5745069074086447`*^9}, {
  3.7385121581769547`*^9, 
  3.7385121596408134`*^9}},ExpressionUUID->"6bc9db2d-51d9-471e-bca5-\
2d0b817d097a"],

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"model", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "1993.5", ",", "2008.5"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Pink", ",", "Thick"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"elecdata", ",", 
     RowBox[{"Mesh", "\[Rule]", " ", "All"}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", " ", "Automatic"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.574506628554311*^9, 3.574506635368815*^9}, {
   3.5745067094473867`*^9, 3.574506710071299*^9}, {3.574506762790502*^9, 
   3.574506764324902*^9}, 3.7011078410149817`*^9, 3.701623307922374*^9},
 CellTags->{"ListLinePlot", "PlotMarkers"},
 CellLabel->"In[79]:=",ExpressionUUID->"7cfb9173-9523-494a-adc6-e35d50e94643"],

Cell[TextData[{
 "Because you are using a nonlinear model here, the property list is shorter \
than with ",
 StyleBox[ButtonBox["LinearModelFit",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/LinearModelFit"],
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.5745069308320312`*^9, 3.5745069429116583`*^9}, {
   3.574507008272293*^9, 3.574507065669055*^9}, 3.577206094637684*^9, 
   3.580041463534367*^9, {3.6322351231184397`*^9, 3.632235140367235*^9}, {
   3.702139558479271*^9, 
   3.7021395597512703`*^9}},ExpressionUUID->"cf66e249-3c53-44fc-bb06-\
18c5ef734320"],

Cell[BoxData[
 RowBox[{"NiceTable", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Style", "[", 
     RowBox[{"#", ",", "12", ",", "\"\<Text\>\""}], "]"}], "&"}], "/@", 
   RowBox[{"model", "[", "\"\<Properties\>\"", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5745069451286697`*^9, 3.574506957072156*^9}, {
  3.574674040529702*^9, 3.574674072376213*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"b8084293-1aff-410a-8cc0-5882b4a9bba0"],

Cell[BoxData[
 RowBox[{"model", "[", 
  RowBox[{"{", 
   RowBox[{
   "\"\<ANOVATable\>\"", ",", "\"\<FitCurvatureTable\>\"", ",", 
    "\"\<ParameterBias\>\"", ",", "\"\<AICc\>\""}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.574507077914085*^9, 3.574507114860363*^9}, {
  3.574507186523142*^9, 3.574507193114949*^9}, {3.5746739505549803`*^9, 
  3.5746739610026197`*^9}, {3.575040871954615*^9, 3.5750408758828278`*^9}},
 CellTags->{"ANOVATable", "FitCurvatureTable", "ParameterBias", "AICc"},
 CellLabel->"In[81]:=",ExpressionUUID->"97e009b7-a76f-4fb4-936c-fcbf45cdff9f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"0c6b93bb-1b0c-4e21-9acd-0615897d80c5"],

Cell[CellGroupData[{

Cell["Generalized Linear Models", "Section",
 CellChangeTimes->{{3.7008219093637915`*^9, 
  3.7008219138435364`*^9}},ExpressionUUID->"4f1f8350-a704-4ec6-aff6-\
8640e9631418"],

Cell[TextData[{
 "Generalized linear models are a family of regression models, with the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox[
     OverscriptBox[
      StyleBox["y", "TI"], "^"], "TI"], "\[LongEqual]", 
    RowBox[{
     SuperscriptBox["g", 
      RowBox[{"-", "1"}]], "(", 
     RowBox[{
      SubscriptBox["\[Beta]", "0"], "+", 
      RowBox[{
       SubscriptBox["\[Beta]", "1"], 
       SubscriptBox["x", "1"]}], "+", 
      RowBox[{
       SubscriptBox["\[Beta]", "2"], 
       SubscriptBox["x", "2"]}], "+", 
      StyleBox["\[Ellipsis]", "TR"]}], 
     StyleBox[")", "TR"]}]}], TraditionalForm]],ExpressionUUID->
  "89e23358-0c23-46c1-804a-fb67449e1b1a"],
 " and the Wolfram Language has a built-in framework, ",
 StyleBox[ButtonBox["GeneralizedLinearModelFit",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/GeneralizedLinearModelFit"],
  FontWeight->"Bold"],
 ", for working with such problems. Other than the two components we briefly \
discussed before for simple regression problems, the independent terms (",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "1"], TraditionalForm]],ExpressionUUID->
  "e92242e5-a095-4540-be12-8ff02f279078"],
 ",",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "2"], TraditionalForm]],ExpressionUUID->
  "cbe22d78-556a-4571-9871-2e9777b77bbd"],
 "...), and the response variable (",
 Cell[BoxData[
  FormBox[
   StyleBox[
    OverscriptBox[
     StyleBox["y", "TI"], "^"], "TI"], TraditionalForm]],ExpressionUUID->
  "f9af511c-5b6c-4d13-8a68-d9051034c98b"],
 "), we have the link function (g) which specifies how the expected values of \
the response related to a linear change in the independent variables. \n\n\
Depending on the ",
 StyleBox[ButtonBox["LinkFunction, ",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/LinkFunction"],
  FontWeight->"Bold"],
 "different models of regression can be created:\n\n",
 Cell[BoxData[
  TagBox[GridBox[{
     {"\<\"Link\"\>", "\<\"Regression Type\"\>"},
     {"Identity", 
      InterpretationBox[Cell[
       "Simple Linear Regression",ExpressionUUID->
        "8621ccd6-b293-4230-91f6-f1996ff50505"],
       TextCell[
       "Simple Linear Regression", ExpressionUUID -> 
        "6bd04cb8-ab8d-46fc-a0ee-ed2febf46b25"]]},
     {"Logit", 
      InterpretationBox[Cell[
       "Logistic Regression",ExpressionUUID->
        "82ba6d60-a963-4e2e-8129-703cf97e3c43"],
       TextCell[
       "Logistic Regression", ExpressionUUID -> 
        "6bd04cb8-ab8d-46fc-a0ee-ed2febf46b25"]]},
     {"Log", 
      InterpretationBox[Cell[
       "Poisson Regression",ExpressionUUID->
        "d71cc67b-7439-4f50-b6e9-9ec91e3784c8"],
       TextCell[
       "Poisson Regression", ExpressionUUID -> 
        "6bd04cb8-ab8d-46fc-a0ee-ed2febf46b25"]]},
     {"Reciprocal", 
      InterpretationBox[Cell[
       "Gamma Regression",ExpressionUUID->
        "d7923c7b-5b15-4316-980e-1c5f09385087"],
       TextCell[
       "Gamma Regression", ExpressionUUID -> 
        "6bd04cb8-ab8d-46fc-a0ee-ed2febf46b25"]]},
     {
      RowBox[{"Inverse", " ", "Square"}], 
      InterpretationBox[Cell[
       "InverseGaussian Regression",ExpressionUUID->
        "5b02326e-637d-4b5f-b994-14cc52553f72"],
       TextCell[
       "InverseGaussian Regression", ExpressionUUID -> 
        "6bd04cb8-ab8d-46fc-a0ee-ed2febf46b25"]]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {
        RGBColor[1., 1., 0.9], {
         GrayLevel[1], 
         RGBColor[0.8, 0.9, 0.9]}}},
    GridBoxDividers->{"Columns" -> {
        RGBColor[0.2, 0.2, 0.2], {
         RGBColor[0.75, 0.75, 0.75]}, 
        RGBColor[0.2, 0.2, 0.2]}, "Rows" -> {
        RGBColor[0.2, 0.2, 0.2], 
        RGBColor[0.2, 0.2, 0.2], {False}, 
        RGBColor[0.2, 0.2, 0.2]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{"Columns" -> {{4}}, "Rows" -> {{2}}}],
   "Grid"]], "Output",
  CellChangeTimes->{{3.697482792840692*^9, 3.6974828394784927`*^9}, {
    3.6974828927777147`*^9, 3.6974829193395033`*^9}, 3.6974829881102624`*^9, {
    3.6974830652450304`*^9, 3.697483126811825*^9}, {3.6974833213208995`*^9, 
    3.6974833376518173`*^9}, {3.6974833850694227`*^9, 
    3.6974835016689177`*^9}, {3.6974836480737004`*^9, 3.697483653113948*^9}, {
    3.6974836891616955`*^9, 3.6974837131828628`*^9}},ExpressionUUID->
  "f161b1fc-3904-4fe2-96d5-7e074d4d4eff"]
}], "Text",
 CellChangeTimes->{
  3.700821957634098*^9, 3.7008311956898985`*^9, 3.701190889456973*^9, {
   3.7021396436432705`*^9, 
   3.7021396437792706`*^9}},ExpressionUUID->"ad0c0f15-5258-4c59-8008-\
848232dd4f31"],

Cell[TextData[StyleBox["Let us consider an example using one of these type of \
Regression, say the Poisson Regression:",
 FontFamily->"Arial",
 FontSize->18]], "Text",
 CellChangeTimes->{{3.7011121544887857`*^9, 3.701112169500845*^9}, 
   3.7021396520902705`*^9},ExpressionUUID->"74bd97c1-2a1f-4257-8951-\
345dec01d3c2"],

Cell[CellGroupData[{

Cell["Poisson Regression", "Subsection",
 CellChangeTimes->{{3.7011106025770583`*^9, 
  3.7011106071832285`*^9}},ExpressionUUID->"d2966ac2-7613-42bd-ae75-\
19e42ff74ee4"],

Cell["\<\
A dataset from Australia will be used that gives the number of deaths from \
AIDS on a quarterly basis, covering the time period from January 1983 to June \
1986.\
\>", "Text",
 CellChangeTimes->{{3.5750327321494093`*^9, 3.575032750452382*^9}, {
   3.575032780813327*^9, 3.575032865543146*^9}, {3.57587642419039*^9, 
   3.575876424803344*^9}, 3.580043349312005*^9, 3.580224729711443*^9, {
   3.622305973409778*^9, 
   3.622305996214295*^9}},ExpressionUUID->"a8b96669-eed8-49bd-904a-\
2aefbd1d6c50"],

Cell[BoxData[
 RowBox[{
  RowBox[{"aidsDat", "=", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", " ", "1", ",", " ", "2", ",", " ", "3", ",", " ", "1", ",", " ",
      "4", ",", " ", "9", ",", " ", "18", ",", " ", "23", ",", " ", "31", ",",
      " ", "20", ",", " ", "25", ",", " ", "37", ",", " ", "45"}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.5750328734941072`*^9, 3.5750328990625267`*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"64fecfef-051e-4094-9586-c077ac02fe6a"],

Cell[TextData[{
 "The independent variables are just uniformly spaced time values, so take \
them to be ",
 StyleBox["1-Length[aidsDat]", "MR"],
 ". Fit two models, the first where just the count is taken and the second \
where the logarithm of the count is used. Use ",
 StyleBox[ButtonBox["ExponentialFamily",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/ExponentialFamily"],
  FontWeight->"Bold"],
 " \[Rule] \[OpenCurlyDoubleQuote]Poisson\[CloseCurlyDoubleQuote] because the \
responses are counts."
}], "Text",
 CellChangeTimes->{{3.575032937315436*^9, 3.5750329418003902`*^9}, {
   3.575032984977523*^9, 3.5750330488510523`*^9}, {3.575033083579665*^9, 
   3.575033159942527*^9}, 3.577206261959504*^9, {3.5772063059528027`*^9, 
   3.577206326664865*^9}, 3.5800433704966393`*^9, {3.5802247581473293`*^9, 
   3.580224760657338*^9}, {3.5802252629937162`*^9, 3.580225264958145*^9}, {
   3.622306002870617*^9, 
   3.622306103721321*^9}},ExpressionUUID->"4e753ee9-a022-48c6-b9da-\
f27e8aebfab0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mod1", "=", 
   RowBox[{"GeneralizedLinearModelFit", "[", 
    RowBox[{"aidsDat", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "x"}], "}"}], ",", "x", ",", 
     RowBox[{"ExponentialFamily", "\[Rule]", "\"\<Poisson\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.575033208523205*^9, 3.575033210368843*^9}, {
  3.5802251468169947`*^9, 3.580225193251295*^9}},
 CellTags->{"GeneralizedLinearModelFit", "ExponentialFamily", "Poisson"},
 CellLabel->"In[83]:=",ExpressionUUID->"a5207fb4-6c68-4656-8cb0-5a66d9f78d6d"],

Cell[BoxData[
 RowBox[{"mod2", "=", 
  RowBox[{"GeneralizedLinearModelFit", "[", 
   RowBox[{"aidsDat", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"Log", "[", "x", "]"}]}], "}"}], ",", "x", ",", 
    RowBox[{"ExponentialFamily", "\[Rule]", "\"\<Poisson\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.574752578196262*^9, 3.57475261083431*^9}, {
  3.574752823693482*^9, 3.574752823694578*^9}, {3.575033253254257*^9, 
  3.5750332597134857`*^9}, {3.58022515221793*^9, 3.580225154752236*^9}, {
  3.580225196075551*^9, 3.580225207667293*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"bfd3c1d9-fb37-4830-a02c-651b06462b18"],

Cell["\<\
Taking a look at the parameter tables shows that the estimates are more \
\"significant\" for the second model, even though the model is no more \
complex.\
\>", "Text",
 CellChangeTimes->{{3.574752578196262*^9, 3.5747526202264967`*^9}, {
   3.574753824423764*^9, 3.574753832684286*^9}, 
   3.62245933812934*^9},ExpressionUUID->"8e12779f-6c1b-45ba-8858-\
6f031e5dfcf8"],

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"mod1", "[", "\"\<ParameterTable\>\"", "]"}], ",", "\"\<   \>\"", 
    ",", 
    RowBox[{"mod2", "[", "\"\<ParameterTable\>\"", "]"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.575033653034062*^9, 3.5750337481942253`*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"55c1caca-0fd2-4cc8-9661-9b1cf3a83b45"],

Cell["\<\
Taking a look at the plot and giving AIC shows that the log-based model also \
fits much better. Both of these models are better in terms of reflecting the \
true nature of the data than a linear model and fit better (according to \
AIC). If the dataset was larger, it would likely be possible to show that the \
linear model has residuals with bad properties (but the dataset is just too \
small to do that).\
\>", "Text",
 CellChangeTimes->{{3.574752578196262*^9, 3.574752654728675*^9}, 
   3.574753869349641*^9, 3.580043476958497*^9, 3.6223061258901997`*^9, {
   3.622459373055842*^9, 
   3.62245938237963*^9}},ExpressionUUID->"47944577-9f06-4cfc-8cd8-\
2694fcbe48d4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mod3", " ", "=", " ", 
   RowBox[{"LinearModelFit", "[", 
    RowBox[{"aidsDat", ",", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "x"}], "}"}], ",", " ", "x"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.574752578196262*^9, 3.574752654728675*^9}, {
  3.574752823703425*^9, 3.574752823704838*^9}, {3.575033848679295*^9, 
  3.575033865959489*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"fc4c2d30-17b0-4bc7-accb-79a572b849f5"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"mod3", "[", "t", "]"}], ",", 
       RowBox[{"mod1", "[", "t", "]"}], ",", 
       RowBox[{"mod2", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "1", ",", "14"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<Linear AIC: \>\"", ",", 
           RowBox[{"mod3", "[", "\"\<AIC\>\"", "]"}]}], "}"}], "]"}], ",", 
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<GLM {1,x} AIC: \>\"", ",", 
           RowBox[{"mod1", "[", "\"\<AIC\>\"", "]"}]}], "}"}], "]"}], ",", 
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<GLM {1,Log[x]} AIC: \>\"", ",", 
           RowBox[{"mod2", "[", "\"\<AIC\>\"", "]"}]}], "}"}], "]"}]}], 
       "}"}]}]}], "]"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"aidsDat", ",", 
     RowBox[{"PlotMarkers", "\[Rule]", " ", "Automatic"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5747527782312326`*^9, 3.574752778232736*^9}, {
  3.575033904906949*^9, 3.575033924737142*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"792ce001-3a1f-4b0b-9643-9f178e7b54b2"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"163745a6-0823-4685-be37-f476ca62b557"],

Cell[CellGroupData[{

Cell["Generalized Linear Models: Logistic Models", "Section",
 CellChangeTimes->{{3.7008305126330867`*^9, 3.7008305291597853`*^9}, {
  3.7008363056998196`*^9, 
  3.7008363080761304`*^9}},ExpressionUUID->"cdf108bf-be80-49a5-8d66-\
48be72978bda"],

Cell["\<\
This dataset indicates the presence/absence of gold deposit as a function of \
water/chemical factors: As, Sb, and presence/absence of lineament in the \
Hutti-Maski Schist Belt, Raichur, Karnataka, India. 
The presence/absence of gold deposit is fitted in a logistic regression model \
to the Arsenic and Antimony level, and the lineament proximity to water.\
\>", "Text",
 CellChangeTimes->{{3.7008305571005783`*^9, 3.700830659021286*^9}, {
   3.700830753107853*^9, 3.700830766909339*^9}, {3.701108064234499*^9, 
   3.7011080867387815`*^9}, {3.7011086850240126`*^9, 
   3.7011086924567633`*^9}, {3.701108754431285*^9, 3.7011088299109216`*^9}, 
   3.7011103715811634`*^9},ExpressionUUID->"99077e4b-c372-4bca-9003-\
2079d1b90f94"],

Cell[CellGroupData[{

Cell["Data import and cleaning", "Subsection",
 CellChangeTimes->{{3.7003926989164705`*^9, 3.7003927031876993`*^9}, 
   3.7003927504221783`*^9, 
   3.7011107032394705`*^9},ExpressionUUID->"1c7c0a0d-2863-476b-a4d9-\
8f6d75365555"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", 
       "\"\<gold_target1.dat\>\""}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7008308176273184`*^9, 3.700830837963045*^9}, {
  3.701108638906685*^9, 3.7011086596487155`*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"414b4af0-38b6-4693-a581-9dc3cc499cf0"],

Cell["\<\
The last five rows are blank and the data is in string format. Let us convert \
it to numbers and get rid of the last five rows:\
\>", "Text",
 CellChangeTimes->{{3.7008308407704587`*^9, 3.700830867727523*^9}, 
   3.7017750048345275`*^9, {3.7021397486922703`*^9, 
   3.7021397684592705`*^9}},ExpressionUUID->"e9a47628-823a-4ec3-9eb8-\
a8ac11f2ac8e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"golddat", "=", 
   RowBox[{"ToExpression", "@", 
    RowBox[{"data", "[", 
     RowBox[{"[", 
      RowBox[{";;", 
       RowBox[{"-", "5"}]}], "]"}], "]"}]}]}], ";"}]], "Input",
 CellLabel->"In[89]:=",ExpressionUUID->"ec28448d-9e68-4396-b599-e1a845099276"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fitting a logistic model", "Subsection",
 CellChangeTimes->{{3.7003927097560167`*^9, 3.7003927138197217`*^9}, 
   3.7003927583310523`*^9, {3.7008218114730673`*^9, 3.7008218135383515`*^9}, {
   3.7008308835288277`*^9, 3.7008308847129793`*^9}, 3.701110708310092*^9, 
   3.7017749998493595`*^9},ExpressionUUID->"e629c112-d4c0-46e8-85b1-\
ba4bf1d9e3da"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"mod1", "=", 
    RowBox[{"GeneralizedLinearModelFit", "[", 
     RowBox[{"golddat", ",", 
      RowBox[{"{", 
       RowBox[{"As", ",", "Sb", ",", "Ln"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"As", ",", "Sb", ",", "Ln"}], "}"}], ",", 
      RowBox[{"ExponentialFamily", "\[Rule]", "\"\<Binomial\>\""}]}], "]"}]}],
    ")"}], "//", "Normal"}]], "Input",
 CellChangeTimes->{{3.700829140637833*^9, 3.70082917051639*^9}, {
   3.7008292712567987`*^9, 3.7008293355027018`*^9}, {3.7008294091083865`*^9, 
   3.700829422340376*^9}, {3.7008294728662043`*^9, 3.700829483195118*^9}, {
   3.7008297986212196`*^9, 3.700829798957109*^9}, {3.700830232374935*^9, 
   3.7008303163498125`*^9}, 3.7008303863948493`*^9, {3.700830417189851*^9, 
   3.7008304250748134`*^9}, {3.701108842271634*^9, 3.7011088519983616`*^9}},
 CellTags->"Binomial",
 CellLabel->"In[90]:=",ExpressionUUID->"4b2fde63-0a1e-4f8e-a486-41fc196589ed"],

Cell["\<\
A logistic model is commonly used. LogitModelFit can be obtained from \
GeneralizedLinearModelFit by setting ExponentialFamily to Binomial. \
\>", "Text",
 CellChangeTimes->{{3.700830905016348*^9, 3.700830973645911*^9}, {
  3.701779826808364*^9, 3.701779829256708*^9}, {3.702139789137271*^9, 
  3.7021398218322706`*^9}},ExpressionUUID->"cfff2d6f-48c8-4ced-8df5-\
803c3a51c97b"],

Cell[BoxData[
 RowBox[{"mod2", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"LogitModelFit", "[", 
     RowBox[{"golddat", ",", 
      RowBox[{"{", 
       RowBox[{"As", ",", "Sb", ",", "Ln"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"As", ",", "Sb", ",", "Ln"}], "}"}]}], "]"}], ")"}], "//", 
   "Normal"}]}]], "Input",
 CellChangeTimes->{{3.700830191967409*^9, 3.7008302202539363`*^9}, {
  3.700830449130352*^9, 3.700830449569518*^9}},
 CellTags->"LogitModelFit",
 CellLabel->"In[91]:=",ExpressionUUID->"d961db2f-dcb3-4b19-aafe-2dd88c3f603d"],

Cell["Computing the statistics and visualizing the residuals:", "Text",
 CellChangeTimes->{{3.7008309783019886`*^9, 3.700831011397032*^9}, 
   3.7021398314632707`*^9},ExpressionUUID->"f45b743c-e126-4184-bb5a-\
42968f49d3e4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"mod1", "[", "\"\<ParameterTable\>\"", "]"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"mod1", "[", "\"\<FitResiduals\>\"", "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", " ", 
     RowBox[{"Filling", "\[Rule]", " ", "Axis"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Row", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<BIC: \>\"", ",", 
         RowBox[{"mod1", "[", "\"\<BIC\>\"", "]"}], ",", "\"\<   AIC: \>\"", 
         ",", 
         RowBox[{"mod1", "[", "\"\<AIC\>\"", "]"}]}], "}"}], "]"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.700829814186339*^9, 3.700829867227434*^9}, {
  3.7008301221830225`*^9, 3.7008301625998297`*^9}, {3.7008410375443506`*^9, 
  3.7008410441437817`*^9}, {3.7017837940699177`*^9, 3.7017839006323676`*^9}},
 CellTags->{"ParameterTable", "FitResiduals"},
 CellLabel->"In[92]:=",ExpressionUUID->"d5a947d7-48ce-4c14-aa9c-ba0650a97422"],

Cell[TextData[StyleBox["Source: N.R. Sahoo and H.S. Pandalai (1999). \
\[OpenCurlyDoubleQuote]Integration of Sparse GeologiInformation in Gold \
Targeting Using Logistic Regression Analysis in the  Hutti-Maski Schist Belt, \
Raichur, Karnataka, India - A Case Study,\[CloseCurlyDoubleQuote] Natural \
Resources Research, Vol. 8, #3, pp. 233-250.",
 FontFamily->"Arial",
 FontSize->8,
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{
  3.701108095081126*^9},ExpressionUUID->"92205fc3-4ee3-44ae-8f8b-\
46ba52435f91"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"66bb9de2-1c35-4fd6-9ffe-e7da40b9236a"],

Cell[CellGroupData[{

Cell["Generalized Linear Models : Link Function", "Section",
 CellChangeTimes->{{3.700834330582546*^9, 3.7008343345101423`*^9}, {
  3.7008393940681863`*^9, 3.700839399595953*^9}, {3.70119049316226*^9, 
  3.7011905246822133`*^9}, {3.7016932627430587`*^9, 
  3.701693263130063*^9}},ExpressionUUID->"442735a4-6e38-4493-8de9-\
0998e7fe26a5"],

Cell[TextData[{
 "The canonical link functions and their corresponding type of regression has \
been discussed. Now let\[CloseCurlyQuote]s focus on other link functions that \
can be used for Binomial data: \n\n",
 Cell[BoxData[
  TagBox[GridBox[{
     {"\<\"Link\"\>", "\<\"Formula\"\>"},
     {"Probit", 
      RowBox[{
       SqrtBox["2"], " ", 
       RowBox[{"InverseErf", "[", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "y"}]}], "]"}]}]},
     {"Cauchit", 
      InterpretationBox[Cell[BoxData[Cell[BoxData[
         FormBox[
          RowBox[{"tan", "(", 
           RowBox[{"\[Pi]", " ", 
            RowBox[{"(", 
             RowBox[{"x", "-", 
              FractionBox["1", "2"]}], ")"}]}], ")"}], TraditionalForm]], 
         "InlineMath",ExpressionUUID->
         "44015e8c-2523-4cd3-98af-00e95fb87da4"]], "TableText",
        ExpressionUUID->"cff0fabb-c1fa-43b3-b689-deebb083671a"],
       TextCell[
        RawBoxes[
         Cell[
          BoxData[
           FormBox[
            RowBox[{"tan", "(", 
              RowBox[{"\[Pi]", " ", 
                RowBox[{"(", 
                  RowBox[{"x", "-", 
                    FractionBox["1", "2"]}], ")"}]}], ")"}], 
            TraditionalForm]], "InlineMath", ExpressionUUID -> 
          "ffe46d07-8a4b-4951-8d31-7943bd62e782"]], "TableText"]]},
     {"LogLog", 
      InterpretationBox[Cell[BoxData[Cell[BoxData[
         FormBox[
          RowBox[{"-", 
           RowBox[{"log", "(", 
            RowBox[{"-", 
             RowBox[{"log", "(", "y", ")"}]}], ")"}]}], TraditionalForm]], 
         "InlineMath",ExpressionUUID->
         "7b90bdbd-d35c-4f9d-a8c0-ebabcb002330"]], "TableText",
        ExpressionUUID->"a37d415b-fcdb-4d4f-afa6-b21ba6db3475"],
       TextCell[
        RawBoxes[
         Cell[
          BoxData[
           FormBox[
            RowBox[{"-", 
              RowBox[{"log", "(", 
                RowBox[{"-", 
                  RowBox[{"log", "(", "y", ")"}]}], ")"}]}], 
            TraditionalForm]], "InlineMath", ExpressionUUID -> 
          "916e4f49-efec-43f9-ba92-96323e99f882"]], "TableText"]]},
     {"LogComplement", 
      InterpretationBox[Cell[BoxData[Cell[BoxData[
         FormBox[
          RowBox[{"log", "(", 
           RowBox[{"1", "-", "y"}], ")"}], TraditionalForm]], "InlineMath",
         ExpressionUUID->"277ce258-0ae3-4ada-b592-9caa68537f29"]], 
        "TableText",ExpressionUUID->"df282769-fc07-4885-8f30-c03783edcb6f"],
       TextCell[
        RawBoxes[
         Cell[
          BoxData[
           FormBox[
            RowBox[{"log", "(", 
              RowBox[{"1", "-", "y"}], ")"}], TraditionalForm]], "InlineMath",
           ExpressionUUID -> "42e358ec-a0b8-43ea-b5ac-1283945389c6"]], 
        "TableText"]]},
     {"ComplementaryLogLog", 
      RowBox[{"Log", "[", 
       RowBox[{"-", 
        RowBox[{"Log", "[", 
         RowBox[{"1", "-", "y"}], "]"}]}], "]"}]},
     {"OddsPowerLink", 
      InterpretationBox[Cell[BoxData[Cell[BoxData[
         FormBox[
          RowBox[{"\[Piecewise]", GridBox[{
             {
              FractionBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox["y", 
                   RowBox[{"1", "-", "y"}]], ")"}], "\[Alpha]"], "-", "1"}], 
               "\[Alpha]"], 
              RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]},
             {
              RowBox[{"log", "(", 
               FractionBox["y", 
                RowBox[{"1", "-", "y"}]], ")"}], 
              RowBox[{"\[Alpha]", "\[LongEqual]", "0"}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{1.}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.84]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}]}], TraditionalForm]], 
         "InlineMath",ExpressionUUID->
         "2dde8c82-2919-490b-a65e-1d33deb519d7"]], "TableText",
        ExpressionUUID->"24d865dc-fc86-4e63-b712-23db54758721"],
       TextCell[
        RawBoxes[
         Cell[
          BoxData[
           FormBox[
            RowBox[{"\[Piecewise]", 
              GridBox[{{
                 FractionBox[
                  RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox["y", 
                    RowBox[{"1", "-", "y"}]], ")"}], "\[Alpha]"], "-", "1"}], 
                  "\[Alpha]"], 
                 RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}, {
                 RowBox[{"log", "(", 
                   FractionBox["y", 
                    RowBox[{"1", "-", "y"}]], ")"}], 
                 RowBox[{"\[Alpha]", "\[LongEqual]", "0"}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                 "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                 "Rows" -> {{1.}}, "RowsIndexed" -> {}}, 
               GridBoxSpacings -> {"Columns" -> {
                   Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                   Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                 "Rows" -> {
                   Offset[0.2], {
                    Offset[0.4]}, 
                   Offset[0.2]}, "RowsIndexed" -> {}}]}], TraditionalForm]], 
          "InlineMath", ExpressionUUID -> 
          "be8849a7-a674-4eac-97e3-72d96855ef5a"]], "TableText"]]},
     {"NegativeBinomialLink", 
      InterpretationBox[Cell[BoxData[Cell[BoxData[
         FormBox[
          RowBox[{"log", "(", 
           FractionBox[
            RowBox[{"\[Alpha]", " ", "y"}], 
            RowBox[{
             RowBox[{"\[Alpha]", " ", "y"}], "+", "1"}]], ")"}], 
          TraditionalForm]], "InlineMath",ExpressionUUID->
         "3897d284-fe4a-4239-b158-b41e70875df4"]], "TableText",
        ExpressionUUID->"25681a73-569f-4d46-b9ca-57d8a28b7d6e"],
       TextCell[
        RawBoxes[
         Cell[
          BoxData[
           FormBox[
            RowBox[{"log", "(", 
              FractionBox[
               RowBox[{"\[Alpha]", " ", "y"}], 
               RowBox[{
                 RowBox[{"\[Alpha]", " ", "y"}], "+", "1"}]], ")"}], 
            TraditionalForm]], "InlineMath", ExpressionUUID -> 
          "52d8ac62-abf9-4589-ab7d-ed0e2e3eea89"]], "TableText"]]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {
        RGBColor[1., 1., 0.9], {
         GrayLevel[1], 
         RGBColor[0.8, 0.9, 0.9]}}},
    GridBoxDividers->{"Columns" -> {
        RGBColor[0.2, 0.2, 0.2], {
         RGBColor[0.75, 0.75, 0.75]}, 
        RGBColor[0.2, 0.2, 0.2]}, "Rows" -> {
        RGBColor[0.2, 0.2, 0.2], 
        RGBColor[0.2, 0.2, 0.2], {False}, 
        RGBColor[0.2, 0.2, 0.2]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{"Columns" -> {{4}}, "Rows" -> {{2}}}],
   "Grid"]], "Output",
  CellChangeTimes->{3.7008346387458963`*^9},ExpressionUUID->
  "59f8de4d-91a1-4480-93cc-9eb24e34cff4"]
}], "Text",
 CellChangeTimes->{{3.7008343504791393`*^9, 3.700834431557721*^9}, {
   3.700834645592972*^9, 3.7008346458797565`*^9}, 3.701190845066078*^9, {
   3.7021398535112705`*^9, 
   3.702139858486271*^9}},ExpressionUUID->"d8842321-e982-424d-bcd1-\
828bc117d5ad"],

Cell[TextData[StyleBox["Let us consider an example using one of these link \
function, the NegativeBinomialLink.",
 FontFamily->"Arial",
 FontSize->18]], "Text",
 CellChangeTimes->{{3.701112102328727*^9, 3.7011121278783274`*^9}, {
  3.702139872413271*^9, 
  3.7021398759892707`*^9}},ExpressionUUID->"aa441426-ac23-4442-9a02-\
732501fab5ac"],

Cell[CellGroupData[{

Cell["Import and clean data", "Subsection",
 CellChangeTimes->{{3.70083946534663*^9, 3.700839471059581*^9}, {
  3.701192014283683*^9, 
  3.701192016187699*^9}},ExpressionUUID->"d9130e1b-b1e5-4e33-8fca-\
6f76ed67cd23"],

Cell["\<\
In this example we will try to fit the terrorism (incidence and casualties) \
in different provinces of Afghanistan to various variables. The variables \
include: opium production, population, area, mountainous, nutrition, \
literacy, drinking water, roads, infant mortality, Pashtun majority, and \
foreign troops. This data is aggregated over years (n=33). Finally we want to \
conclude what are the most important factors. \
\>", "Text",
 CellChangeTimes->{{3.700839337242318*^9, 3.7008393795337873`*^9}, {
  3.7008395268839207`*^9, 3.7008395270523634`*^9}, {3.701110388531047*^9, 
  3.7011104917071033`*^9}, {3.7011106344002547`*^9, 3.7011106393994884`*^9}, {
  3.701779940314664*^9, 
  3.7017799610699177`*^9}},ExpressionUUID->"cc5adeea-0fe0-4c92-a916-\
de402c8346a5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", 
       "\"\<afghan_terror.dat\>\""}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.700839433916483*^9, {3.7011114169977493`*^9, 3.7011114262462287`*^9}, 
   3.701111459877243*^9},
 CellLabel->"In[93]:=",ExpressionUUID->"dff03b1b-8735-4d1d-b200-99f0fae03180"],

Cell["\<\
Let us look at how the data is interpreted in Wolfram Language:\
\>", "Text",
 CellChangeTimes->{{3.7008394759316044`*^9, 3.700839479402727*^9}, {
   3.700839531297757*^9, 3.7008395400015364`*^9}, 3.7021399090512705`*^9, {
   3.738512278181424*^9, 
   3.738512284189063*^9}},ExpressionUUID->"8191f251-6867-421c-a91d-\
0b45327b31e4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "//", "InputForm"}]], "Input",
 CellChangeTimes->{3.7008394304443226`*^9},
 CellLabel->"In[94]:=",ExpressionUUID->"514654a4-bd5e-40e1-a994-40a5a63da7ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Fitting the number of incidents with the NegativeBinomialLink\
\>", "Subsection",
 CellChangeTimes->{{3.7008413234615917`*^9, 3.7008413527404857`*^9}, {
  3.7011115204365273`*^9, 
  3.701111527579566*^9}},ExpressionUUID->"27ad1607-a5c0-45dd-815a-\
a3e0c11c1ff1"],

Cell["\<\
First we will try to fit the number of incidents of terrorism occurring. \
Since the first entry is not one of the variables, we can eliminate it, and \
then modify the data so that we can fit the number of incidents with the \
other variable:\
\>", "Text",
 CellChangeTimes->{{3.7008395518739276`*^9, 3.700839613409502*^9}, {
   3.701111471621295*^9, 3.701111499788883*^9}, 
   3.7017799704610476`*^9},ExpressionUUID->"feed1151-c56e-46a5-a672-\
1119d762dc74"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataincidents", "=", 
   RowBox[{
    RowBox[{"data", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"2", ";;"}]}], "]"}], "]"}], "/.", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "inc_", ",", "death_", ",", "opium_", ",", "pop_", ",", "area_", ",", 
       "mountain_", ",", "literacy_", ",", "water_", ",", "food_", ",", 
       "road_", ",", "infmortality_", ",", "Pashtun_", ",", "foreign_"}], 
      "}"}], "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
      "opium", ",", "pop", ",", "area", ",", "mountain", ",", "literacy", ",",
        "water", ",", "food", ",", "road", ",", "infmortality", ",", 
       "Pashtun", ",", "foreign", ",", "inc"}], "}"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{3.7011115380200644`*^9},
 CellLabel->"In[95]:=",ExpressionUUID->"d21b6418-db1e-40c5-95f2-ec0df357fbd4"],

Cell[BoxData[
 RowBox[{"(", 
  RowBox[{"mod1", "=", 
   RowBox[{"GeneralizedLinearModelFit", "[", 
    RowBox[{"dataincidents", ",", 
     RowBox[{"{", 
      RowBox[{
      "opium", ",", "pop", ",", "area", ",", "mountain", ",", "literacy", ",",
        "water", ",", "food", ",", "road", ",", "infmortality", ",", 
       "Pashtun", ",", "foreign"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "opium", ",", "pop", ",", "area", ",", "mountain", ",", "literacy", ",",
        "water", ",", "food", ",", "road", ",", "infmortality", ",", 
       "Pashtun", ",", "foreign"}], "}"}], ",", 
     RowBox[{"ExponentialFamily", "\[Rule]", "\"\<Poisson\>\""}], ",", 
     RowBox[{
     "LinkFunction", "\[Rule]", " ", "\"\<NegativeBinomialLink\>\""}]}], 
    "]"}]}], ")"}]], "Input",
 CellChangeTimes->{{3.700837490439766*^9, 3.700837523535207*^9}, {
   3.700837574358466*^9, 3.700837599116872*^9}, 3.7008376575983653`*^9, {
   3.700838013373779*^9, 3.7008380149980707`*^9}, {3.700838573390767*^9, 
   3.7008385748776894`*^9}, {3.7008386248136168`*^9, 
   3.7008387012343597`*^9}, {3.701111549701955*^9, 3.701111572636689*^9}},
 CellTags->{"LinkFunction", "NegativeBinomialLink"},
 CellLabel->"In[96]:=",ExpressionUUID->"46ad9efa-9a4e-46f4-af8e-743e78963457"],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"mod1", "[", "\"\<FitResiduals\>\"", "]"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", " ", 
   RowBox[{"Filling", "\[Rule]", " ", "Axis"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Row", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<BIC: \>\"", ",", 
       RowBox[{"mod1", "[", "\"\<BIC\>\"", "]"}], ",", "\"\<   AIC: \>\"", 
       ",", 
       RowBox[{"mod1", "[", "\"\<AIC\>\"", "]"}]}], "}"}], "]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.700841281241243*^9, 3.7008412935130405`*^9}, 
   3.701513873282275*^9, 3.701783604261649*^9, {3.701783669370597*^9, 
   3.7017837395409136`*^9}, 3.7017840047874365`*^9},
 CellLabel->"In[97]:=",ExpressionUUID->"15ef3b69-1f4e-4377-a93d-ea10edb922fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fitting the number of deaths  ", "Subsection",
 CellChangeTimes->{{3.700841733943799*^9, 3.7008417446059685`*^9}, {
  3.701111602675192*^9, 
  3.7011116097228155`*^9}},ExpressionUUID->"939371da-29da-4cfd-ae7e-\
c1497d1a4ebe"],

Cell["\<\
In this section we will analyse the number of deaths. For that let us modify \
our data accordingly. \
\>", "Text",
 CellChangeTimes->{{3.700839619184757*^9, 3.700839633887735*^9}, {
   3.701111789545458*^9, 3.7011118422994747`*^9}, {3.70178508475737*^9, 
   3.7017851033494973`*^9}, 
   3.701787943823039*^9},ExpressionUUID->"2f17c208-1b1b-4f13-b672-\
1a8471eeb710"],

Cell[BoxData[
 RowBox[{
  RowBox[{"datadeaths", "=", 
   RowBox[{
    RowBox[{"data", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"2", ";;"}]}], "]"}], "]"}], "/.", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "inc_", ",", "death_", ",", "opium_", ",", "pop_", ",", "area_", ",", 
       "mountain_", ",", "literacy_", ",", "water_", ",", "food_", ",", 
       "road_", ",", "infmortality_", ",", "Pashtun_", ",", "foreign_"}], 
      "}"}], "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
      "opium", ",", "pop", ",", "area", ",", "mountain", ",", "literacy", ",",
        "water", ",", "food", ",", "road", ",", "infmortality", ",", 
       "Pashtun", ",", "foreign", ",", "death"}], "}"}]}]}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.700839643505004*^9, 3.7008396821681433`*^9}, 
   3.7011116129536343`*^9},
 CellLabel->"In[98]:=",ExpressionUUID->"a77ead49-7883-48a7-b9ab-c84d6a403b9e"],

Cell["Next let us try to fit the data using all the variables:", "Text",
 CellChangeTimes->{{3.7011118472270107`*^9, 3.7011118620818367`*^9}, 
   3.702139938809271*^9},ExpressionUUID->"6ea08287-3f14-4c58-ae51-\
f18fff95cb43"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"mod1", "=", 
    RowBox[{"GeneralizedLinearModelFit", "[", 
     RowBox[{"datadeaths", ",", 
      RowBox[{"{", 
       RowBox[{
       "opium", ",", "pop", ",", "area", ",", "mountain", ",", "literacy", 
        ",", "water", ",", "food", ",", "road", ",", "infmortality", ",", 
        "Pashtun", ",", "foreign"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "opium", ",", "pop", ",", "area", ",", "mountain", ",", "literacy", 
        ",", "water", ",", "food", ",", "road", ",", "infmortality", ",", 
        "Pashtun", ",", "foreign"}], "}"}], ",", 
      RowBox[{"ExponentialFamily", "\[Rule]", "\"\<Gaussian\>\""}]}], "]"}]}],
    ")"}], "//", "Normal"}]], "Input",
 CellChangeTimes->{{3.700837490439766*^9, 3.700837523535207*^9}, {
   3.700837574358466*^9, 3.700837599116872*^9}, 3.7008376575983653`*^9, {
   3.700838013373779*^9, 3.7008380149980707`*^9}, {3.700838573390767*^9, 
   3.7008385748776894`*^9}, {3.7008386248136168`*^9, 
   3.7008387012343597`*^9}, {3.7008396671133657`*^9, 
   3.7008396699298096`*^9}, {3.7008397015443306`*^9, 
   3.7008397568073225`*^9}, {3.7011116210955153`*^9, 3.7011116294354444`*^9}},
 
 CellLabel->"In[99]:=",ExpressionUUID->"aa5a8f25-7e37-47a2-80a4-7f2aece48df3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"mod1", "[", "\"\<ParameterTable\>\"", "]"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"mod1", "[", "\"\<FitResiduals\>\"", "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", " ", 
     RowBox[{"Filling", "\[Rule]", " ", "Axis"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Row", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<AICc: \>\"", ",", 
         RowBox[{"mod1", "[", "\"\<BIC\>\"", "]"}], ",", "\"\<   AIC: \>\"", 
         ",", 
         RowBox[{"mod1", "[", "\"\<AIC\>\"", "]"}]}], "}"}], "]"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.700839999867565*^9, 3.7008400062173448`*^9}, {
  3.701788119693499*^9, 3.7017881512197623`*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"6e73b1cb-d958-432a-8b6d-6bbf90d2041d"],

Cell[TextData[StyleBox["However, is this the best model? To find out the best \
model fit, let us consider all subsets of the variables and find out the fit \
which corresponds to the highest of a statistical inference parameter, here \
the AICc is chosen.",
 FontFamily->"Arial",
 FontSize->16]], "Text",
 CellChangeTimes->{{3.701111865672948*^9, 3.701111934255062*^9}, {
   3.7011119731668243`*^9, 3.7011119743260374`*^9}, {3.7017881027236843`*^9, 
   3.7017881081941037`*^9}, 
   3.702139945401271*^9},ExpressionUUID->"6679c1ba-d65a-4dc5-9212-\
51fe977f078f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sub", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", "i", "}"}], ",", 
       RowBox[{
        RowBox[{"GeneralizedLinearModelFit", "[", 
         RowBox[{"datadeaths", ",", "i", ",", 
          RowBox[{"{", 
           RowBox[{
           "opium", ",", "pop", ",", "area", ",", "mountain", ",", "literacy",
             ",", "water", ",", "food", ",", "road", ",", "infmortality", ",",
             "Pashtun", ",", "foreign"}], "}"}], ",", 
          RowBox[{"ExponentialFamily", "\[Rule]", "\"\<Gaussian\>\""}]}], 
         "]"}], "[", 
        RowBox[{"{", 
         RowBox[{
         "\"\<AIC\>\"", ",", "\"\<BIC\>\"", ",", 
          "\"\<LikelihoodRatioIndex\>\"", ",", "\"\<PearsonChiSquare\>\""}], 
         "}"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Subsets", "[", 
        RowBox[{"{", 
         RowBox[{
         "opium", ",", "pop", ",", "area", ",", "mountain", ",", "literacy", 
          ",", "water", ",", "food", ",", "road", ",", "infmortality", ",", 
          "Pashtun", ",", "foreign"}], "}"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.700840191798637*^9, 3.700840226873275*^9}, {
   3.700840263390937*^9, 3.700840270069585*^9}, {3.7008403389034004`*^9, 
   3.700840399972733*^9}, 3.7008406140803843`*^9},
 CellTags->{
  "BIC", "LikelihoodRatioIndex", "PearsonChiSquare", "Subsets", "Gaussian"},
 CellLabel->
  "In[101]:=",ExpressionUUID->"80277eb6-c474-49b6-badc-81e727792ddf"],

Cell["\<\
Thus we see that the most important variables are opium production, area, \
mountain, water, and road, and infant mortality.\
\>", "Text",
 CellChangeTimes->{{3.7011119813571863`*^9, 3.701112063082324*^9}, {
   3.701788173168697*^9, 3.701788203954001*^9}, 
   3.702139952816271*^9},ExpressionUUID->"5c868251-cf7b-43a9-a6ff-\
f749f6bf920a"],

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Model\>\"", ",", "\"\<AICc\>\"", ",", "\"\<BIC\>\"", ",", 
        "\"\<LikelihoodRatioIndex\>\"", ",", "\"\<PearsonChiSquare\>\""}], 
       "}"}], "}"}], ",", 
     RowBox[{"Take", "[", 
      RowBox[{
       RowBox[{"SortBy", "[", 
        RowBox[{"sub", ",", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "&"}]}], "]"}], ",", "5"}], 
      "]"}]}], "]"}], ",", 
   RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7008405182843227`*^9, 3.700840522632805*^9}, {
   3.700840566777394*^9, 3.700840601616461*^9}, {3.700840646887169*^9, 
   3.7008406950052695`*^9}, {3.7011119369205265`*^9, 
   3.7011119371705265`*^9}, {3.7011119692716675`*^9, 3.701111969624586*^9}, 
   3.701787989580884*^9, {3.7017880385492034`*^9, 3.7017880714059505`*^9}},
 CellTags->{"Grid", "Join", "Take", "SortBy"},
 CellLabel->
  "In[102]:=",ExpressionUUID->"d022e793-441a-4998-950f-4b7ec6e84495"],

Cell[TextData[StyleBox["Source: J.A. Piazza (2012). \
\[OpenCurlyDoubleQuote]The Opium Trade and Patterns of Terrorism in the \
Provinces of Afghanistan: An Empirical Analysis,\[CloseCurlyDoubleQuote] \
Terrorism and Political Violence, Vol. 24, pp. 213-234",
 FontFamily->"Arial",
 FontSize->10,
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{
  3.7011104990595856`*^9},ExpressionUUID->"2e90f086-39dd-4252-bc4e-\
1b3522ecae7a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"2a9b5d89-b3f0-44ba-8cc7-b5ddea2f7f0b"],

Cell[CellGroupData[{

Cell["Time Series Models: Airline Passenger Data", "Section",
 CellChangeTimes->{{3.700841779174068*^9, 3.7008417836118746`*^9}, {
  3.7008429141993303`*^9, 
  3.700842920751644*^9}},ExpressionUUID->"fae988d9-74b1-4108-8879-\
9252a7a3abad"],

Cell["\<\
Time series refers to a sequence of observations following each other in \
time, where adjacent observations are correlated. This can be used to model, \
simulate, and forecast behavior for a system. Time series models are \
frequently used in fields such as economics, finance, biology, and \
engineering. The Wolfram Language provides a full suite of time series \
functionality, including standard models such as MA, AR, and ARMA, as well as \
several extensions. Time series models can be simulated, estimated from data, \
and used to produce forecasts of future behavior. \
\>", "Text",
 CellChangeTimes->{{3.7008419547938914`*^9, 
  3.7008419672737765`*^9}},ExpressionUUID->"7b358b51-25f0-4cb0-a629-\
08623cf4ae3b"],

Cell["The existing time series models in the Wolfram Language:", "Text",
 CellChangeTimes->{{3.7008419746883183`*^9, 3.700841989871373*^9}, {
  3.7021400181402707`*^9, 
  3.7021400196922703`*^9}},ExpressionUUID->"4ec6b609-d6d1-436e-bb98-\
16a87a0190fa"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Model Type\"\>", "\<\"Models\"\>"},
    {"\<\"Basic Auto-Regressive and Moving Average Processes  \"\>", \
"\<\"MAProces| ARProcess | ARMAProcess\"\>"},
    {"\<\"Integrated and Seasonal Processes\"\>", "\<\"ARIMAProcess | \
SARIMAProcess  | SARMA Process | FARIMA Process\"\>"},
    {"\<\"Generalized Auto-regressive Conditional Heteroskedasicity Processes\
\"\>", "\<\"ARCHProcess |GARCHProcess \"\>"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {
       RGBColor[1., 1., 0.9], {
        GrayLevel[1], 
        RGBColor[0.8, 0.9, 0.9]}}},
   GridBoxDividers->{"Columns" -> {
       RGBColor[0.2, 0.2, 0.2], {
        RGBColor[0.75, 0.75, 0.75]}, 
       RGBColor[0.2, 0.2, 0.2]}, "Rows" -> {
       RGBColor[0.2, 0.2, 0.2], 
       RGBColor[0.2, 0.2, 0.2], {False}, 
       RGBColor[0.2, 0.2, 0.2]}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{4}}, "Rows" -> {{2}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.700842540674093*^9, 3.700842547350757*^9}, 
   3.700842600654575*^9, 
   3.7011934833198085`*^9},ExpressionUUID->"68a7a576-b8e8-4523-836d-\
632a5f2259c0"],

Cell["\<\
The following data contains the monthly total number of US international \
airline passengers (in thousands) from January 1949 to December 1960. This a \
standard \[OpenCurlyDoubleQuote]text book\[CloseCurlyDoubleQuote] data set \
because it contains seasonality integrated with autoregressive and Moving \
Average processes. \
\>", "Text",
 CellChangeTimes->{{3.7008427060981126`*^9, 3.70084271002752*^9}, {
  3.7008429250149317`*^9, 3.7008430207207375`*^9}, {3.7021400467472706`*^9, 
  3.7021400622182703`*^9}},ExpressionUUID->"a4eac738-ecea-45df-b824-\
b5b1776851e6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"passengers", "=", 
   InterpretationBox[
    RowBox[{
     TagBox["TimeSeries",
      "SummaryHead",
      Selectable->True], "[", 
     DynamicModuleBox[{Typeset`open$$ = False}, 
      PanelBox[
       PaneSelectorBox[{False->GridBox[{
          {
           PaneBox[
            ButtonBox[
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "SquarePlusIconMedium"],
              ImageSizeCache->{12., {0., 12.}}],
             Appearance->None,
             ButtonFunction:>(Typeset`open$$ = True),
             Evaluator->Automatic,
             Method->"Preemptive"],
            Alignment->{Center, Center},
            ImageSize->{Automatic, 
              Dynamic[
              3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                Magnification])]}], 
           GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJzt08tpAmEUhuHB1SxduHDhYiIiIiLj/Y6WENwIkoWYxMSFqEgCgYiWYAmW
YAmWYAmWkBJMOO8v+HUgZEBeHs+ZfwSZh/G8/xrxPG/w+/mrXT9d61OPL6zn
EfbpkEZlHrMen3Ecj3GC/XccMH/BSeYTnMJvOG3dznCGLmmW+RTn8ALnrSM3
D60nNy+wv8JF66M7v8T+Fy5bA7dfsYafuGo9fOCade/mdetugxs8382beI1b
cn+b3/ONO9ajO8/9n9erd0tfHBXHxHFxQhyIk+KUOC3OiLPinDgvDsUFcVFc
EpfFFXFVXBPXxQ1xU9wSt8Ud8f/7afv3/35eAOrEcFs=
              
              "], {{{}, {}, {}, {}, 
                {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[
                 1.5], Opacity[0.3], 
                 
                 StyleBox[{LineBox[{30, 1}], LineBox[{31, 2}], 
                   LineBox[{32, 3}], LineBox[{33, 4}], LineBox[{34, 5}], 
                   LineBox[{35, 6}], LineBox[{36, 7}], LineBox[{37, 8}], 
                   LineBox[{38, 9}], LineBox[{39, 10}], LineBox[{40, 11}], 
                   LineBox[{41, 12}], LineBox[{42, 13}], LineBox[{43, 14}], 
                   LineBox[{44, 15}], LineBox[{45, 16}], LineBox[{46, 17}], 
                   LineBox[{47, 18}], LineBox[{48, 19}], LineBox[{49, 20}], 
                   LineBox[{50, 21}], LineBox[{51, 22}], LineBox[{52, 23}], 
                   LineBox[{53, 24}], LineBox[{54, 25}], LineBox[{55, 26}], 
                   LineBox[{56, 27}], LineBox[{57, 28}], LineBox[{58, 29}]},
                  FontFamily->"Arial"]}}, {{}, 
                {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[
                 1.5], 
                 
                 StyleBox[
                  PointBox[{59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 
                   71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
                    86, 87}],
                  FontFamily->"Arial"]}, {}}}], {}},
            AspectRatio->1,
            Axes->{False, False},
            AxesLabel->{None, None},
            AxesOrigin->{0., 104.},
            BaseStyle->{FontFamily -> "Arial"},
            BaselinePosition->Bottom,
            DisplayFunction->Identity,
            Frame->{{True, True}, {True, True}},
            FrameLabel->{{None, None}, {None, None}},
            FrameStyle->Directive[
              Thickness[Tiny], 
              RGBColor[0.368417, 0.506779, 0.709798]],
            FrameTicks->{{None, None}, {None, None}},
            GridLines->{None, None},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImagePadding->1,
            
            ImageSize->
             Dynamic[{
              Automatic, 
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                Magnification])}],
            LabelStyle->{FontFamily -> "Arial"},
            Method->{"ScalingFunctions" -> None},
            PlotRange->{{0., 29.}, {104., 508.}},
            PlotRangeClipping->True,
            PlotRangePadding->{{
               Scaled[0.02], 
               Scaled[0.02]}, {
               Scaled[0.02], 
               Scaled[0.02]}},
            Ticks->{None, None}], GridBox[{
             {
              TagBox[
               TemplateBox[{RowBox[{
                   StyleBox["\"Time: \"", FontColor -> GrayLevel[0.5]], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"01 Jan 1949\"", "SummaryItem", Selectable -> True]}],
                 RowBox[{
                   StyleBox["\" to \"", FontColor -> GrayLevel[0.5]], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"01 Dec 1960\"", "SummaryItem", Selectable -> True]}]},
                "RowDefault"],
               "SummaryItem",
               Selectable->True], "\[SpanFromLeft]"},
             {
              RowBox[{
               StyleBox["\<\"Data points: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox["144",
                "SummaryItem",
                Selectable->True]}], "\[SpanFromLeft]"}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
        GridBox[{
          {
           PaneBox[
            ButtonBox[
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "SquareMinusIconMedium"]],
             Appearance->None,
             ButtonFunction:>(Typeset`open$$ = False),
             Evaluator->Automatic,
             Method->"Preemptive"],
            Alignment->{Center, Center},
            ImageSize->{Automatic, 
              Dynamic[
              3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                Magnification])]}], 
           GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJzt08tpAmEUhuHB1SxduHDhYiIiIiLj/Y6WENwIkoWYxMSFqEgCgYiWYAmW
YAmWYAmWkBJMOO8v+HUgZEBeHs+ZfwSZh/G8/xrxPG/w+/mrXT9d61OPL6zn
EfbpkEZlHrMen3Ecj3GC/XccMH/BSeYTnMJvOG3dznCGLmmW+RTn8ALnrSM3
D60nNy+wv8JF66M7v8T+Fy5bA7dfsYafuGo9fOCade/mdetugxs8382beI1b
cn+b3/ONO9ajO8/9n9erd0tfHBXHxHFxQhyIk+KUOC3OiLPinDgvDsUFcVFc
EpfFFXFVXBPXxQ1xU9wSt8Ud8f/7afv3/35eAOrEcFs=
              
              "], {{{}, {}, {}, {}, 
                {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[
                 1.5], Opacity[0.3], 
                 
                 StyleBox[{LineBox[{30, 1}], LineBox[{31, 2}], 
                   LineBox[{32, 3}], LineBox[{33, 4}], LineBox[{34, 5}], 
                   LineBox[{35, 6}], LineBox[{36, 7}], LineBox[{37, 8}], 
                   LineBox[{38, 9}], LineBox[{39, 10}], LineBox[{40, 11}], 
                   LineBox[{41, 12}], LineBox[{42, 13}], LineBox[{43, 14}], 
                   LineBox[{44, 15}], LineBox[{45, 16}], LineBox[{46, 17}], 
                   LineBox[{47, 18}], LineBox[{48, 19}], LineBox[{49, 20}], 
                   LineBox[{50, 21}], LineBox[{51, 22}], LineBox[{52, 23}], 
                   LineBox[{53, 24}], LineBox[{54, 25}], LineBox[{55, 26}], 
                   LineBox[{56, 27}], LineBox[{57, 28}], LineBox[{58, 29}]},
                  FontFamily->"Arial"]}}, {{}, 
                {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[
                 1.5], 
                 
                 StyleBox[
                  PointBox[{59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 
                   71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
                    86, 87}],
                  FontFamily->"Arial"]}, {}}}], {}},
            AspectRatio->1,
            Axes->{False, False},
            AxesLabel->{None, None},
            AxesOrigin->{0., 104.},
            BaseStyle->{FontFamily -> "Arial"},
            BaselinePosition->Bottom,
            DisplayFunction->Identity,
            Frame->{{True, True}, {True, True}},
            FrameLabel->{{None, None}, {None, None}},
            FrameStyle->Directive[
              Thickness[Tiny], 
              RGBColor[0.368417, 0.506779, 0.709798]],
            FrameTicks->{{None, None}, {None, None}},
            GridLines->{None, None},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImagePadding->1,
            
            ImageSize->
             Dynamic[{
              Automatic, 
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                Magnification])}],
            LabelStyle->{FontFamily -> "Arial"},
            Method->{"ScalingFunctions" -> None},
            PlotRange->{{0., 29.}, {104., 508.}},
            PlotRangeClipping->True,
            PlotRangePadding->{{
               Scaled[0.02], 
               Scaled[0.02]}, {
               Scaled[0.02], 
               Scaled[0.02]}},
            Ticks->{None, None}], GridBox[{
             {
              TagBox[
               TemplateBox[{RowBox[{
                   StyleBox["\"Time: \"", FontColor -> GrayLevel[0.5]], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"01 Jan 1949\"", "SummaryItem", Selectable -> True]}],
                 RowBox[{
                   StyleBox["\" to \"", FontColor -> GrayLevel[0.5]], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"01 Dec 1960\"", "SummaryItem", Selectable -> True]}]},
                "RowDefault"],
               "SummaryItem",
               Selectable->True], "\[SpanFromLeft]"},
             {
              RowBox[{
               StyleBox["\<\"Data points: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox["144",
                "SummaryItem",
                Selectable->True]}], "\[SpanFromLeft]"},
             {
              RowBox[{
               StyleBox["\<\"Regular: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox["True",
                "SummaryItem",
                Selectable->True]}], 
              RowBox[{
               StyleBox["\<\"Output dimension: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox["1",
                "SummaryItem",
                Selectable->True]}]},
             {
              RowBox[{
               StyleBox["\<\"Metadata: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox["2",
                "SummaryItem",
                Selectable->True], "\[InvisibleSpace]", 
               StyleBox["\<\" properties\"\>",
                FontColor->GrayLevel[0.5]]}], 
              RowBox[{
               StyleBox["\<\"Minimum Increment: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox[
                RowBox[{"{", 
                 RowBox[{"1", ",", "\<\"Month\"\>"}], "}"}],
                "SummaryItem",
                Selectable->True]}]},
             {
              TagBox["\<\"\"\>",
               "SummaryItem",
               Selectable->True], 
              RowBox[{
               StyleBox["\<\"Resampling: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox["\<\"HoldValueFromLeft\"\>",
                "SummaryItem",
                Selectable->True]}]}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
        Typeset`open$$],
        ImageSize->Automatic],
       BaselinePosition->Baseline],
      DynamicModuleValues:>{}], "]"}],
    TemporalData[TimeSeries, {CompressedData["
1:eJwt0s0rplEYB+AXGzX5SBkbmymWaCxE0/gb0GRjskARYqLIwpQyWFDoxYoy
ZIGFMI2FEk1JaJKNbEX52rBSFq439+LqnM7z63efp86npu66rvREIpHGJD/o
Y5ghBhglGcbopy1yvfxkInKDzLAaFvhFD+NMMcsmS6zH/jDs8JtpVlhjm33+
8JdLbnjijL3oOeBfeOCea57J9IO5PNqfR+cRJ+xG9oq7yJZSTEbae8dxdKVm
3vLBeRbZfKGTBirJizkfrYXk85UqquljnhmaKScn1lRXCS18j+8rnHFOMuZ8
poZv0dke+Q62uOcl8q1UUEsb9cwyzjIXFHkEZfy3n4u+1P0WGWWJ08gWyKUe
TSOvcT7CBm9ZnFBB
      "], {
       TemporalData`DateSpecification[{1949, 1, 1, 0, 0, 0.}, {1960, 12, 1, 0,
         0, 0}, {1, "Month"}]}, 1, {"Discrete", 1}, {"Discrete", 1}, 1, {
      MetaInformation -> {
        "Source" -> 
         "Box, G. E. P., Jenkins, G. M. and Reinsel, G. C. (1994) Time Series \
Analysis, Forecasting and\nControl. Second Edition. New York: Prentice-Hall.",
          "Description" -> 
         "International Airline Passengers: Monthly Totals (Thousands of \
Passengers) January 1949 - December 1960"}}}, True, 10.],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], ";"}]], "Input",
 CellLabel->"In[103]:=",
 CellID->26079817,ExpressionUUID->"a8ad62c0-2f6d-40c5-abe6-b3a3ff89b35c"],

Cell["Split the data at January 1958:", "Text",
 CellChangeTimes->{{3.7008427258904247`*^9, 
  3.7008427412028503`*^9}},ExpressionUUID->"27a2eafc-270f-4bab-994e-\
7dadd55f2072"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"before1958", "=", 
   RowBox[{"TimeSeriesWindow", "[", 
    RowBox[{"passengers", ",", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "\"\<December 1957\>\""}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"since1958", "=", 
   RowBox[{"TimeSeriesWindow", "[", 
    RowBox[{"passengers", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<January 1958\>\"", ",", "Automatic"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellTags->"TimeSeriesWindow",
 CellLabel->"In[104]:=",
 CellID->35234274,ExpressionUUID->"c5c308ea-936f-4e07-9dd7-67f27357b76b"],

Cell[BoxData[
 RowBox[{"plot", "=", 
  RowBox[{"DateListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"before1958", ",", "since1958"}], "}"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Before 1958\>\"", ",", "\"\<After 1958\>\""}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7017898077484565`*^9, 3.701789808119396*^9}},
 CellLabel->"In[106]:=",
 CellID->76320772,ExpressionUUID->"970b6cbe-7959-423a-9e05-29050eace400"],

Cell["Fit the Model using TimeSeriesModelFit:", "Text",
 CellChangeTimes->{{3.7008428302480884`*^9, 3.700842839607814*^9}, {
  3.7021400723772707`*^9, 
  3.7021400770012703`*^9}},ExpressionUUID->"07de4107-def0-40a1-b826-\
31503c06f970"],

Cell[BoxData[
 RowBox[{"tsm", "=", 
  RowBox[{"TimeSeriesModelFit", "[", "before1958", "]"}]}]], "Input",
 CellTags->"TimeSeriesModelFit",
 CellLabel->
  "In[107]:=",ExpressionUUID->"a2e534d6-3825-40ad-9222-52f65130cfe0"],

Cell["Visualize the Model Fit and the Forecast:", "Text",
 CellChangeTimes->{{3.7008428428163214`*^9, 3.700842858847644*^9}, 
   3.7021400752252703`*^9},ExpressionUUID->"86f437cf-db48-49a9-a5a0-\
41c942affa35"],

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"before1958", ",", "since1958", ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"tsm", "[", "t", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"DateRange", "[", 
          RowBox[{
          "\"\<January 1958\>\"", ",", "\"\<December 1960\>\"", ",", 
           "\"\<Month\>\""}], "]"}]}], "}"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Before 1958\>\"", ",", "\"\<After 1958\>\"", ",", 
      "\"\<Forecast\>\""}], "}"}]}]}], "]"}]], "Input",
 CellTags->"DateRange",
 CellLabel->"In[108]:=",
 CellID->643306091,ExpressionUUID->"a5723f2d-b9fd-44a1-a182-5640381ab1a9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"1c817a9f-e455-40c8-8620-fb7ca4f437d7"],

Cell[CellGroupData[{

Cell["Time Series Models: Weather Data at Your Present Location", "Section",
 CellChangeTimes->{{3.700843034757821*^9, 3.700843040108992*^9}, {
   3.700845879253682*^9, 3.7008458845263076`*^9}, {3.7021431266752706`*^9, 
   3.702143128163271*^9}, {3.7021435506342707`*^9, 3.702143556170271*^9}, 
   3.7021436287822704`*^9},ExpressionUUID->"0294b208-e8b7-4c87-a81b-\
70adf5fb9f09"],

Cell["\<\
Let us gather the temperature in your present location for the last 10 years \
and plot the data. \
\>", "Text",
 CellChangeTimes->{{3.7011125052664647`*^9, 3.7011125570971003`*^9}, 
   3.7021431340112705`*^9},ExpressionUUID->"8896cfaf-5b3c-4973-b140-\
df85576bf6e2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"today", "=", 
   RowBox[{"DateValue", "[", 
    RowBox[{"Today", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Year\>\"", ",", "\"\<Month\>\""}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"start", "=", 
   RowBox[{"DateValue", "[", 
    RowBox[{
     RowBox[{"DatePlus", "[", 
      RowBox[{"Today", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "10"}], ",", "\"\<Year\>\""}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Year\>\"", ",", "\"\<Month\>\""}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"tspec", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"start", ",", "today", ",", "\"\<Month\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"temp", "=", 
  RowBox[{"TimeSeries", "[", 
   RowBox[{
    RowBox[{"WeatherData", "[", 
     RowBox[{
      RowBox[{"FindGeoLocation", "[", "]"}], ",", "\"\<Temperature\>\"", ",", 
      "tspec", ",", "\"\<NonMetricValue\>\""}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"start", ",", "Automatic", ",", "\"\<Month\>\""}], "}"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.701792176734546*^9, 3.7017922031962295`*^9}, {
  3.7021431857442703`*^9, 3.7021432037512703`*^9}, {3.7385123557138977`*^9, 
  3.738512369696765*^9}},
 CellTags->"FindGeoLocation",
 CellLabel->"In[109]:=",
 CellID->831135752,ExpressionUUID->"e06cb29d-76fb-4bd9-9ec2-db35712eddd6"],

Cell["Clearly there is a seasonal variation in the temperatures", "Text",
 CellChangeTimes->{{3.701112565288721*^9, 
  3.7011125883322587`*^9}},ExpressionUUID->"871a9a65-0c67-4b78-b269-\
2a13942177d6"],

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{"temp", ",", 
   RowBox[{"{", 
    RowBox[{"Automatic", ",", "today"}], "}"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.701788733632209*^9, 3.7017887527255144`*^9}},
 CellLabel->"In[113]:=",
 CellID->373022908,ExpressionUUID->"708d195f-3c40-45d7-b243-220b6ebc0a2a"],

Cell["Let us automatically fit the data to a time series model. ", "Text",
 CellChangeTimes->{{3.701112605768283*^9, 3.701112639591585*^9}, {
  3.7021431438262706`*^9, 
  3.702143144882271*^9}},ExpressionUUID->"97fc9ca5-92e5-4900-bc8e-\
8bc18bfbcbe4"],

Cell[BoxData[
 RowBox[{"tsm", "=", 
  RowBox[{"TimeSeriesModelFit", "[", "temp", "]"}]}]], "Input",
 CellLabel->"In[114]:=",
 CellID->193739114,ExpressionUUID->"cc592980-8676-45a3-9282-95b2b75310e5"],

Cell["\<\
Next let us forecast the temperature for the next year, along with the \
PredictionLimits. Prediction limits are slightly higher than the confidence \
intervals. \
\>", "Text",
 CellChangeTimes->{{3.7011126495187893`*^9, 3.701112703301824*^9}, {
  3.7021431512182703`*^9, 
  3.702143156321271*^9}},ExpressionUUID->"5a2720d4-a139-4cde-a970-\
41c86647518d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fdates", "=", 
   RowBox[{"DateRange", "[", 
    RowBox[{"today", ",", 
     RowBox[{"DatePlus", "[", 
      RowBox[{"today", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "\"\<Year\>\""}], "}"}]}], "]"}], ",", 
     "\"\<Month\>\""}], "]"}]}], ";"}]], "Input",
 CellTags->"DateRange",
 CellLabel->"In[115]:=",
 CellID->1486872,ExpressionUUID->"6660fddf-6995-4b34-ae20-a4d870e2bb10"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"forecast", "=", 
   RowBox[{"tsm", "/@", "fdates"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bands", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"tsm", "[", "\"\<PredictionLimits\>\"", "]"}], "[", "#", "]"}], 
     "&"}], "/@", "fdates"}]}], ";"}]}], "Input",
 CellTags->"PredictionLimits",
 CellLabel->"In[116]:=",
 CellID->642359114,ExpressionUUID->"ac7a6963-c45d-4965-89f1-8e83fb79ecb2"],

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"bands", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", "forecast", 
     ",", 
     RowBox[{"bands", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"today", ",", " ", "Automatic", ",", "\"\<Month\>\""}], "}"}], 
   ",", 
   RowBox[{"Filling", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", "\[Rule]", 
      RowBox[{"{", "3", "}"}]}], "}"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Gray", ",", "Automatic"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.701788356631236*^9, 3.701788402724962*^9}, {
   3.7017885197339764`*^9, 3.7017885734017076`*^9}, 3.70178861103409*^9, {
   3.701788641938611*^9, 3.7017886579468145`*^9}, {3.7017887681742144`*^9, 
   3.7017887793015213`*^9}},
 CellLabel->"In[118]:=",
 CellID->75358596,ExpressionUUID->"162c6fe4-e3c8-4db0-9d81-74f1997d93ed"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"2d20b746-273d-4af1-ab57-50238fafb6f6"],

Cell[CellGroupData[{

Cell["Glossary", "Section",
 CellChangeTimes->{{3.701782138956437*^9, 
  3.701782140422339*^9}},ExpressionUUID->"81c435d1-ad55-4de0-8dea-\
0d78db6e9883"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     ButtonBox[
      StyleBox["\<\"AdjustedRSquared\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["AdjustedRSquared"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"AIC\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["AIC"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"AICc\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["AICc"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"ANOVATable\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["ANOVATable"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Axis\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Axis"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      StyleBox["\<\"BestFit\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["BestFit"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"BIC\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["BIC"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Binomial\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Binomial"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"BinomialDistribution\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["BinomialDistribution"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"BinormalDistribution\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["BinormalDistribution"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      StyleBox["\<\"BoxWhiskerChart\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["BoxWhiskerChart"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Cases\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Cases"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"CDF\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["CDF"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"ChiSquareDistribution\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["ChiSquareDistribution"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Column\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Column"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      StyleBox["\<\"Cook's Distances\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Cook's Distances"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Date\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Date"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"DatePlus\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["DatePlus"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"DateRange\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["DateRange"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"DateValue\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["DateValue"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      StyleBox["\<\"DirichletDistribution\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["DirichletDistribution"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"DiscretePlot\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["DiscretePlot"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"DiscretePlot3D\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["DiscretePlot3D"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"DistributionChart\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["DistributionChart"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"DistributionFitTest\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["DistributionFitTest"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      StyleBox["\<\"Evaluate\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Evaluate"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"ExponentialFamily\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["ExponentialFamily"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"ExtentSize\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["ExtentSize"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"FileNameJoin\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["FileNameJoin"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Filling\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Filling"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      StyleBox["\<\"FindDistribution\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["FindDistribution"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"FindGeoLocation\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["FindGeoLocation"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"FitCurvatureTable\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["FitCurvatureTable"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"FitResiduals\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["FitResiduals"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Frame\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Frame"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      StyleBox["\<\"Framed\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Framed"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"FrameMargins\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["FrameMargins"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"GammaDistribution\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["GammaDistribution"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Gaussian\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Gaussian"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"GeneralizedLinearModelFit\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["GeneralizedLinearModelFit"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      StyleBox["\<\"GeoGraphics\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["GeoGraphics"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"GeoMarker\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["GeoMarker"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"GeometricDistribution\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["GeometricDistribution"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"GeoRange\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["GeoRange"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"GraphicsRow\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["GraphicsRow"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      StyleBox["\<\"Grid\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Grid"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"HazardFunction\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["HazardFunction"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Histogram\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Histogram"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"ImageSize\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["ImageSize"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Import\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Import"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      StyleBox["\<\"Join\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Join"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"LaplaceDistribution\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["LaplaceDistribution"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Large\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Large"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Length\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Length"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"LikelihoodRatioIndex\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["LikelihoodRatioIndex"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      StyleBox["\<\"LinearModelFit\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["LinearModelFit"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"LinkFunction\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["LinkFunction"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"ListLinePlot\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["ListLinePlot"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"ListPlot\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["ListPlot"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"LogitModelFit\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["LogitModelFit"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      StyleBox["\<\"Manipulate\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Manipulate"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"MaxRecursion\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["MaxRecursion"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"MixtureDistribution\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["MixtureDistribution"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"MultivariatePoissonDistribution\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["MultivariatePoissonDistribution"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"NegativeBinomialLink\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["NegativeBinomialLink"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      StyleBox["\<\"NonlinearModelFit\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["NonlinearModelFit"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Normal\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Normal"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"NormalDistribution\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["NormalDistribution"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"NotebookDirectory\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["NotebookDirectory"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"NumericQ\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["NumericQ"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      StyleBox["\<\"ParameterBias\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["ParameterBias"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"ParameterTable\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["ParameterTable"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"PDF\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["PDF"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"PearsonChiSquare\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["PearsonChiSquare"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Plot\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Plot"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      StyleBox["\<\"Plot3D\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Plot3D"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"PlotLabel\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["PlotLabel"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"PlotMarkers\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["PlotMarkers"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"PlotRange\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["PlotRange"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"PlotStyle\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["PlotStyle"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      StyleBox["\<\"Poisson\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Poisson"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"PoissonDistribution\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["PoissonDistribution"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"PredictionLimits\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["PredictionLimits"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Probability\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Probability"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"QuantilePlot\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["QuantilePlot"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      StyleBox["\<\"QuantityMagnitude\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["QuantityMagnitude"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"RandomVariate\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["RandomVariate"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Residuals\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Residuals"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"RoundingRadius\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["RoundingRadius"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Show\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Show"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      StyleBox["\<\"SmoothKernelDistribution\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["SmoothKernelDistribution"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"SortBy\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["SortBy"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Style\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Style"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Subsets\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Subsets"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"SurvivalFunction\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["SurvivalFunction"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      StyleBox["\<\"Table\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Table"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Take\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Take"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Thick\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Thick"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"TimeSeries\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["TimeSeries"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"TimeSeriesModelFit\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["TimeSeriesModelFit"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      StyleBox["\<\"TimeSeriesWindow\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["TimeSeriesWindow"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Today\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Today"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"UniformDistribution\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["UniformDistribution"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"WeatherData\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["WeatherData"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"ZipfDistribution\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["ZipfDistribution"],
      Evaluator->Automatic,
      Method->"Preemptive"]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxFrame->{"Columns" -> False, "Rows" -> False},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.7017821491293144`*^9},ExpressionUUID->"4ed11981-5615-4e56-a931-\
d4ff82c9d6c4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"aa67085d-cf9e-446c-a757-b0667a2503d0"],

Cell[CellGroupData[{

Cell["Initialize Slide", "Section",
 CellChangeTimes->{{3.7017821261075287`*^9, 
  3.7017821287033887`*^9}},ExpressionUUID->"f96b7e79-d7a5-437f-bda0-\
2058839d5423"],

Cell[CellGroupData[{

Cell["Display functions", "Subsection",
 CellChangeTimes->{{3.7066209700404735`*^9, 
  3.706620976278843*^9}},ExpressionUUID->"5c228d05-6377-4bc6-b977-\
865a854f4a5a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"CellDisplay", "[", "expr_", "]"}], ":=", 
   RowBox[{"CellPrint", "[", 
    RowBox[{"ExpressionCell", "[", 
     RowBox[{"expr", ",", "\"\<Output\>\"", ",", 
      RowBox[{"Background", "\[Rule]", "None"}], ",", 
      RowBox[{"ShowCellLabel", "\[Rule]", "False"}], ",", 
      RowBox[{"CellFrame", "\[Rule]", "False"}], ",", 
      RowBox[{"CellMargins", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"100", ",", "100"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"40", ",", "0"}], "}"}]}], "}"}]}], ",", "\"\<Output\>\"", 
      ",", 
      RowBox[{"GeneratedCell", "\[Rule]", "False"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MomentGrid", "[", 
    RowBox[{"list_", ",", "type_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"Transpose", "@", 
      RowBox[{"{", "list", "}"}]}], ",", 
     RowBox[{"Alignment", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Left", ",", "Automatic"}], "}"}]}], ",", 
     RowBox[{"Background", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Lighter", "[", 
            RowBox[{
             RowBox[{"Blend", "[", 
              RowBox[{"Switch", "[", 
               RowBox[{"type", ",", "Moment", ",", 
                RowBox[{"{", 
                 RowBox[{"Blue", ",", "Green"}], "}"}], ",", "CentralMoment", 
                ",", 
                RowBox[{"{", 
                 RowBox[{"Red", ",", "Orange"}], "}"}], ",", 
                "FactorialMoment", ",", 
                RowBox[{"{", 
                 RowBox[{"Magenta", ",", "Cyan"}], "}"}], ",", "Cumulant", 
                ",", 
                RowBox[{"{", 
                 RowBox[{"Purple", ",", "Red"}], "}"}]}], "]"}], "]"}], ",", 
             ".8"}], "]"}], ",", "White"}], "}"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"Dividers", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Darker", "[", 
           RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
          RowBox[{"{", "False", "}"}], ",", 
          RowBox[{"Darker", "[", 
           RowBox[{"Gray", ",", ".6"}], "]"}]}], "}"}]}], "}"}]}], ",", 
     RowBox[{"ItemSize", "\[Rule]", "30"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MomentTabView", "[", 
    RowBox[{"dist_", ",", 
     RowBox[{"n_Integer", "?", "Positive"}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"CellDisplay", "@", 
    RowBox[{"TabView", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<Moment\>\"", "\[Rule]", 
        RowBox[{"MomentGrid", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Moment", "[", 
             RowBox[{"dist", ",", "k"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "n"}], "}"}]}], "]"}], ",", "Moment"}], 
         "]"}]}], ",", 
       RowBox[{"\"\<CentralMoment\>\"", "\[Rule]", 
        RowBox[{"MomentGrid", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"CentralMoment", "[", 
             RowBox[{"dist", ",", "k"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "n"}], "}"}]}], "]"}], ",", "CentralMoment"}], 
         "]"}]}], ",", 
       RowBox[{"\"\<FactorialMoment\>\"", "\[Rule]", 
        RowBox[{"MomentGrid", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"FactorialMoment", "[", 
             RowBox[{"dist", ",", "k"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "n"}], "}"}]}], "]"}], ",", 
          "FactorialMoment"}], "]"}]}], ",", 
       RowBox[{"\"\<Cumulant\>\"", "\[Rule]", 
        RowBox[{"MomentGrid", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Cumulant", "[", 
             RowBox[{"dist", ",", "k"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "n"}], "}"}]}], "]"}], ",", "Cumulant"}], 
         "]"}]}]}], "}"}], "]"}]}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellLabel->
  "In[119]:=",ExpressionUUID->"ed7b4777-552c-4b21-9557-1909a8ef6cbc"]
}, Open  ]],

Cell[CellGroupData[{

Cell["wndData", "Subsection",
 CellChangeTimes->{{3.7066209700404735`*^9, 3.706620976278843*^9}, {
  3.7385119387657228`*^9, 
  3.7385119413415375`*^9}},ExpressionUUID->"709ca258-f25e-4e72-8851-\
034402b63273"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"wndData", "=", 
    RowBox[{"TimeSeries", "[", 
     RowBox[{
      RowBox[{"WeatherData", "[", 
       RowBox[{
        RowBox[{"GeoPosition", "[", 
         TemplateBox[{"\"Alta Wind Energy Center\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Company\"", ",", "\"AltaWindEnergyCenter::4h269\""}], 
             "]"}],"\"Entity[\\\"Company\\\", \\\"AltaWindEnergyCenter::4h269\
\\\"]\"","\"company\""},
          "Entity"], "]"}], ",", " ", "\"\<MeanWindSpeed\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2000", ",", "1", ",", "1"}], "}"}], ",", 
          RowBox[{"Date", "[", "]"}], ",", "\"\<Day\>\""}], "}"}]}], "]"}], 
      ",", 
      RowBox[{"MissingDataMethod", "\[Rule]", "Automatic"}]}], "]"}]}], ";"}],
   "*)"}]], "Input",
 CellChangeTimes->{{3.7385119281266932`*^9, 3.7385119446331873`*^9}, {
  3.7385119754333553`*^9, 3.738512007581078*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"c2dc8b06-ed52-47b4-aff4-dddc2cd547bb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"wndData", "=", 
   InterpretationBox[
    RowBox[{
     TagBox["TimeSeries",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{}, {{}, {}, {
                  GrayLevel[0.5], 
                  PointSize[0.125], 
                  AbsoluteThickness[1.5], 
                  StyleBox[
                   LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}},
                AspectRatio -> 1, Axes -> {False, False}, 
               AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, Background -> 
               GrayLevel[0.93], BaseStyle -> {FontFamily -> "Arial"}, 
               DisplayFunction -> Identity, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, GridLinesStyle -> Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
               Method -> {"ScalingFunctions" -> None}, 
               PlotRange -> {{0., 50.}, {-7.030970816185017, 
                4.273359296964368}}, PlotRangeClipping -> True, 
               PlotRangePadding -> {{1, 1}, {1, 1}}, 
               Ticks -> {Automatic, Automatic}], 
              GridBox[{{
                 TagBox[
                  TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2000\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"19 Jun 2018\"", "SummaryItem"]}]}, 
                   "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                 RowBox[{
                   TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["6740", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{}, {{}, {}, {
                  GrayLevel[0.5], 
                  PointSize[0.125], 
                  AbsoluteThickness[1.5], 
                  StyleBox[
                   LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}},
                AspectRatio -> 1, Axes -> {False, False}, 
               AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, Background -> 
               GrayLevel[0.93], BaseStyle -> {FontFamily -> "Arial"}, 
               DisplayFunction -> Identity, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, GridLinesStyle -> Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
               Method -> {"ScalingFunctions" -> None}, 
               PlotRange -> {{0., 50.}, {-7.030970816185017, 
                4.273359296964368}}, PlotRangeClipping -> True, 
               PlotRangePadding -> {{1, 1}, {1, 1}}, 
               Ticks -> {Automatic, Automatic}], 
              GridBox[{{
                 TagBox[
                  TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2000\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"19 Jun 2018\"", "SummaryItem"]}]}, 
                   "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                 RowBox[{
                   TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["6740", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                 RowBox[{
                   TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}], 
                 RowBox[{
                   TagBox["\"Output dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["1", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["None", "SummaryItem"]}], 
                 RowBox[{
                   TagBox["\"Minimum increment: \"", "SummaryItemAnnotation"],
                    "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"1", ",", "\"Day\""}], "}"}], "SummaryItem"]}]}, {
                
                 TagBox["\"\"", "SummaryItem"], 
                 RowBox[{
                   TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"LinearInterpolation\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    TemporalData[TimeSeries, {{
       StructuredArray[QuantityArray, {6740}, 
        StructuredArray`StructuredData[QuantityArray, CompressedData["
1:eJx13Wuoptd1H/AxsWs82JFHHsmyq9tcPaORZubMmduZ23nnzJk5c5MtuzGG
YASOqVFDSGwSCDhq8RdRaKldSFvHhVCEixOqYlMaweSD0uB+UANpcWiDamFM
h6FKwM1QlSgKwYK+8+7nt/b576OcLy/ve55nP3uv63+tvfZ6dv3Cr3zm779n
27ZtP/fxbdu+cn77a98+ujL7z28d+Pw3vj+bPne2z7U9s8/cevSFn/zJgfp9
efH3sdnV21/d+d1Xd83+z6fvXXBwdm+YL//2xmx+0VsHHj4x/f/s7K/u3fbW
g7Pvbtz74e3Vf/vle1c+MnvshZ98+tazx6f7b6/+62/d+9s/u3fVxhf2tvte
PtU+/3S9rp8/5fz2z32iPe+V47Ptix9OtnFems2M356/NPuNnfeevK89//DB
Ns6Fm7WO9rzDs//6x/O/m0dn96b/+W8cb+v40b7Z4vadB2YLOn35wGzb4m/v
9Hm8/f/4bHZv2EdfODXN40wb/1fPt8+PXJr+v3ua90ob75mLtZ5Gt6P1aV5t
nOWiZxtno+j+pXt/b+ye5nN4+v9arcO6zN94nrOg+w9PzO6N9unTJ+s5i3l9
c6nmu/h94yMDfQ9N3/fU78YzTvt+tOQJ3RZkvXut6Nb4dKTN8weXGp8efWxG
Lsy/zedC+3zk8sT/Q9Pvh9u6v3dl4ttyzW+xvlsfrXEWy9l1sT339cvT7w9N
4y0VPdrn0iS/H2/0/tKudv+L59v83zcrubc+cry4fP+paZ33lz6Qj8anCxN9
zje6v/bYJH9Hal5NT49PdL0xfZ4seWzy/IE239+6UnKJDtbb1nN20uvzk97e
bPT+g0+28b78TKPLz18qerV575/meXp6zsWJj+vT8y4XHegb+XZ/4+uR6boz
NY/GtxtlR9xPv9GZ3DT5PFl8bXp3dJKjoyXnjT4rNY92/0r7/Nm1kk/0ND90
O3hvor/7xHTdmaIL/fKc9nm63fdzx8ruND39WP0f38N+zJ9D/tu4Byc6PzXx
a389byHPd87VOhpfr9T8mp2+XHrV7Oa03rvHJz4slT1a0P/T22q+aaf2Fv3I
Z7Mnq3UdeW368f5Gr+cultxbn3HQyzo8h51qdv/Y9P2JWr/nsQvsUtPHv5vr
e9m6L5RckL82zrHJrryzym7S+zb+vnpOsx/bS17beKsll6Hvtx9OfZ1/mnez
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
/JH16mfLTqID+0Xfxvq10b6QE/qW9RNHah7sb55bfCTr0aqu9v4aJ89X7C//
k/a5xwVZt3d/8S1x/uP1CX8k3t9d8/W8OGdoX2Gun/DwiI/TC+79W88/ZT3W
voqHyMc3pnqQqEeZ+wf7Trmf3/M2Y16DPfU884QnIl7dlI+NeHcul56bOODJ
yp+2/c1LNY/YP3KOai7XcY5/7tcXy3r0ifI3kcep82nvLfnFr3H/B8XH+o7E
ITtrfeM5T/Etvc7zRI8P9Qbyeefr3I36Q3LC79LDsT+B58rfZH3XjsIf8NLf
Fr9bD7wmHhjxNVxL/vjxxDf9vFqLUzZqPSP+Gfcj3x3/7a7fs/5ie/1Ov+kr
fvs/Oyx+eff9i23bAk+U/O6ovKL97sBVL54e6tAOD/XmpwrnkNfxfB1+0B96
D99lHcj2lK+5PsqPOWdCv/B7uqzysFln96Gy+/TUvOi/OC7O867tKT9qPdbv
nBvcxj+je/L9yBa7OcbxGSf3PhfyYi3++GTRK89Pn9hy7irv3zfowTur4k1y
yT+SX35O3ITf+MbfoXejz6Wys/Iy6lnEafw1e80v5vgrWU/zwxO13iYHFwv3
Jh33lzxk/Xvvl5B1/ucH+TpZeFQ8jS70nT6MdZDwnPmnHp2q+M8nusFb5qNe
gPwnHj9Wfp1fst8f59Hm/HV/nB+ZyyX/gb/8AP64Dx/znFOP/+BF84KjyR17
Hji66ns/MPTXOFjj4HPisX1ZN/CTIe95Z63qmukj+zv6BXYj8cSF4RxtP/+X
dnC5vtt/wu8xTsNXcsBOjjiUnMLvY56YX2X/8Z/flQf1PPfFPu3a+cHfHix8
AKdbb1vP8ZILdjDsCfv23NmKz9gp9i7jg0O1rsBn83WN8RH7MupX1FmunS76
qydj/29N+49wFv6m3z6YfmM+b3Tx6XnZd2R3rUNeTD4m897HSs/GfJDxgg/f
fbv6RrAL9k/Hfcn0nx1foYvnGU/8EHnhuT8c469RzrNu8fCA39+peljyzR67
L+uVPzTUdfTzCOwNPpBLn+QNThzzp+O+Pbud59KXav+37QeuZT3/fPyMg/o+
SJ67Ut+xPPiTG2UP+RfjwpXyibEvtfyxspv2KUd6W3fUYz68WnEQPkYe66Uz
W+JB/r6Nv7PyvfZJxnOZmU+7UPt41i2/K67J/lD3bekzg25RlzjHefxv9HX4
9fWia57r6HEO+rFPY/ztb+w7w4/YH7017UuMuJldYj/GfY1bU32ecT1P/GT/
YsS/Y96YXEb+cM4nn1l3bz0fKvqLg9PO9fN3Y9wR9XLfWS87Q77QUf0fPo3+
mB3N/hy9Pn3cJ8NnOMA+KjlPOhyt+hi4zLpj/2lOz8DD8sYvni57TJ88V74A
/W5NdTzycvK99jHIpXy08flh/JWHC1z3o301f/6ZHsFvi+l97eKWcz/w1ri/
yN+Mfd3grTGeDPs6txv4xw7xg7kvt1rzY5f5mcChc3sx2p3FQ7/8TOEw8wp/
4ftzS0WP3PftdYPwYO5Dzeq8oLxAswNX2/W/8dlaF78Ar8T+tT4vf7pefpKe
k0P7jPIAoQ+PdrwT/XPmdin7oDk/3c+Xy6OPeSz1GfCi+JxfFufFudCvnqh5
k9vMdzxY86MP9Cb7tJ0d8q/9/LDx0IUejHVQIU+vPZY4/6WjNU/1Ec75ytdn
v6OeHyGv9HT0G/Iz5vfCtG/lOZm/PFb54vaUnvc1X8+JvIhzIvvHvnwXyp6N
+eOME9jfHs95Dn8Oh1iv+UWd7Z7d5Xc8L/oo/PBo3Uee4FF0YL/lNYwT9RbO
F93pcZnP9P89v4AO7FecE7l7vPwNXMGO81tjPwjymXat18uiA5xs/fQi+uu8
9WDJaxtnpeQo68RPF66g7+gCV9Efz8efyGdsOreLvvyC+/hH9p+dJw9jfBp9
qX66Mfi5fg58zF/EecYv9Hpy+Awf6DW5Ea/fmvZn5Kfogf0j+X50tE7zifhb
PaW+csdns8Al1d/wcJ3nH+uHyDP/SW/YW/LHb8N5o//D36wLP1vybP2Rnyg8
trPsrXVmPefHSm7ZAXHp2M8h5HM+n9GeRr3KS2fK3/IL6AdnZ1+Dv6n9CPtB
MZ/aj9lb/8/8e/8jF/Klt6d6PvaG/kb+dVMdEFyYdSDvqXlG3+iXu52lB/xt
nit4T/Gd/DknlXmNfp4PvyIPoq/w7YdrnunnjhVONx/+AT5JnLhc/My6oX5+
NPZJ53I/nsMUt8OR47ls60MX+i0v1PajNio/af7k2Hl6+hz5k7m9yD5kF1K/
53ES3GSd8Ip1tPhyln1q9Aef8w8fIk54bqnyvPyjeIA9J+fsMHqzn/Cm55F3
cS+9Tb95pvYhzJ9d4W/oQdSXVP2a+vZLQ153eYuftM/Q7PhaxV/kJ+Nm+7fr
hR/dd2vKsztvZp+GfWIv6UecQ//RkS15vGZXLtd48DU5zH3Fp6puCT6id+xX
0vlI4d3YN3uu91WEt9kT9MBPegO/LC7X5+ftGxW3j/vs8Efs67yvn4vkt9Xf
87P0Ct3JJb8edW51/QP1nNTbSzWO+dDLONevj9vcvr77eaWVGh9eac85W/mV
Rp9rdV6bP211wFe37Jujq/yY9cT5L3mWV5cK18k74lvGY8sVD8Nl6GGe4kfj
kXt2Ic7vzPkpPsm+OifKDkafOHny55ZqXzv6Rbx6qMZ/bao3Cv8xxwfkmB1I
vN7r3o3HzoS+3D1eeMvv1i0+pZ/Zr7HHvfK/nhf45gu9DpR+5jmFw3n+svY/
T1VejR03z9xnP1l4MOvujpU9gVfZOXYZPdnhwMtzHO65cA55RHf6yA+ZFz3P
POuOGscnXJP94g5vmU/WnX60/OPoR4LPlRdZHnDXh8uP8HPscfY9+Hjibn67
9iN3VH69rWet6C3uJafsJNxJDxfP+eWN0hN0tF+Ydcc7Sj/y/OnOsg8ZLz5Q
+M467GdYP3xmXn437zzn0+tPyDm9s2523zjRf2WOb+Wv2HN4Fl/xY8yfWWeu
9/4al5zgW/QFqfj1cNHJuHEeUZw5p4f5Zz/1i0VXegB3oIt5yZPbXxvf0+I6
uI2+szfmxT7Rb3hixDv8gnHMR16LfJIn63Q/emW/rPtrf5L+0Fd2NuRMH4+1
PWXn2KuxDggf4Ur0YZfga/8nH5G/e+vBki98iv2lOn90ocZ1P38kPmBn+TfX
Z/w+9gdZKjlmb9DFOdPoM/XFy4nnHj1Sdizq/1/s5/rsC9N3dCGf5Ms64Rj4
Lfu59Xoseki+4BR2fVKH7E/p/QvPXBnyE7tKr9DLfMWH5BVeMx/0zr7RZ6tu
Ap5KuTmc5wj5se/vyP7/Xz2SfmBXPx8qPz3m58lP5GM2vddFnGNe5C/qQ398
pfRffAXnu54fxmf0y34vaxWXoQd7TE4avt4ofw83f2PaxxVPyWsYT1wJL5uv
9eM7+5zzmOo4Xlmv+o6sd+1+mj2gF/AN+c9zt2frk98Sn/gc++6zZ5nXeKri
a/ohPyAfZv8E3eh3+z703dp/rvSE/Mh/wM/RV+Ovzw75yT15LvmL/T1g474p
OZff50/JR+bHl7fk8SKPfHel7A//EP2F5usS37AzmUc5WvJIX7NOr/tb/gp/
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
XgTfyIPxAl9674g4qPqyPDngyn4uWnxo35Ldsl9tPupmPCfzCXsqTo1zzi8f
q8+xfhTegWvhCPZd/jX6WlT/lKs1L/Y/4rnq23mk8CW/B8+x5+wrXMc/8NvW
Hec5NvUVdX3GFd3PWp88hevgFfxgL/U9ZNfgdPxBX34bzmNnPz/t08MNY98J
8VQb91r1yR7fq0M++H96gP5NXz5Vff/gwjy32eM29Ih4862ThXva86/Xvss3
pjoX19PHRu/ep5yfZMfJrfnAlfAaHJb5vtNZP3tnY8v73+GuiE/eOlm4V74c
fss4tPfTZscy79LPC2e/3n5+Os/rrZbd4Q/UX8Bd7bPvr4uXI7+3qf9UxOU/
OVh5E3EA+YSbMu6+UPNiZ9gveT773OIwdgHuDn0re3sh4zn9Le/0+kz6Bg+8
e3xxrvhBD9v81ktvIu/wrf11/cjv2Af90b7Ce+KYsa4++hTeOTbEsSulZ+Q0
+0g+UfaKfRSf4zN+Rf5Ffu3ZlcEe9vexsWPhl+d+lRzDP+yUcfnZ4OvLvT7e
/PgJdlWc1uLay0P+rOcR3tWPvLVU6+G3R3+f70l6vPy8uM065I/wNfO814qv
8Frm826vZp3h7dWoLz/a6Q2PZR77seG8fX/f7hiHyrtkHnHvlroE8kp/2RH0
YR+jLlU98hs9X4uO+AyfJm54ouwCuQ+/stbrMNyXfcfvK/3ir+EYcm/fJOsR
l4qP1oF+9uvof+wvVF/q3gfbdSP+o0/m2fik73zvdznul+R+zoeH/f79xS/+
KepWyp8+VeOzy/keoge29AnAL88hd56vTmWsq0Nv/nTx2J9upP59+6nSf/eN
5+7opevk4dCRv8g+gecLj2Zc1c+rkePs57a78DE/R64Xv//sRtkH+QZ+KezV
Fy8PuLi/h0peYnxfhvXCQfRLHMOuyHOTvzhv8Wqvl2VvGz66XvmANs61wpn8
U+SHH36mzg3SL/aLvYQT5Qv5Mf5p7JvR9s9v5Hk+fVxehM9vVP8jeAdu5Ofx
//ZU5xD5vO9d3NInWvw2+kn6EXZGf7jf63Vy9N/+F3sh/wXHjvln+V72hl8V
X5gvurPLcDW8L0+LrnA93CYv3PDGxtBH5Vq7/r9/uvAlvxf1lA9dK3o2+nd8
Dy83+3O5+l6q71AfLg4yz8jX6l/5vR7v2deM+O2tHrebL7sY8Qw+f+5U2dVb
0zmZlue8Wva6fX96qiO5WnGf/eTYL/jKpZJz9mS0o3AdvMqPooP5qAuIOPCt
/r5VekyPrIf++z/cKH9Lz/BpzBOLh7I+ZCnPj37lUtGr2eW1xHd3jpVdwj/r
wJeM484OcVffvwi78XrPf/oM/dr0vhH0Yn/h86jrf6O/75h9pefsDHl0HXyB
HvJqkRd+7mTxwboyXj9W80w/cLjkPuKXbz9V9BSn2U+LeoJNdXL2Z+kD/M7O
sLtRP1LvXTpfehb5kHmcwt6zX+P5FPLGT4u3Fuv+znrJPVzGL/N/+Jb7u6fq
uji/+eLpigfG/n/wq/ECj39pV/LL+wf+pONK48pTxfkb/qbOmxzKvNm3u5/m
39ltchd1TPoCfL/XlUQ8Vuebe103uQs7fLrrTcZXvc8dOSMP5FmeFo7wvMRV
RwbcdH/h46h/2n+q5oUO7qOP/GbUz22qk/BcfhQOG3Gt+/CRvRrrl/P8696s
E6j+8Ooittdn5s07HjOv7O/xYMWVI140b/gCHiPXeb5jpehGnsf9l1Ef4NDA
/5v6wIsX5Vlif8w+yku9vlFcQX/xjR0Mfr3R61nHvsn4LE8Cd7BX6pujDu37
HXdlPuhk2a3Iu1S+8HKt131ZZ7h7oMupLfuZ5DTPySyV/IsL2B/5PfSIOHzT
vmn2/Thc8SG74Ln8eezTVh3aI1vyLOwpf8B/wb+Rf/vcqcor+j9cKr6HGxaf
H7mUdTNfnFW9geeP9Z3wPb8U+yVvXi//T0752TafK/kenJePVTzU5HGt7HnU
M2x6v5i6FnlV47FLsc+waZ81cK/3sr1vlvv7z1+vemL+T9/4W1N9L7vHv8iH
kj90i/MDn13bgnfkl40Teved3gcAnsQXuPGFqLPpdc7jPnvE9dU3Zr1wsnHb
9yuZ73r5VNHDffwjvRrrooxLDvh5coev7EfThyt1XiDrRaZ89oHpvZv/+Jmq
u0dXehX56/fNSo6y/8W5si/2Q8zTdeIIOIr+koesTzxbfhldxnyF30c7iq5j
3tzz2An40DzT754s+0gO5WPgxOg7f+jSUCfZ31NLz9gZ/ot9YJfIVeQJf3Cp
6GK+0c//5VM1Xryftfr29/2qqMN+vdcJ4As8nfi61/vnezyP1rjkmn+iz9nH
rdcjy89lPx/nM/r+QdQrVV+qE8WH8dy5vE3i7Qv1mX6493vIcfZlPmnuNxIX
7Ml6mkOXKu4VX6Zf2lV4C5/Mh31CxzgPow/Yb/X3cMT7CTa9ny70zTmhTXXY
mSc+WvqLr+Yz4p9xP2H8FBeyP/JD6Gnc3Oc9U/gRPc1zPIeEr/k+h54HF1/I
y6IPfZWHi/zl7V6Po+4h+mV+60OFC7NfRD8XJF4xLtw8niuAp+Sbo77UOcxN
5wwavfp7S42D/+xb1m3sLL2Q94IL8jxCP08c9fLymJvqzuFk9SJRX7QpPoSf
zHfsn+X7WG+Cjuz42M8l9rnq/NauzM/M5xPnJpwbkD+ZP9d62OPE7R+u9Y3n
Q+gJO0Qf4R44NPjknEv1Nzpc9LLe2D+qPkndvrOL5DvjgtXhPM7jFWfL56Y8
9f2DjLN7HQr6R73/XA7xNeV7V+kJPrA70U/Fvlj1g5vy3keu1b67T/zI85Er
Q75p2Iff1vuuZN3JnsJhcGz6i9OF43O/dLXqgawv82Wnym4kXZcT/9X7R/r7
SPm38GM/vpjrfP7ylr5y8rH8Wcb7A+5636zqkuF2/hbOgc/5LXIEt5FHfijq
uqp+2vtw+rld+Czqreu92ucqn2/9rvd71AucHt7zvK2f+zMueokfs69K37dn
N9DHfHwPnFP9Ps9VvCVPaL7y2U1/P1lxBLzouzgPfeWJyEX7/WLZn7Fv4LvL
37miH/shrpIHGPviweviAHxs+/L9/UrGjTjubt/fNm/2PM9f9b67/BO5MX72
7TuQdnRud63fuqMufWePg8wv+9isVDzITpJL8x/P1bMDcBj+2m+xX9fiqF4v
pV5LXiL2B/bsrvmKv+BY45KLjNuezP48z/Y8DX/Er419fsg3+89vsPP5PrQz
ZW/IjU9yN56fzf6svd+573Gu/9VDZZ/gePzwfHIU+G8+b/Y96sznOMT17Bgc
yJ5Gv5Lf7ect+Vv+il2BM+P9V/Uek16HgZ/uNz768JfWmfsjq2X38Snr/M9V
nOX6rMM6UHIb78VRx/DNnteHg/kleBweJn/Rj3DTexcjL6ou/3zvBxf9nl7t
77ujv8YZ8/WJ43pdC7sx+vu/DVfz/9E35c7NwnWZZ7kxvEdX37kPZL/zTXkE
dpI9bfr9dOmx/b3cP1jKPhCb+m9GPq7eU7C38Fee2+39PeQlXB/ved303ll0
gnuskx+MetHXHiu7z76ab8SV1Qd9veQ59g1qffdl/4K/7vtY6gWCvl84XHTP
/Y99w7nwJyrejnqlLw11vrf7+y7tD6BXxuNLQ9+UlZKDeF/K2unBnz2eccim
Omv5Pvzn99g19iXOc+3s7wsQj4v75KmafvZ+sfyy+9v36zV+7F9t2qeybnJA
X+Tz0SfixkNXa58MTvF89hCujnELj/Z+BXAlubI+9BVHJF7s+83wqnHIrTgu
zmPYZ6pzdSfqOuPCaXC9/Ew7//nJwn3x3LvXat92zHewv+wtuuOr+RrX8+I8
uH6Ytc8mfrxQ82DPcn/gycTVr/fzfvHe0Dr/2Pu+yH8GfnnubOmv+avj5ofl
b+g7P8xeht96aZKXX75Z7zdKnNrrs8iL+fidn2JvyXPU1zjX/eaIKz9V76dv
//9U0UM+Gf2NE3pxp/d/pu9jXVis826vo4EfxCfy5lGn+Ju9/hX+8h1u9X08
Z511keqnrlScwQ74/O5Ux8RvRj+bOV/FvYnXL2/Jv5ML+pP7H13eY1+ozuct
ld0zj7DLVVfV+y1Efu/lXhdvXZHn9l6qu+s1D/JuPPI07meJG/gF9sN6+Rfx
XO779/cJ8Us5zmywAytZp+p9xa89VuuU5xJHsJf4DefBhfweOwRvwYv8nHyy
9UX/nd+/VPq6GO++qR/rZ2+WP0ic/VD565GvPkc/hh4RX3y/n/OH57Nv3M4a
Z+wbOPbZw6es/961ZR8Sv80/84w7hvrzM1nnv6ku3H3Zb+3jQ3+Pd1bJq/1E
/Ierox5hTt+Q709vK77z11kndarozR8Hnaof44mhX+vjtT78z/qg+wt/sjtR
R/idfs5S3Jd9nJx3v5x10H/S+yVkf5quB9E3+PXrxZfE0x/c0g+Gn7de+pbx
ZX9PgDyueTT+6Qe+u9bHfpAvuDPPPe8qOfDdvBNfdvworwY38IPxfoc3Oi4n
d+SFnJE7/yff9IRdhZdy3/N0xS3wWM7rEznvTX1Sx/iOXI+4MuvfTmd/pq+y
Q92u5X5hf0+VeOnd7d47q56T9QvwhPi399PPPHbPx9v3Ea9E39w617Sz5J58
oJvryXH0u5zHZ/Li/Bb8SS7kZeF88kuO6KX9B/JGf0Y+h3/cVE8JLybO6edv
Y//iuV6nig7Nnm2UfSX/0bdl0z5+y/Ovl7zxA/w//TJ/16ffuz/70txdqefB
z3DCmOdPXLlReI/coMd3p/oPfpA/T7t7rnBO1Ec+PNuyLjgeDoh6yP3nsq9L
xYe93y/8Z9zbU302/TX/W1PdcPz/I1eLTovPr6+XHsHL4gv66jPPOR0sOnou
eYBzX5jqYvDL+pud7v0oXpj2e+HCyJMX3u37lLE/sanviPmPeC/PB6/V/MRL
+NvmeSX7Jb5yoeINfLCOzGPKcxwuPzH2LxFfjP1P0Jeci+fgHPSiX/TAetkH
cZh1o+M4Dzgr9y9PlB2wD4GOPnN/bLno7v/w2ljfOPY5ZM9dF/7+m0tFhzjH
+avLpW9h706P7zNSN7tUdijeT3a3n99tdvJQ2R/+hn1Ez9zn6vkcfgRuhNfg
bP4Wn+ihuJ3dQj84A9/hd3xzHf8/9h3L772fm9/jHM+ui+WX+Ef5DXmN7I9z
aMs5MH7desc6TvPOeuGzgz88nn0Djx4vukVeaOdyyXmc85g/n9+PfNgmXIDP
/C/65bmhHh/xn3CUeVk3eqOz++FR90UcOMdB8Ac6mgccbpyxbsV80Dfy9vW+
z72Fy0Kuv93f/zXmFdAHzkEP64Sn+R38GM/LjX3wkt+7alx4A86GS60n+/st
ZTzyrf3DucaOz+I5m/onswfyK+qfrc/8x/wj3IZv6JR07H1gEm/38xVRx+Oc
5IvqfXp9ifmTT/47z++dHOpnep9c8hF0fXa91ht5k7d6fyP2kx3PPhJnCyeM
fQn4N34PHz1/fI+Q5+X5iW6/4InsY9DPNcFR5pN9A3eVv7AfhI7sCv8nj9Vw
0KWiHzyX8zhR93l+9Dn9uamP4td6PpafbnFuP5+Y/D9fn00PP5P6Vn10ZmUv
rC/753yq8EzU02zCA3AFeuAbnCtPyh6wD+xG+omz+R6dR4/U75EP/KW1Aadf
Kf8afUeenxV9o27+7f4865dnJj/iLPmOwM0/XC1/hs+ew7+TZ/OJesEfDnUr
L/e+l+TJfcH3V9brO3wq/wLPjfUKxrW+lne5Wvjz/wPfzEsw
         "], "Hours"^(-1) 
         "Kilometers", {{1}}]]}, CompressedData["
1:eJxdvU+u7UrzXPcz4JaH4J5nwPqbmUMQoJbgEaghwC03pPlDGftQlyv0CRJe
6L5X95zY3FxFcrHq//mv//9/+W//x3/8x3/89/+z/5///P/99//xv6X/9/9G
+k//V//DGufcWPd5/sXogJj7bsRaM794n1ETcTznMuoPvzgjMdRdd3OofQaH
Ois41J2bQ8V4OFTU5VCZi0NV/58vxu9n/OLYE0PFnImhov8vhor9DA619e9+
sf8/ONS9D4eKHRwqF2uPX1X/Yv93rD2fYu05grXnvKw912HtuRdrzzNZe97B
2vMWa8/fJ/bFDNaedVh7PZu115isveZg7bUe1l4rWXvtYO3997D2+h04X4zF
2isna696WHtVofb+p0TtfThf1H6feVD7fdZC7ffZ83Co3/GLWMmhbm4OFTE4
VJ7gULVRe3+rFmrvD2yg9tvjoPaOidrv+H2Nvrjv5FBnJ4e663ComIND5ZMc
KmtzqErUfudzUfud47D2+fs2f3FN1j73YO1zF2uffQhzqN/f88U4rH3mZu2z
Fmtfz2Dt63dSQSzWvmaw9v72svY+BFn7+v26X/z7jf/FeFj7imLt/VVg7et3
bvsX93NY+x6bte85Wfteg7X/jirGZO27T34c6h7WvmOz9v07xX6xBms/z8Pa
z1Os/Yxg7ef34X9xHdZ+9mLt50zW3j8Saz+/M/0XI1l7n91Ye59WWHt/n1n7
/R2DX5yDtfehw9r7M2PtXRZr/52dES+Rehu/rP0mkXpvEakdidQbD5HaVCRS
+4tBpPbfQ6Te2ETqjUOkdiRSbx/6rL0/P9YeSaQ2jYnUHoZI7d+PSL19tmbt
OYnU/luJ1D6HEqk3D5F68xKp9/eRICaR2pFIvVlEardOpN4aROqtSaTenhOx
9tpEakci9dYhUrtGIrXpS6TeRghr7w8ftcfzEKnxDCK1I5EazyRS41lEav8M
RGpPkYjUeC6R2gcdkdqBSP07tSEWkdrzNiI1xiBSm4lEaoxFpHYkUnviRqSG
pnIc6hKpMYJIjZFEaowiUvXLofaORGpDkUjtCSORGnMRqTE3kdrfSCI15iVS
OxKp0fNl1j6TSI1ZRGr8fh/EQaT2KYZI7Uik9omBSO3pFJEa6xCpfWYjUmMF
kRoridRYRaR2JFJ7Nk2kxh5Eqs5PrH0vIrU/TiK14USkdiRSY18itSfiRGrP
4onU2EWkxnmI1D5NEqm/79TDSKRGX8Sw9rOJ1DiHSO1vPpHaFxNEak9riNSO
RGqfrYnU/kciNXqex9p7vsXa+69l7f1fsva7idRoiLL2hhlrb2yw9j5fs/Zb
RGr0GYq196mBtfdvz9r7y8DafwFxE6nRvbP2uERqRBCpHYnUiCRS+w+J1P5C
EqmRg0jt2QaR2ld4RGpHIrX/FiJVCGXteYnU/qGI1MgkUiOLSI16iNSORGrU
IFL7lydS+1ROpDbJidS/eSriJVI7EqlRQaRGJZEaVURq/2dEaj6DSO0ZBJHa
kUjNv//0i5tI7U+MSNUkYHGoIFL7fEuk9mU3kdqRSM3xEKk9ryFS8+83+OIi
UnNsIjX7Cxoc6hCp+YMTYhCpOZJI7ekjkdrTKyI1/4pEJFL7+CVScy4itb/4
RGrOQ6TmvERqziBS+3glUnX4sva/z/NfXA+R2l8jIrW/NURqrkWk5tpEakci
NdchUnNdIrUnm0Rq/h1WXywitf+MSO1IpPaJj0jNPYnUntURqX2NSqTmPkRq
z3mJ1Pw7uhGJ1P74iNTskzdrbwyw9jOI1D6MiNQ8i0jtSKQ2MonU/PuSffES
qakbZxwqidQ8RaTm78zOSKSm7kpgqDuJ1L4CIFLz77v+xUOkpi75ONQlUnuy
RaT2pSORmj2PZ+2aT2Oo/tqw9v5lWfvfKeeLi0hNTVY41CFS+9MlUjOCSG10
EakpEnCoIlL7LyFS/246IE4iNfU1w1B9fLP2PrBYex4iNbtK1q7fgUMlkdrn
BSI1/07AXxxEakciVVd0rL3Poay9NpGadYjUPh0RqX05SKRmJZGafxz4YhGp
XTqRWj3NQe39CxGp9TstIm4itSORWs8hUvsilUitPxx9MYnUeopIrfEQqR2J
1K6ZSO3vBZHaX1citfqYWxzqEKn1R8UvBpFamstwqCRS9fGi9v7VidSag0it
Pnux9rmI1I5E6l8XiIdI7RM9kVo992TtM4nUviYnUjsSqdUnUdb+u8hFnERq
/c0RvriJ1FqHSNWvw9r7BMTaVxCptZJI7SkCkdoXPERq7UGk1t9UBZFI7Rki
kdp/RKT2d45Ird85BTGI1P6ZiNSORGrtIlLrb8b0xUGkNqqI1L5UJlL7q0+k
1jlEakcitc4lUusEkarbOaz9b+L2L96HSO2jmUjtSKTqDMTa7yJS+zqESK0G
LGu/l0itG0Tq3x1kRiK1p+1EavXlEWuPQaT2v0qkViwitc+DRGpHIrX6mpa1
/01jvxhEavX1EmvvEx9r7z9h7fkQqZWDSK2em7L2ngWy9p5+sfa/2fQXL5Ha
BCVSOxKpjQUitX5fyC/2UcXa+zTK2vt0xtr7xMHa/yb1X9xEal9LEanVBwdr
7w+JtVcSqdU/B2vv/321668EUqcuLL/aO04gVXfNgNSOG0jteIDUKUgODnWB
1I4BpHZMILVjAanzGQ+QOv/AhjiBVEUgteMCUjtuILXjAVJ1pxpI7RhAascE
UhWB1I4FpPZV2QOkdhyHtfdZg7X3oc/a5x6sfZ6Htc+TrH3eYO0zLmv/u+D7
Yi3Wvp7J2td4WPsfg744k7X3R8Lae2LO2tdZrH3dydr/rjsRi7WvTNa+Klj7
fg5r32Oz9j0Xa99rsPb+V1l7I4S1/13+fvFe1r5js/adi7Xvmqz9PA9rP0+x
9jOStZ95WftZh7X/XYV/8UzWfu5g7ecWaz+RrP1ksPZTh7XfZ7P2OxZrv3Ow
9r+bAYjF2u8O1n7PZe33btb+56d8MSdrv/Ww9lvF2uNJ1v53T+KL87D2WJu1
x56sPc5g7X+aDGKy9ohg7ZGHtUdt1v53a+SLY7D2nA9rz1msPVew9j9b54vn
sPa8i7VnTNae+bD2vzs0X6xk7fVc1l7jsPaam7X/SUNf3IO113lYe51k7UU9
af5dpSBST+pIPWmOh3pSR+pJikBqR+pJHakndaSe1JF6UkfqSR2pJykSqZoC
Lg5FPWmOQT2pI/Uk3bwjUsegntSRepIikToG9aSO1JM6Uk/qSD2pI/WkqSZQ
+5jUkzpST+pIPakj9aSO1JM6Uk/qSD1JkUgdk3qSnnARqc15InUs6klTJy/W
vqgndaSepEik9mUnkaqrYda+qCd1pJ7UkXpSR+pJikTqn9uBSD2pI/WkjtST
pCsQqWNTT1IkUnvWQ6SOTT2pI/WkjtSTeuJCPakj9aSp45O1H+pJsoKI1HGo
J3WknqQZEpEqV4+1H+pJikSqtDDWfqknTYlQrP1ST5p6KsnaL/UkRSJVlglr
v9STprwK1n6pJ02ZBKw9qCfNEdSTFIlUPS1m7UE9aeqRD2sP6kkCN5GqJ3Os
PagnTd2wYe1BPWnqcQtrT+pJUw8YWHtST5p/t5wYiVTdRGbtST1p6rYpa0/q
SVM3Cll7UU9SJFJ1T4q1F/WkqbswrL2oJ01dz7P2op6kSKTqEpe1F/WkqYs6
1K6rKdQ+H+pJU9cPqF0Td9SuGXNwKOpJcz7Uk6YmZ5dDUU/SHTYiVfOAw6Go
J02RD7ULOahd53rUrpMsap+DetLUaeXhUNSTpr5Ii0NRT5pzUE+a+sxQu7pD
7fopWfuknqRIpM5JPUlPT4jUOakndaSeNP++CYjUkxSJ1DmpJ/VfSz2pI/Wk
jtSTOlJP6kg9SZFInYt6UkfqSfp1iVT9Nax9UU/SGYVI7RkhkdqRSJ2bepKu
fonUuakndaSepNaJ1LmpJykSqXNTT5pSTFj7oZ7UkXpSR+pJ/c/UkxSJ1P7w
idR5qCdpHCJ1HupJHakndaSe1McR9SRFInVe6kmSk4jUPgaJ1D61Eam67c3a
L/UkRSK1L0qJ1HmpJ3WknjT/nh8gUk/SV4FI7UikzqCe1JF6UkfqSR2pJ3Wk
ntSRelJH6kmKRGr/RESqbs6y9qSe1JF6kp6jE6kzqScpEqkzqSd1pJ6kMw6R
2icGInUW9aSO1JM6TiJVd75Ye1FP6kg9qSP1pI7Uk3RCIlJnUU9SJFL74yRS
10M9qSP1pI7UkzpST/rdvSkORT2pI/UknSaJ1PVQT5p6MjM4FPWkPqdST+pI
PUmRSO1jjEj9m9YgUk/S2ZpI/bnzHIp60lyDetL8PePlUNST5u/WEYaa1JPm
mtST5u9X3IxEqpjB2if1JPn6ROqa1JM6Uk/SvUsitS+tiNS1qCd1pJ4kdhGp
a1FP6kg9qSP1pN9jVta+qCd1pJ7UkXpSR+pJDUnqSUIokbo29SRFInVt6kkd
qSd1pJ7UkXrS1G/L2jf1JKGbSO1IpPY8lUjVw0PWfqgndaSe1JF6UkfqSYpE
6t/DYETqSZpQEKnrUE/qbzr1pI7UkxSJ1HWpJ3WkntSRelJH6kkdqSdpXkOk
6oTD2i/1pI7Uk3oSRD1JjhSR2qdUInUF9STNF4nUFdSTNL0iUvvLS6SuoJ7U
kXrS1GMM1p7UkxSJ1JXUkzpST+pIPUmzPCK1YUykrqSe1JF6kiKRupJ6Ukfq
SVP3iFl7UU/S7JJIXUU9SZFI1fNt1l7Uk3SmI1JXUU/qSD2pI/WkvzsDDyOR
uh/qSR2pJ3WkntSRelJH6kkdqScpEqn7oZ7UkXpSR+pJmnoTqboAQO17UE9S
JFL3oJ7UkXpSR+pJuutLpO5BPUlTfiJ1D+pJikTqntSTOlJPmppdsfZJPakj
9aSO1JMUidQ9qSfpQoRI3ZN6UkfqSX2ZQj2pI/UkRSK1P2wiVehi7Yt6kl4b
IFL3op7UkXqSbqESqXtRT+pIPamvpagndaSe1JF60vwzexCpJykSqXtTT+pI
Pakj9STpGUSqRmLth3qSIpG6D/WkjtSTdHVIpEqbYO2HelJH6kkyXInUjkTq
PtSTOlJP0sU/kbov9SRdpBKp+1JPUiRS96WeNPVMmrVf6kkdqSd1pJ7UkXqS
IpHacxEidQf1pI7UkzpST+pIPakj9aSO1JMUidQd1JM6Uk/SJTuR2j8gkSpL
iLUn9SRFIlVHGWtP6kkdqSfNvxuOiNSTdOeASO1IpO6kntTXhtSTOlJPmjrY
WXtRT+pIPakj9SRFIrWJSaTqbg5rL+pJepOWSD0P9aSO1JMUidTzUE/qSD2p
I/UknXCJ1PNQT+pIPaljEqm6VL4cinrSPIN6UkfqSbqjSKSeQT2pI/UkRSL1
DOpJHakndaSe1JF6UkfqSVO1ofYzqSfpHTAi9UzqSR2pJ+l5GJF6JvWkDtST
pk6ErH1ST9J/SaT+nQe/uKgn6eYWkXoW9aSO1JMUidSzqCdNnY9Z+6Ke1JF6
UkfqSbqpRqR2JFJ1kLH2bXrS2aYnnW16Uh+uROrZpiedbXrS2aYnnW160tmm
J51telJfPBGp55iepM+atR/Tk/r0RKSeY3rSOaYn9ZUkkXqO6UnnmJ7UkUg9
x/Sk/kuI1IYkkXqu6UmyN1j7NT3pXNOTOhKpDTYiVa4la7+mJ51repJYzdrD
9KSOROrf0yNE05NOmJ50wvSkhiCResL0pI5EqqYMrD1MT+oLPCL1pOlJJ01P
Oml6kgjC2tP0pJOmJ500PalnLkRqfwZEah8LROop05M6EqmnTE/qszGR2tf3
ROop05N035O1l+lJHYnUU6YnnTI96ZTpSf3vEan97SVS72N60n1MT+pIpPY8
jki9j+lJuqlUHMr0pD4PEKn3MT2pI5EqHRi132F6UldDpGo6idr7vE+k9heU
SP2b1DISqXeYnnSH6Ul3mJ50p+lJd5qepFkta5+mJ91petKdpifdaXrSnaYn
acbA2qfpSXeannSn6Uk9uSZS7zI96S7Tk+4yPeku05PuMj2pI5HaPzGRepfp
STods/ZlelL/CZHaZ00i9W7Tk+42Pelu05PuNj3pbtOT7jY96W7TkzoSqT0s
kapjnbUf05Ma5ERqX5YQqfeYniRjnbUf05PuMT1JVzys/Zie1AwhUv9UgC9e
05M6Eqn3mp7UZ0ki9V7Tk5oRRKouvFj7NT2pI5F6r+lJ95qe1P8ukarnrKw9
TE+6YXpSH3NEakci9YbpSc1XIvWG6Uk3TE/qH5lIvWF6Ukci9abpSXqIxdrT
9KSbpic12InUm6YndSRS++RFpHaRRGp/04nUm6Yn3TI9qa+GidRbpifpCQFr
L9OTbpme1B8gkdpfEyJVL1Ww9jI9qSORqoty1N6TeCI1HtOT/u5QIJqe1McR
kdqRSI3H9KR4TE+Kx/Qk3RvYHMr0pD6JEKkxTE/qSKT250Wk6vJvcSjTk2KY
nhTD9KQYpifFMD0phulJMUxPiml6UkzTk2KanhTT9KR4b/1+kUiNaXpSTNOT
YpqeFNP0pJimJ/WXm0jtSKTGMj0plulJsUxP6u82kRrL9CSRi7Uv05P6qoxI
7XMMkRrL9CS998Pat+lJsU1P0n0j1r5NT2oKEKl/xSGantSnOiK157hEamzT
k2KbntTX80Sqbl+x9mN6Ul8QEKlxTE+KY3pSRyJV0gxrP6YnxTE9KY7pSf13
Eql9dUSk9nUJkRrX9KS4pif1iZ9IjWt6UlzTk+KanqQvL2u/pif170OkRpie
FGF6Uk89idTmD5Ha19VEakciNcL0pP4iEKkRpidFmJ6kx72sPU1PijQ9qSOR
2t8EIlWvprH2ND2pL1qIVN3aZO1pelJHIvXvdjOi6UlNYyI1yvSk/v2I1CjT
kzoSqbrDytrL9KSeERKpUaYn9eUukdqTAiJVPz9q70ik5mN6Uj6mJ+VjelI+
pif1pTORmo/pSR2J1HxMT+p/JlL7WoJIzWF6km6UoHbdb0btHYnUHKYn5TA9
KYfpSTlMT8phelIO05NymJ6Uw/SknKYn5TQ9KafpSTlNT8ppelJO05Nymp6U
0/SknKYn5TQ9SXffWfsyPSmX6Ul/FGQkUnvCSKTmMj0pl+lJuUxPymV6kh4C
sPZlelIu05Nym56U2/SknrcSqTrFsPZtelJu05Nym57UF4dEam7Tk/rrSaTm
Nj0pj+lJPX0mUjsSqXlMT8pjepI+P9Z+TE/KY3pSHtOT8pielMf0pDymJ+U1
PSmv6Ul5TU/Ka3pSXtOT8pqelNf0pLymJ+U1PSmv6Ul5TU/KMD0pw/SkDNOT
MkxPyjA9KcP0pAzTkzJMT8owPSnD9KQM05MyTE/KND0p0/SkTNOTMk1PyjQ9
KdP0pEzTkzJNT8o0PSnT9KRM05MyTU/KMj0py/SkLNOTskxPyjI9Kcv0pCzT
k7JMT8oyPSnL9KQs05PqMT2pHtOT6jE9qR7Tk+oxPake05PqMT2pHtOT6jE9
qR7Tk+oxPake05NqmJ5Uw/SkGqYn1TA9qYbpSTVMT6phelIN05NqmJ5Uw/Sk
GqYn1TQ9qabpSTVNT6ppelJN05Nqmp5U0/SkmqYn1TQ9qabpSTVNT6ppelIt
05NqmZ5Uy/SkWqYn1TI9qZbpSbVMT6plelIt05NqmZ5Uy/Sk+rtIRSRSa5ue
VNv0pNqmJ9U2Pam26Um1TU+qbXpSbdOTapueVNv0pDqmJ9UxPamO6Ul1TE+q
Y3pSHdOT6pieVMf0pDqmJ9UxPamO6Ul1TE+qa3pSXdOT6pqeVNf0pLqmJ9U1
Pamu6Ul1TU+qa3pSXdOT6pqeVGF6UoXpSRWmJ1WYnlRhelKF6UkVpidVmJ5U
YXpShelJFaYnVZieVGl6UqXpSZWmJ1WanlRpelKl6UmVpidVmp5UaXpSpelJ
laYnVZmeVGV6UpXpSVWmJ1WZnlRlelKV6UlVpidVmZ5UZXpSlelJVdST1vNQ
T5KEDaQumSBf7R2pJykCqe/9KUTqSbL7gdSO1JN05wdI7Ug9SRFIXRJSNoYa
1JM6Uk9a7y/0RepJeskASF06IBeHop6kdeGB1I7UkzpST9IaGUBqR+pJ6+0V
sVj7pJ6ku/qXtU/qSR2pJ/2urFj7pJ6kWKx9Uk9a78f7RepJeuVis/ZFPakj
9aSO1JMUi7Uv6kkdqSctTVtZ+6KepE9vsvZNPUmxWPumnqSXvS9r39STlmQl
1r6pJ3WknrTegx0xWfumnrSeQz2pI/WkjtSTOlJPWnKmWPuhntSRetJ6v3Nf
pJ6k92AWaz/Uk1afYR/WfqkndaSepLU4L2u/1JM6Uk9a71f/i9STOlJPUkzW
fqkndaSetOSjsPagnqSjebD2oJ603jPQF6kn6a2gy9qDelJH6kkdqSd1pJ6k
WKw9qSctPexn7Uk9qSP1JL2cNFl7Uk9aWg+JtSf1pI7UkzQRvaw9qSetp6gn
vQ8bEKknKRZrL+pJHakndaSe1JF60pLWx9qLepJisfainrTGQz1Jr2oBqUt3
clH7eKgn6a4CkNqRepIikNqRepLWPyJSXzp9kXqSXHAidQzqSYpE6hjUk363
yS6Hop7UkXpSR+pJ64UkIpE6BvWkjtSTdJonUsekntSRelJH6kkdqScpEqkv
q79IPUnvzxGpY1JP0lIdROpY1JMUidSxqCfJYiRSx6KetN4pwxepJ+kCj0jt
SKSORT2pI/WkjtSTlsxT1r6pJ3WknrTemQsikdofCZEqwLD2TT2pI/UkraRM
pPb1PZHakUgdh3rSeidQX6SepJcaidRxqCfJvyFSx98zPUQiVR4uaz/Uk367
Q7H2Sz3ptz0Sa7/Uk347ALH2Sz3pt+cNa7/Uk367vLD2Sz3p90Vg7Zd60m8n
D9Ye1JN+e1ew9qCe9NutgbUH9aTf/gSsPagn/VbkZ+1BPem3Bj1rD+pJv0XY
WXtST/qtM87ak3rSb2Vt1p7Uk35rSbP2pJ70Wz2ZtSf1pN96waw9qSf9Vshl
7UU96bdELGsv6km/VVBZe1FP+q37ydqLetJvpUvWXtSTfms7onb9M2rvSKRq
VUHUrvX7UPt7qfFF6kl6/ZdI1Rptg0NRT/qtSrY5FPWk3zpcqF0LYKF23VBG
7e8VzxepJ/3WPEoORT3pt6zP4FDUk34L2WwORT3pt3RLcCjqSeu98Poi9aTf
8hysfVJP+i1Iwdon9aTfigysfVJP+i06wNon9aT1Xv/9i4t60u/Fcta+qCf9
3qxm7Yt60u/lYda+qCf9Xpdl7Yt60novQxGJVL0Sydo39aTfS4CsfVNP+r32
xto39aTfe1+sfVNPWu/V8BepJ/1e5mHtm3rS7/UV1n6oJ/1e2GDth3rS7xUF
1n6oJ633ovyL1JN+VjprP9STfuI1az/Uk36qMWu/1JN+ci1rv9STXg2IkUiV
QMnaL/WknzLI2i/1pJ8zx9qDetJPC2PtQT1pvbcovkg96af+sPagnvRzX1h7
UE/66R2sPagn/YQG1p7Uk9Z7p+SL1JN+D61Ze1JP+j2mZe1JPen3YJK1J/Wk
35M51p7Uk9Z7w+ZfLOpJv8ctrL2oJ/0eMLD2op70u6XO2ot60u8mMmsv6knr
vW/0RepJv/uGqF136FC7bo2h9vVQT/rdDNocinrS7/ZHcCjqSeu9ffVF6km/
S9zJoagn/S7qUPsa1JN+VzWoXdcPqF0T98GhqCet9y7aF6kn/SZnl0NRT/rN
TlD7mtSTfgBm7ZN60g85rH1ST1rvzbwvUk/6nVZY+6Se9PsisfZJPel36LD2
RT3p1x1rX9ST1ntPEZFIXYt6Uv+PelL/j3pS/496Uv+PepIGJlL7KoVI1UUL
a9/UkzpST9JyI0Rq10ikaoVj1r6pJykSqXpDjrVv6kkdqSe9Tici9SStekKk
diRS+3KXSF2HelJH6klLL+qx9kM9qSP1pPXe6EUkUvvHJ1J1RLL2Sz1Je6kS
qetST9KnTaSuSz1Jy0wTqe/95i9ST9Ir90TqCupJHaknST8iUmUjsfagnqRj
kEhdQT1pvbe9v0g9qSP1JEUidQX1pD66qSd1pJ7UkXqSvgpEqs5srD2pJ2kX
QCJ1JfWkjtSTtCIqkbqSelJ/56gn6StIpK6inqSJN5H6PgT4IvUkPUcnUldR
T+pIPUmRSF1FPWnpXVLUvh/qSR2pJ633WcQXqScpEqm6j784FPWkjtSTOlJP
0gmJSN0P9aQ+P1FPWu8jkS9ST9IyRUTqHtST9JoTkboH9aSlD/dyKOpJOk0S
qXtQT1rvk5l/cVJP0mpJROqe1JMUidQ9qSfpDjmRuif1JJ2tiVTdgWLtk3qS
VmkiUveknqSdV4jUvagndaSepFWoiFS9Z8zaF/UkRSL1fU71RepJWjuKSN2L
epL+TiJ1b+pJikSqXndm7Zt6UkfqSet9XPZF6klawopIFTJY+6aepI2xidR9
qCd1pJ4khBKp+1BPWu9TO0QidR/qSVJZiNR9qCd1pJ70U0tZ+6WepEik7ks9
ab0PD79IPUkLehGp+1JP6kg9qSP1JEUidV/qSZpQEKn6YrD2oJ6kLz6R2tcw
ROoO6klLWxmw9qCe1JF60tKr8Kw9qCd1pJ603kepiERq/61E6k7qSR2pJ2mC
SKTupJ6k+RSRupN6UkfqSet9ovtF6klaZY1I1UNZ1l7UkxSJ1F3Uk7QZIZG6
i3pSR+pJ632w/EXqSR2pJykSqeehntSRetLSEy/UrvUJUPt5qCd1pJ603ufb
X6SepDMdkXoe6kkdqSf1NJZ6UkfqSYpE6hnUk5YeJxSHop7UkXqSlr4jUs+g
nrS028bgUNSTOlJP0smJSD2TelJH6knv21aI1JMUidQzqSfpQRSReib1pI7U
kzTlJ1LPop6kSKS+0sEXqSdpIUAiVdeKrH1RT9KjNCL1LOpJikTqWdSTtAEM
kfq6D180Pak/TiL1bNOTzjY96WzTkzQRZ+3b9KSzTU862/SkV8FAJFLPMT3p
HNOTzjE96RzTk84xPalPBERqT2uIVM1yWPsxPam5R6SeY3qSRmLt1/Skc01P
6kikakER1n5NTzrX9KRXSPmi6Un9GxCp+oVY+zU96YTpSX3xT6RqXRPWHotI
PWF60uvFIBKp/QERqeqVtYfpSSdMT+rZBpHaF8dEakcita+siNRXz/mi6Ukn
TU/Sx8va0/Sk83dLBpFI1SovrL1MTzpletJrCX3R9KQ+rIjUjkRqX5MTqadM
TzpletIp05NOmZ6kjlH7fUxP6qkZkXof05N0sB8OZXrSfUxP6iscIlVr3jwc
yvSkPu0Tqa8z9S8O05PuMD1J3znUfofpSXeYntQ/E5GqpXc2hzI9qaePROqr
bn3R9KQ7TE/SV5+1T9OT7jQ96U7Tk+40PelO05PuND3pNci+aHrSnaYn6QzE
2pfpSXeZnqRvK2tfpifdZXrSXaYnvSLbF01Pusv0pP4zIrUjkXqX6Un9ExGp
PasjUu82PUmXrKx9m550t+lJHYlUnY9Z+zY96W7Tk+42PUnLMrH2Y3pSRyL1
1fq+aHpSXw8QqcICaz+mJ91jelJHIlWrQ7H2Y3rSvaYnvXbhF01Putf0JP3A
rP2annSv6Un3mp7UV5JE6r2mJ91retIrOSISqTdMTxIkWXuYnnTD9CR92Kw9
TE/qSKTeMD3pdS2/aHpS90SkNquJ1JumJ900PakjkXrT9KSbpidJ9GHtaXpS
nyaI1J4jEKmaMrD2Mj3plulJ/ZkQqVo5jLWX6Um3TE96zVNEIvWW6UmaubD2
Mj0pHtOT4jE9SQuYofaORGo8pie9AuwXTU+Kx/QkTaAWhzI9KR7Tk/oIJVJj
mJ4Uw/Sk/j4Sqa+H+0XTk3riRqRqHhccyvSkGKYn6Rb55VCmJ8U0PSmm6Umv
DvxF05Nimp4U0/SkmKYnxTQ9KabpSTFNT4ppepLuP7L2ZXpSLNOTYpmeFMv0
JG1OyNqX6UmxTE/S4nasfZmeFMv0pFeO/he36UkdiVRNrln7Nj0ptulJ/SMR
qVpjj7Vv05M6Eqmvo/1F05Nim56kySVrP6YnxTE9KY7pSR2J1DimJ8UxPelV
xb9oelIc05N0qcHaj+lJcU1PErlZ+zU9qS9LiNS4pie9xjoikRrX9KS+4iFS
+1xNpMY1PSnC9KT+L4nUPg8SqTotsvYwPannfERqhOlJuvBi7WF6UoTpSR2J
VK2/yNrT9KRI05Nef/+Lpif1MUek6vqPtafpSZGmJzVgiVQtA8na0/SkKNOT
3tcIEInU/sYRqboMZe1lelKU6Ul9eiJSo0xP6kikdpFE6vs2w/+K/Y9Eaj6m
J+lqGLXnY3pS/j3BRiRStSjm5FCmJ+VjetL7UsUXTU/qq3AitSOR2pN4IjWH
6Uk96yFSc5ie1McRkaqiikOZnpTD9KQcpifp3gBq1xavqD2n6Uk5TU/SEqGs
fZqelNP0pPcVky+anpTT9CTdomDt0/SknKYn5TI9SSuVsvZlelL+noAjmp6U
y/SkXKYn6U4Ba1+mJ+UyPamnokRq/4BEan+5idTcpie9L9x80fSk/jITqbph
w9q36Um5TU/S6Ze1b9OT+hxDpOYxPel97+eLpiflMT0pj+lJHYnUPKYndXFE
amOASO1THZGqOS5rv6Yn5TU9qSORqttXrP2anpTX9KS8pidpFVvWfk1P6kik
vm9BfdH0pJ5AEKm6i8baw/SkDNOTOhKpWkyXtYfpSRmmJ70vY33R9KQM05P0
C7D2ND0p0/SkvloiUnvqSaQ2f4jUTNOT3nfCEInUTNOTdE+RtafpSVmmJ0le
Ye1lelJHIrWpSKS+r6Z90fSkroJIzTI9Kcv0pCzTkzoSqfWYntQ0JlJlBqD2
9w25L5qe1GdJIlV3WA+HMj2pHtOT+hKWSNVCy6i9hulJNUxPel/UQyRSa5ie
pBu9xaFMT6phelIN05O03vPmUKYn9VSFSH3fF/yi6Uk1TU/SbV/WPk1Pqml6
Uk3Tk2qanlTT9KSapie9ry3+i8v0pFqmJ+m2N2tfpifVMj1J99RY+zI9qZbp
SbVMT3rfnvyi6Um1TE+qbXpSbdOTapueVNv0pI5Eam3Tk3TDgrVv05P6G0mk
1jY9SQ8BWPsxPamO6Ul1TE/SWuCs/ZieVMf0pPdd0i+antSRSNWzCNZ+TE+q
Y3pS/+pEqpYkZ+3X9KSOROr7SusXTU+qa3qSaMTar+lJdU1Pqmt6UkcitcL0
pArTk/q8SIZWmI+kRzHsOcxHqjAfSd9t9hzmI1WYj9SXYWTo+0YvIhlaaT5S
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
cVG7LjVZ+6SPtHU1xdonfaSt6wfWPukj7T3pIykSqZojsvZJH2lrVsTaF32k
rXkAa1/0kRSJ1L3oI+296CNpvSciVWc31r7oI8l9J1LfRXwRiVQdOqx900fa
6o61b/pIW3/M2jd9JEUitS/aiNR3LeEv0kfqSB9JAxOpfZVCpO4/QQORSNWW
1Kz90EfqSB9pv0saf5E+Ukf6SIpEao9LpO5LH6kjfaSO9JG0zAmRKjax9ksf
qSN9pI70kbbezGPtlz5SR/pI/SHQR9LyKkRqRyK1j0gi9V3g+Yv0kTrSR9Kn
TaTuoI+kSKTqfjNrD/pIOvCJ1J30kfa7zvQX6SMpEqk6ebH2pI+kmRmRupM+
khabIVJ30kfq45c+0n6Xu/4ifaSO9JG2Xpdk7UUfqSN9pN+Ml7UXfSQtgUOk
7qKPtN9Vt/9X7AkjkXoe+kj6ChKpHYnU89BH6kgfSQ/OidTz0EfasoKKQ9FH
6kgfSZFI1cujqL1PDETqGVwuqSP1JK0ARKSeQT1JkUh91yD/IvUk7VBFpOod
VtTePyCReib1JEUiVVvZs/ZJPUkvMhGp71LoX6Se1JF60u/WNGuf1JM6Uk/q
syb1pI7Uk7Q8EpF6FvWk/a7IjkiknkU9aeuNXta+qCd1pJ60dT+dtW/Tk842
Pels05PeheG/aHrS2aYnnW160tmmJ51telJHIrWv54nUs01P0s1K1n5MT+pT
N5F6julJer+ZtR/Tk84xPakTkXqO6Uk9nyBSzzE96V0mH5FIPdf0JL1mzdqv
6Unnmp6kp3as/Zqe1JFIPdf0pHe1/i+annTC9CTNRFl7mJ50wvSkE6YndVVE
6gnTk/oLSKS+mwZ80fSkE6Yn6aVz1p6mJ500PUmYZ+1pelIfvUTqSdOT3r0L
vmh60knTk06antTzGiL1lOlJfaQQqR2J1P5biVSdQ1l7mZ7UE0QitS93iVS9
gs/ay/SkU6YnnTI9qf89IvU+pifdx/SkdyeHL5qe1JFI1UoAxaFMT7qP6Ul6
sJwcyvSkO0xP6kikvhtKfNH0pDtMT9Lz+8WhTE+6w/Sk/voSqR2J1DtMT+p5
G5H67mvxRdOT7jQ9SesisPZpetKdpifp4Shrn6Yn3Wl60p2mJ73bayASqXeZ
nnSX6Ul3mZ50l+lJd5medJfpSXeZnqQnT6x9mZ50l+lJd5mepFUiWPs2Pelu
05PuNj3pbtOT7jY96W7Tk97NRr5oelKfFohULVbB2rfpSfeYniT3gbUf05Pu
MT2p4USkvnueIBKp/RUjUnVbgbUf05PuMT2pCUOk3mt6Ukci9V7Tk96tV75o
elJ/84lULd3B2q/pSfdv/ohIpDb3iNQbpif1SETquwPMF01PumF6Ukcita8O
idQbpic1b4nUZgaResP0JP0Ja0/Tk/pqn0i9aXqSFjJh7Wl60k3Tkxr7ROpN
05M6Eqn9txCp7344/2KZnnTL9CStp8Lay/SkW6YnSc9h7WV6UlOPSO2Pl0h9
t+X5oulJt0xP0m+L2vuSnUiNx/SkngQRqfGYntSHFZEaj+lJ7+5AXzQ9KR7T
k7S6DGqPYXpSDNOTdL5F7TFMT+rvCZHaBzuR+m5S9EXTk2KYnhTD9KSORGoM
05P6xydSY5qeFNP0JH3nWPs0PSmm6UkxTU/SWjusfZqeFNP0pJimJ8UyPSmW
6UmxTE96t2z6oulJsUxP0pI/rH2ZnhTL9CQZZKx9mZ4Uy/Sk2KYnvTtHfdH0
pNimJ+mQY+3b9KTYpifFNj0ptulJHYjUPhESqe8GVohEahzTk7QAEms/pifF
MT1JN+BY+zE9qSOR2udjIvXdR+uLpifFNT2pDyMiNa7pSXFNT+pIpMY1PSmu
6UnCAmu/pif1f0ikxjU9SctBsfYwPSnC9KS+eCJSI0xP6hMQkdp0IlLfXcUQ
idQI05O0KhVrD9OTIk1PkuTI2tP0pI5EakOSSH03N/ui6UmRpicJXaw9TU+K
ND0p0vSkKNOTokxP6jMqkfrusfZF05OiTE/SGl2svUxPijI9SecF1l6mJ/U/
Eal9CUekvlu9fdH0pHxMT8rH9KR8TE/Kx/SkvrAmUvMxPam/2kSqSkft745z
XzQ9KYfpSVqxDLX3xT+RmsP0pBymJ+UwPSmH6Uk9gSJS343v/sVpelJO05O0
cBprn6Yn5TQ9SR4ua5+mJ/XEjUjtSKS+++990fSknKYn6YEfa1+mJ+UyPSmX
6Um5TE/KZXpSLtOT3m0Av2h6Ui7Tk7SMHGtfpiflNj1JT1NY+zY9KbfpSblN
T3p3I0QkUnObnpTb9KT+IyI1t+lJeUxPymN6Us+miVRNrln7MT0pj+lJeUxP
0qJ6rP2YnpTH9KSORGoe05N6Nkmk9hyfSH33Zvyi6Ul5TU/S2n6s/ZqelNf0
JKnirP2anpTX9KQ+monUd4tIRCI1w/QkXYew9jA9KcP0pAzTkzJMT+pIpPYV
D5H67lT5L6bpSZmmJ2mlQ9aepifl3+12RCI10/SkvoIlUvvCi0h9N8z8oulJ
WaYndSRS+98lUrNMT8oyPakPMiI1y/QkHeqsvUxP6ssDIrUBS6Rq3UfUrh8Z
tddjelI9pifVY3pSRyK1Dxsi9d0+9IumJ/XpiUjV8pPFoUxPqsf0JL3NgNpr
mJ7UnROpfTVMpL67mH7R9KSORKrsjcWhTE+qYXpSDdOT+gcmUnuaTqTWND3p
3Uz1i6Yn9ayHSNVinKx9mp5U0/QkAZS1T9OTapqeVMv0pHdP1y+anlTL9KRa
pifVMj2plulJtUxPqmV6Ui3Tk3SLgrVv05Nqm55U2/QkLU3K2rfpSbVNT6pt
elJt05Nqm55U2/Skd4fbL5qe1FNRIlUrpLL2Y3pSHdOT9MINaz+mJ/WXmUjt
qQmR+m60+0XTk+qYnqSOWfs1Pamu6Ul1TU+qa3pSXdOT6pqe9O73i0ik9sSc
SNV6saz9mp5UYXqSrthZe5ie1JFIrTA96d12+IumJ/XBTKRWmJ7UZ1witcL0
pI5Eas8YiNRK05N0OcTa0/SkPhKI1ErTk7R6LmtP05MqTU+qND2p0vSk/omJ
1CrTk95NmBGJ1J5rEqlaxJe1l+lJVaYn6Z0w1l6mJ3UkUquoJ/XlHvUkrZ4D
pHakniQxBEiVWAykKgKpHakndaSepP1hgFRddQKp592S+l8c1JM6Uk9SBFKl
qwCpHaknHQ10ORT1JG1TA6RqB18g9bw7Y3+RelJH6kmnmytWN6kYHd2sZXWT
ipEst83qJhUjGTeD1S0qRorJ6hYVo45UjLTxzmZ1i4rReff6/iIVI8VidYuK
kTygy+oWFSMdYovVbSpGHakYKRaP2E3FqCMVo45UjH4vIbP2TcWoIxUjCRkP
a99UjLQNUbD2Q8XovDuff5GKUUcqRtKgHtZ+qBjp8X2y9kPFqCMVI+2GtFj7
pWJ03g3YEYu1XypGHakYSc46rP1SMepIxUi7MA3WfqkY/V6fY+2XilFXQcWo
IxUjFbVYe1Ax6kjFSLFYe1Ax0t5Ql7UHFaPzbkf/RSpGjQwqRorF2pOKUUcq
Rkdvx7L2pGKkLaoWa08qRh2pGCkWa08qRkeTD9ZeVIz04sdi7UXFSFtjPay9
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
1V0Y1j6pGB3dd2Dtk4qR1oEgUnWJy9r/Hi4hEqlnUTE6Z1ExOmdRMdJtfCL1
LCpG5ywqRopE6lmmGJ1titHZphidbYrR2aYYnW2K0dmmGJ1titHZphidbYrR
2aYYnW2K0TmmGJ1jitE5phidY4rR3zMPRFOMzjHFSPs5s/ZjitE5phhpeWDW
fkwx6v+OSO2BidRzuQJSR66ApEik6oYya7+mJ51retK5pic1I4jU/i+J1P79
iNQTpif1WZJI7TkfkardrVl7mJ50wvQknWBZe5iedML0pBOmJ50wPemk6Ukn
TU/qY45I7UiknjQ9qU9WRGrPTYjUk6Yn6VYIa0/Tk06antSRSNVe36y9TE86
ZXrSKdOTNEVi7WV6Ukci9W8qhmh6Ul9nEqnachy19yhE6n1MT9IK1qhdMzXU
fh/Tk+5jetJ9TE/qQ4FIvY/pSTrGFocyPek+pifdYXpSTxiJ1DtMT+qvIJF6
h+lJHYnUO0xP0gbswaFMT7rD9CSdRFC75q2ovSOReqfpSXeannSn6Un9yxKp
d5qedKfpSXeantSRSO3pM5F6p+lJ+oRY+zI9qf9NIrUn00TqXaYn3WV60l2m
J91lepJm8ax9mZ50l+lJfw+wGYnUu01Putv0pLtNT7rb9CQtss7at+lJd5ue
dLfpSXebnnS36Un3mJ6kp4Os/ZiedI/pSfeYnnSP6Un3mJ50j+lJ95iedI/p
SX0BT6R2JFLvNT3pXtOT9OiFtV/Tk/r8Q6Q2rIjUe01Putf0pE5Eak8giNR7
TU+6YXrSDdOTOhKp/V0mUnVfm7WH6Uk3TE/qH4pIvWF6kmR/1h6mJ90wPUkX
mqw9TU9qdBOpf9fViKYndSRSuyoi9abpSTdNT9I+AKw9TU+6ZXpSRyL1lulJ
zXUitT8iIlUXLay9TE+6ZXpSX2cTqR2J1FumJ90yPSke05PiMT2pxyVS4zE9
qSORGo/pSZoRXg5lelJf7hKpPZ8iUuMxPakjkRrD9KQ+fonU/mciNYbpSTFM
T+ojkkhtvhKpwm1xKNOT+lqCSO3vDZHaPRGpeh+FtU/TkzoSqboXwtqn6Ukx
TU/6s5EQTU/qry+R2pFI7YkakRrL9CRtVcHal+lJsUxPimV6UizTkzoSqX0W
IVKlerD2ZXpSLNOTYpueFNv0pNimJ8U2PSm26UmxTU+KbXpSbNOTYpueFH8H
OyKRqhtUrP2YnhTH9KQ4pifFMT0pjulJcUxPimN6UhzTk+KYnhTH9KQ4pidp
GNZ+TU+Ka3pSn9qJ1P78iFS9MsXar+lJPdUmUnW7jrVf05P6OCFS/26SfjFM
T2rCEKkRpidFmJ4UYXqSdlNh7WF6UpdMpPY8hkiNMD2pL9KI1I5Equ5AsfY0
PSnS9KRI05P6JyRSI01P6stBIjXS9KSulUhtSBCpkaYn9QyYSI0yPSnK9KQo
05OiTE+KMj0pyvSkKNOTGvtEapTpSVGmJ0WZnpSP6Un5mJ6Uj+lJ+ZielI/p
SfmYnpSP6Un5mJ6Uj+lJ+ZielI/pSTlMT8phelIO05NymJ6Uw/SkHKYn5TA9
KYfpSTlMT8phelIO05NymJ6U0/SknKYn5TQ9KafpSTlNT8ppelJO05Nymp6U
0/SknKYn5TQ9KZfpSblMT8plelIu05NymZ6Uy/SkXKYn5TI9KZfpSblMT8pl
elIu05Nym56U2/Sk3KYn5TY9KbfpSblNT8ptelJu05Nym56U2/Sk3KYn5TY9
KY/pSXlMT8pjelIe05PymJ6Ux/SkfBfq/SKRmsf0pDymJ+UxPSmv6Ul5TU/K
a3pSXtOT8pqelNf0pLymJ+U1PSmv6Ul5TU/Ka3pSXtOTMkxPyjA9KcP0pAzT
kzJMT8owPSnD9KQM05MyTE/KMD0pw/SkTNOTMk1PyjQ9KdP0pEzTkzJNT8o0
PSnT9KRM05MyTU/KND0p0/SkLNOTskxPyjI9Kcv0pCzTk7JMT8oyPSnL9KQs
05OyTE/KMj2pHtOT6jE9qR7Tk+oxPake05PqMT2pHtOT6jE9qR7Tk+oxPake
05PqMT2phulJNUxPqmF6Ug3Tk2qYnlTD9KQapifVMD2phulJNUxPqmF6Ug3T
k2qanlTT9KSapifVND2ppulJNU1Pqml6Uk3Tk2qanlTT9KSapifVMj2plulJ
tUxPqmV6Ui3Tk2qZnlTL9KRapifVMj2plulJtUxPqmV6Um3Tk2qbnlTb9KTa
pifVNj2ptulJtU1Pqm16Um3Tk2qbnlTb9KQ6pifVMT2pjulJdUxPqmN6Uh3T
k+qYnlTH9KQ6pifVMT2pjulJdUxPqmt6Ul3Tk+qanlTX9KR67/x+kUita3pS
XdOT6pqeVNf0pLqmJ1WYnlRhelKF6UkVpidVmJ5UYXpShelJFaYnVZieVGF6
UoXpSRWmJ1WanlRpelKl6UmVpidVmp5UaXpSpelJlaYnVZqeVGl6UqXpSZWm
J1WZnlRlelKV6UlVpidVmZ5UZXpSlelJVaYnVZmeVGV6UhX1JP0BkNqRepKe
ngGp9/13v0g9qSP1pI7UkzpST+p/oJ509XldDkU9STc7gNS+cKaedN8f+YvU
kzpST9J6/ECqIpDakXqSrtCB1I7UkzpST/rthlsYalJP6kg9STFZ+6SepF0C
Lmuf1JO04MJi7ZN6UkfqSYrF2if1pI7Uk3oiTj2pI/UkTdMna1/UkxSLtS/q
SR2pJ3WknnTf4+iL1JM6Uk/SJgkPa9/Uk7SPY7D2TT2pI/UkrWm7WPumnnTf
wxmxWPumnqRHaZe1b+pJTQXqST+LgrUf6kmKxdoP9aT7fqu+SD2pI/UkbRmx
WPuhntSRepJisfZLPakj9aSrR9Ss/VJPkhcxWfulnqRYrP1ST9LijJe1X+pJ
V44Yaw/qSXrqPlj73zkGMVl7UE/qSD1J+2ls1h7Uk6628GXtQT1JsVh7UE+6
76nui9STOlJP0j4ek7Un9STFYu1JPUl751zWntST5CBs1p7Ukxrc1JM6Uk9S
TNZe1JM6rsvai3rSlbjH2ot6klSIh7UX9aSO1JM6Uk+6/SMCqdrkBEjtSD2p
I/UkRSC1I/Wk39bmxaGoJ3WknqRtHojU8VBPulpKCrWPQT2pI/UkXf0RqX1w
E6ljUE96xWJE6kmKRGr/PUTqGNSTOlJPutplGrXLpmTtk3qSIpH60viL1JM6
Uk+6Oi2y9kk9SbfyiNS+giVSOxKpfQlLpI5FPem+k4IvUk/Sug9E6ljUkxSJ
1LGoJ/2UONa+qCd1pJ6kywMi9Z2bIBKpY1NP6kg9SY9piNSxqSd1pJ7UkXpS
R+pJikTqO0X6Fw/1pI7Uk7T/D5Gq1c5Y+6GepEikyrRl7Yd6UkfqSfedqX2R
epI+aiJ1XOpJ2pWISB2XepI4R6RK+GXtl3qSFCoi9Z0wIhKp3TmRqodJrD2o
J3WknqSdz4jUEdSTFInUPokQqe+89YvUkzpST9KmTETqCOpJXdxDpOpOPWtP
6kl6DEmkjqSedN/p8xepJ3WknqRIpDZ+iNSR1JM6Uk9qvlBP6kg96Ucf1l7U
kzpST+pIPUlb+BCpWpCPtRf1JC2FRqRKBmftRT2pp/TUk963RBCpJ3WknqQ7
5kTqfKgnKRKp86GedOWkbw5FPUmWH5H6XtN8kXqSIpGqOS5qn4N6knZYJ1Ln
oJ7UkXqSdpsgUvtaikh9L62+SD1Ji/gQqc0uIrW/Y0TqnNSTfreJWPukntSR
elJH6kn3vcL7IvWkjtSTtH0ZkdqRSJ2LelJH6kkdqSd1pJ4k9ZJIfS80v0g9
SZFIbZITqVpvkrVv6kkdqSddva/A2jf1JEUi9b3e/SL1JJl5ROrc1JO0txuR
Ojf1JEUiVa9NsPZDPakj9aT7XnZ/kXpSR+pJv+e5rP1QT+pIPakj9STtakmk
zks9ST4skfpe/SMSqfNST+pIPUkvThOp81JPunrsytov9SRFInVe6kn3vQnx
RepJwi2R2hcPROoM6kkdqScpEqkzqCd1pJ509UyLtQf1pD6lUE/SBmxEakci
VUuisvaknqR1LYlUvVLD2pN6kiRlIvW9JYNIpM6kntSfLvUkPQ0lUmdRT+pI
PUlHBpHakUidRT3pvneGvkg9qSP1JG17SKSuh3qSIpHa5zYidT3UkzpST9Ks
lUh9b1B9kXqSVmQjUjsSqT1hIlLXQz3p97IKatd7Tqi9j08idQ3qSfe9T/ZF
6kkdqSd1pJ6kPSGJ1DWoJ3WknqRIpHblRKqm2qx9Uk/SRu9Eal8AEalrUk/S
phdE6prUkzpST7p664u1T+pJ8uiJ1Peu4RepJykSqX1ZRqSuRT2pI/Uk3YEi
UvXyGWtf1JMUidT35uW/uKkndaSedNUja9/UkzpST7q/Hcs5FPWk+9sXkUNR
T7rvPdQvUk+6WpiZtR/qSfe3KB2GOtST7m+tCw5FPen+3qjjUNST7nsrF5FI
/ckCHIp60v3dksRQl3rS/c10MNSlntSRepIikfreUf4i9aSO1JPkgRCpWlia
tQf1JEUiVS8msvagntSRetL7/jYi9aSO1JMUidQV1JM6Uk/qSD1JmCdSV1JP
0hsnROp7fx2RSO0vEZGqu8+sPakndaSe1JF6UkfqSYpE6irqSfe9zf9F6kla
XpNIXUU9qSP1JL1qSKTq1h5rL+pJHakndaSedN+nDV+kntSRepIikbof6kkd
qSf1P1JP6kg9qSP1JL0GRKS+Dz2+SD2pL0KpJ3WknqQdjIjUPagndaSedPXu
7MOhqCfpapdIfZ+9fJF6kt6ZIVL3pJ7UkXqSIpG6J/Wkq1d4WfuknqSXoojU
9xHQF6knKRKpgiJrn9ST7l7UkzpST9KtSyJ1L+pJejeLSH2fRH2RelJH6kkd
qSdpSSMidS/qSVfDsPZNPUm2N5G6N/Wk+z4Q+yL1pI7Uk7TbM5G6N/WkjtST
9FiKSN2betLdh3qS3lQjUt/ncl+knqRIpO5DPUl7UBOp+1BP0orzRKpe72bt
h3qSIpH6Ph78IvWkq23FWfulniTHgEjdl3qSIpGqt8xZ+6WedLVpMWu/1JOu
9uVl7UE9SVtwE6naEZa1B/Wkq01PWXtQT9KmnkSq9tdk7UE9SZFI1VaOrD2p
J2ljcCJ1J/Wk32vkrD2pJykSqdoZjrUn9aSrrdFYe1JP0myDSNUuXKy9qCcp
Eqna8Im1F/Wkq5vgrL2oJ4m2RKp202HtRT1J26QTqbuoJ11tkYLatQIBaj8P
9SS900mkvk+wEYlUbRoxORT1JO3WTqSeh3rS1T4BqF0LIaB2LYWP2rUkPWp/
H6R/kXrS1ernl0NRT7pa77s4FPWkqyWtJ4einnS1iDNq1+rJqP19nv9F6klX
C/Wy9kk9SevTEalnUk+6mj6y9kk9SbfFiFSt+8naJ/Wkq4UvWfuinnS1tiNr
X9ST7lnUk+5Z1JMUiVQtnMfaF/Wk+9oNXzQ9SWulsfZtepKWA2Pt2/QkLYDF
2rfpSVoBirVv05NeyeKLpidpWR/Wvk1P0kI2rP2YnqSVXFj7MT1Ji5Ww9mN6
0ut6fNH0JK1PwdqP6UlakYG1X9OTtOgAa7+mJ+k1e9Z+TU96lZMvmp6kV6lZ
+zU9SS8Ps/ZrepIeurP2MD1J74uy9jA96TVfEIlUvQTI2sP0JL0Fx9rD9CS9
6MXaw/QkvdrE2tP0pFfA+aLpSXqbhbWn6Ul6YYO1p+lJekWBtafpSXL0WXua
nvR6QF80PUniNWsv05OkGrP2Mj1Jri1rL9OTpJOy9jI96dWREInU/veIVB3O
qF3OHGq/j+lJ0sImhzI9SSLU4VCmJ71W1BdNT5Lsgtr1rULt0jtQ+/27E4ZI
pMokmBzK9CQ9Oz8cyvQkPTxODmV6kp6PDg5letKdpifpURxrn6Yn6eETa5+m
J72O2BdNT9LzBtY+TU/SLXXWPk1P0k1k1r5MT9JdVNa+TE96VbUvmp50l+lJ
d5mepJtBrH2ZnqS7Iax9mZ6kC37Wvk1Peo25L5qepGs81r5NT9JVDWvfpidp
4s7at+lJmqqy9mN60ivufdH0JE1HWPsxPUkAZu3H9CT9iKz9mJ6kcy5rP6Yn
vf7gv3hNT9IXibVf05N0JLH2a3qSymLt1/Qk/TFrv6YnvRrjF01P6kikCoOs
PUxPumF60g3Tk7QaFmsP05M6EqmvTflF05NumJ4kGrP2ND3ppulJHYlULcrF
2tP0pL6CJVJfqfOLpifdND1JZwnWnqYn3TQ9qVsnUm+ZntQHGZF6y/Sk1y1F
JFJvmZ6kuQlrL9OTbpmepBu7qF1LlKH2jkRqPKYnvYrrF01P6sOVSO3TE5Ea
j+lJ8Zie1JFI7QtLIjUe05N01wy1v6btF01P6qkZkaqZ2uFQpifFMD2pP3si
VQu2PRzK9KQYpie9wi8ikRrT9CRNGFn7ND0ppulJMU1P0rpxrH2anhTT9KTX
O/6i6UmxTE/SlIi1L9OTYpme1CcGIjWW6UmxTE+KZXrSqz9/0fSkni8TqZo+
s/ZtelJs05PEG9a+TU9qghCpsU1Pei3sL5qeFNv0pJ7FE6mxTU+KY3pSHNOT
4pieFMf0JH2ZWfsxPSmO6UlxTE/SxQRrP6YnxTE9KY7pSVpTkLVf05Pimp70
OulfND0prulJuqZh7df0pLimJ/V5gEjV0oasPUxP6kikvmr8F01PijA9SZdW
rD1MT4owPam/VERqRyK1E5HaEwgi9TX0v2h6UqTpSbrCY+1pelKk6Ul6Ssfa
0/Sk/qGI1P6JidT3RQFEIrXPzkRqX2gSqf1pEqlRpidFmZ4UZXpSd0Ok6hEI
ay/Tk6JMT4oyPUnXu6hd25ai9nxMT+pIpGrZy4dDmZ6Uj+lJ72sTXzQ9qcch
UnXZXRzK9KQcpif1vIZI1eqbqL2PFCK1z5JE6vv2BiKR2pgjUnV9uziU6Uk5
TE/KaXpSTtOTOhKpffwSqe9LJF80PakPQSJVNyFY+zQ9Kf/EAUQiVWuRsvZl
elIu05Ped1m+aHpSLtOTOhKpuUxPymV6Uk82idQ+eRGp/fUlUvV3svZtelJf
dhKpuU1P0i0Z1r5NT8ptelJu05O0Mitr36Yn9TedSH3f7PkXj+lJeUxPymN6
Uh7Tk/KYnpTH9KQ8piflMT0pj+lJ7wtGXzQ9KY/pSXlNT8prelJe05Pymp6U
1/SkvKYn5TU96X3P6YumJ+U1PUn3yVh7mJ6UYXqSPiDWHqYn9QdGpGaYnvS+
bvVF05MyTE/KMD2pI5GaYXpS/7JEaqbpSU0YIlXPs1l7mp6UaXpSRyJVdw1Z
e5qelGl6Ul+VEalaPJi1l+lJHYnU9+WzL5qelGV6km5esvYyPSnL9KSORKrW
MGbtZXpST3mJ1PcduC+anlSP6Uk67S8OZXpSPaYn9UUqkVqP6Un1mJ5Uj+lJ
76t4iERqDdOTdCsXtffFEpFaw/Qk3Qm6HMr0pBqmJ/VkhEh93wj8oulJ/d8R
qTVNT6ppelJN05M6Eqk9EyVSa5qepMts1j5NT+qjjEitaXqSbmyz9mV6Ui3T
k2qZnqT1rVn7Mj2plulJ7/uRiERqX8MQqbq/ztqX6Um1TU+qbXqSltlm7dv0
pJ4hEqnva5pfND2ptulJOoey9m16Um3Tk2qbntRXv0RqHdOT6pie9L4t+kXT
k+qYnlTH9KQ6pifVMT2pjulJdUxPqmt6Ul3Tk96XVr9oelJd05Pqmp5U1/Sk
uqYn1TU9qa7pSXVNT6pretL77uwXTU/qiRqRqmcvrD1MT6owPanC9CQtwc7a
w/SkCtOT3ld4/8U0PakjkapHQKw9TU+qND2pT+xEqlaCZ+1pelJHIvV9k/iL
pidVmp6kJ0+svUxPqjI9qcr0pI5EapXpSX3GIVLfF5q/aHpSXxwSqXogxtqL
elJPNakn/TZF+GoPrYv/1d6RepIWiAFS432vGhFI7Ug9qSP1JM14gVTd6QRS
4xnUk3RbAUjtSD1JEUiN9/XuL1JP6kg9KfR48HAo6km64QqkKgKpoV0CHgw1
qSd1pJ4U71vmX6SepNsXg7VP6kkdqSd1pJ6k28CHtU/qSR2pJ8n6Gqx9UU9S
LNa+qCf9JsSsfVFP0u3nxdoX9aSO1JMUi7Uv6knxvnP/L27qSR2pJ4We2bL2
TT1Jd8Ef1r6pJ4W2bmDtm3pSR+pJ8b76/0XqSX2GpZ6kWKz9UE+Sr3BZ+6Ge
1JF6UkfqSb9TOWs/1JM6Uk/qSD0p9ASbtV/qSXomMFn7pZ4U2siCtV/qSR2p
J737hCFST+pIPUlrJg7WfqknKRZrD+pJof00WHtQT9IK5Yu1B/UkPWkbrD2o
J4We57P2oJ6kH+Kw9qCe1Ic69aSO1JO0UPrD2pN6UkfqSR2pJ4W0Atae1JP0
oGay9qSepFisPaknxVPUk+JdneKL1JM6Uk/SixCDtRf1pI7Uk/T4KFh7UU/q
SD1Jy8YDqfEukvFF6kmKQGpIskDtjRQgVbMpILUj9aTQXisPh6KepEikvmt1
fJF6kvZmIFLleqD27o1IHYN6kiKRqi1fNoeiniSFl0h9lwz5IvWkjtSTfsOg
9o5E6pjUk/RMj0gdk3pSR+pJWsufSH1XLkEkUseknhQyX1j7pJ6kZ4lEqppj
7Yt6kiKROhb1pHgXUPki9STd9iRSe35BpI5FPUmPNInUjkRqo4tIHZt60m9e
zto39aSO1JM6Uk9SJFJ71kOkjk09SQ9aiVRtB8TaD/UkbbBApL7LySASqeNQ
TwrpSKz9UE/SA14iVYczaz/UkxSJ1HGoJ8W7qs0XqSd1pJ4UKp21X+pJikTq
uNSTOlJP6kg9SX4CkfourvMvBvWkjtSTFInUnooSqSOoJ/22K2PtQT2pI/Uk
Ld1IpL5r/HyRelJH6kl6q41IHUk9SU/didQ+xxCpHYnU/nCJVNkMrD2pJ6kL
IrXP7ESqVDXWXtSTFInUPtURqdqxirUX9STtAUKkvisefZF6kiKRKmOOtRf1
pI7Uk/RXEqnaOAu1z4d6kiKR+i689EXqSR2pJ/1uVS8ORT1JKgSROh/qSYpE
6hzUkzpST4p3/acvUk/qSD0p5A8Gh6KepKswIlX8uRyKepK2iCBS56SeFO8y
VIhE6pzUkzpST+pIPUliCJHaGCRS+zqESO2BiVTdZGHtk3pSzEU9qSP1JN1S
I1Lnop4kP4VI7UikzkU9qSP1pI7Uk94dfBGpJ0X/gESqpE7WvqkndaSeJGuG
SNXebqx9U0/SbjlE6rs2GCKR2scckSqCsvZDPUmXB0Rqz02I1HmoJykSqfNQ
T4p3ibIvUk/qSD0ppLiy9kM9SdIQkarTE2u/1JM6Uk/qSD0p3pXSvkg9qSP1
JEUidV7qSR2pJ0llIlJnUE/qSD1JWxgRqe+CbV+kntSRelJI+GXtQT1JChWR
2hNGIlX7/rH2oJ6k/5BIfdeN+yL1JO2aRqTKO2btST1JkUjVvJW1J/WkjtST
9HIdkfouX/dF6kmKRKqeO7L2op7UkXqS/DIitT8SIrVPSETqLOpJ8a6i90Xq
SbEe6kkhCxu1r4d6krw2IlWn0MuhqCdpvx8itU+TROq7mN8XqSd1pJ7Uk3bq
SYpE6hrUkzTDJ1LXoJ7UkXrS7455cSjqSR2pJykSqXLSD4einiTLj0jt8z6R
qq0pWfuknqRIpL5LG36RelJH6kkhNZ61T+pJkg2JVF1asfZFPUmL+BCp/aUi
Ut8VFr9IPakj9aTQUcTaF/Uk3eshUvsKj0hdi3pSNDOJ1LWpJ8W70CMikdo/
I5GqFwVY+6aeJPWSSNVck7Vv6kmKRGqTnEh915v8IvWkjtSTtN4EkboO9aRY
h3pS/Lbt5VDUk+K3ORiHop4U77KX/+KlnhS/dU+TkUj9LaeEoS71pPi9tM2h
qCfF79UQDkU9Kf4GYiRSf0+9MFRQT4rfxTSGCupJ8fvKYqignqRIpPb0ikh9
FwH9IvWkjtSTfhIJa0/qSYpE6krqSeIrkbryT0/6n2JZYgY=
      "], 1, {
      "Continuous", 1}, {"Discrete", 1}, 1, {
      MissingDataMethod -> Automatic, ValueDimensions -> 1, DateFunction -> 
       Automatic, 
       ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}}}, True,
      11.3],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7385119674443007`*^9, 3.7385119851840515`*^9}},
 CellLabel->
  "In[123]:=",ExpressionUUID->"516a1f7a-7d46-4b40-a48a-cbdf731ef0da"]
}, Open  ]],

Cell[CellGroupData[{

Cell["fshDat", "Subsection",
 CellChangeTimes->{{3.706620980102575*^9, 
  3.706620981074178*^9}},ExpressionUUID->"6585c047-c2dd-4cfe-980e-\
397fd2c6062a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fshDat", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "5.9`", ",", "7.5`", ",", "8.4`", ",", "8.8`", ",", "24.`", ",", 
       "16.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "32.`", ",", "12.5`", ",", "13.7`", ",", "14.7`", ",", "24.`", ",", 
       "13.6`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "40.`", ",", "13.8`", ",", "15.`", ",", "16.`", ",", "23.9`", ",", 
       "15.2`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "51.5`", ",", "15.`", ",", "16.2`", ",", "17.2`", ",", "26.7`", ",", 
       "15.3`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "70.`", ",", "15.7`", ",", "17.4`", ",", "18.5`", ",", "24.8`", ",", 
       "15.9`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "100.`", ",", "16.2`", ",", "18.`", ",", "19.2`", ",", "27.2`", ",", 
       "17.3`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "78.`", ",", "16.8`", ",", "18.7`", ",", "19.4`", ",", "26.8`", ",", 
       "16.1`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "80.`", ",", "17.2`", ",", "19.`", ",", "20.2`", ",", "27.9`", ",", 
       "15.1`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "85.`", ",", "17.8`", ",", "19.6`", ",", "20.8`", ",", "24.7`", ",", 
       "14.6`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "85.`", ",", "18.2`", ",", "20.`", ",", "21.`", ",", "24.2`", ",", 
       "13.2`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "110.`", ",", "19.`", ",", "21.`", ",", "22.5`", ",", "25.3`", ",", 
       "15.8`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "115.`", ",", "19.`", ",", "21.`", ",", "22.5`", ",", "26.3`", ",", 
       "14.7`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "125.`", ",", "19.`", ",", "21.`", ",", "22.5`", ",", "25.3`", ",", 
       "16.3`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "130.`", ",", "19.3`", ",", "21.3`", ",", "22.8`", ",", "28.`", ",", 
       "15.5`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "120.`", ",", "20.`", ",", "22.`", ",", "23.5`", ",", "26.`", ",", 
       "14.5`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "120.`", ",", "20.`", ",", "22.`", ",", "23.5`", ",", "24.`", ",", 
       "15.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "130.`", ",", "20.`", ",", "22.`", ",", "23.5`", ",", "26.`", ",", 
       "15.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "135.`", ",", "20.`", ",", "22.`", ",", "23.5`", ",", "25.`", ",", 
       "15.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "110.`", ",", "20.`", ",", "22.`", ",", "23.5`", ",", "23.5`", ",", 
       "17.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "130.`", ",", "20.5`", ",", "22.5`", ",", "24.`", ",", "24.4`", ",", 
       "15.1`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "150.`", ",", "20.5`", ",", "22.5`", ",", "24.`", ",", "28.3`", ",", 
       "15.1`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "145.`", ",", "20.7`", ",", "22.7`", ",", "24.2`", ",", "24.6`", ",", 
       "15.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "150.`", ",", "21.`", ",", "23.`", ",", "24.5`", ",", "21.3`", ",", 
       "14.8`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "170.`", ",", "21.5`", ",", "23.5`", ",", "25.`", ",", "25.1`", ",", 
       "14.9`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "225.`", ",", "22.`", ",", "24.`", ",", "25.5`", ",", "28.6`", ",", 
       "14.6`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "145.`", ",", "22.`", ",", "24.`", ",", "25.5`", ",", "25.`", ",", 
       "15.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "188.`", ",", "22.6`", ",", "24.6`", ",", "26.2`", ",", "25.7`", ",", 
       "15.9`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "180.`", ",", "23.`", ",", "25.`", ",", "26.5`", ",", "24.3`", ",", 
       "13.9`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "197.`", ",", "23.5`", ",", "25.6`", ",", "27.`", ",", "24.3`", ",", 
       "15.7`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "218.`", ",", "25.`", ",", "26.5`", ",", "28.`", ",", "25.6`", ",", 
       "14.8`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "300.`", ",", "25.2`", ",", "27.3`", ",", "28.7`", ",", "29.`", ",", 
       "17.9`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "260.`", ",", "25.4`", ",", "27.5`", ",", "28.9`", ",", "24.8`", ",", 
       "15.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "265.`", ",", "25.4`", ",", "27.5`", ",", "28.9`", ",", "24.4`", ",", 
       "15.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "250.`", ",", "25.4`", ",", "27.5`", ",", "28.9`", ",", "25.2`", ",", 
       "15.8`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "250.`", ",", "25.9`", ",", "28.`", ",", "29.4`", ",", "26.6`", ",", 
       "14.3`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "300.`", ",", "26.9`", ",", "28.7`", ",", "30.1`", ",", "25.2`", ",", 
       "15.4`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "320.`", ",", "27.8`", ",", "30.`", ",", "31.6`", ",", "24.1`", ",", 
       "15.1`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "514.`", ",", "30.5`", ",", "32.8`", ",", "34.`", ",", "29.5`", ",", 
       "17.7`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "556.`", ",", "32.`", ",", "34.5`", ",", "36.5`", ",", "28.1`", ",", 
       "17.5`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "840.`", ",", "32.5`", ",", "35.`", ",", "37.3`", ",", "30.8`", ",", 
       "20.9`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "685.`", ",", "34.`", ",", "36.5`", ",", "39.`", ",", "27.9`", ",", 
       "17.6`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "700.`", ",", "34.`", ",", "36.`", ",", "38.3`", ",", "27.7`", ",", 
       "17.6`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "700.`", ",", "34.5`", ",", "37.`", ",", "39.4`", ",", "27.5`", ",", 
       "15.9`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "690.`", ",", "34.6`", ",", "37.`", ",", "39.3`", ",", "26.9`", ",", 
       "16.2`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "900.`", ",", "36.5`", ",", "39.`", ",", "41.4`", ",", "26.9`", ",", 
       "18.1`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "650.`", ",", "36.5`", ",", "39.`", ",", "41.4`", ",", "26.9`", ",", 
       "14.5`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "820.`", ",", "36.6`", ",", "39.`", ",", "41.3`", ",", "30.1`", ",", 
       "17.8`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "850.`", ",", "36.9`", ",", "40.`", ",", "42.3`", ",", "28.2`", ",", 
       "16.8`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "900.`", ",", "37.`", ",", "40.`", ",", "42.5`", ",", "27.6`", ",", 
       "17.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1015.`", ",", "37.`", ",", "40.`", ",", "42.4`", ",", "29.2`", ",", 
       "17.6`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "820.`", ",", "37.1`", ",", "40.`", ",", "42.5`", ",", "26.2`", ",", 
       "15.6`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1100.`", ",", "39.`", ",", "42.`", ",", "44.6`", ",", "28.7`", ",", 
       "15.4`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1000.`", ",", "39.8`", ",", "43.`", ",", "45.2`", ",", "26.4`", ",", 
       "16.1`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1100.`", ",", "40.1`", ",", "43.`", ",", "45.5`", ",", "27.5`", ",", 
       "16.3`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1000.`", ",", "40.2`", ",", "43.5`", ",", "46.`", ",", "27.4`", ",", 
       "17.7`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1000.`", ",", "41.1`", ",", "44.`", ",", "46.6`", ",", "26.8`", ",", 
       "16.3`"}], "}"}]}], "}"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.701622846863825*^9, 3.7016228533059397`*^9}},
 CellLabel->
  "In[124]:=",ExpressionUUID->"52b65463-9542-45e6-bb5d-214d1810d44d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Excel file clean up", "Subsection",
 CellChangeTimes->{{3.7066209932512665`*^9, 
  3.7066209973879137`*^9}},ExpressionUUID->"631d08c6-ba99-4b86-9b01-\
999b4a769a06"],

Cell["\<\
Initialization code/ Data cleaning for Slide You will look at renewables up \
through the year 2010. First, determine the number of the column containing \
the data you want to use. Referring to your table above, you see you want \
rows 4 through 57 and columns 1 and 9. Using pattern matching, convert the \
strings to numbers and extract only the yearly totals.Using replacement \
rules, \[OpenCurlyDoubleQuote]clean up\[CloseCurlyDoubleQuote] the rows \
corresponding to the years 2006, 2007, and 2008.\
\>", "Text",
 CellChangeTimes->{{3.574672766264118*^9, 3.5746727664150963`*^9}, 
   3.580041294993176*^9, {3.632234911782844*^9, 3.632234924566309*^9}, 
   3.701623118775034*^9, 3.7016231550800676`*^9, {3.7016232037751884`*^9, 
   3.7016232179919825`*^9}},ExpressionUUID->"52daa558-afaa-44e8-93ef-\
4d29af0d2093"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"electricData", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", 
        "\"\<epmxlfile1_1.xls\>\""}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", "1"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Dimensions", "[", "electricData", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Position", "[", 
   RowBox[{"electricData", ",", "\"\<Other Renewables[4]\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"renewables", "=", 
   RowBox[{"electricData", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"4", ";;", "57"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "9"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yearTots", "=", 
   RowBox[{"Cases", "[", 
    RowBox[{"renewables", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"_", "?", "NumericQ"}], "|", "\"\<Total\>\""}], ",", 
       RowBox[{"_", "?", "NumericQ"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"elecdata", "=", 
   RowBox[{"ReplacePart", "[", 
    RowBox[{"yearTots", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "3"}], ",", "1"}], "}"}], "\[Rule]", " ", "2006."}], 
       ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "1"}], "}"}], "\[Rule]", "2007."}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], "\[Rule]", "2008."}]}], 
      "}"}]}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7008215673436494`*^9, 3.700821586316769*^9}, {
  3.701107442982889*^9, 3.7011074636455884`*^9}, {3.701107517862075*^9, 
  3.7011075696568327`*^9}, {3.701623089919279*^9, 3.701623112117771*^9}, {
  3.7016231707466154`*^9, 3.701623196321854*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"40836d18-fe9d-486f-b19c-433eae452ae2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["United States data", "Subsection",
 CellChangeTimes->{{3.7066207788124566`*^9, 3.706620780704779*^9}, {
  3.7066209602561884`*^9, 
  3.7066209620917315`*^9}},ExpressionUUID->"906589fd-1c35-4a08-9b61-\
89c1eea2de29"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"popdat", "=", 
     RowBox[{"Normal", "@", 
      RowBox[{"EntityValue", "[", 
       RowBox[{
        RowBox[{"Entity", "[", 
         RowBox[{"\"\<Country\>\"", ",", "\"\<UnitedStates\>\""}], "]"}], ",", 
        RowBox[{"EntityProperty", "[", 
         RowBox[{"\"\<Country\>\"", ",", "\"\<Population\>\"", ",", 
          RowBox[{"{", 
           RowBox[{"\"\<Date\>\"", "\[Rule]", " ", 
            RowBox[{"Interval", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"DateObject", "[", 
                RowBox[{
                 RowBox[{"{", "1967", "}"}], ",", "\"\<Year\>\"", ",", 
                 "\"\<Gregorian\>\"", ",", 
                 RowBox[{"-", "5."}]}], "]"}], ",", 
               RowBox[{"DateObject", "[", 
                RowBox[{
                 RowBox[{"{", "2017", "}"}], ",", "\"\<Year\>\"", ",", 
                 "\"\<Gregorian\>\"", ",", 
                 RowBox[{"-", "5."}]}], "]"}]}], "}"}], "]"}]}], "}"}]}], 
         "]"}]}], "]"}]}]}], ";"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"popdat", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sun 1 Jan 1967\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1967", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "1.98712`*^8","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Mon 1 Jan 1968\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1968", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "2.00706`*^8","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Wed 1 Jan 1969\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1969", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "2.02677`*^8","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Thu 1 Jan 1970\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1970", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "209463865","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Fri 1 Jan 1971\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1971", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "211355529","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sat 1 Jan 1972\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1972", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "213250350","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Mon 1 Jan 1973\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1973", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "215164616","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Tue 1 Jan 1974\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1974", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "217113584","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Wed 1 Jan 1975\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1975", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "219108358","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Thu 1 Jan 1976\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1976", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "221161377","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sat 1 Jan 1977\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1977", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "223274855","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sun 1 Jan 1978\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1978", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "225436004","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Mon 1 Jan 1979\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1979", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "227624232","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Tue 1 Jan 1980\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1980", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "229825004","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Thu 1 Jan 1981\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1981", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "232035086","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Fri 1 Jan 1982\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1982", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "234261242","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sat 1 Jan 1983\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1983", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "236510688","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sun 1 Jan 1984\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1984", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "238794274","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Tue 1 Jan 1985\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1985", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "241119752","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Wed 1 Jan 1986\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1986", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "243495805","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Thu 1 Jan 1987\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1987", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "245920994","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Fri 1 Jan 1988\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1988", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "248381577","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sun 1 Jan 1989\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1989", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "250857751","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Mon 1 Jan 1990\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1990", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "253339097","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Tue 1 Jan 1991\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1991", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "255807342","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Wed 1 Jan 1992\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1992", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "258275919","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Fri 1 Jan 1993\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1993", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "260803255","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sat 1 Jan 1994\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1994", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "263468979","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sun 1 Jan 1995\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1995", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "266323717","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Mon 1 Jan 1996\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1996", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "269393632","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Wed 1 Jan 1997\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1997", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "272643340","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Thu 1 Jan 1998\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1998", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "275986072","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Fri 1 Jan 1999\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1999", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "279300030","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sat 1 Jan 2000\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2000", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "282496310","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Mon 1 Jan 2001\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2001", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "285544778","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Tue 1 Jan 2002\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2002", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "288467308","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Wed 1 Jan 2003\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2003", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "291290823","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Thu 1 Jan 2004\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2004", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "294063120","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sat 1 Jan 2005\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2005", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "296820296","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sun 1 Jan 2006\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2006", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "299564470","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Mon 1 Jan 2007\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2007", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "302284564","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Tue 1 Jan 2008\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2008", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "304989064","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Thu 1 Jan 2009\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2009", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "307686729","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Fri 1 Jan 2010\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2010", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "310383948","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sat 1 Jan 2011\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2011", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "313232044","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sun 1 Jan 2012\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2012", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "316265537","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Tue 1 Jan 2013\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2013", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "319330342","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Wed 1 Jan 2014\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2014", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "322422965","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Thu 1 Jan 2015\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2015", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "325539790","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Fri 1 Jan 2016\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2016", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "328677531","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sun 1 Jan 2017\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2017", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "331833494","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"GDP", "=", 
      RowBox[{"Normal", "@", 
       RowBox[{"EntityValue", "[", 
        RowBox[{
         RowBox[{"Entity", "[", 
          RowBox[{"\"\<Country\>\"", ",", "\"\<UnitedStates\>\""}], "]"}], 
         ",", 
         RowBox[{"EntityProperty", "[", 
          RowBox[{"\"\<Country\>\"", ",", "\"\<GDP\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"\"\<Date\>\"", "\[Rule]", " ", 
             RowBox[{"Interval", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"DateObject", "[", 
                 RowBox[{
                  RowBox[{"{", "2000", "}"}], ",", "\"\<Year\>\"", ",", 
                  "\"\<Gregorian\>\"", ",", 
                  RowBox[{"-", "5."}]}], "]"}], ",", 
                RowBox[{"DateObject", "[", 
                 RowBox[{
                  RowBox[{"{", "2015", "}"}], ",", "\"\<Year\>\"", ",", 
                  "\"\<Gregorian\>\"", ",", 
                  RowBox[{"-", "5."}]}], "]"}]}], "}"}], "]"}]}], "}"}]}], 
          "]"}]}], "]"}]}]}], ";"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"GDP", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sat 1 Jan 2000\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2000", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{"1.0284779`*^13",RowBox[{
             FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
           RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
           "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
           RowBox[{"{", "}"}]},
          "QuantityPrefixUnit"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Mon 1 Jan 2001\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2001", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{"1.0621824`*^13",RowBox[{
             FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
           RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
           "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
           RowBox[{"{", "}"}]},
          "QuantityPrefixUnit"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Tue 1 Jan 2002\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2002", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{"1.0977514`*^13",RowBox[{
             FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
           RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
           "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
           RowBox[{"{", "}"}]},
          "QuantityPrefixUnit"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Wed 1 Jan 2003\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2003", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{"1.151067`*^13",RowBox[{
             FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
           RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
           "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
           RowBox[{"{", "}"}]},
          "QuantityPrefixUnit"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Thu 1 Jan 2004\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2004", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{"1.2274928`*^13",RowBox[{
             FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
           RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
           "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
           RowBox[{"{", "}"}]},
          "QuantityPrefixUnit"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sat 1 Jan 2005\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2005", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{"1.3093726`*^13",RowBox[{
             FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
           RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
           "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
           RowBox[{"{", "}"}]},
          "QuantityPrefixUnit"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sun 1 Jan 2006\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2006", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{"1.3855888`*^13",RowBox[{
             FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
           RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
           "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
           RowBox[{"{", "}"}]},
          "QuantityPrefixUnit"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Mon 1 Jan 2007\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2007", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{"1.4477635`*^13",RowBox[{
             FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
           RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
           "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
           RowBox[{"{", "}"}]},
          "QuantityPrefixUnit"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Tue 1 Jan 2008\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2008", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{"1.4718582`*^13",RowBox[{
             FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
           RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
           "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
           RowBox[{"{", "}"}]},
          "QuantityPrefixUnit"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Thu 1 Jan 2009\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2009", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{"1.4418739`*^13",RowBox[{
             FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
           RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
           "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
           RowBox[{"{", "}"}]},
          "QuantityPrefixUnit"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Fri 1 Jan 2010\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2010", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{"1.4964372`*^13",RowBox[{
             FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
           RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
           "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
           RowBox[{"{", "}"}]},
          "QuantityPrefixUnit"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sat 1 Jan 2011\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2011", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{"1.5517926`*^13",RowBox[{
             FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
           RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
           "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
           RowBox[{"{", "}"}]},
          "QuantityPrefixUnit"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sun 1 Jan 2012\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2012", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{"1.6155255`*^13",RowBox[{
             FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
           RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
           "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
           RowBox[{"{", "}"}]},
          "QuantityPrefixUnit"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Tue 1 Jan 2013\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2013", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{"1.6691517`*^13",RowBox[{
             FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
           RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
           "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
           RowBox[{"{", "}"}]},
          "QuantityPrefixUnit"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Wed 1 Jan 2014\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2014", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{"1.7393103`*^13",RowBox[{
             FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
           RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
           "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
           RowBox[{"{", "}"}]},
          "QuantityPrefixUnit"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Thu 1 Jan 2015\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2015", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{"1.8036648`*^13",RowBox[{
             FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
           RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
           "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
           RowBox[{"{", "}"}]},
          "QuantityPrefixUnit"]}], "}"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Pop2000", "=", 
      RowBox[{"Normal", "@", 
       RowBox[{"EntityValue", "[", 
        RowBox[{
         RowBox[{"Entity", "[", 
          RowBox[{"\"\<Country\>\"", ",", "\"\<UnitedStates\>\""}], "]"}], 
         ",", 
         RowBox[{"EntityProperty", "[", 
          RowBox[{"\"\<Country\>\"", ",", "\"\<Population\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"\"\<Date\>\"", "\[Rule]", " ", 
             RowBox[{"Interval", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"DateObject", "[", 
                 RowBox[{
                  RowBox[{"{", "2000", "}"}], ",", "\"\<Year\>\"", ",", 
                  "\"\<Gregorian\>\"", ",", 
                  RowBox[{"-", "5."}]}], "]"}], ",", 
                RowBox[{"DateObject", "[", 
                 RowBox[{
                  RowBox[{"{", "2015", "}"}], ",", "\"\<Year\>\"", ",", 
                  "\"\<Gregorian\>\"", ",", 
                  RowBox[{"-", "5."}]}], "]"}]}], "}"}], "]"}]}], "}"}]}], 
          "]"}]}], "]"}]}]}], ";"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"Pop2000", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sat 1 Jan 2000\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2000", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "282496310","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Mon 1 Jan 2001\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2001", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "285544778","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Tue 1 Jan 2002\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2002", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "288467308","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Wed 1 Jan 2003\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2003", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "291290823","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Thu 1 Jan 2004\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2004", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "294063120","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sat 1 Jan 2005\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2005", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "296820296","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sun 1 Jan 2006\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2006", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "299564470","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Mon 1 Jan 2007\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2007", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "302284564","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Tue 1 Jan 2008\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2008", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "304989064","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Thu 1 Jan 2009\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2009", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "307686729","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Fri 1 Jan 2010\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2010", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "310383948","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sat 1 Jan 2011\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2011", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "313232044","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sun 1 Jan 2012\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2012", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "316265537","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Tue 1 Jan 2013\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2013", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "319330342","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Wed 1 Jan 2014\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2014", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "322422965","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Thu 1 Jan 2015\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2015", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "325539790","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          "Quantity"]}], "}"}]}], "}"}]}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7017717056746287`*^9, 3.701771727700796*^9}, {
   3.7017731416339607`*^9, 3.7017731422655983`*^9}, 3.7017744878371477`*^9, {
   3.7066207842002115`*^9, 3.706620855663538*^9}, 3.7066209543001175`*^9},
 CellLabel->
  "In[131]:=",ExpressionUUID->"49e0f61b-400f-4bef-9f0b-163ea2059cb8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["India data", "Subsection",
 CellChangeTimes->{{3.7066207392046757`*^9, 
  3.7066207409864473`*^9}},ExpressionUUID->"3e3426ae-67c4-4872-8af7-\
0f8b114e41d5"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"(*", 
   RowBox[{"popdat", "=", 
    RowBox[{"Normal", "@", 
     RowBox[{"EntityValue", "[", 
      RowBox[{
       RowBox[{"Entity", "[", 
        RowBox[{"\"\<Country\>\"", ",", "\"\<India\>\""}], "]"}], ",", 
       RowBox[{"EntityProperty", "[", 
        RowBox[{"\"\<Country\>\"", ",", "\"\<Population\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Date\>\"", "\[Rule]", " ", 
           RowBox[{"Interval", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"DateObject", "[", 
               RowBox[{
                RowBox[{"{", "1967", "}"}], ",", "\"\<Year\>\"", ",", 
                "\"\<Gregorian\>\"", ",", 
                RowBox[{"-", "5."}]}], "]"}], ",", 
              RowBox[{"DateObject", "[", 
               RowBox[{
                RowBox[{"{", "2017", "}"}], ",", "\"\<Year\>\"", ",", 
                "\"\<Gregorian\>\"", ",", 
                RowBox[{"-", "5."}]}], "]"}]}], "}"}], "]"}]}], "}"}]}], 
        "]"}]}], "]"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"popdat", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Sun 1 Jan 1967\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1967", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "5.04345`*^8","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Mon 1 Jan 1968\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1968", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "5.15601`*^8","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Wed 1 Jan 1969\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1969", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "5.27177`*^8","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Thu 1 Jan 1970\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1970", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "553873890","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Fri 1 Jan 1971\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1971", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "566651479","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Sat 1 Jan 1972\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1972", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "579871075","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Mon 1 Jan 1973\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1973", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "593526633","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Tue 1 Jan 1974\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1974", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "607606569","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Wed 1 Jan 1975\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1975", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "622096682","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Thu 1 Jan 1976\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1976", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "636992593","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Sat 1 Jan 1977\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1977", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "652279308","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Sun 1 Jan 1978\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1978", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "667917437","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Mon 1 Jan 1979\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1979", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "683857312","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Tue 1 Jan 1980\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1980", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "700058589","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Thu 1 Jan 1981\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1981", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "716493309","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Fri 1 Jan 1982\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1982", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "733151769","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Sat 1 Jan 1983\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1983", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "750033539","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Sun 1 Jan 1984\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1984", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "767146806","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Tue 1 Jan 1985\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1985", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "784490842","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Wed 1 Jan 1986\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1986", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "802051806","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Thu 1 Jan 1987\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1987", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "819800055","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Fri 1 Jan 1988\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1988", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "837699675","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Sun 1 Jan 1989\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1989", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "855707358","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Mon 1 Jan 1990\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1990", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "873785449","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Tue 1 Jan 1991\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1991", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "891910180","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Wed 1 Jan 1992\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1992", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "910064576","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Fri 1 Jan 1993\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1993", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "928226051","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Sat 1 Jan 1994\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1994", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "946373316","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Sun 1 Jan 1995\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1995", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "964486155","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Mon 1 Jan 1996\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1996", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "982553253","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Wed 1 Jan 1997\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1997", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "1000558144","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Thu 1 Jan 1998\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1998", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "1018471141","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Fri 1 Jan 1999\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"1999", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "1036258683","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Sat 1 Jan 2000\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2000", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "1053898107","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Mon 1 Jan 2001\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2001", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "1071374264","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Tue 1 Jan 2002\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2002", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "1088694080","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Wed 1 Jan 2003\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2003", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "1105885689","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Thu 1 Jan 2004\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2004", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "1122991192","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Sat 1 Jan 2005\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2005", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "1140042863","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Sun 1 Jan 2006\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2006", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "1157038539","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Mon 1 Jan 2007\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2007", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "1173971629","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Tue 1 Jan 2008\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2008", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "1190863679","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Thu 1 Jan 2009\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2009", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "1207740408","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Fri 1 Jan 2010\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2010", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "1224614327","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Sat 1 Jan 2011\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2011", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "1241491960","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Sun 1 Jan 2012\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2012", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "1258350971","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Tue 1 Jan 2013\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2013", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "1275137828","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Wed 1 Jan 2014\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2014", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "1291780156","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Thu 1 Jan 2015\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2015", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "1308220695","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Fri 1 Jan 2016\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2016", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "1324435275","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Sun 1 Jan 2017\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2017", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{
         "1340420485","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
         "Quantity"]}], "}"}]}], "}"}]}], ";", "\n", 
   RowBox[{"(*", 
    RowBox[{"GDP", "=", 
     RowBox[{"Normal", "@", 
      RowBox[{"EntityValue", "[", 
       RowBox[{
        RowBox[{"Entity", "[", 
         RowBox[{"\"\<Country\>\"", ",", "\"\<India\>\""}], "]"}], ",", 
        RowBox[{"EntityProperty", "[", 
         RowBox[{"\"\<Country\>\"", ",", "\"\<GDP\>\"", ",", 
          RowBox[{"{", 
           RowBox[{"\"\<Date\>\"", "\[Rule]", " ", 
            RowBox[{"Interval", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"DateObject", "[", 
                RowBox[{
                 RowBox[{"{", "2000", "}"}], ",", "\"\<Year\>\"", ",", 
                 "\"\<Gregorian\>\"", ",", 
                 RowBox[{"-", "5."}]}], "]"}], ",", 
               RowBox[{"DateObject", "[", 
                RowBox[{
                 RowBox[{"{", "2015", "}"}], ",", "\"\<Year\>\"", ",", 
                 "\"\<Gregorian\>\"", ",", 
                 RowBox[{"-", "5."}]}], "]"}]}], "}"}], "]"}]}], "}"}]}], 
         "]"}]}], "]"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"GDP", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Sat 1 Jan 2000\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2000", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{"4.76609148165173`*^11",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
          RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
          "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
          RowBox[{"{", "}"}]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Mon 1 Jan 2001\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2001", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{"4.93954161367563`*^11",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
          RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
          "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
          RowBox[{"{", "}"}]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Tue 1 Jan 2002\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2002", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{"5.23968381476715`*^11",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
          RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
          "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
          RowBox[{"{", "}"}]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Wed 1 Jan 2003\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2003", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{"6.18356467437027`*^11",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
          RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
          "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
          RowBox[{"{", "}"}]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Thu 1 Jan 2004\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2004", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{"7.21584805204777`*^11",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
          RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
          "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
          RowBox[{"{", "}"}]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Sat 1 Jan 2005\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2005", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{"8.3421469956814`*^11",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
          RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
          "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
          RowBox[{"{", "}"}]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Sun 1 Jan 2006\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2006", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{"9.49116769619554`*^11",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
          RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
          "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
          RowBox[{"{", "}"}]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Mon 1 Jan 2007\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2007", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{"1.20107196052975`*^12",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
          RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
          "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
          RowBox[{"{", "}"}]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Tue 1 Jan 2008\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2008", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{"1.18691341902134`*^12",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
          RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
          "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
          RowBox[{"{", "}"}]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Thu 1 Jan 2009\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2009", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{"1.32389641714706`*^12",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
          RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
          "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
          RowBox[{"{", "}"}]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Fri 1 Jan 2010\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2010", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{"1.65656216864857`*^12",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
          RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
          "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
          RowBox[{"{", "}"}]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Sat 1 Jan 2011\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2011", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{"1.82298950729005`*^12",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
          RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
          "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
          RowBox[{"{", "}"}]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Sun 1 Jan 2012\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2012", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{"1.828985283085`*^12",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
          RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
          "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
          RowBox[{"{", "}"}]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Tue 1 Jan 2013\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2013", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{"1.86320834355781`*^12",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
          RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
          "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
          RowBox[{"{", "}"}]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Wed 1 Jan 2014\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2014", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{"2.04243859134398`*^12",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
          RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
          "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
          RowBox[{"{", "}"}]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Thu 1 Jan 2015\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2015", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", 
        TemplateBox[{"2.09539834909554`*^12",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
          RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
          "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""],
          RowBox[{"{", "}"}]},
         "QuantityPrefixUnit"]}], "}"}]}], "}"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"Pop2000", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Normal", "@", 
       RowBox[{"EntityValue", "[", 
        RowBox[{
         RowBox[{"Entity", "[", 
          RowBox[{"\"\<Country\>\"", ",", "\"\<India\>\""}], "]"}], ",", 
         RowBox[{"EntityProperty", "[", 
          RowBox[{"\"\<Country\>\"", ",", "\"\<Population\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"\"\<Date\>\"", "\[Rule]", " ", 
             RowBox[{"Interval", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"DateObject", "[", 
                 RowBox[{
                  RowBox[{"{", "2000", "}"}], ",", "\"\<Year\>\"", ",", 
                  "\"\<Gregorian\>\"", ",", 
                  RowBox[{"-", "5."}]}], "]"}], ",", 
                RowBox[{"DateObject", "[", 
                 RowBox[{
                  RowBox[{"{", "2015", "}"}], ",", "\"\<Year\>\"", ",", 
                  "\"\<Gregorian\>\"", ",", 
                  RowBox[{"-", "5."}]}], "]"}]}], "}"}], "]"}]}], "}"}]}], 
          "]"}]}], "]"}]}], "\n", "Pop2000"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sat 1 Jan 2000\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2000", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "1053898107","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Mon 1 Jan 2001\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2001", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "1071374264","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Tue 1 Jan 2002\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2002", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "1088694080","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Wed 1 Jan 2003\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2003", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "1105885689","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Thu 1 Jan 2004\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2004", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "1122991192","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sat 1 Jan 2005\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2005", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "1140042863","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sun 1 Jan 2006\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2006", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "1157038539","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Mon 1 Jan 2007\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2007", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "1173971629","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Tue 1 Jan 2008\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2008", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "1190863679","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Thu 1 Jan 2009\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2009", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "1207740408","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Fri 1 Jan 2010\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2010", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "1224614327","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sat 1 Jan 2011\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2011", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "1241491960","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Sun 1 Jan 2012\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2012", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "1258350971","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Tue 1 Jan 2013\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2013", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "1275137828","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Wed 1 Jan 2014\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2014", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "1291780156","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{RowBox[{
             StyleBox[
             "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
             "\"Thu 1 Jan 2015\""}],RowBox[{"DateObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2015", ",", "1", ",", "1"}], "}"}], ",", "\"Day\"", 
               ",", "\"Gregorian\"", ",", 
               RowBox[{"-", "5.`"}]}], "]"}]},
          "DateObject",
          Editable->False], ",", 
         TemplateBox[{
          "1308220695","\"people\"","people","\"People\"",RowBox[{"{", "}"}]},
          
          "Quantity"]}], "}"}]}], "}"}]}]}], ";"}], "*)"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7017717056746287`*^9, 3.701771727700796*^9}, {
   3.7017731416339607`*^9, 3.7017731422655983`*^9}, 3.7017744878371477`*^9},
 CellLabel->
  "In[134]:=",ExpressionUUID->"184d61bb-9a46-40e1-8d42-7578eeaa1410"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Other data", "Subsection",
 CellChangeTimes->{{3.7066207530737157`*^9, 
  3.7066207539448276`*^9}},ExpressionUUID->"66abb1e4-cc95-4063-ab5d-\
880964898806"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NiceTable", "[", 
   RowBox[{"lis_List", ",", 
    RowBox[{"opts", ":", 
     RowBox[{"OptionsPattern", "[", "Grid", "]"}]}]}], "]"}], ":=", " ", 
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"Partition", "[", 
     RowBox[{"lis", ",", "4", ",", "4", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"-", "1"}]}], "}"}], ",", "\"\<\>\""}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"opts", ",", 
      RowBox[{"Alignment", "\[Rule]", " ", "Left"}]}], "}"}]}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellLabel->
  "In[135]:=",ExpressionUUID->"0fbe8e68-ba72-4f45-9fd6-547aa2ec3f5e"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
Saveable->False,
ScreenStyleEnvironment->"Slideshow Presentation",
WindowSize->{1024, 768},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"Wolfram Summer School Lecture Template",
WindowStatusArea->None,
TaggingRules->{"PresenterSettings" -> {"ShowNavigationBar" -> True}},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Title and Section Cells", "Section"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["WSSBanner"], CellFrameMargins -> {{0, 8}, {10, 20}}, 
          CellFrameLabels -> {{None, None}, {None, None}}, FontFamily -> 
          "Source Sans Pro", FontSize -> 42, FontWeight -> "Regular", 
          FontSlant -> "Plain", FontVariations -> {"CapsType" -> "AllCaps"}, 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}], 
         Cell[
          StyleData["WSSBanner", "SlideShow"], LineSpacing -> {1, 2}, 
          FontSize -> 42], 
         Cell[
          StyleData[
          "WSSBanner", "Slideshow Working", StyleDefinitions -> 
           StyleData["WSSBanner", "SlideShow"]]], 
         Cell[
          StyleData[
          "WSSBanner", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["WSSBanner", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "WSSBanner", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["WSSBanner", "Slideshow Working"]], 
          CellFrameLabels -> {{None, None}, {None, None}}]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["WolframULogo"], CellGroupingRules -> "GraphicsGrouping", 
          PageBreakWithin -> False, GeneratedCell -> True, CellAutoOverwrite -> 
          True, ShowCellLabel -> False, DefaultFormatType -> 
          DefaultOutputFormatType, LanguageCategory -> "NaturalLanguage", 
          FormatType -> StandardForm, ShowStringCharacters -> False, 
          FrontFaceColor -> GrayLevel[0], BackFaceColor -> GrayLevel[0], 
          FrontFaceOpacity -> 1, GraphicsColor -> GrayLevel[0], PointSize -> 
          Absolute[3], Thickness -> Medium, Opacity -> 1, DrawEdges -> False, 
          StyleMenuListing -> None, FontFamily -> "Arial", FontSize -> 10, 
          FontWeight -> "Plain", FontColor -> GrayLevel[0], FontOpacity -> 
          1, $CellContext`StripStyleOnPaste -> 
          False, $CellContext`BackFaceOpacity -> 1], 
         Cell[
          StyleData["WolframULogo", "SlideShow"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.04 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
            0.2, 0.02 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}], 
         Cell[
          StyleData[
          "WolframULogo", "Slideshow Working", StyleDefinitions -> 
           StyleData["WolframULogo", "SlideShow"]]], 
         Cell[
          StyleData[
          "WolframULogo", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["WolframULogo", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "WolframULogo", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["WolframULogo", "Slideshow Working"]], 
          CellFrameLabels -> {{None, None}, {None, None}}]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Title", "Subsection"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Title"], FontFamily -> "Source Sans Pro", FontSize -> 
             81, FontWeight -> "Regular", FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> 
             RGBColor[
              0.09019607843137255, 0.1607843137254902, 0.25882352941176473`]], 
            Cell[
             StyleData["Title", "SlideShow"], 
             CellMargins -> {{
               0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.04 
                FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
               12, 0.08 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}, 
             LineSpacing -> {1, 2}, FontSize -> 81], 
            Cell[
             StyleData[
             "Title", "Slideshow Working", StyleDefinitions -> 
              StyleData["Title", "SlideShow"]]], 
            Cell[
             StyleData[
             "Title", "Slideshow Presentation", StyleDefinitions -> 
              StyleData["Title", "Slideshow Working"]]], 
            Cell[
             StyleData[
             "Title", "Scrolling Presentation", StyleDefinitions -> 
              StyleData["Title", "Slideshow Working"]], 
             CellFrameLabels -> {{None, None}, {None, None}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subtitle"], FontFamily -> "Source Sans Pro", FontSize -> 
             40, FontWeight -> "Light", FontSlant -> "Italic", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> 
             RGBColor[
              0.25098039215686274`, 0.25098039215686274`, 
               0.25098039215686274`]], 
            Cell[
             StyleData["Subtitle", "SlideShow"], 
             CellMargins -> {{
               0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.04 
                FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {50, 12}}, 
             LineSpacing -> {1, 2}, FontSize -> 48], 
            Cell[
             StyleData[
             "Subtitle", "Slideshow Working", StyleDefinitions -> 
              StyleData["Subtitle", "SlideShow"]]], 
            Cell[
             StyleData[
             "Subtitle", "Slideshow Presentation", StyleDefinitions -> 
              StyleData["Subtitle", "Slideshow Working"]]], 
            Cell[
             StyleData[
             "Subtitle", "Scrolling Presentation", StyleDefinitions -> 
              StyleData["Subtitle", "Slideshow Working"]]]}, Open]]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell["Section", "Subsection"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Section"], CellFrame -> {{0, 0}, {0, 0}}, FontFamily -> 
             "Source Sans Pro", FontSize -> 70, FontWeight -> "Regular", 
             FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
            Cell[
             StyleData["Section", "SlideShow"], 
             CellMargins -> {{
               0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.04 
                FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
               26, 0.06 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}, 
             LineSpacing -> {1, 2}, FontSize -> 40], 
            Cell[
             StyleData[
             "Section", "Slideshow Working", StyleDefinitions -> 
              StyleData["Section", "SlideShow"]]], 
            Cell[
             StyleData[
             "Section", "Slideshow Presentation", StyleDefinitions -> 
              StyleData["Section", "SlideShow"]]], 
            Cell[
             StyleData[
             "Section", "Scrolling Presentation", StyleDefinitions -> 
              StyleData["Section", "SlideShow"]], 
             CellFrameLabels -> {{None, None}, {None, None}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsection"], FontFamily -> "Source Sans Pro", 
             FontSize -> 40, FontWeight -> "Regular", FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> 
             RGBColor[1., 0.592156862745098, 0.10196078431372549`]], 
            Cell[
             StyleData["Subsection", "SlideShow"], 
             CellMargins -> {{
               0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.04 
                FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
               12, 0.04 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}, 
             LineSpacing -> {1, 2}, FontSize -> 32], 
            Cell[
             StyleData[
             "Subsection", "Slideshow Working", StyleDefinitions -> 
              StyleData["Subsection", "SlideShow"]]], 
            Cell[
             StyleData[
             "Subsection", "Slideshow Presentation", StyleDefinitions -> 
              StyleData["Subsection", "Slideshow Working"]]], 
            Cell[
             StyleData[
             "Subsection", "Scrolling Presentation", StyleDefinitions -> 
              StyleData["Subsection", "Slideshow Working"]]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubsection"], FontFamily -> "Source Sans Pro", 
             FontSize -> 20, FontWeight -> "Regular", FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
            Cell[
             StyleData["Subsubsection", "SlideShow"], 
             CellMargins -> {{
               0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.04 
                FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
               12, 0.04 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}, 
             LineSpacing -> {1, 2}, FontSize -> 32], 
            Cell[
             StyleData[
             "Subsubsection", "Slideshow Working", StyleDefinitions -> 
              StyleData["Subsubsection", "SlideShow"]]], 
            Cell[
             StyleData[
             "Subsubsection", "Slideshow Presentation", StyleDefinitions -> 
              StyleData["Subsubsection", "Slideshow Working"]]], 
            Cell[
             StyleData[
             "Subsubsection", "Scrolling Presentation", StyleDefinitions -> 
              StyleData["Subsubsection", "Slideshow Working"]]]}, Closed]]}, 
        Open]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
      "Styles for Body Content", "Section", 
       CellChangeTimes -> {{3.727532504641029*^9, 3.727532505736285*^9}}], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Text"], LineSpacing -> {1, 3}, TabSpacings -> {2.5}, 
          CounterIncrements -> "Text", MenuSortingValue -> 1400, 
          MenuCommandKey -> "7", FontFamily -> "Source Sans Pro", FontSize -> 
          15, FontWeight -> "Regular", FontSlant -> "Plain", 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}], 
         Cell[
          StyleData["Text", "SlideShow"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 10}}, 
          FontSize -> 22], 
         Cell[
          StyleData[
          "Text", "Slideshow Working", StyleDefinitions -> 
           StyleData["Text", "SlideShow"]]], 
         Cell[
          StyleData[
          "Text", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Text", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Text", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Text", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["CodeText"], LineSpacing -> {1, 3}, TabSpacings -> {2.5}, 
          CounterIncrements -> "CodeText", MenuSortingValue -> 1540, 
          FontColor -> GrayLevel[0.45]], 
         Cell[
          StyleData["CodeText", "SlideShow"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 10}}, 
          FontSize -> 18], 
         Cell[
          StyleData[
          "CodeText", "Slideshow Working", StyleDefinitions -> 
           StyleData["CodeText", "SlideShow"]]], 
         Cell[
          StyleData[
          "CodeText", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["CodeText", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "CodeText", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["CodeText", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Note"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 10}}, 
          CellOpen -> True, LineSpacing -> {1, 3}, CounterIncrements -> 
          "Note", MenuSortingValue -> 8, FontFamily -> "Source Sans Pro", 
          FontSize -> 12, FontSlant -> "Italic", Background -> 
          GrayLevel[0.85]], 
         Cell[
          StyleData["Note", "SlideShow"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 10}}, 
          CellOpen -> False, 
          HyphenationOptions -> {"HyphenationCharacter" -> "-"}, 
          ParagraphSpacing -> {0, 6}, ParagraphIndent -> -10, 
          StyleMenuListing -> None, FontSize -> 18], 
         Cell[
          StyleData[
          "Note", "Slideshow Working", StyleDefinitions -> 
           StyleData["Note"]]], 
         Cell[
          StyleData[
          "Note", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Note", "SlideShow"]]], 
         Cell[
          StyleData[
          "Note", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Note", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Item"], CellDingbat -> 
          StyleBox["\[FilledSmallCircle]", Alignment -> Baseline, 
            RGBColor[1., 0.42745098039215684`, 0.]]], 
         Cell[
          StyleData["Item", "SlideShow"], 
          CellMargins -> {{
            0.165 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 10}}, 
          CellFrameLabelMargins -> 8, FontSize -> 22], 
         Cell[
          StyleData[
          "Item", "Slideshow Working", StyleDefinitions -> 
           StyleData["Item", "SlideShow"]]], 
         Cell[
          StyleData[
          "Item", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Item", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Item", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Item", "Slideshow Working"]]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ItemParagraph"], CellMargins -> {{81, 10}, {4, 1}}, 
          ReturnCreatesNewCell -> True, 
          StyleKeyMapping -> {"Tab" -> "SubitemParagraph"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15000}, 
          DefaultNewCellStyle -> "Item", MenuSortingValue -> 1600, FontFamily -> 
          Dynamic[
            CurrentValue[{StyleHints, "FontSet", "Text1"}]], FontSize -> 14, 
          FontColor -> Dynamic[
            FrontEnd`CurrentValue[{StyleHints, "ColorSet", "Text1"}], None]], 
         
         Cell[
          StyleData["ItemParagraph", "SlideShow"], ShowGroupOpener -> False, 
          CellMargins -> {{
            0.18 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 2}}, 
          FontSize -> 22], 
         Cell[
          StyleData[
          "ItemParagraph", "Slideshow Working", StyleDefinitions -> 
           StyleData["ItemParagraph", "SlideShow"]]], 
         Cell[
          StyleData[
          "ItemParagraph", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["ItemParagraph", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "ItemParagraph", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["ItemParagraph", "Slideshow Working"]]], 
         Cell[
          StyleData["ItemParagraph", "Printout"], 
          CellMargins -> {{65, Inherited}, {Inherited, 0.5 Inherited}}]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Subitem"], CellDingbat -> 
          StyleBox["\[FilledSmallCircle]", Alignment -> Baseline, 
            RGBColor[1., 0.592156862745098, 0.10196078431372549`]]], 
         Cell[
          StyleData["Subitem", "SlideShow"], 
          CellMargins -> {{
            0.185 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 10}}, 
          CellFrameLabelMargins -> 8, FontSize -> 22], 
         Cell[
          StyleData[
          "Subitem", "Slideshow Working", StyleDefinitions -> 
           StyleData["Subitem", "SlideShow"]]], 
         Cell[
          StyleData[
          "Subitem", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Subitem", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Subitem", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Subitem", "Slideshow Working"]]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SubitemParagraph"], CellMargins -> {{105, 12}, {4, 1}}, 
          ReturnCreatesNewCell -> True, 
          StyleKeyMapping -> {
           "Tab" -> "SubsubitemParagraph", "Backspace" -> 
            "ItemParagraph", $CellContext`KeyEvent[
             "Tab", $CellContext`Modifiers -> {$CellContext`Shift}] -> 
            "ItemParagraph"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15100}, 
          CellFrameLabelMargins -> 4, DefaultNewCellStyle -> "Subitem", 
          MenuSortingValue -> 1610, FontFamily -> Dynamic[
            CurrentValue[{StyleHints, "FontSet", "Text1"}]], FontSize -> 13.5,
           FontColor -> Dynamic[
            CurrentValue[{StyleHints, "ColorSet", "Text1"}]]], 
         Cell[
          StyleData["SubitemParagraph", "SlideShow"], 
          CellMargins -> {{
            0.2 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 2}}, 
          FontSize -> 22], 
         Cell[
          StyleData[
          "SubitemParagraph", "Slideshow Working", StyleDefinitions -> 
           StyleData["SubitemParagraph", "SlideShow"]]], 
         Cell[
          StyleData[
          "SubitemParagraph", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["SubitemParagraph", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "SubitemParagraph", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["SubitemParagraph", "Slideshow Working"]]], 
         Cell[
          StyleData["SubitemParagraph", "Printout"], 
          CellMargins -> {{92, Inherited}, {Inherited, 0.1 Inherited}}]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ItemNumbered"], CellDingbat -> Cell[
            TextData[{
              CounterBox["ItemNumbered"], "."}], FontWeight -> "Bold"], 
          CellMargins -> {{81, 10}, {4, 8}}, ReturnCreatesNewCell -> True, 
          StyleKeyMapping -> {"Tab" -> "SubitemNumbered"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15000}, 
          CellFrameLabelMargins -> 4, CounterIncrements -> "ItemNumbered", 
          CounterAssignments -> {{"SubitemNumbered", 0}, {
            "SubsubitemNumbered", 0}}, MenuSortingValue -> 1630, FontFamily -> 
          "Source Sans Pro", FontSize -> 15], 
         Cell[
          StyleData["ItemNumbered", "SlideShow"], 
          CellMargins -> {{
            0.17 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 10}}, 
          CellFrameLabelMargins -> 6, FontSize -> 22], 
         Cell[
          StyleData[
          "ItemNumbered", "Slideshow Working", StyleDefinitions -> 
           StyleData["ItemNumbered", "SlideShow"]]], 
         Cell[
          StyleData[
          "ItemNumbered", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["ItemNumbered", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "ItemNumbered", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["ItemNumbered", "Slideshow Working"]]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SubitemNumbered"], CellDingbat -> Cell[
            TextData[{
              CounterBox["ItemNumbered"], ".", 
              CounterBox["SubitemNumbered"], "."}], FontWeight -> "Bold"], 
          CellMargins -> {{105, 12}, {4, 4}}, ReturnCreatesNewCell -> True, 
          StyleKeyMapping -> {
           "Tab" -> "SubsubitemNumbered", "Backspace" -> 
            "ItemNumbered", $CellContext`KeyEvent[
             "Tab", $CellContext`Modifiers -> {$CellContext`Shift}] -> 
            "ItemNumbered"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15100}, 
          CellFrameLabelMargins -> 4, DefaultNewCellStyle -> "Item", 
          CounterIncrements -> "SubitemNumbered", 
          CounterAssignments -> {{"SubsubitemNumbered", 0}}, MenuSortingValue -> 
          1640, FontFamily -> Dynamic[
            CurrentValue[{StyleHints, "FontSet", "Text1"}]], FontSize -> 
          13.5], 
         Cell[
          StyleData["SubitemNumbered", "SlideShow"], 
          CellMargins -> {{
            0.195 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 10}}, 
          CellFrameLabelMargins -> 6, FontSize -> 22], 
         Cell[
          StyleData[
          "SubitemNumbered", "Slideshow Working", StyleDefinitions -> 
           StyleData["SubitemNumbered", "SlideShow"]]], 
         Cell[
          StyleData[
          "SubitemNumbered", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["SubitemNumbered", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "SubitemNumbered", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["SubitemNumbered", "Slideshow Working"]]], 
         Cell[
          StyleData["SubitemNumbered", "Printout"], 
          CellMargins -> {{92, Inherited}, {Inherited, Inherited}}]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Graphics"], CellMargins -> {{27, Inherited}, {15, 15}}, 
          CellGroupingRules -> "GraphicsGrouping", PageBreakWithin -> False, 
          GeneratedCell -> True, CellAutoOverwrite -> True, ShowCellLabel -> 
          False, DefaultFormatType -> DefaultOutputFormatType, ContextMenu -> 
          FEPrivate`FrontEndResource["ContextMenus", "Graphics"], 
          AutoStyleOptions -> {"HighlightMisspelledWords" -> False}, 
          LanguageCategory -> "NaturalLanguage", FormatType -> StandardForm, 
          ShowStringCharacters -> False, NumberMarks -> False, 
          CounterIncrements -> "Graphics", 
          ImageMargins -> {{43, Inherited}, {Inherited, 0}}, Arrowheads -> 
          0.04, Dashing -> None, CapForm -> "Square", 
          JoinForm -> {"Miter", 3.25}, LineColor -> GrayLevel[0], LineOpacity -> 
          1, EdgeColor -> GrayLevel[0], EdgeOpacity -> 1, EdgeThickness -> 
          Medium, EdgeDashing -> None, EdgeCapForm -> "Square", 
          EdgeJoinForm -> {"Miter", 3.25}, FrontFaceColor -> GrayLevel[0], 
          BackFaceColor -> GrayLevel[0], FrontFaceOpacity -> 1, GraphicsColor -> 
          GrayLevel[0], PointSize -> Absolute[3], Thickness -> Medium, 
          Opacity -> 1, DrawEdges -> False, StyleMenuListing -> None, 
          FontFamily -> "Arial", FontSize -> 10, FontWeight -> "Plain", 
          FontColor -> GrayLevel[0], FontOpacity -> 
          1, $CellContext`StripStyleOnPaste -> 
          False, $CellContext`BackFaceOpacity -> 1], 
         Cell[
          StyleData["Graphics", "SlideShow"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {12, 12}}], 
         Cell[
          StyleData[
          "Graphics", "Slideshow Working", StyleDefinitions -> 
           StyleData["Graphics", "SlideShow"]]], 
         Cell[
          StyleData[
          "Graphics", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Graphics", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Graphics", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Graphics", "Slideshow Working"]]]}, Closed]], 
      Cell[
       StyleData["Hyperlink"], FontColor -> 
       RGBColor[0.269993, 0.308507, 0.6]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["KeyEvent"], CellFrame -> {{1, 1}, {1, 1}}, 
          CellFrameMargins -> {{2, 2}, {2, 2}}, CellFrameColor -> 
          GrayLevel[0.8], FontFamily -> "Source Sans Pro", FontColor -> 
          GrayLevel[0.360784], Background -> GrayLevel[0.964706]], 
         Cell[
          StyleData["KeyEvent", "SlideShow"]], 
         Cell[
          StyleData[
          "KeyEvent", "Slideshow Working", StyleDefinitions -> 
           StyleData["KeyEvent", "SlideShow"]]], 
         Cell[
          StyleData[
          "KeyEvent", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["KeyEvent", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "KeyEvent", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["KeyEvent", "Slideshow Working"]]]}, Closed]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Input and Output Cells", "Section"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Input"], CellMargins -> {{66, 10}, {5, 8}}, 
          StyleKeyMapping -> {"=" -> "WolframAlphaShort", "*" -> "Item"}, 
          FontSize -> 13], 
         Cell[
          StyleData["Input", "SlideShow"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.01 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {8, 15}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData[
          "Input", "Slideshow Working", StyleDefinitions -> 
           StyleData["Input", "SlideShow"]]], 
         Cell[
          StyleData[
          "Input", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Input", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Input", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Input", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData[
          "ExperimentalInput", StyleDefinitions -> StyleData["Input"]], 
          CellFrame -> True, CellMargins -> {{66, 10}, {5, 8}}, 
          StyleKeyMapping -> {"=" -> "WolframAlphaShort", "*" -> "Item"}, 
          CellFrameColor -> 
          RGBColor[1., 0.592156862745098, 0.10196078431372549`], 
          CellFrameLabels -> {{
             Cell[
              BoxData[
               InterpretationBox[
                Cell[
                 BoxData[
                  RotationBox[
                  "Experimental", BoxRotation -> 1.5707963267948966`]], 
                 "Text", LineColor -> 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`], 
                 FrontFaceColor -> 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`], 
                 BackFaceColor -> 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`], 
                 GraphicsColor -> 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`], 
                 FontSize -> 10, FontColor -> 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`]], 
                TextCell[
                 Rotate["Experimental", 90 Degree], "Text", 10, 
                 RGBColorRGBColor[
                 1., 0.592156862745098, 0.10196078431372549`]]]]], None}, {
            None, None}}, FontSize -> 13], 
         Cell[
          StyleData["ExperimentalInput", "SlideShow"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.01 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {8, 15}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData[
          "ExperimentalInput", "Slideshow Working", StyleDefinitions -> 
           StyleData["Input", "SlideShow"]]], 
         Cell[
          StyleData[
          "ExperimentalInput", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Input", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "ExperimentalInput", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Input", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["InputOnly"], CellMargins -> {{66, 10}, {7, 8}}, FontSize -> 
          13], 
         Cell[
          StyleData["InputOnly", "SlideShow"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.01 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 15}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}], 
         Cell[
          StyleData[
          "InputOnly", "Slideshow Working", StyleDefinitions -> 
           StyleData["InputOnly", "SlideShow"]]], 
         Cell[
          StyleData[
          "InputOnly", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["InputOnly", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "InputOnly", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["InputOnly", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Code"]], 
         Cell[
          StyleData["Code", "SlideShow"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.01 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {8, 15}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData[
          "Code", "Slideshow Working", StyleDefinitions -> 
           StyleData["Code", "SlideShow"]]], 
         Cell[
          StyleData[
          "Code", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Code", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Code", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Code", "Slideshow Working"]]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Output"], CellMargins -> {{66, 10}, {12, 5}}, FontSize -> 
          13], 
         Cell[
          StyleData["Output", "SlideShow"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.01 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {15, 8}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData[
          "Output", "Slideshow Working", StyleDefinitions -> 
           StyleData["Output", "SlideShow"]]], 
         Cell[
          StyleData[
          "Output", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Output", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Output", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Output", "Slideshow Working"]]]}, Closed]]}, Open]]}, 
  Visible -> False, FrontEndVersion -> 
  "11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, 2018)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SlideShowHeader"->{
  Cell[632, 23, 136, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"60bc568f-b20e-4b9a-b496-b94f48bda20e",
   CellTags->"SlideShowHeader"],
  Cell[1593700, 33350, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"fc96e66c-467d-4859-b563-1aa5d0e6d5a3",
   CellTags->"SlideShowHeader"],
  Cell[1600405, 33515, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"3cd59e09-9b3a-4620-a825-6c649084f5e5",
   CellTags->"SlideShowHeader"],
  Cell[1772335, 36559, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"d3adc702-5983-440a-988a-42b97138b914",
   CellTags->"SlideShowHeader"],
  Cell[2370028, 46158, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"b1810bed-f37e-4a94-b24c-c65f45457d7f",
   CellTags->"SlideShowHeader"],
  Cell[2423484, 47649, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"931553af-c3a9-483f-926c-b25b7c0e8129",
   CellTags->"SlideShowHeader"],
  Cell[2428337, 47790, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"1f0f32e2-1022-4c1a-b709-34049a551e66",
   CellTags->"SlideShowHeader"],
  Cell[2435822, 47998, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"bafa571b-260a-4cf8-9cfc-12ceeb52baad",
   CellTags->"SlideShowHeader"],
  Cell[2711812, 52682, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"567c2b48-450c-4880-92df-e84bdbde65b4",
   CellTags->"SlideShowHeader"],
  Cell[2730178, 53175, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"48a68e56-842c-4b7f-a391-0e1a0a533f3e",
   CellTags->"SlideShowHeader"],
  Cell[2736416, 53335, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"0c6b93bb-1b0c-4e21-9acd-0615897d80c5",
   CellTags->"SlideShowHeader"],
  Cell[2748448, 53648, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"163745a6-0823-4685-be37-f476ca62b557",
   CellTags->"SlideShowHeader"],
  Cell[2755177, 53816, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"66bb9de2-1c35-4fd6-9ffe-e7da40b9236a",
   CellTags->"SlideShowHeader"],
  Cell[2777891, 54389, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"2a9b5d89-b3f0-44ba-8cc7-b5ddea2f7f0b",
   CellTags->"SlideShowHeader"],
  Cell[2797622, 54868, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"1c817a9f-e455-40c8-8620-fb7ca4f437d7",
   CellTags->"SlideShowHeader"],
  Cell[2803323, 55030, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"2d20b746-273d-4af1-ab57-50238fafb6f6",
   CellTags->"SlideShowHeader"],
  Cell[2828542, 55813, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"aa67085d-cf9e-446c-a757-b0667a2503d0",
   CellTags->"SlideShowHeader"]},
 "Probability"->{
  Cell[2365582, 46025, 643, 12, 30, "Input",ExpressionUUID->"6716010f-1dbb-457b-9a7b-6493e276f18e",
   CellTags->{"Probability", "BinomialDistribution"}]},
 "BinomialDistribution"->{
  Cell[2365582, 46025, 643, 12, 30, "Input",ExpressionUUID->"6716010f-1dbb-457b-9a7b-6493e276f18e",
   CellTags->{"Probability", "BinomialDistribution"}]},
 "ZipfDistribution"->{
  Cell[2366395, 46044, 401, 10, 33, "Input",ExpressionUUID->"aa5b7cd9-3dc3-4a6d-90a1-e8057150404d",
   CellTags->"ZipfDistribution"]},
 "PoissonDistribution"->{
  Cell[2366966, 46061, 398, 11, 30, "Input",ExpressionUUID->"458d4365-d890-475c-ba9d-a48ce39ee8e6",
   CellTags->"PoissonDistribution"]},
 "DirichletDistribution"->{
  Cell[2367540, 46079, 526, 14, 30, "Input",ExpressionUUID->"9d7ab4cd-de2b-4ad1-81cd-8bfd07660d63",
   CellTags->"DirichletDistribution"]},
 "LaplaceDistribution"->{
  Cell[2368241, 46100, 520, 14, 36, "Input",ExpressionUUID->"9fe74489-335e-405c-af29-8203fbc4e012",
   CellTags->"LaplaceDistribution"]},
 "NormalDistribution"->{
  Cell[2368935, 46121, 414, 10, 30, "Input",ExpressionUUID->"b1fe13b2-6486-45ee-afef-7723181b6aeb",
   CellTags->"NormalDistribution"]},
 "ChiSquareDistribution"->{
  Cell[2369535, 46138, 432, 13, 30, "Input",ExpressionUUID->"f551123e-9ceb-4dac-8db6-78c915005e4a",
   CellTags->"ChiSquareDistribution",
   CellID->117362026]},
 "Manipulate"->{
  Cell[2390366, 46714, 1355, 37, 30, "Input",ExpressionUUID->"0e640288-aa84-4bf7-a629-156ca0884fdc",
   CellTags->{"Manipulate", "Plot", "Table", "Evaluate", "Filling", "Axis", "PDF", "CDF", "SurvivalFunction", "HazardFunction"},
   CellID->2002640062]},
 "Plot"->{
  Cell[2390366, 46714, 1355, 37, 30, "Input",ExpressionUUID->"0e640288-aa84-4bf7-a629-156ca0884fdc",
   CellTags->{"Manipulate", "Plot", "Table", "Evaluate", "Filling", "Axis", "PDF", "CDF", "SurvivalFunction", "HazardFunction"},
   CellID->2002640062]},
 "Table"->{
  Cell[2390366, 46714, 1355, 37, 30, "Input",ExpressionUUID->"0e640288-aa84-4bf7-a629-156ca0884fdc",
   CellTags->{"Manipulate", "Plot", "Table", "Evaluate", "Filling", "Axis", "PDF", "CDF", "SurvivalFunction", "HazardFunction"},
   CellID->2002640062]},
 "Evaluate"->{
  Cell[2390366, 46714, 1355, 37, 30, "Input",ExpressionUUID->"0e640288-aa84-4bf7-a629-156ca0884fdc",
   CellTags->{"Manipulate", "Plot", "Table", "Evaluate", "Filling", "Axis", "PDF", "CDF", "SurvivalFunction", "HazardFunction"},
   CellID->2002640062]},
 "Filling"->{
  Cell[2390366, 46714, 1355, 37, 30, "Input",ExpressionUUID->"0e640288-aa84-4bf7-a629-156ca0884fdc",
   CellTags->{"Manipulate", "Plot", "Table", "Evaluate", "Filling", "Axis", "PDF", "CDF", "SurvivalFunction", "HazardFunction"},
   CellID->2002640062]},
 "Axis"->{
  Cell[2390366, 46714, 1355, 37, 30, "Input",ExpressionUUID->"0e640288-aa84-4bf7-a629-156ca0884fdc",
   CellTags->{"Manipulate", "Plot", "Table", "Evaluate", "Filling", "Axis", "PDF", "CDF", "SurvivalFunction", "HazardFunction"},
   CellID->2002640062]},
 "PDF"->{
  Cell[2390366, 46714, 1355, 37, 30, "Input",ExpressionUUID->"0e640288-aa84-4bf7-a629-156ca0884fdc",
   CellTags->{"Manipulate", "Plot", "Table", "Evaluate", "Filling", "Axis", "PDF", "CDF", "SurvivalFunction", "HazardFunction"},
   CellID->2002640062]},
 "CDF"->{
  Cell[2390366, 46714, 1355, 37, 30, "Input",ExpressionUUID->"0e640288-aa84-4bf7-a629-156ca0884fdc",
   CellTags->{"Manipulate", "Plot", "Table", "Evaluate", "Filling", "Axis", "PDF", "CDF", "SurvivalFunction", "HazardFunction"},
   CellID->2002640062]},
 "SurvivalFunction"->{
  Cell[2390366, 46714, 1355, 37, 30, "Input",ExpressionUUID->"0e640288-aa84-4bf7-a629-156ca0884fdc",
   CellTags->{"Manipulate", "Plot", "Table", "Evaluate", "Filling", "Axis", "PDF", "CDF", "SurvivalFunction", "HazardFunction"},
   CellID->2002640062]},
 "HazardFunction"->{
  Cell[2390366, 46714, 1355, 37, 30, "Input",ExpressionUUID->"0e640288-aa84-4bf7-a629-156ca0884fdc",
   CellTags->{"Manipulate", "Plot", "Table", "Evaluate", "Filling", "Axis", "PDF", "CDF", "SurvivalFunction", "HazardFunction"},
   CellID->2002640062]},
 "DiscretePlot"->{
  Cell[2391916, 46758, 1172, 33, 30, "Input",ExpressionUUID->"1a9c76f8-3474-4144-8412-404887c7b89d",
   CellTags->{"DiscretePlot", "GeometricDistribution", "ExtentSize"},
   CellID->1700090275]},
 "GeometricDistribution"->{
  Cell[2391916, 46758, 1172, 33, 30, "Input",ExpressionUUID->"1a9c76f8-3474-4144-8412-404887c7b89d",
   CellTags->{"DiscretePlot", "GeometricDistribution", "ExtentSize"},
   CellID->1700090275]},
 "ExtentSize"->{
  Cell[2391916, 46758, 1172, 33, 30, "Input",ExpressionUUID->"1a9c76f8-3474-4144-8412-404887c7b89d",
   CellTags->{"DiscretePlot", "GeometricDistribution", "ExtentSize"},
   CellID->1700090275]},
 "BinormalDistribution"->{
  Cell[2393287, 46798, 1122, 30, 30, "Input",ExpressionUUID->"405e4657-31c4-4454-8dde-81802694b9ff",
   CellTags->{"BinormalDistribution", "Plot3D", "PlotRange", "MaxRecursion"}]},
 "Plot3D"->{
  Cell[2393287, 46798, 1122, 30, 30, "Input",ExpressionUUID->"405e4657-31c4-4454-8dde-81802694b9ff",
   CellTags->{"BinormalDistribution", "Plot3D", "PlotRange", "MaxRecursion"}]},
 "PlotRange"->{
  Cell[2393287, 46798, 1122, 30, 30, "Input",ExpressionUUID->"405e4657-31c4-4454-8dde-81802694b9ff",
   CellTags->{"BinormalDistribution", "Plot3D", "PlotRange", "MaxRecursion"}]},
 "MaxRecursion"->{
  Cell[2393287, 46798, 1122, 30, 30, "Input",ExpressionUUID->"405e4657-31c4-4454-8dde-81802694b9ff",
   CellTags->{"BinormalDistribution", "Plot3D", "PlotRange", "MaxRecursion"}]},
 "DiscretePlot3D"->{
  Cell[2394602, 46835, 1208, 35, 30, "Input",ExpressionUUID->"93302dba-070d-4d29-b0dd-3c4c328ff23e",
   CellTags->"DiscretePlot3D",
   CellID->2140205674]},
 "GammaDistribution"->{
  Cell[2415956, 47432, 402, 8, 30, "Input",ExpressionUUID->"8945dc80-ee1b-4c27-9b54-f1822b8c59bd",
   CellTags->"GammaDistribution"],
  Cell[2416361, 47442, 7050, 199, 254, "Output",ExpressionUUID->"58e049c9-0161-494c-abc4-3c64a3223cf2",
   CellTags->"GammaDistribution"]},
 "RandomVariate"->{
  Cell[2424101, 47667, 1034, 26, 94, "Input",ExpressionUUID->"3e2586c9-0949-4fc6-a9a6-15700be2a0ce",
   CellTags->{"RandomVariate", "Show", "PlotStyle", "Thick"},
   CellID->980116677]},
 "Show"->{
  Cell[2424101, 47667, 1034, 26, 94, "Input",ExpressionUUID->"3e2586c9-0949-4fc6-a9a6-15700be2a0ce",
   CellTags->{"RandomVariate", "Show", "PlotStyle", "Thick"},
   CellID->980116677]},
 "PlotStyle"->{
  Cell[2424101, 47667, 1034, 26, 94, "Input",ExpressionUUID->"3e2586c9-0949-4fc6-a9a6-15700be2a0ce",
   CellTags->{"RandomVariate", "Show", "PlotStyle", "Thick"},
   CellID->980116677]},
 "Thick"->{
  Cell[2424101, 47667, 1034, 26, 94, "Input",ExpressionUUID->"3e2586c9-0949-4fc6-a9a6-15700be2a0ce",
   CellTags->{"RandomVariate", "Show", "PlotStyle", "Thick"},
   CellID->980116677]},
 "MultivariatePoissonDistribution"->{
  Cell[2425305, 47700, 1574, 43, 73, "Input",ExpressionUUID->"5169e219-3ea1-425f-9813-51466e5f39b5",
   CellTags->"MultivariatePoissonDistribution",
   CellID->1621417849]},
 "MixtureDistribution"->{
  Cell[2427047, 47750, 1241, 34, 73, "Input",ExpressionUUID->"2e641f77-824f-4fda-b725-63b19035ce28",
   CellTags->"MixtureDistribution",
   CellID->181972816]},
 "Import"->{
  Cell[2430433, 47845, 517, 12, 30, "Input",ExpressionUUID->"bf965b4c-9fcd-45dd-920d-5869e353b597",
   CellTags->{"Import", "FileNameJoin", "NotebookDirectory"}]},
 "FileNameJoin"->{
  Cell[2430433, 47845, 517, 12, 30, "Input",ExpressionUUID->"bf965b4c-9fcd-45dd-920d-5869e353b597",
   CellTags->{"Import", "FileNameJoin", "NotebookDirectory"}]},
 "NotebookDirectory"->{
  Cell[2430433, 47845, 517, 12, 30, "Input",ExpressionUUID->"bf965b4c-9fcd-45dd-920d-5869e353b597",
   CellTags->{"Import", "FileNameJoin", "NotebookDirectory"}]},
 "GraphicsRow"->{
  Cell[2431968, 47892, 1313, 30, 94, "Input",ExpressionUUID->"09ce6826-322f-4f60-834b-59a28fbc5466",
   CellTags->{"GraphicsRow", "Histogram", "DistributionChart", "BoxWhiskerChart", "QuantilePlot", "PlotLabel"}],
  Cell[2701700, 52421, 940, 23, 30, "Input",ExpressionUUID->"6337f46b-74e5-4656-93c0-9e7a3e2edb29",
   CellTags->{"GraphicsRow", "QuantityMagnitude", "Large"}]},
 "Histogram"->{
  Cell[2431968, 47892, 1313, 30, 94, "Input",ExpressionUUID->"09ce6826-322f-4f60-834b-59a28fbc5466",
   CellTags->{"GraphicsRow", "Histogram", "DistributionChart", "BoxWhiskerChart", "QuantilePlot", "PlotLabel"}]},
 "DistributionChart"->{
  Cell[2431968, 47892, 1313, 30, 94, "Input",ExpressionUUID->"09ce6826-322f-4f60-834b-59a28fbc5466",
   CellTags->{"GraphicsRow", "Histogram", "DistributionChart", "BoxWhiskerChart", "QuantilePlot", "PlotLabel"}]},
 "BoxWhiskerChart"->{
  Cell[2431968, 47892, 1313, 30, 94, "Input",ExpressionUUID->"09ce6826-322f-4f60-834b-59a28fbc5466",
   CellTags->{"GraphicsRow", "Histogram", "DistributionChart", "BoxWhiskerChart", "QuantilePlot", "PlotLabel"}]},
 "QuantilePlot"->{
  Cell[2431968, 47892, 1313, 30, 94, "Input",ExpressionUUID->"09ce6826-322f-4f60-834b-59a28fbc5466",
   CellTags->{"GraphicsRow", "Histogram", "DistributionChart", "BoxWhiskerChart", "QuantilePlot", "PlotLabel"}]},
 "PlotLabel"->{
  Cell[2431968, 47892, 1313, 30, 94, "Input",ExpressionUUID->"09ce6826-322f-4f60-834b-59a28fbc5466",
   CellTags->{"GraphicsRow", "Histogram", "DistributionChart", "BoxWhiskerChart", "QuantilePlot", "PlotLabel"}]},
 "DistributionFitTest"->{
  Cell[2433967, 47945, 414, 9, 30, "Input",ExpressionUUID->"c0c7fe95-5b87-4496-bd35-dcba8229be67",
   CellTags->{"DistributionFitTest", "UniformDistribution"}],
  Cell[2708230, 52590, 594, 13, 54, "Input",ExpressionUUID->"b1e028e2-b98d-4ba6-8a6b-9d036320c8a5",
   CellTags->{"DistributionFitTest", "Normal"}]},
 "UniformDistribution"->{
  Cell[2433967, 47945, 414, 9, 30, "Input",ExpressionUUID->"c0c7fe95-5b87-4496-bd35-dcba8229be67",
   CellTags->{"DistributionFitTest", "UniformDistribution"}]},
 "Column"->{
  Cell[2435190, 47976, 571, 15, 30, "Input",ExpressionUUID->"b4d1d859-0715-4eed-9235-9f142f4dd1f9",
   CellTags->{"Column", "Style", "Frame"}]},
 "Style"->{
  Cell[2435190, 47976, 571, 15, 30, "Input",ExpressionUUID->"b4d1d859-0715-4eed-9235-9f142f4dd1f9",
   CellTags->{"Column", "Style", "Frame"}]},
 "Frame"->{
  Cell[2435190, 47976, 571, 15, 30, "Input",ExpressionUUID->"b4d1d859-0715-4eed-9235-9f142f4dd1f9",
   CellTags->{"Column", "Style", "Frame"}]},
 "GeoGraphics"->{
  Cell[2438311, 48050, 693, 14, 40, "Input",ExpressionUUID->"9053e2ab-a9e5-489f-a20e-94e938145f34",
   CellTags->{"GeoGraphics", "GeoMarker", "GeoRange"}],
  Cell[2439007, 48066, 258588, 4261, 435, "Text",ExpressionUUID->"4558b33d-0e9f-4b41-b18d-f2fa8e4637af",
   CellTags->{"GeoGraphics", "GeoMarker", "GeoRange"}]},
 "GeoMarker"->{
  Cell[2438311, 48050, 693, 14, 40, "Input",ExpressionUUID->"9053e2ab-a9e5-489f-a20e-94e938145f34",
   CellTags->{"GeoGraphics", "GeoMarker", "GeoRange"}],
  Cell[2439007, 48066, 258588, 4261, 435, "Text",ExpressionUUID->"4558b33d-0e9f-4b41-b18d-f2fa8e4637af",
   CellTags->{"GeoGraphics", "GeoMarker", "GeoRange"}]},
 "GeoRange"->{
  Cell[2438311, 48050, 693, 14, 40, "Input",ExpressionUUID->"9053e2ab-a9e5-489f-a20e-94e938145f34",
   CellTags->{"GeoGraphics", "GeoMarker", "GeoRange"}],
  Cell[2439007, 48066, 258588, 4261, 435, "Text",ExpressionUUID->"4558b33d-0e9f-4b41-b18d-f2fa8e4637af",
   CellTags->{"GeoGraphics", "GeoMarker", "GeoRange"}]},
 "QuantityMagnitude"->{
  Cell[2701700, 52421, 940, 23, 30, "Input",ExpressionUUID->"6337f46b-74e5-4656-93c0-9e7a3e2edb29",
   CellTags->{"GraphicsRow", "QuantityMagnitude", "Large"}]},
 "Large"->{
  Cell[2701700, 52421, 940, 23, 30, "Input",ExpressionUUID->"6337f46b-74e5-4656-93c0-9e7a3e2edb29",
   CellTags->{"GraphicsRow", "QuantityMagnitude", "Large"}]},
 "SmoothKernelDistribution"->{
  Cell[2703562, 52470, 390, 7, 30, "Input",ExpressionUUID->"dc826720-2a13-4341-ac21-cf395e319f1c",
   CellTags->{"SmoothKernelDistribution", "Cases", "Normal", "NumericQ"}]},
 "Cases"->{
  Cell[2703562, 52470, 390, 7, 30, "Input",ExpressionUUID->"dc826720-2a13-4341-ac21-cf395e319f1c",
   CellTags->{"SmoothKernelDistribution", "Cases", "Normal", "NumericQ"}]},
 "Normal"->{
  Cell[2703562, 52470, 390, 7, 30, "Input",ExpressionUUID->"dc826720-2a13-4341-ac21-cf395e319f1c",
   CellTags->{"SmoothKernelDistribution", "Cases", "Normal", "NumericQ"}],
  Cell[2708230, 52590, 594, 13, 54, "Input",ExpressionUUID->"b1e028e2-b98d-4ba6-8a6b-9d036320c8a5",
   CellTags->{"DistributionFitTest", "Normal"}]},
 "NumericQ"->{
  Cell[2703562, 52470, 390, 7, 30, "Input",ExpressionUUID->"dc826720-2a13-4341-ac21-cf395e319f1c",
   CellTags->{"SmoothKernelDistribution", "Cases", "Normal", "NumericQ"}],
  Cell[2717515, 52841, 374, 7, 30, "Input",ExpressionUUID->"3358bcf2-c8be-4b0f-bfad-b21a80933eeb",
   CellTags->{"ListPlot", "NumericQ"}]},
 "FindDistribution"->{
  Cell[2707732, 52579, 495, 9, 33, "Input",ExpressionUUID->"069fb744-6240-4f55-88d1-9ba9dcb883e0",
   CellTags->"FindDistribution"]},
 "Length"->{
  Cell[2716524, 52812, 703, 18, 30, "Input",ExpressionUUID->"11d1a7ed-c55b-4dce-80fc-4d5cdfac34d5",
   CellTags->"Length"],
  Cell[2726294, 53075, 805, 22, 30, "Input",ExpressionUUID->"4371bc1d-e59c-44ff-802d-be274a91c554",
   CellTags->"Length"]},
 "ListPlot"->{
  Cell[2717515, 52841, 374, 7, 30, "Input",ExpressionUUID->"3358bcf2-c8be-4b0f-bfad-b21a80933eeb",
   CellTags->{"ListPlot", "NumericQ"}]},
 "LinearModelFit"->{
  Cell[2718504, 52868, 362, 7, 30, "Input",ExpressionUUID->"560aafb8-940d-4dbc-b712-75a381ec9e5e",
   CellTags->"LinearModelFit"]},
 "Framed"->{
  Cell[2719950, 52905, 589, 13, 30, "Input",ExpressionUUID->"a73f74b9-105a-4190-b478-cb0d148cad8c",
   CellTags->{"Framed", "FrameMargins", "RoundingRadius"}]},
 "FrameMargins"->{
  Cell[2719950, 52905, 589, 13, 30, "Input",ExpressionUUID->"a73f74b9-105a-4190-b478-cb0d148cad8c",
   CellTags->{"Framed", "FrameMargins", "RoundingRadius"}]},
 "RoundingRadius"->{
  Cell[2719950, 52905, 589, 13, 30, "Input",ExpressionUUID->"a73f74b9-105a-4190-b478-cb0d148cad8c",
   CellTags->{"Framed", "FrameMargins", "RoundingRadius"}]},
 "AdjustedRSquared"->{
  Cell[2722942, 52987, 230, 5, 30, "Input",ExpressionUUID->"eac3f11f-1ef7-45ba-9b94-de4768696306",
   CellTags->"AdjustedRSquared"]},
 "AIC"->{
  Cell[2723175, 52994, 202, 4, 30, "Input",ExpressionUUID->"8278e8a6-1af4-42da-bc6e-f2ba176ab7c1",
   CellTags->"AIC"]},
 "Residuals"->{
  Cell[2728821, 53141, 1296, 27, 52, "Input",ExpressionUUID->"b85d7f63-a2df-4476-a70e-61cdd3efcde9",
   CellTags->{"Residuals", "Cook's Distances"}]},
 "Cook's Distances"->{
  Cell[2728821, 53141, 1296, 27, 52, "Input",ExpressionUUID->"b85d7f63-a2df-4476-a70e-61cdd3efcde9",
   CellTags->{"Residuals", "Cook's Distances"}]},
 "NonlinearModelFit"->{
  Cell[2732594, 53233, 753, 21, 54, "Input",ExpressionUUID->"83b76d02-6b8f-4749-bcac-dfbc0a942828",
   CellTags->"NonlinearModelFit"]},
 "BestFit"->{
  Cell[2733350, 53256, 173, 3, 30, "Input",ExpressionUUID->"232ecf65-aebf-43df-90d7-c602beac603b",
   CellTags->"BestFit"]},
 "ListLinePlot"->{
  Cell[2733759, 53267, 1001, 22, 94, "Input",ExpressionUUID->"7cfb9173-9523-494a-adc6-e35d50e94643",
   CellTags->{"ListLinePlot", "PlotMarkers"}]},
 "PlotMarkers"->{
  Cell[2733759, 53267, 1001, 22, 94, "Input",ExpressionUUID->"7cfb9173-9523-494a-adc6-e35d50e94643",
   CellTags->{"ListLinePlot", "PlotMarkers"}]},
 "ANOVATable"->{
  Cell[2735781, 53318, 574, 10, 30, "Input",ExpressionUUID->"97e009b7-a76f-4fb4-936c-fcbf45cdff9f",
   CellTags->{"ANOVATable", "FitCurvatureTable", "ParameterBias", "AICc"}]},
 "FitCurvatureTable"->{
  Cell[2735781, 53318, 574, 10, 30, "Input",ExpressionUUID->"97e009b7-a76f-4fb4-936c-fcbf45cdff9f",
   CellTags->{"ANOVATable", "FitCurvatureTable", "ParameterBias", "AICc"}]},
 "ParameterBias"->{
  Cell[2735781, 53318, 574, 10, 30, "Input",ExpressionUUID->"97e009b7-a76f-4fb4-936c-fcbf45cdff9f",
   CellTags->{"ANOVATable", "FitCurvatureTable", "ParameterBias", "AICc"}]},
 "AICc"->{
  Cell[2735781, 53318, 574, 10, 30, "Input",ExpressionUUID->"97e009b7-a76f-4fb4-936c-fcbf45cdff9f",
   CellTags->{"ANOVATable", "FitCurvatureTable", "ParameterBias", "AICc"}]},
 "GeneralizedLinearModelFit"->{
  Cell[2743915, 53530, 562, 12, 30, "Input",ExpressionUUID->"a5207fb4-6c68-4656-8cb0-5a66d9f78d6d",
   CellTags->{"GeneralizedLinearModelFit", "ExponentialFamily", "Poisson"}]},
 "ExponentialFamily"->{
  Cell[2743915, 53530, 562, 12, 30, "Input",ExpressionUUID->"a5207fb4-6c68-4656-8cb0-5a66d9f78d6d",
   CellTags->{"GeneralizedLinearModelFit", "ExponentialFamily", "Poisson"}]},
 "Poisson"->{
  Cell[2743915, 53530, 562, 12, 30, "Input",ExpressionUUID->"a5207fb4-6c68-4656-8cb0-5a66d9f78d6d",
   CellTags->{"GeneralizedLinearModelFit", "ExponentialFamily", "Poisson"}]},
 "Binomial"->{
  Cell[2751362, 53724, 964, 19, 30, "Input",ExpressionUUID->"4b2fde63-0a1e-4f8e-a486-41fc196589ed",
   CellTags->"Binomial"]},
 "LogitModelFit"->{
  Cell[2752719, 53754, 553, 14, 30, "Input",ExpressionUUID->"d961db2f-dcb3-4b19-aafe-2dd88c3f603d",
   CellTags->"LogitModelFit"]},
 "ParameterTable"->{
  Cell[2753502, 53775, 1095, 22, 30, "Input",ExpressionUUID->"d5a947d7-48ce-4c14-aa9c-ba0650a97422",
   CellTags->{"ParameterTable", "FitResiduals"}]},
 "FitResiduals"->{
  Cell[2753502, 53775, 1095, 22, 30, "Input",ExpressionUUID->"d5a947d7-48ce-4c14-aa9c-ba0650a97422",
   CellTags->{"ParameterTable", "FitResiduals"}]},
 "LinkFunction"->{
  Cell[2767651, 54136, 1263, 25, 52, "Input",ExpressionUUID->"46ad9efa-9a4e-46f4-af8e-743e78963457",
   CellTags->{"LinkFunction", "NegativeBinomialLink"}]},
 "NegativeBinomialLink"->{
  Cell[2767651, 54136, 1263, 25, 52, "Input",ExpressionUUID->"46ad9efa-9a4e-46f4-af8e-743e78963457",
   CellTags->{"LinkFunction", "NegativeBinomialLink"}]},
 "BIC"->{
  Cell[2774368, 54295, 1568, 38, 73, "Input",ExpressionUUID->"80277eb6-c474-49b6-badc-81e727792ddf",
   CellTags->{"BIC", "LikelihoodRatioIndex", "PearsonChiSquare", "Subsets", "Gaussian"}]},
 "LikelihoodRatioIndex"->{
  Cell[2774368, 54295, 1568, 38, 73, "Input",ExpressionUUID->"80277eb6-c474-49b6-badc-81e727792ddf",
   CellTags->{"BIC", "LikelihoodRatioIndex", "PearsonChiSquare", "Subsets", "Gaussian"}]},
 "PearsonChiSquare"->{
  Cell[2774368, 54295, 1568, 38, 73, "Input",ExpressionUUID->"80277eb6-c474-49b6-badc-81e727792ddf",
   CellTags->{"BIC", "LikelihoodRatioIndex", "PearsonChiSquare", "Subsets", "Gaussian"}]},
 "Subsets"->{
  Cell[2774368, 54295, 1568, 38, 73, "Input",ExpressionUUID->"80277eb6-c474-49b6-badc-81e727792ddf",
   CellTags->{"BIC", "LikelihoodRatioIndex", "PearsonChiSquare", "Subsets", "Gaussian"}]},
 "Gaussian"->{
  Cell[2774368, 54295, 1568, 38, 73, "Input",ExpressionUUID->"80277eb6-c474-49b6-badc-81e727792ddf",
   CellTags->{"BIC", "LikelihoodRatioIndex", "PearsonChiSquare", "Subsets", "Gaussian"}]},
 "Grid"->{
  Cell[2776291, 54344, 1105, 27, 30, "Input",ExpressionUUID->"d022e793-441a-4998-950f-4b7ec6e84495",
   CellTags->{"Grid", "Join", "Take", "SortBy"}]},
 "Join"->{
  Cell[2776291, 54344, 1105, 27, 30, "Input",ExpressionUUID->"d022e793-441a-4998-950f-4b7ec6e84495",
   CellTags->{"Grid", "Join", "Take", "SortBy"}]},
 "Take"->{
  Cell[2776291, 54344, 1105, 27, 30, "Input",ExpressionUUID->"d022e793-441a-4998-950f-4b7ec6e84495",
   CellTags->{"Grid", "Join", "Take", "SortBy"}]},
 "SortBy"->{
  Cell[2776291, 54344, 1105, 27, 30, "Input",ExpressionUUID->"d022e793-441a-4998-950f-4b7ec6e84495",
   CellTags->{"Grid", "Join", "Take", "SortBy"}]},
 "TimeSeriesWindow"->{
  Cell[2794881, 54786, 607, 17, 146, "Input",ExpressionUUID->"c5c308ea-936f-4e07-9dd7-67f27357b76b",
   CellTags->"TimeSeriesWindow",
   CellID->35234274]},
 "TimeSeriesModelFit"->{
  Cell[2796265, 54826, 221, 5, 49, "Input",ExpressionUUID->"a2e534d6-3825-40ad-9222-52f65130cfe0",
   CellTags->"TimeSeriesModelFit"]},
 "DateRange"->{
  Cell[2796702, 54838, 871, 24, 146, "Input",ExpressionUUID->"a5723f2d-b9fd-44a1-a182-5640381ab1a9",
   CellTags->"DateRange",
   CellID->643306091],
  Cell[2801296, 54969, 425, 12, 30, "Input",ExpressionUUID->"6660fddf-6995-4b34-ae20-a4d870e2bb10",
   CellTags->"DateRange",
   CellID->1486872]},
 "FindGeoLocation"->{
  Cell[2798431, 54889, 1406, 40, 146, "Input",ExpressionUUID->"e06cb29d-76fb-4bd9-9ec2-db35712eddd6",
   CellTags->"FindGeoLocation",
   CellID->831135752]},
 "PredictionLimits"->{
  Cell[2801724, 54983, 455, 13, 52, "Input",ExpressionUUID->"ac7a6963-c45d-4965-89f1-8e83fb79ecb2",
   CellTags->"PredictionLimits",
   CellID->642359114]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SlideShowHeader", 3062078, 61094},
 {"Probability", 3064623, 61129},
 {"BinomialDistribution", 3064806, 61132},
 {"ZipfDistribution", 3064985, 61135},
 {"PoissonDistribution", 3065146, 61138},
 {"DirichletDistribution", 3065312, 61141},
 {"LaplaceDistribution", 3065478, 61144},
 {"NormalDistribution", 3065641, 61147},
 {"ChiSquareDistribution", 3065806, 61150},
 {"Manipulate", 3065985, 61154},
 {"Plot", 3066251, 61158},
 {"Table", 3066518, 61162},
 {"Evaluate", 3066788, 61166},
 {"Filling", 3067057, 61170},
 {"Axis", 3067323, 61174},
 {"PDF", 3067588, 61178},
 {"CDF", 3067853, 61182},
 {"SurvivalFunction", 3068131, 61186},
 {"HazardFunction", 3068407, 61190},
 {"DiscretePlot", 3068681, 61194},
 {"GeometricDistribution", 3068905, 61198},
 {"ExtentSize", 3069118, 61202},
 {"BinormalDistribution", 3069341, 61206},
 {"Plot3D", 3069535, 61209},
 {"PlotRange", 3069732, 61212},
 {"MaxRecursion", 3069932, 61215},
 {"DiscretePlot3D", 3070134, 61218},
 {"GammaDistribution", 3070315, 61222},
 {"RandomVariate", 3070609, 61227},
 {"Show", 3070807, 61231},
 {"PlotStyle", 3071010, 61235},
 {"Thick", 3071209, 61239},
 {"MultivariatePoissonDistribution", 3071434, 61243},
 {"MixtureDistribution", 3071634, 61247},
 {"Import", 3071808, 61251},
 {"FileNameJoin", 3071991, 61254},
 {"NotebookDirectory", 3072179, 61257},
 {"GraphicsRow", 3072361, 61260},
 {"Histogram", 3072753, 61265},
 {"DistributionChart", 3072992, 61268},
 {"BoxWhiskerChart", 3073229, 61271},
 {"QuantilePlot", 3073463, 61274},
 {"PlotLabel", 3073694, 61277},
 {"DistributionFitTest", 3073935, 61280},
 {"UniformDistribution", 3074272, 61285},
 {"Column", 3074447, 61288},
 {"Style", 3074604, 61291},
 {"Frame", 3074761, 61294},
 {"GeoGraphics", 3074924, 61297},
 {"GeoMarker", 3075258, 61302},
 {"GeoRange", 3075591, 61307},
 {"QuantityMagnitude", 3075933, 61312},
 {"Large", 3076107, 61315},
 {"SmoothKernelDistribution", 3076300, 61318},
 {"Cases", 3076487, 61321},
 {"Normal", 3076675, 61324},
 {"NumericQ", 3077014, 61329},
 {"FindDistribution", 3077351, 61334},
 {"Length", 3077498, 61337},
 {"ListPlot", 3077762, 61342},
 {"LinearModelFit", 3077923, 61345},
 {"Framed", 3078068, 61348},
 {"FrameMargins", 3078248, 61351},
 {"RoundingRadius", 3078430, 61354},
 {"AdjustedRSquared", 3078614, 61357},
 {"AIC", 3078758, 61360},
 {"Residuals", 3078895, 61363},
 {"Cook's Distances", 3079069, 61366},
 {"NonlinearModelFit", 3079244, 61369},
 {"BestFit", 3079394, 61372},
 {"ListLinePlot", 3079538, 61375},
 {"PlotMarkers", 3079705, 61378},
 {"ANOVATable", 3079871, 61381},
 {"FitCurvatureTable", 3080072, 61384},
 {"ParameterBias", 3080269, 61387},
 {"AICc", 3080457, 61390},
 {"GeneralizedLinearModelFit", 3080666, 61393},
 {"ExponentialFamily", 3080868, 61396},
 {"Poisson", 3081060, 61399},
 {"Binomial", 3081253, 61402},
 {"LogitModelFit", 3081400, 61405},
 {"ParameterTable", 3081553, 61408},
 {"FitResiduals", 3081724, 61411},
 {"LinkFunction", 3081895, 61414},
 {"NegativeBinomialLink", 3082080, 61417},
 {"BIC", 3082248, 61420},
 {"LikelihoodRatioIndex", 3082467, 61423},
 {"PearsonChiSquare", 3082682, 61426},
 {"Subsets", 3082888, 61429},
 {"Gaussian", 3083095, 61432},
 {"Grid", 3083298, 61435},
 {"Join", 3083461, 61438},
 {"Take", 3083624, 61441},
 {"SortBy", 3083789, 61444},
 {"TimeSeriesWindow", 3083964, 61447},
 {"TimeSeriesModelFit", 3084146, 61451},
 {"DateRange", 3084298, 61454},
 {"FindGeoLocation", 3084618, 61461},
 {"PredictionLimits", 3084799, 61465}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[632, 23, 136, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"60bc568f-b20e-4b9a-b496-b94f48bda20e",
 CellTags->"SlideShowHeader"],
Cell[771, 27, 16465, 277, 220, "WSSBanner",ExpressionUUID->"3bb2d191-b234-4a2e-a519-8cc81e1dbc97"],
Cell[CellGroupData[{
Cell[17261, 308, 410, 6, 143, "Title",ExpressionUUID->"a2952f0e-0dad-4d25-91aa-a3ff0c5ccc18"],
Cell[17674, 316, 407, 6, 73, "Subtitle",ExpressionUUID->"c97091a6-7ff3-40b5-9254-93eb0ab364a3"],
Cell[18084, 324, 1560592, 32768, 571, "Text",ExpressionUUID->"ae48f60e-1e25-4ecb-b345-39e7e3fea692"],
Cell[1578679, 33094, 14972, 250, 64, "WolframULogo",ExpressionUUID->"6449e467-a376-40cc-9cce-4930ea4aeb69"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1593700, 33350, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"fc96e66c-467d-4859-b563-1aa5d0e6d5a3",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1593847, 33356, 384, 6, 115, "Section",ExpressionUUID->"de85c62e-50a3-40fb-b1af-0adef5f1b80d"],
Cell[CellGroupData[{
Cell[1594256, 33366, 337, 5, 79, "Subsection",ExpressionUUID->"1c342a4c-2c04-42e0-8e87-3f2e30ca19c3"],
Cell[1594596, 33373, 708, 12, 35, "Text",ExpressionUUID->"9396d793-86e1-4807-99d0-6f1e13c1159e"],
Cell[CellGroupData[{
Cell[1595329, 33389, 336, 5, 32, "Item",ExpressionUUID->"43a4175b-ff09-4107-9baa-f35ad8c8309b"],
Cell[1595668, 33396, 425, 6, 32, "Item",ExpressionUUID->"44885ab7-cc3c-4db0-b16c-27cddd3f2c6e"],
Cell[1596096, 33404, 495, 7, 32, "Item",ExpressionUUID->"56d937ca-7093-4f33-8d02-4e4998e311f6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1596640, 33417, 298, 5, 79, "Subsection",ExpressionUUID->"bae11d0f-ee8f-42ff-8bcf-b74a348cae35"],
Cell[1596941, 33424, 460, 8, 35, "Text",ExpressionUUID->"af0ff5b4-6b01-4c6a-a093-ae38be68cff6"],
Cell[CellGroupData[{
Cell[1597426, 33436, 341, 6, 32, "Item",ExpressionUUID->"b5275449-d419-4f98-a920-b038bb4bb18b"],
Cell[1597770, 33444, 239, 4, 32, "Item",ExpressionUUID->"ebbeb8a1-4309-44f5-a7ed-08845f9e2a43"],
Cell[1598012, 33450, 237, 4, 32, "Item",ExpressionUUID->"798b268f-cda7-438f-be25-b9cec1ced1de"],
Cell[1598252, 33456, 238, 4, 32, "Item",ExpressionUUID->"06565d66-3bc7-4d27-959f-d7618d941f0f"],
Cell[1598493, 33462, 282, 5, 32, "Item",ExpressionUUID->"21f110af-7fd6-4e66-b159-e4f0d853895f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1598824, 33473, 320, 5, 79, "Subsection",ExpressionUUID->"8a53264d-0790-4e88-b768-b83a2a529c7a"],
Cell[1599147, 33480, 499, 9, 35, "Text",ExpressionUUID->"f2358c61-fbc3-451a-b98b-15bceac851c3"],
Cell[CellGroupData[{
Cell[1599671, 33493, 320, 6, 32, "Item",ExpressionUUID->"7010f8db-250c-4794-8f4c-24368148a986"],
Cell[1599994, 33501, 338, 6, 32, "Item",ExpressionUUID->"908986c7-31e4-47a6-aaba-3a84a434f002"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1600405, 33515, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"3cd59e09-9b3a-4620-a825-6c649084f5e5",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1600552, 33521, 280, 4, 115, "Section",ExpressionUUID->"c7b79bbc-4067-4794-8ed9-7db47d923326"],
Cell[CellGroupData[{
Cell[1600857, 33529, 168, 3, 79, "Subsection",ExpressionUUID->"e318702f-9833-4142-aadc-b8bb3722ff74"],
Cell[1601028, 33534, 903, 16, 81, "Text",ExpressionUUID->"61d88baf-f6e2-4aed-bcd1-54de3d4a5416"],
Cell[1601934, 33552, 101721, 1797, 470, "Output",ExpressionUUID->"71b02a66-b2ba-4ba6-84b0-a9c966683cbe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1703692, 35354, 170, 3, 79, "Subsection",ExpressionUUID->"d1be2708-d925-4004-9b01-71b6d6065ef6"],
Cell[1703865, 35359, 553, 10, 58, "Text",ExpressionUUID->"454d405e-dce7-4845-afc6-6b4560e1e759"],
Cell[1704421, 35371, 67853, 1181, 496, "Output",ExpressionUUID->"21f0ba23-ccf8-4840-bbbb-95df75cace20"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1772335, 36559, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"d3adc702-5983-440a-988a-42b97138b914",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1772482, 36565, 229, 4, 115, "Section",ExpressionUUID->"4d845600-e61d-4716-9a67-4dd0db4a23d5"],
Cell[1772714, 36571, 1947, 46, 58, "Text",ExpressionUUID->"54164689-ff1d-4fed-b6ea-3b71549b7afb"],
Cell[1774664, 36619, 589741, 9369, 476, "Text",ExpressionUUID->"df674479-ad8b-4186-ae52-4a066d7abef7"],
Cell[2364408, 45990, 460, 8, 36, "Text",ExpressionUUID->"995dc77d-5e1c-4429-a930-67546b2f6c00"],
Cell[CellGroupData[{
Cell[2364893, 46002, 509, 16, 79, "Subsection",ExpressionUUID->"e558872b-438b-41b0-9b25-9b62caf65c78"],
Cell[2365405, 46020, 174, 3, 35, "Text",ExpressionUUID->"759535e6-44ad-49a2-8eaf-c0df19e7d5b1"],
Cell[2365582, 46025, 643, 12, 30, "Input",ExpressionUUID->"6716010f-1dbb-457b-9a7b-6493e276f18e",
 CellTags->{"Probability", "BinomialDistribution"}],
Cell[2366228, 46039, 164, 3, 35, "Text",ExpressionUUID->"31c79a58-1a7f-4a09-b7c7-0e53a59db8b9"],
Cell[2366395, 46044, 401, 10, 33, "Input",ExpressionUUID->"aa5b7cd9-3dc3-4a6d-90a1-e8057150404d",
 CellTags->"ZipfDistribution"],
Cell[2366799, 46056, 164, 3, 35, "Text",ExpressionUUID->"65e855ad-981a-4f40-bbff-a7dffe6f3519"],
Cell[2366966, 46061, 398, 11, 30, "Input",ExpressionUUID->"458d4365-d890-475c-ba9d-a48ce39ee8e6",
 CellTags->"PoissonDistribution"],
Cell[2367367, 46074, 170, 3, 35, "Text",ExpressionUUID->"7bd986c5-5c53-4ee3-bcd6-8e0827d1cade"],
Cell[2367540, 46079, 526, 14, 30, "Input",ExpressionUUID->"9d7ab4cd-de2b-4ad1-81cd-8bfd07660d63",
 CellTags->"DirichletDistribution"],
Cell[2368069, 46095, 169, 3, 35, "Text",ExpressionUUID->"90d9e0b5-ce72-4744-88e0-a74d31ff4a48"],
Cell[2368241, 46100, 520, 14, 36, "Input",ExpressionUUID->"9fe74489-335e-405c-af29-8203fbc4e012",
 CellTags->"LaplaceDistribution"],
Cell[2368764, 46116, 168, 3, 35, "Text",ExpressionUUID->"86ae3324-450b-4777-9091-642d5746c6f1"],
Cell[2368935, 46121, 414, 10, 30, "Input",ExpressionUUID->"b1fe13b2-6486-45ee-afef-7723181b6aeb",
 CellTags->"NormalDistribution"],
Cell[2369352, 46133, 180, 3, 35, "Text",ExpressionUUID->"57dacd7b-248a-41c0-bb14-0de4db7ee255"],
Cell[2369535, 46138, 432, 13, 30, "Input",ExpressionUUID->"f551123e-9ceb-4dac-8db6-78c915005e4a",
 CellTags->"ChiSquareDistribution",
 CellID->117362026]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2370028, 46158, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"b1810bed-f37e-4a94-b24c-c65f45457d7f",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[2370175, 46164, 172, 3, 115, "Section",ExpressionUUID->"a16c7f69-6943-4045-8959-f03127821653"],
Cell[CellGroupData[{
Cell[2370372, 46171, 587, 8, 79, "Subsection",ExpressionUUID->"cc9ea6f1-5f35-4b42-b261-ceb09f256c48"],
Cell[2370962, 46181, 1652, 37, 58, "Text",ExpressionUUID->"4ef5e643-dd28-4dfc-95fb-1a42959321b7"],
Cell[2372617, 46220, 17554, 487, 268, "Output",ExpressionUUID->"ed6d77dd-9f92-4d80-9e7a-edab94db1b85"],
Cell[2390174, 46709, 189, 3, 35, "Text",ExpressionUUID->"64986a8f-d9c2-4145-8848-b34c767cf972"],
Cell[2390366, 46714, 1355, 37, 30, "Input",ExpressionUUID->"0e640288-aa84-4bf7-a629-156ca0884fdc",
 CellTags->{"Manipulate", "Plot", "Table", "Evaluate", "Filling", "Axis", "PDF", "CDF", "SurvivalFunction", "HazardFunction"},
 CellID->2002640062],
Cell[2391724, 46753, 189, 3, 35, "Text",ExpressionUUID->"dad1f40a-523e-4468-a4f0-a794fb4be399"],
Cell[2391916, 46758, 1172, 33, 30, "Input",ExpressionUUID->"1a9c76f8-3474-4144-8412-404887c7b89d",
 CellTags->{"DiscretePlot", "GeometricDistribution", "ExtentSize"},
 CellID->1700090275],
Cell[2393091, 46793, 193, 3, 35, "Text",ExpressionUUID->"4f4f9975-68ac-4c32-830e-8903634a0b54"],
Cell[2393287, 46798, 1122, 30, 30, "Input",ExpressionUUID->"405e4657-31c4-4454-8dde-81802694b9ff",
 CellTags->{"BinormalDistribution", "Plot3D", "PlotRange", "MaxRecursion"}],
Cell[2394412, 46830, 187, 3, 35, "Text",ExpressionUUID->"4c13c396-1b1b-4df6-a620-994a6c3eb2d2"],
Cell[2394602, 46835, 1208, 35, 30, "Input",ExpressionUUID->"93302dba-070d-4d29-b0dd-3c4c328ff23e",
 CellTags->"DiscretePlot3D",
 CellID->2140205674]
}, Open  ]],
Cell[CellGroupData[{
Cell[2395847, 46875, 243, 4, 79, "Subsection",ExpressionUUID->"2a53a894-cbb4-491c-967b-325cee29c063"],
Cell[2396093, 46881, 1386, 35, 35, "Text",ExpressionUUID->"2423d7f5-1c12-4f50-b5cc-3ae32d7c8384"],
Cell[2397482, 46918, 15157, 416, 283, "Output",ExpressionUUID->"a6d06096-32f2-48c0-a319-d1b271a7e026"],
Cell[2412642, 47336, 580, 16, 35, "Text",ExpressionUUID->"46dde62e-e96f-4a97-b778-7d4d9b78945e"],
Cell[2413225, 47354, 263, 6, 30, "Input",ExpressionUUID->"95543a11-0c48-4ca1-b196-e772cccb7b04",
 CellID->375227910],
Cell[2413491, 47362, 492, 12, 35, "Text",ExpressionUUID->"0b7086f3-4e28-4254-bf5a-deaf591ed3de"],
Cell[2413986, 47376, 292, 6, 30, "Input",ExpressionUUID->"5de70631-3fcd-4420-ae08-c12ad6b99bc0"],
Cell[2414281, 47384, 242, 5, 35, "Text",ExpressionUUID->"a0ff7e74-8323-4ff0-b8a5-d08e651f7398"],
Cell[2414526, 47391, 726, 19, 30, "Input",ExpressionUUID->"a59d7a2b-bc81-4c94-bcb9-b4513c2a7512"],
Cell[2415255, 47412, 676, 16, 37, "Text",ExpressionUUID->"aa6e3696-eb93-47d6-b72a-91372d124671"],
Cell[CellGroupData[{
Cell[2415956, 47432, 402, 8, 30, "Input",ExpressionUUID->"8945dc80-ee1b-4c27-9b54-f1822b8c59bd",
 CellTags->"GammaDistribution"],
Cell[2416361, 47442, 7050, 199, 254, "Output",ExpressionUUID->"58e049c9-0161-494c-abc4-3c64a3223cf2",
 CellTags->"GammaDistribution"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2423484, 47649, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"931553af-c3a9-483f-926c-b25b7c0e8129",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[2423631, 47655, 251, 4, 115, "Section",ExpressionUUID->"75d633a2-3d91-4a40-908c-7511d11a990b"],
Cell[2423885, 47661, 213, 4, 35, "Text",ExpressionUUID->"b114a0aa-f46f-4a22-ba74-6f325a1d2ca7"],
Cell[2424101, 47667, 1034, 26, 94, "Input",ExpressionUUID->"3e2586c9-0949-4fc6-a9a6-15700be2a0ce",
 CellTags->{"RandomVariate", "Show", "PlotStyle", "Thick"},
 CellID->980116677],
Cell[2425138, 47695, 164, 3, 35, "Text",ExpressionUUID->"6121429f-2f76-4981-a1a0-f3ea74a3509b"],
Cell[2425305, 47700, 1574, 43, 73, "Input",ExpressionUUID->"5169e219-3ea1-425f-9813-51466e5f39b5",
 CellTags->"MultivariatePoissonDistribution",
 CellID->1621417849],
Cell[2426882, 47745, 162, 3, 35, "Text",ExpressionUUID->"70302da0-2b28-4a53-ad23-272156c389cd"],
Cell[2427047, 47750, 1241, 34, 73, "Input",ExpressionUUID->"2e641f77-824f-4fda-b725-63b19035ce28",
 CellTags->"MixtureDistribution",
 CellID->181972816]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2428337, 47790, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"1f0f32e2-1022-4c1a-b709-34049a551e66",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[2428484, 47796, 511, 7, 115, "Section",ExpressionUUID->"cb9fcfe6-6712-4775-adb2-f3d365278b9a"],
Cell[2428998, 47805, 811, 17, 58, "Text",ExpressionUUID->"34449b10-ca89-45b2-a649-d022c57c07ac"],
Cell[CellGroupData[{
Cell[2429834, 47826, 214, 4, 79, "Subsection",ExpressionUUID->"f5da713d-74be-4dc1-bd3a-41ab5fe0d8c3"],
Cell[2430051, 47832, 379, 11, 35, "Text",ExpressionUUID->"830f14ca-87cf-428f-aff3-a7b115614237"],
Cell[2430433, 47845, 517, 12, 30, "Input",ExpressionUUID->"bf965b4c-9fcd-45dd-920d-5869e353b597",
 CellTags->{"Import", "FileNameJoin", "NotebookDirectory"}],
Cell[2430953, 47859, 1012, 31, 35, "Text",ExpressionUUID->"4f6f2035-448e-47d3-92d1-dcedf5b15556"],
Cell[2431968, 47892, 1313, 30, 94, "Input",ExpressionUUID->"09ce6826-322f-4f60-834b-59a28fbc5466",
 CellTags->{"GraphicsRow", "Histogram", "DistributionChart", "BoxWhiskerChart", "QuantilePlot", "PlotLabel"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[2433318, 47927, 197, 3, 79, "Subsection",ExpressionUUID->"2a58fc9b-bb8b-4395-a427-d01dbfca14a9"],
Cell[2433518, 47932, 446, 11, 35, "Text",ExpressionUUID->"e544785f-be3f-4103-8243-f008809aa584"],
Cell[2433967, 47945, 414, 9, 30, "Input",ExpressionUUID->"c0c7fe95-5b87-4496-bd35-dcba8229be67",
 CellTags->{"DistributionFitTest", "UniformDistribution"}],
Cell[2434384, 47956, 168, 3, 35, "Text",ExpressionUUID->"63b64eaa-7b4c-46cf-92ab-aff579c098c5"],
Cell[2434555, 47961, 154, 2, 30, "Input",ExpressionUUID->"3709cb4d-2521-4dcb-937c-70463b17e43c"],
Cell[2434712, 47965, 222, 3, 35, "Text",ExpressionUUID->"7113f7c5-9c11-41e9-b0f7-5b79d1ed64c2"],
Cell[2434937, 47970, 250, 4, 30, "Input",ExpressionUUID->"b3dfbf7b-9d1e-4d67-9fd2-2a3c49ee0f50"],
Cell[2435190, 47976, 571, 15, 30, "Input",ExpressionUUID->"b4d1d859-0715-4eed-9235-9f142f4dd1f9",
 CellTags->{"Column", "Style", "Frame"}]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2435822, 47998, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"bafa571b-260a-4cf8-9cfc-12ceeb52baad",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[2435969, 48004, 372, 6, 115, "Section",ExpressionUUID->"d0bc8a29-b6f0-4920-8706-f51df7e16ff6"],
Cell[2436344, 48012, 884, 17, 81, "Text",ExpressionUUID->"444e9f6a-80ad-4fb9-ae1a-1d9e6886759a"],
Cell[2437231, 48031, 1077, 17, 35, "Text",ExpressionUUID->"3eec7ccc-fdc6-402c-aec4-1b759be5af7c"],
Cell[2438311, 48050, 693, 14, 40, "Input",ExpressionUUID->"9053e2ab-a9e5-489f-a20e-94e938145f34",
 CellTags->{"GeoGraphics", "GeoMarker", "GeoRange"}],
Cell[2439007, 48066, 258588, 4261, 435, "Text",ExpressionUUID->"4558b33d-0e9f-4b41-b18d-f2fa8e4637af",
 CellTags->{"GeoGraphics", "GeoMarker", "GeoRange"}],
Cell[2697598, 52329, 602, 11, 35, "Text",ExpressionUUID->"b06eb966-d179-4902-8ff6-5011856fb2a9"],
Cell[CellGroupData[{
Cell[2698225, 52344, 237, 4, 79, "Subsection",ExpressionUUID->"bb0a894a-1a62-481e-9e69-a4c72ee55758"],
Cell[2698465, 52350, 863, 18, 35, "Text",ExpressionUUID->"715b6c60-e2df-422d-af8a-2c45419135e3"],
Cell[2699331, 52370, 1821, 37, 61, "Input",ExpressionUUID->"0c5ab494-7211-45ad-9a86-ff8f9c581433"],
Cell[2701155, 52409, 267, 4, 30, "Input",ExpressionUUID->"858047f5-2ad3-4769-a7fd-d9b195263b2a"],
Cell[2701425, 52415, 272, 4, 35, "Text",ExpressionUUID->"8b6bb528-2894-4c6f-99fe-152d29be2650"],
Cell[2701700, 52421, 940, 23, 30, "Input",ExpressionUUID->"6337f46b-74e5-4656-93c0-9e7a3e2edb29",
 CellTags->{"GraphicsRow", "QuantityMagnitude", "Large"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[2702677, 52449, 283, 4, 79, "Subsection",ExpressionUUID->"2feea42a-8f37-41d3-b2c0-3d8c5998cf82"],
Cell[2702963, 52455, 596, 13, 35, "Text",ExpressionUUID->"7ef05b19-625b-4873-9f12-187db11e960a"],
Cell[2703562, 52470, 390, 7, 30, "Input",ExpressionUUID->"dc826720-2a13-4341-ac21-cf395e319f1c",
 CellTags->{"SmoothKernelDistribution", "Cases", "Normal", "NumericQ"}],
Cell[2703955, 52479, 349, 7, 35, "Text",ExpressionUUID->"a8795afa-0733-4c93-a90a-5ef63f2a06d2"],
Cell[2704307, 52488, 1516, 35, 157, "Input",ExpressionUUID->"6204256d-9985-4207-9e6c-98e9aae02390"],
Cell[2705826, 52525, 521, 11, 52, "Input",ExpressionUUID->"3438f168-4916-46da-be1f-d3e91d3d2dcb"],
Cell[2706350, 52538, 599, 15, 30, "Input",ExpressionUUID->"11454641-49a9-471f-91f5-6d2c907763e9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2706986, 52558, 284, 4, 79, "Subsection",ExpressionUUID->"3993bd59-90e1-4945-a231-cb411b5127e5"],
Cell[2707273, 52564, 456, 13, 35, "Text",ExpressionUUID->"445a576a-8638-419e-9adb-c55297c9c4b4"],
Cell[2707732, 52579, 495, 9, 33, "Input",ExpressionUUID->"069fb744-6240-4f55-88d1-9ba9dcb883e0",
 CellTags->"FindDistribution"],
Cell[2708230, 52590, 594, 13, 54, "Input",ExpressionUUID->"b1e028e2-b98d-4ba6-8a6b-9d036320c8a5",
 CellTags->{"DistributionFitTest", "Normal"}],
Cell[2708827, 52605, 268, 4, 35, "Text",ExpressionUUID->"05f14225-0fef-405a-9b96-edc6363d24bd"],
Cell[2709098, 52611, 1511, 35, 167, "Input",ExpressionUUID->"34d194b1-8070-470d-8bda-686bab5f7fd0"],
Cell[2710612, 52648, 526, 10, 35, "Text",ExpressionUUID->"260146ea-92fc-4322-9b5f-06960a8406ce"],
Cell[2711141, 52660, 270, 6, 33, "Input",ExpressionUUID->"8e89c5ba-f477-42c3-8745-0886f89c73f8"],
Cell[2711414, 52668, 337, 7, 30, "Input",ExpressionUUID->"ed5c5d0f-74ba-4d5e-9958-3ab12b31495a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2711812, 52682, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"567c2b48-450c-4880-92df-e84bdbde65b4",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[2711959, 52688, 263, 4, 115, "Section",ExpressionUUID->"e09af4c3-bab4-4008-83a7-492f5b1e33d2"],
Cell[2712225, 52694, 1187, 35, 35, "Text",ExpressionUUID->"183e2dc3-5ff0-45b1-b77e-9ebfc815d584"],
Cell[2713415, 52731, 459, 9, 35, "Text",ExpressionUUID->"d335aa6e-78d0-4b0c-a739-0152ba8f7cca"],
Cell[CellGroupData[{
Cell[2713899, 52744, 268, 4, 79, "Subsection",ExpressionUUID->"c06f63e1-c4c5-4355-876b-6dab6fd45770"],
Cell[2714170, 52750, 410, 8, 35, "Text",ExpressionUUID->"0c101fe0-4d56-4ccd-8ed2-9e5ce19700be"],
Cell[2714583, 52760, 1089, 26, 30, "Input",ExpressionUUID->"088fd838-6ff2-4b72-95a1-c1517c4bfeb6"],
Cell[2715675, 52788, 846, 22, 35, "Text",ExpressionUUID->"0b918286-9310-4ca2-a0b3-83fcce4788b6"],
Cell[2716524, 52812, 703, 18, 30, "Input",ExpressionUUID->"11d1a7ed-c55b-4dce-80fc-4d5cdfac34d5",
 CellTags->"Length"],
Cell[2717230, 52832, 282, 7, 35, "Text",ExpressionUUID->"1ac84dad-3381-4181-9e0f-1288d3530b43"],
Cell[2717515, 52841, 374, 7, 30, "Input",ExpressionUUID->"3358bcf2-c8be-4b0f-bfad-b21a80933eeb",
 CellTags->{"ListPlot", "NumericQ"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[2717926, 52853, 251, 4, 79, "Subsection",ExpressionUUID->"95769d6a-7cc6-49ce-9dc4-63eb7b670fc1"],
Cell[2718180, 52859, 321, 7, 35, "Text",ExpressionUUID->"61d1229b-04c8-41fd-8702-d773c68ca0f8"],
Cell[2718504, 52868, 362, 7, 30, "Input",ExpressionUUID->"560aafb8-940d-4dbc-b712-75a381ec9e5e",
 CellTags->"LinearModelFit"],
Cell[2718869, 52877, 603, 15, 30, "Input",ExpressionUUID->"53b2ec73-f0d8-40fc-83a5-9aabdc884a79"],
Cell[2719475, 52894, 472, 9, 35, "Text",ExpressionUUID->"65fde79d-1e45-4242-ae9c-fd3cf0c8c952"],
Cell[2719950, 52905, 589, 13, 30, "Input",ExpressionUUID->"a73f74b9-105a-4190-b478-cb0d148cad8c",
 CellTags->{"Framed", "FrameMargins", "RoundingRadius"}],
Cell[2720542, 52920, 380, 7, 30, "Input",ExpressionUUID->"f4015cdb-1ea8-47fc-aac7-c15589fe5906"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2720959, 52932, 175, 3, 79, "Subsection",ExpressionUUID->"40205e55-07ec-4348-85d3-b43bc865fbfc"],
Cell[2721137, 52937, 358, 8, 35, "Text",ExpressionUUID->"a03c12b6-8cf5-4a8e-ad92-dba20f951187"],
Cell[2721498, 52947, 1056, 28, 33, "Input",ExpressionUUID->"a3c290da-832d-4c43-972a-8b9fc0a270fc"],
Cell[2722557, 52977, 382, 8, 35, "Text",ExpressionUUID->"f5eb5984-5b0e-4353-afc1-49e4eb74b14c"],
Cell[2722942, 52987, 230, 5, 30, "Input",ExpressionUUID->"eac3f11f-1ef7-45ba-9b94-de4768696306",
 CellTags->"AdjustedRSquared"],
Cell[2723175, 52994, 202, 4, 30, "Input",ExpressionUUID->"8278e8a6-1af4-42da-bc6e-f2ba176ab7c1",
 CellTags->"AIC"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2723414, 53003, 217, 4, 79, "Subsection",ExpressionUUID->"4b4edf9e-2507-4975-b011-6537aed578ba"],
Cell[2723634, 53009, 329, 7, 35, "Text",ExpressionUUID->"ba232140-9315-43a6-9b13-22009cac0973"],
Cell[2723966, 53018, 2325, 55, 52, "Input",ExpressionUUID->"30b1a5e6-a8d6-4614-a69e-9b227b88a834"],
Cell[2726294, 53075, 805, 22, 30, "Input",ExpressionUUID->"4371bc1d-e59c-44ff-802d-be274a91c554",
 CellTags->"Length"],
Cell[2727102, 53099, 415, 9, 33, "Input",ExpressionUUID->"caaa89fd-0486-44ae-87dd-1541efafd2cd"],
Cell[2727520, 53110, 201, 3, 35, "Text",ExpressionUUID->"74e76d2d-f54a-4704-ae79-421f02e2a9b2"],
Cell[2727724, 53115, 752, 16, 30, "Input",ExpressionUUID->"44a40d5e-4af7-47a7-b19a-d9eaab47189e"],
Cell[2728479, 53133, 339, 6, 35, "Text",ExpressionUUID->"fc49c1a9-fd13-4948-90a9-7e6f663fe3e9"],
Cell[2728821, 53141, 1296, 27, 52, "Input",ExpressionUUID->"b85d7f63-a2df-4476-a70e-61cdd3efcde9",
 CellTags->{"Residuals", "Cook's Distances"}]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2730178, 53175, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"48a68e56-842c-4b7f-a391-0e1a0a533f3e",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[2730325, 53181, 166, 3, 115, "Section",ExpressionUUID->"31a8da2f-8a1f-4460-98f5-588068a1236e"],
Cell[2730494, 53186, 505, 9, 58, "Text",ExpressionUUID->"168cacd9-b1fe-4cd6-9029-caf4d2e0dca4"],
Cell[2731002, 53197, 766, 13, 58, "Text",ExpressionUUID->"f41efb01-da20-4d19-bc84-556412029893"],
Cell[CellGroupData[{
Cell[2731793, 53214, 306, 5, 79, "Subsection",ExpressionUUID->"d2887620-fec5-4a23-80f4-2e49944aaeb0"],
Cell[2732102, 53221, 211, 3, 35, "Text",ExpressionUUID->"f1f0c854-6b2c-4930-84ea-2ec59e5e9723"],
Cell[2732316, 53226, 275, 5, 30, "Input",ExpressionUUID->"d3d96c43-6ea4-486e-85a9-ecc930fa3af8"],
Cell[2732594, 53233, 753, 21, 54, "Input",ExpressionUUID->"83b76d02-6b8f-4749-bcac-dfbc0a942828",
 CellTags->"NonlinearModelFit"],
Cell[2733350, 53256, 173, 3, 30, "Input",ExpressionUUID->"232ecf65-aebf-43df-90d7-c602beac603b",
 CellTags->"BestFit"],
Cell[2733526, 53261, 230, 4, 35, "Text",ExpressionUUID->"6bc9db2d-51d9-471e-bca5-2d0b817d097a"],
Cell[2733759, 53267, 1001, 22, 94, "Input",ExpressionUUID->"7cfb9173-9523-494a-adc6-e35d50e94643",
 CellTags->{"ListLinePlot", "PlotMarkers"}],
Cell[2734763, 53291, 579, 14, 35, "Text",ExpressionUUID->"cf66e249-3c53-44fc-bb06-18c5ef734320"],
Cell[2735345, 53307, 433, 9, 30, "Input",ExpressionUUID->"b8084293-1aff-410a-8cc0-5882b4a9bba0"],
Cell[2735781, 53318, 574, 10, 30, "Input",ExpressionUUID->"97e009b7-a76f-4fb4-936c-fcbf45cdff9f",
 CellTags->{"ANOVATable", "FitCurvatureTable", "ParameterBias", "AICc"}]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2736416, 53335, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"0c6b93bb-1b0c-4e21-9acd-0615897d80c5",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[2736563, 53341, 174, 3, 115, "Section",ExpressionUUID->"4f1f8350-a704-4ec6-aff6-8640e9631418"],
Cell[2736740, 53346, 4657, 121, 385, "Text",ExpressionUUID->"ad0c0f15-5258-4c59-8008-848232dd4f31"],
Cell[2741400, 53469, 321, 6, 36, "Text",ExpressionUUID->"74bd97c1-2a1f-4257-8951-345dec01d3c2"],
Cell[CellGroupData[{
Cell[2741746, 53479, 170, 3, 79, "Subsection",ExpressionUUID->"d2966ac2-7613-42bd-ae75-19e42ff74ee4"],
Cell[2741919, 53484, 508, 10, 35, "Text",ExpressionUUID->"a8b96669-eed8-49bd-904a-2aefbd1d6c50"],
Cell[2742430, 53496, 483, 10, 30, "Input",ExpressionUUID->"64fecfef-051e-4094-9586-c077ac02fe6a"],
Cell[2742916, 53508, 996, 20, 58, "Text",ExpressionUUID->"4e753ee9-a022-48c6-b9da-f27e8aebfab0"],
Cell[2743915, 53530, 562, 12, 30, "Input",ExpressionUUID->"a5207fb4-6c68-4656-8cb0-5a66d9f78d6d",
 CellTags->{"GeneralizedLinearModelFit", "ExponentialFamily", "Poisson"}],
Cell[2744480, 53544, 642, 13, 30, "Input",ExpressionUUID->"bfd3c1d9-fb37-4830-a02c-651b06462b18"],
Cell[2745125, 53559, 379, 8, 35, "Text",ExpressionUUID->"8e12779f-6c1b-45ba-8858-6f031e5dfcf8"],
Cell[2745507, 53569, 386, 9, 30, "Input",ExpressionUUID->"55c1caca-0fd2-4cc8-9661-9b1cf3a83b45"],
Cell[2745896, 53580, 681, 12, 58, "Text",ExpressionUUID->"47944577-9f06-4cfc-8cd8-2694fcbe48d4"],
Cell[2746580, 53594, 477, 11, 30, "Input",ExpressionUUID->"fc4c2d30-17b0-4bc7-accb-79a572b849f5"],
Cell[2747060, 53607, 1327, 34, 52, "Input",ExpressionUUID->"792ce001-3a1f-4b0b-9643-9f178e7b54b2"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2748448, 53648, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"163745a6-0823-4685-be37-f476ca62b557",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[2748595, 53654, 244, 4, 115, "Section",ExpressionUUID->"cdf108bf-be80-49a5-8d66-48be72978bda"],
Cell[2748842, 53660, 740, 12, 58, "Text",ExpressionUUID->"99077e4b-c372-4bca-9003-2079d1b90f94"],
Cell[CellGroupData[{
Cell[2749607, 53676, 229, 4, 79, "Subsection",ExpressionUUID->"1c7c0a0d-2863-476b-a4d9-8f6d75365555"],
Cell[2749839, 53682, 471, 11, 30, "Input",ExpressionUUID->"414b4af0-38b6-4693-a581-9dc3cc499cf0"],
Cell[2750313, 53695, 359, 7, 35, "Text",ExpressionUUID->"e9a47628-823a-4ec3-9eb8-a8ac11f2ac8e"],
Cell[2750675, 53704, 292, 8, 30, "Input",ExpressionUUID->"ec28448d-9e68-4396-b599-e1a845099276"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2751004, 53717, 355, 5, 79, "Subsection",ExpressionUUID->"e629c112-d4c0-46e8-85b1-ba4bf1d9e3da"],
Cell[2751362, 53724, 964, 19, 30, "Input",ExpressionUUID->"4b2fde63-0a1e-4f8e-a486-41fc196589ed",
 CellTags->"Binomial"],
Cell[2752329, 53745, 387, 7, 35, "Text",ExpressionUUID->"cfff2d6f-48c8-4ced-8df5-803c3a51c97b"],
Cell[2752719, 53754, 553, 14, 30, "Input",ExpressionUUID->"d961db2f-dcb3-4b19-aafe-2dd88c3f603d",
 CellTags->"LogitModelFit"],
Cell[2753275, 53770, 224, 3, 35, "Text",ExpressionUUID->"f45b743c-e126-4184-bb5a-42968f49d3e4"],
Cell[2753502, 53775, 1095, 22, 30, "Input",ExpressionUUID->"d5a947d7-48ce-4c14-aa9c-ba0650a97422",
 CellTags->{"ParameterTable", "FitResiduals"}],
Cell[2754600, 53799, 516, 10, 27, "Text",ExpressionUUID->"92205fc3-4ee3-44ae-8f8b-46ba52435f91"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2755177, 53816, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"66bb9de2-1c35-4fd6-9ffe-e7da40b9236a",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[2755324, 53822, 337, 5, 115, "Section",ExpressionUUID->"442735a4-6e38-4493-8de9-0998e7fe26a5"],
Cell[2755664, 53829, 7890, 198, 470, "Text",ExpressionUUID->"d8842321-e982-424d-bcd1-828bc117d5ad"],
Cell[2763557, 54029, 340, 7, 36, "Text",ExpressionUUID->"aa441426-ac23-4442-9a02-732501fab5ac"],
Cell[CellGroupData[{
Cell[2763922, 54040, 217, 4, 79, "Subsection",ExpressionUUID->"d9130e1b-b1e5-4e33-8fca-6f76ed67cd23"],
Cell[2764142, 54046, 783, 13, 58, "Text",ExpressionUUID->"cc5adeea-0fe0-4c92-a916-de402c8346a5"],
Cell[2764928, 54061, 474, 12, 30, "Input",ExpressionUUID->"dff03b1b-8735-4d1d-b200-99f0fae03180"],
Cell[2765405, 54075, 342, 7, 35, "Text",ExpressionUUID->"8191f251-6867-421c-a91d-0b45327b31e4"],
Cell[2765750, 54084, 236, 5, 30, "Input",ExpressionUUID->"514654a4-bd5e-40e1-a994-40a5a63da7ea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2766023, 54094, 272, 6, 79, "Subsection",ExpressionUUID->"27ad1607-a5c0-45dd-815a-a3e0c11c1ff1"],
Cell[2766298, 54102, 470, 9, 35, "Text",ExpressionUUID->"feed1151-c56e-46a5-a672-1119d762dc74"],
Cell[2766771, 54113, 877, 21, 52, "Input",ExpressionUUID->"d21b6418-db1e-40c5-95f2-ec0df357fbd4"],
Cell[2767651, 54136, 1263, 25, 52, "Input",ExpressionUUID->"46ad9efa-9a4e-46f4-af8e-743e78963457",
 CellTags->{"LinkFunction", "NegativeBinomialLink"}],
Cell[2768917, 54163, 845, 18, 30, "Input",ExpressionUUID->"15ef3b69-1f4e-4377-a93d-ea10edb922fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2769799, 54186, 231, 4, 79, "Subsection",ExpressionUUID->"939371da-29da-4cfd-ae7e-c1497d1a4ebe"],
Cell[2770033, 54192, 377, 8, 35, "Text",ExpressionUUID->"2f17c208-1b1b-4f13-b672-1a8471eeb710"],
Cell[2770413, 54202, 930, 23, 52, "Input",ExpressionUUID->"a77ead49-7883-48a7-b9ab-c84d6a403b9e"],
Cell[2771346, 54227, 225, 3, 35, "Text",ExpressionUUID->"6ea08287-3f14-4c58-ae51-f18fff95cb43"],
Cell[2771574, 54232, 1273, 26, 52, "Input",ExpressionUUID->"aa5a8f25-7e37-47a2-80a4-7f2aece48df3"],
Cell[2772850, 54260, 950, 21, 30, "Input",ExpressionUUID->"6e73b1cb-d958-432a-8b6d-6bbf90d2041d"],
Cell[2773803, 54283, 562, 10, 34, "Text",ExpressionUUID->"6679c1ba-d65a-4dc5-9212-51fe977f078f"],
Cell[2774368, 54295, 1568, 38, 73, "Input",ExpressionUUID->"80277eb6-c474-49b6-badc-81e727792ddf",
 CellTags->{"BIC", "LikelihoodRatioIndex", "PearsonChiSquare", "Subsets", "Gaussian"}],
Cell[2775939, 54335, 349, 7, 35, "Text",ExpressionUUID->"5c868251-cf7b-43a9-a6ff-f749f6bf920a"],
Cell[2776291, 54344, 1105, 27, 30, "Input",ExpressionUUID->"d022e793-441a-4998-950f-4b7ec6e84495",
 CellTags->{"Grid", "Join", "Take", "SortBy"}],
Cell[2777399, 54373, 431, 9, 28, "Text",ExpressionUUID->"2e90f086-39dd-4252-bc4e-1b3522ecae7a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2777891, 54389, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"2a9b5d89-b3f0-44ba-8cc7-b5ddea2f7f0b",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[2778038, 54395, 240, 4, 115, "Section",ExpressionUUID->"fae988d9-74b1-4108-8879-9252a7a3abad"],
Cell[2778281, 54401, 731, 12, 58, "Text",ExpressionUUID->"7b358b51-25f0-4cb0-a629-08623cf4ae3b"],
Cell[2779015, 54415, 253, 4, 49, "Text",ExpressionUUID->"4ec6b609-d6d1-436e-bb98-16a87a0190fa"],
Cell[2779271, 54421, 1264, 29, 606, "Output",ExpressionUUID->"68a7a576-b8e8-4523-836d-632a5f2259c0"],
Cell[2780538, 54452, 580, 10, 177, "Text",ExpressionUUID->"a4eac738-ecea-45df-b824-b5b1776851e6"],
Cell[2781121, 54464, 13577, 315, 68, "Input",ExpressionUUID->"a8ad62c0-2f6d-40c5-abe6-b3a3ff89b35c",
 CellID->26079817],
Cell[2794701, 54781, 177, 3, 49, "Text",ExpressionUUID->"27a2eafc-270f-4bab-994e-7dadd55f2072"],
Cell[2794881, 54786, 607, 17, 146, "Input",ExpressionUUID->"c5c308ea-936f-4e07-9dd7-67f27357b76b",
 CellTags->"TimeSeriesWindow",
 CellID->35234274],
Cell[2795491, 54805, 532, 13, 114, "Input",ExpressionUUID->"970b6cbe-7959-423a-9e05-29050eace400",
 CellID->76320772],
Cell[2796026, 54820, 236, 4, 49, "Text",ExpressionUUID->"07de4107-def0-40a1-b826-31503c06f970"],
Cell[2796265, 54826, 221, 5, 49, "Input",ExpressionUUID->"a2e534d6-3825-40ad-9222-52f65130cfe0",
 CellTags->"TimeSeriesModelFit"],
Cell[2796489, 54833, 210, 3, 49, "Text",ExpressionUUID->"86f437cf-db48-49a9-a5a0-41c942affa35"],
Cell[2796702, 54838, 871, 24, 146, "Input",ExpressionUUID->"a5723f2d-b9fd-44a1-a182-5640381ab1a9",
 CellTags->"DateRange",
 CellID->643306091]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2797622, 54868, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"1c817a9f-e455-40c8-8620-fb7ca4f437d7",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[2797769, 54874, 379, 5, 137, "Section",ExpressionUUID->"0294b208-e8b7-4c87-a81b-70adf5fb9f09"],
Cell[2798151, 54881, 277, 6, 49, "Text",ExpressionUUID->"8896cfaf-5b3c-4973-b140-df85576bf6e2"],
Cell[2798431, 54889, 1406, 40, 146, "Input",ExpressionUUID->"e06cb29d-76fb-4bd9-9ec2-db35712eddd6",
 CellTags->"FindGeoLocation",
 CellID->831135752],
Cell[2799840, 54931, 201, 3, 49, "Text",ExpressionUUID->"871a9a65-0c67-4b78-b269-2a13942177d6"],
Cell[2800044, 54936, 425, 9, 30, "Input",ExpressionUUID->"708d195f-3c40-45d7-b243-220b6ebc0a2a",
 CellID->373022908],
Cell[2800472, 54947, 251, 4, 35, "Text",ExpressionUUID->"97fc9ca5-92e5-4900-bc8e-8bc18bfbcbe4"],
Cell[2800726, 54953, 199, 4, 30, "Input",ExpressionUUID->"cc592980-8676-45a3-9282-95b2b75310e5",
 CellID->193739114],
Cell[2800928, 54959, 365, 8, 35, "Text",ExpressionUUID->"5a2720d4-a139-4cde-a970-41c86647518d"],
Cell[2801296, 54969, 425, 12, 30, "Input",ExpressionUUID->"6660fddf-6995-4b34-ae20-a4d870e2bb10",
 CellTags->"DateRange",
 CellID->1486872],
Cell[2801724, 54983, 455, 13, 52, "Input",ExpressionUUID->"ac7a6963-c45d-4965-89f1-8e83fb79ecb2",
 CellTags->"PredictionLimits",
 CellID->642359114],
Cell[2802182, 54998, 1092, 26, 30, "Input",ExpressionUUID->"162c6fe4-e3c8-4db0-9d81-74f1997d93ed",
 CellID->75358596]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2803323, 55030, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"2d20b746-273d-4af1-ab57-50238fafb6f6",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[2803470, 55036, 153, 3, 115, "Section",ExpressionUUID->"81c435d1-ad55-4de0-8dea-0d78db6e9883"],
Cell[2803626, 55041, 24867, 766, 455, "Output",ExpressionUUID->"4ed11981-5615-4e56-a931-d4ff82c9d6c4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2828542, 55813, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"aa67085d-cf9e-446c-a757-b0667a2503d0",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[2828689, 55819, 165, 3, 115, "Section",ExpressionUUID->"f96b7e79-d7a5-437f-bda0-2058839d5423"],
Cell[CellGroupData[{
Cell[2828879, 55826, 167, 3, 79, "Subsection",ExpressionUUID->"5c228d05-6377-4bc6-b977-865a854f4a5a"],
Cell[2829049, 55831, 4382, 118, 194, "Input",ExpressionUUID->"ed7b4777-552c-4b21-9557-1909a8ef6cbc",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[2833468, 55954, 210, 4, 79, "Subsection",ExpressionUUID->"709ca258-f25e-4e72-8851-034402b63273"],
Cell[2833681, 55960, 1049, 25, 40, "Input",ExpressionUUID->"c2dc8b06-ed52-47b4-aff4-dddc2cd547bb"],
Cell[2834733, 55987, 61002, 1038, 74, "Input",ExpressionUUID->"516a1f7a-7d46-4b40-a48a-cbdf731ef0da",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[2895772, 57030, 154, 3, 79, "Subsection",ExpressionUUID->"6585c047-c2dd-4cfe-980e-397fd2c6062a"],
Cell[2895929, 57035, 8144, 232, 278, "Input",ExpressionUUID->"52b65463-9542-45e6-bb5d-214d1810d44d",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[2904110, 57272, 171, 3, 79, "Subsection",ExpressionUUID->"631d08c6-ba99-4b86-9b01-999b4a769a06"],
Cell[2904284, 57277, 830, 13, 58, "Text",ExpressionUUID->"52daa558-afaa-44e8-93ef-4d29af0d2093"],
Cell[2905117, 57292, 2144, 64, 152, "Input",ExpressionUUID->"40836d18-fe9d-486f-b19c-433eae452ae2",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[2907298, 57361, 221, 4, 79, "Subsection",ExpressionUUID->"906589fd-1c35-4a08-9b61-89c1eea2de29"],
Cell[2907522, 57367, 61174, 1476, 676, "Input",ExpressionUUID->"49e0f61b-400f-4bef-9f0b-163ea2059cb8",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[2968733, 58848, 162, 3, 79, "Subsection",ExpressionUUID->"3e3426ae-67c4-4872-8af7-0f8b114e41d5"],
Cell[2968898, 58853, 60190, 1487, 676, "Input",ExpressionUUID->"184d61bb-9a46-40e1-8d42-7578eeaa1410",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[3029125, 60345, 162, 3, 79, "Subsection",ExpressionUUID->"66abb1e4-cc95-4063-ab5d-880964898806"],
Cell[3029290, 60350, 651, 19, 46, "Input",ExpressionUUID->"0fbe8e68-ba72-4f45-9fd6-547aa2ec3f5e",
 InitializationCell->True]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

