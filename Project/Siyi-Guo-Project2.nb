(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='WolframDesktop 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       161,          7]
NotebookDataLength[    465334,       9511]
NotebookOptionsPosition[    456484,       9351]
NotebookOutlinePosition[    457077,       9373]
CellTagsIndexPosition[    456988,       9368]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Hyper Parameter", "Subsection",
 CellChangeTimes->{{3.739551732245135*^9, 
  3.739551736385481*^9}},ExpressionUUID->"a97b6548-7444-4f52-8385-\
55f7e3aac111"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nlatent", " ", "=", " ", "8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sampleSize", "=", " ", "60000"}], ";"}]}], "Input",
 CellChangeTimes->{{3.739551316690058*^9, 3.739551333600608*^9}, {
   3.7396686423057833`*^9, 3.7396686465900373`*^9}, 3.739670092731775*^9, {
   3.739717174778987*^9, 3.739717181629671*^9}},
 CellLabel->
  "In[981]:=",ExpressionUUID->"d8eb4aa3-ea91-4560-a5e4-89e2aa5ad890"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Encoder", "Subsection",
 CellChangeTimes->{{3.739551680305462*^9, 3.739551682201329*^9}, 
   3.739797298066251*^9, {3.739797342840246*^9, 
   3.7397973460662866`*^9}},ExpressionUUID->"8fef335a-119a-4684-9c73-\
4161c696fc69"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lrelu", " ", "=", " ", 
  RowBox[{"ElementwiseLayer", "[", 
   RowBox[{
    RowBox[{"Max", "[", 
     RowBox[{
      RowBox[{"Ramp", "[", "#", "]"}], ",", " ", 
      RowBox[{"#", "*", "0.3"}]}], "]"}], "&"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.739551680305462*^9, 3.739551682201329*^9}, 
   3.739797298066251*^9, {3.739797342840246*^9, 3.739797397032279*^9}},
 CellLabel->
  "In[983]:=",ExpressionUUID->"37b3c95e-cf6e-4345-8213-2834e7838772"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ElementwiseLayer", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014705882352941176`], {
                 RGBColor[0.557, 0.557, 0.557], 
                 RGBColor[0.33, 0.33, 0.33], 
                 Thickness[0.015029411764705883`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 18.5}, {14., 18.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.557, 0.557, 0.557], 
                 Thickness[0.015029411764705883`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{52.5, 18.5}, {44., 18.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.85, 0.85, 0.85], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{22.23,
                   18.5}, {33.5, 29.77}, {44.77, 18.5}, {33.5, 7.23}}}]}, {
                 FaceForm[{
                   RGBColor[0.56, 0.56, 0.56], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{33.5, 30.29}, {21.71, 
                  18.5}, {33.5, 6.71}, {45.29, 18.5}}, {{33.5, 29.25}, {44.25,
                   18.5}, {33.5, 7.75}, {22.75, 18.5}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{53.56, 15.4}, {51.88, 15.4}, {50.52, 16.76}, {
                  50.52, 18.44}, {50.52, 20.12}, {51.88, 21.48}, {53.56, 
                  21.48}, {55.24, 21.48}, {56.6, 20.12}, {56.6, 18.44}, {56.6,
                   16.76}, {55.24, 15.4}, {53.56, 15.4}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {0, 1, 0}}}, {{{53.56, 21.83}, {51.69, 21.83}, {50.17, 
                   20.31}, {50.17, 18.44}, {50.17, 16.57}, {51.69, 15.05}, {
                   53.56, 15.05}, {55.43, 15.05}, {56.95, 16.57}, {56.95, 
                   18.44}, {56.95, 20.31}, {55.43, 21.83}, {53.56, 21.83}}, {{
                   53.56, 21.83}, {53.56, 21.13}, {55.04, 21.13}, {56.25, 
                   19.92}, {56.25, 18.44}, {56.25, 16.96}, {55.04, 15.75}, {
                   53.56, 15.75}, {52.08, 15.75}, {50.87, 16.96}, {50.87, 
                   18.44}, {50.87, 19.92}, {52.08, 21.13}, {53.56, 21.13}, {
                   53.56, 21.83}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{13.56, 15.5}, {11.94, 15.5}, {10.62, 16.82}, {
                  10.62, 18.44}, {10.62, 20.06}, {11.94, 21.38}, {13.56, 
                  21.38}, {15.18, 21.38}, {16.5, 20.06}, {16.5, 18.44}, {16.5,
                   16.82}, {15.18, 15.5}, {13.56, 15.5}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}}}, {{{13.56, 21.73}, {11.74, 21.73}, {10.27, 
                   20.26}, {10.27, 18.44}, {10.27, 16.62}, {11.74, 15.15}, {
                   13.56, 15.15}, {15.38, 15.15}, {16.85, 16.62}, {16.85, 
                   18.44}, {16.85, 20.26}, {15.38, 21.73}, {13.56, 
                   21.73}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQLd/6OnCHnLaDx8MqkXXspg4MINCgA+efPQMCug6H
v2rE9B8ygYgf13MAa3M1gYrrQ8WNHdJAQM3AAcR1V0TwC225ri8uMILzwfqY
DB2qgcoe/tJ1MAaBzfoOMPfA+GBtezXhfIg5GlB1Bg7fQNaXqjsAya8acwwg
5lWpOcyaCQSShhD1H1Qh/jqA4MPcA+ODzbtnDHGXkwbc/+jhAwASgHiO
                   "]}]}}, ImageSize -> {40, Automatic}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{"\"Function\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TagBox[
                   FormBox[
                    RowBox[{"max", "(", 
                    RowBox[{
                    RowBox[{"0.3`", " ", "\"x\""}], ",", 
                    RowBox[{"Ramp", "[", "\"x\"", "]"}]}], ")"}], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"tensor\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014705882352941176`], {
                 RGBColor[0.557, 0.557, 0.557], 
                 RGBColor[0.33, 0.33, 0.33], 
                 Thickness[0.015029411764705883`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 18.5}, {14., 18.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.557, 0.557, 0.557], 
                 Thickness[0.015029411764705883`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{52.5, 18.5}, {44., 18.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.85, 0.85, 0.85], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{22.23,
                   18.5}, {33.5, 29.77}, {44.77, 18.5}, {33.5, 7.23}}}]}, {
                 FaceForm[{
                   RGBColor[0.56, 0.56, 0.56], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{33.5, 30.29}, {21.71, 
                  18.5}, {33.5, 6.71}, {45.29, 18.5}}, {{33.5, 29.25}, {44.25,
                   18.5}, {33.5, 7.75}, {22.75, 18.5}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{53.56, 15.4}, {51.88, 15.4}, {50.52, 16.76}, {
                  50.52, 18.44}, {50.52, 20.12}, {51.88, 21.48}, {53.56, 
                  21.48}, {55.24, 21.48}, {56.6, 20.12}, {56.6, 18.44}, {56.6,
                   16.76}, {55.24, 15.4}, {53.56, 15.4}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {0, 1, 0}}}, {{{53.56, 21.83}, {51.69, 21.83}, {50.17, 
                   20.31}, {50.17, 18.44}, {50.17, 16.57}, {51.69, 15.05}, {
                   53.56, 15.05}, {55.43, 15.05}, {56.95, 16.57}, {56.95, 
                   18.44}, {56.95, 20.31}, {55.43, 21.83}, {53.56, 21.83}}, {{
                   53.56, 21.83}, {53.56, 21.13}, {55.04, 21.13}, {56.25, 
                   19.92}, {56.25, 18.44}, {56.25, 16.96}, {55.04, 15.75}, {
                   53.56, 15.75}, {52.08, 15.75}, {50.87, 16.96}, {50.87, 
                   18.44}, {50.87, 19.92}, {52.08, 21.13}, {53.56, 21.13}, {
                   53.56, 21.83}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{13.56, 15.5}, {11.94, 15.5}, {10.62, 16.82}, {
                  10.62, 18.44}, {10.62, 20.06}, {11.94, 21.38}, {13.56, 
                  21.38}, {15.18, 21.38}, {16.5, 20.06}, {16.5, 18.44}, {16.5,
                   16.82}, {15.18, 15.5}, {13.56, 15.5}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}}}, {{{13.56, 21.73}, {11.74, 21.73}, {10.27, 
                   20.26}, {10.27, 18.44}, {10.27, 16.62}, {11.74, 15.15}, {
                   13.56, 15.15}, {15.38, 15.15}, {16.85, 16.62}, {16.85, 
                   18.44}, {16.85, 20.26}, {15.38, 21.73}, {13.56, 
                   21.73}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQLd/6OnCHnLaDx8MqkXXspg4MINCgA+efPQMCug6H
v2rE9B8ygYgf13MAa3M1gYrrQ8WNHdJAQM3AAcR1V0TwC225ri8uMILzwfqY
DB2qgcoe/tJ1MAaBzfoOMPfA+GBtezXhfIg5GlB1Bg7fQNaXqjsAya8acwwg
5lWpOcyaCQSShhD1H1Qh/jqA4MPcA+ODzbtnDHGXkwbc/+jhAwASgHiO
                   "]}]}}, ImageSize -> {40, Automatic}], 
              GridBox[{{
                 ItemBox[
                  StyleBox["Parameters", Bold]], 
                 ItemBox[""]}, {
                 StyleBox[
                  TemplateBox[{"\"Function\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TagBox[
                   FormBox[
                    RowBox[{"max", "(", 
                    RowBox[{
                    RowBox[{"0.3`", " ", "\"x\""}], ",", 
                    RowBox[{"Ramp", "[", "\"x\"", "]"}]}], ")"}], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                  "SummaryItem"]}, {
                 ItemBox[
                  StyleBox["Ports", Bold], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]], 
                 ItemBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                   "CacheGraphics" -> False], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]]}, {
                 StyleBox[
                  TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"tensor\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"tensor\"", "SummaryItem"]}}, 
               BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 3}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ElementwiseLayer[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.739797397490271*^9, 3.739797417003497*^9}, 
   3.7398008378793354`*^9},
 CellLabel->
  "Out[983]=",ExpressionUUID->"7e3343b9-0239-4e2a-8cc9-2acfb917d51b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"encoder", " ", "=", " ", 
   RowBox[{"NetChain", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ConvolutionLayer", "[", 
       RowBox[{"64", ",", " ", "4", ",", " ", 
        RowBox[{"\"\<Stride\>\"", "\[Rule]", "2"}], ",", " ", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", "2"}]}], "]"}], ",", 
      "\[IndentingNewLine]", "lrelu", ",", "\[IndentingNewLine]", 
      RowBox[{"DropoutLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ConvolutionLayer", "[", 
       RowBox[{"64", ",", " ", "4", ",", " ", 
        RowBox[{"\"\<Stride\>\"", "\[Rule]", "2"}], ",", " ", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", "2"}]}], "]"}], ",", 
      "\[IndentingNewLine]", "lrelu", ",", "\[IndentingNewLine]", 
      RowBox[{"DropoutLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ConvolutionLayer", "[", 
       RowBox[{"64", ",", " ", "4", ",", " ", 
        RowBox[{"\"\<Stride\>\"", "\[Rule]", "1"}], ",", " ", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", "2"}]}], "]"}], ",", 
      "\[IndentingNewLine]", "lrelu", ",", "\[IndentingNewLine]", 
      RowBox[{"DropoutLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"FlattenLayer", "[", "]"}]}], "\[IndentingNewLine]", "}"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7395491087158737`*^9, 3.73954917811176*^9}, {
   3.739549218210209*^9, 3.7395492956660833`*^9}, {3.7395493546752667`*^9, 
   3.7395493694767766`*^9}, {3.739550100213616*^9, 3.7395501005517516`*^9}, 
   3.7395506987487946`*^9, {3.739550763158961*^9, 3.7395507829405527`*^9}, {
   3.7395513101844034`*^9, 3.7395513112562037`*^9}, {3.739553041169927*^9, 
   3.7395530814694223`*^9}, {3.7396427053090143`*^9, 
   3.7396427062149363`*^9}, {3.7397064531160984`*^9, 3.7397064556743484`*^9}, 
   3.739716288881195*^9, {3.7397197436824937`*^9, 3.73971974511782*^9}, {
   3.7397382200078974`*^9, 3.739738237032915*^9}, {3.7397386776756477`*^9, 
   3.7397387248926487`*^9}, {3.739738764458597*^9, 3.7397388295626097`*^9}, {
   3.739738946903629*^9, 3.7397389531816115`*^9}, {3.739739030868601*^9, 
   3.7397390745136156`*^9}, {3.73973918457199*^9, 3.739739184768979*^9}, {
   3.739739235728995*^9, 3.7397392421189823`*^9}, {3.7397393644694333`*^9, 
   3.7397393798952384`*^9}, {3.739756551760101*^9, 3.739756555321489*^9}, {
   3.7397569889289956`*^9, 3.739756995272276*^9}, {3.7397573111038747`*^9, 
   3.739757319776167*^9}, {3.739796901869957*^9, 3.7397969077870407`*^9}, {
   3.73979740163824*^9, 3.739797405355241*^9}, {3.7398000923253517`*^9, 
   3.7398001425868797`*^9}},
 CellLabel->
  "In[1027]:=",ExpressionUUID->"b61fd62d-6249-4276-95f6-4e6f7dbc912f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Middle Trick Z layer", "Subsection",
 CellChangeTimes->{{3.739551687254616*^9, 
  3.7395516940382557`*^9}},ExpressionUUID->"1d510bfb-5494-494c-a291-\
1cda52559c0d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mn", " ", "=", " ", 
   RowBox[{"LinearLayer", "[", "nlatent", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sd", "=", " ", 
   RowBox[{"NetChain", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"LinearLayer", "[", "nlatent", "]"}], ",", 
      RowBox[{"ElementwiseLayer", "[", 
       RowBox[{
        RowBox[{"#", "*", "0.5"}], "&"}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"expSd", " ", "=", " ", 
   RowBox[{"ElementwiseLayer", "[", 
    RowBox[{
     RowBox[{"Exp", "[", "#", "]"}], "&"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z", " ", "=", 
   RowBox[{"TotalLayer", "[", "]"}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7395491087158737`*^9, 3.73954917811176*^9}, {
   3.739549218210209*^9, 3.7395492956660833`*^9}, {3.7395493546752667`*^9, 
   3.7395493694767766`*^9}, {3.739550100213616*^9, 3.7395501005517516`*^9}, {
   3.7395506987487946`*^9, 3.739550715179901*^9}, {3.7395512449249754`*^9, 
   3.739551276851375*^9}, 3.7395513375830107`*^9, {3.7395515781816907`*^9, 
   3.7395515847436523`*^9}, {3.7395529647125893`*^9, 
   3.7395529676392713`*^9}, {3.739553158868684*^9, 3.7395532248187704`*^9}, {
   3.739553457330779*^9, 3.739553521142729*^9}, {3.739553908178919*^9, 
   3.739553930029264*^9}, {3.739554079763504*^9, 3.7395540897121577`*^9}, {
   3.739554133563135*^9, 3.7395542311423635`*^9}, {3.7395546155509634`*^9, 
   3.7395546362187023`*^9}, {3.7395546795450125`*^9, 3.739554687174427*^9}, {
   3.739554745978673*^9, 3.7395547579545517`*^9}, {3.7395550832738695`*^9, 
   3.7395550911013155`*^9}, {3.739563601684586*^9, 3.739563634298044*^9}, {
   3.7395779331005144`*^9, 3.7395779348582907`*^9}, {3.7395801891391616`*^9, 
   3.739580189373973*^9}, {3.739653171873227*^9, 3.739653173339471*^9}, {
   3.739653666217244*^9, 3.7396536862047267`*^9}, {3.739658054893764*^9, 
   3.7396580554502954`*^9}, {3.739800365648552*^9, 3.739800368103361*^9}},
 CellLabel->
  "In[1023]:=",ExpressionUUID->"5ffd5e94-746f-4af8-ba2d-32f494356219"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Decoder", "Subsection",
 CellChangeTimes->{{3.7395516987804565`*^9, 
  3.7395517004113936`*^9}},ExpressionUUID->"b8773a27-cd1e-48ec-8d51-\
81bf6ff63b4b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"decoder", " ", "=", " ", 
   RowBox[{"NetChain", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
     "25", ",", "\[IndentingNewLine]", "lrelu", ",", "\[IndentingNewLine]", 
      "49", ",", " ", "\[IndentingNewLine]", "lrelu", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ReshapeLayer", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "7", ",", "7"}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"DeconvolutionLayer", "[", 
       RowBox[{"64", ",", " ", "4", ",", " ", 
        RowBox[{"\"\<Stride\>\"", "\[Rule]", "2"}], ",", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", "2"}]}], "]"}], ",", 
      "\[IndentingNewLine]", "Ramp", ",", "\[IndentingNewLine]", 
      RowBox[{"DropoutLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"DeconvolutionLayer", "[", 
       RowBox[{"64", ",", " ", "4", ",", " ", 
        RowBox[{"\"\<Stride\>\"", "\[Rule]", "1"}], ",", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", "2"}]}], "]"}], ",", 
      "\[IndentingNewLine]", "Ramp", ",", "\[IndentingNewLine]", 
      RowBox[{"DropoutLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"DeconvolutionLayer", "[", 
       RowBox[{"64", ",", " ", "4", ",", " ", 
        RowBox[{"\"\<Stride\>\"", "\[Rule]", "1"}], ",", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", "2"}]}], "]"}], ",", 
      "\[IndentingNewLine]", "Ramp", ",", "\[IndentingNewLine]", 
      RowBox[{"FlattenLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"28", "*", "28"}], ",", "\[IndentingNewLine]", 
      "LogisticSigmoid", ",", "\[IndentingNewLine]", 
      RowBox[{"ReshapeLayer", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "28", ",", "28"}], "}"}], "]"}]}], 
     "\[IndentingNewLine]", "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7395494974551506`*^9, 3.7395495046283197`*^9}, {
   3.7395510248368125`*^9, 3.7395510310459833`*^9}, {3.7395530865320435`*^9, 
   3.7395530890187006`*^9}, {3.739574426986454*^9, 3.7395744331238127`*^9}, {
   3.739574497367547*^9, 3.7395744993428903`*^9}, 3.7396531773926125`*^9, {
   3.739706461019185*^9, 3.7397064632360244`*^9}, {3.7397162948216295`*^9, 
   3.73971630056956*^9}, {3.739719747686528*^9, 3.739719749966364*^9}, {
   3.739738264288909*^9, 3.7397382739389133`*^9}, {3.739738853730604*^9, 
   3.7397389720616074`*^9}, {3.73973938318534*^9, 3.739739384977476*^9}, {
   3.739739420803893*^9, 3.739739443681853*^9}, {3.7397396218078933`*^9, 
   3.7397396313349075`*^9}, {3.7397396799720216`*^9, 3.739739681793908*^9}, {
   3.7397397124359007`*^9, 3.739739730399901*^9}, {3.739739814692984*^9, 
   3.73973981614898*^9}, {3.739739865804993*^9, 3.7397398829687643`*^9}, {
   3.7397566218803396`*^9, 3.739756681167693*^9}, {3.739756759474098*^9, 
   3.739756837663678*^9}, {3.73975693884508*^9, 3.7397569632685223`*^9}, {
   3.7397573254543333`*^9, 3.7397573339639964`*^9}, {3.739793536041973*^9, 
   3.739793542061054*^9}, {3.7397944858854265`*^9, 3.739794489394738*^9}, {
   3.7397969140676365`*^9, 3.7397969186518593`*^9}, {3.739800489331607*^9, 
   3.7398005375078735`*^9}, {3.7398006155175943`*^9, 
   3.7398006279111056`*^9}, {3.7398008319336505`*^9, 3.73980083207866*^9}},
 CellLabel->
  "In[1390]:=",ExpressionUUID->"edbf0ee2-cf30-4d82-9dab-f9b0c346225e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["ImageLoss", "Subsection",
 CellChangeTimes->{{3.7396580504733496`*^9, 
  3.739658066790998*^9}},ExpressionUUID->"1510df37-b6e3-4059-8d8a-\
68933a55834f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Assume", " ", "input", " ", "is", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", "28", ",", "28"}], "}"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"imageLoss", " ", "=", 
    RowBox[{"NetChain", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ThreadingLayer", "[", 
        RowBox[{
         RowBox[{"#2", "-", "#1"}], " ", "&"}], "]"}], ",", " ", 
       RowBox[{"ElementwiseLayer", "[", 
        RowBox[{
         RowBox[{"#", "^", "2"}], "&"}], "]"}], ",", " ", 
       RowBox[{"AggregationLayer", "[", 
        RowBox[{"Total", ",", "1"}], "]"}]}], "}"}], "]"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"imageLoss", " ", "=", " ", 
   RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ElementwiseLayer", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "*", "#"}], " ", "&"}], "]"}], ",", " ", 
       RowBox[{"TotalLayer", "[", "]"}], ",", " ", 
       RowBox[{"ElementwiseLayer", "[", 
        RowBox[{
         RowBox[{"#", "^", "2"}], "&"}], "]"}], ",", " ", 
       RowBox[{"ReshapeLayer", "[", 
        RowBox[{"{", 
         RowBox[{"28", ",", "28"}], "}"}], "]"}], ",", " ", 
       RowBox[{"AggregationLayer", "[", 
        RowBox[{"Total", ",", "2"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<inDec\>\"", "]"}], "\[Rule]", 
        RowBox[{"1", "->", "2"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<inInput\>\"", "]"}], "\[Rule]", "2"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"2", "\[Rule]", 
        RowBox[{"3", "\[Rule]", 
         RowBox[{"4", "\[Rule]", "5"}]}]}]}], "\[IndentingNewLine]", "}"}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7396580504733496`*^9, 3.7396580704733276`*^9}, {
   3.739658183848325*^9, 3.739658231838282*^9}, {3.7396582697827425`*^9, 
   3.7396582776903963`*^9}, {3.739658334942755*^9, 3.739658339791144*^9}, {
   3.7396589960878963`*^9, 3.739658999169059*^9}, {3.7396598749534454`*^9, 
   3.7396598778682594`*^9}, {3.739659999094411*^9, 3.739659999297686*^9}, {
   3.739660029523304*^9, 3.73966003873488*^9}, {3.739660095430449*^9, 
   3.7396601408837013`*^9}, {3.73966033166679*^9, 3.739660332402121*^9}, {
   3.739660371402605*^9, 3.739660372759054*^9}, {3.739801871719342*^9, 
   3.7398018874229064`*^9}, {3.7398027411215754`*^9, 
   3.7398027730066285`*^9}, {3.739803124346739*^9, 3.739803152802951*^9}, 
   3.739803211448743*^9, {3.739803623768796*^9, 3.739803641118581*^9}, 
   3.739803682781166*^9, {3.739803715240907*^9, 3.739803716062747*^9}, {
   3.7398038647194386`*^9, 3.739803865080753*^9}, {3.739804183405492*^9, 
   3.739804183776039*^9}, {3.7398042395820026`*^9, 3.739804250000084*^9}, {
   3.7398044941909447`*^9, 3.7398045212432337`*^9}, {3.739804905798359*^9, 
   3.739804958637001*^9}, {3.739805080714749*^9, 3.7398050831231155`*^9}, {
   3.7398075943133726`*^9, 3.739807629214981*^9}, {3.739807748553124*^9, 
   3.7398077671812134`*^9}, {3.739807829325135*^9, 3.7398078337119646`*^9}, {
   3.739808060318533*^9, 3.739808060482891*^9}, {3.739808111369532*^9, 
   3.73980811410174*^9}, {3.739808196752138*^9, 3.739808196923518*^9}, {
   3.739808436809472*^9, 3.73980844868378*^9}, {3.7398085609394836`*^9, 
   3.7398085610534115`*^9}, {3.739808666071518*^9, 3.739808670784358*^9}, 
   3.7398090468229074`*^9, {3.739809202091514*^9, 3.7398092193793154`*^9}, {
   3.7398093821562147`*^9, 3.739809382282889*^9}, {3.739809414304573*^9, 
   3.739809421663409*^9}, {3.7398094899230976`*^9, 3.739809607759758*^9}, {
   3.7398096408717833`*^9, 3.739809694435369*^9}, {3.7398099356477766`*^9, 
   3.7398099479985595`*^9}, {3.739810026899426*^9, 3.7398100296190786`*^9}, {
   3.7398100999142323`*^9, 3.7398101076445475`*^9}, {3.739810145297225*^9, 
   3.73981016437331*^9}},
 CellLabel->
  "In[1389]:=",ExpressionUUID->"f0396d21-c023-4886-859b-4555aa089e09"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = True}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {10., {0., 10.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"28\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["5", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}, "RowsIndexed" -> {}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {10., {0., 10.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], 
                    
                    LineBox[{{-6., 3.6739403974420594`*^-16}, {-5., 
                    3.061616997868383*^-16}}], 
                    
                    LineBox[{{-5., 3.061616997868383*^-16}, {-4., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-5., 1.0000000000000002`}, {-4., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-4., 1.0000000000000002`}, {-3., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-3., 1.0000000000000002`}, {-2., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-2., 1.0000000000000002`}, {-0.9999999999999999,
                     1.}}], 
                    
                    LineBox[{{-0.9999999999999999, 1.}, {
                    6.123233995736766*^-17, 1.}}]}, {
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-5.4, 
                    3.3065463576978537`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736762*^-17}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-4.4, 
                    0.6000000000000002}, {-0.25, 0}, 
                    Offset[8], {1., 0.9999999999999999}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-4.4, 
                    1.0000000000000002`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-3.4, 
                    1.0000000000000002`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-2.4000000000000004`,
                     1.0000000000000002`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-1.4, 
                    1.}, {-0.25, 0}, 
                    Offset[8], {1., -2.220446049250313*^-16}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-0.3999999999999999, 
                    1.}, {-0.25, 0}, 
                    Offset[8], {1., 0.}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], 
                    StyleBox[{
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-6., 3.6739403974420594`*^-16}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"inDec\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["inDec", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-5., 3.061616997868383*^-16}], 
                    Offset[{10, 10}, {-5., 3.061616997868383*^-16}]]}, 
                    InsetBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    StripOnInput -> False, FontFamily -> "Source Code Pro", 
                    FontSize -> 14, FontWeight -> Bold, FontSlant -> Italic, 
                    FontColor -> RGBColor[
                    0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`]], {-5., 3.061616997868383*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Slot", "[", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "]"}]}], "&"}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["1", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[Minus[#]& , {4, 3}]]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-4., 1.0000000000000002`}], 
                    Offset[{10, 10}, {-4., 1.0000000000000002`}]]}, 
                    InsetBox[
                    StyleBox[
                    "\"+\"", StripOnInput -> False, FontSize -> 14], {-4., 
                    1.0000000000000002`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"TotalLayer", "[", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["2", Bold], 
                    Style[
                    HoldForm[
                    TotalLayer["Inputs" -> {Automatic, Automatic}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-5., 1.0000000000000002`}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"inInput\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["inInput", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-3., 1.0000000000000002`}], 
                    Offset[{10, 10}, {-3., 1.0000000000000002`}]]}, 
                    InsetBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    StripOnInput -> False, FontFamily -> "Source Code Pro", 
                    FontSize -> 14, FontWeight -> Bold, FontSlant -> Italic, 
                    FontColor -> RGBColor[
                    0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`]], {-3., 1.0000000000000002`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"3\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"Slot", "[", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "]"}], "2"], "&"}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["3", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[#^2& , {4, 3}]]], FontFamily -> "Source Code Pro",
                     ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-2., 1.0000000000000002`}], 
                    Offset[{10, 10}, {-2., 1.0000000000000002`}]]}, 
                    InsetBox["\"R\"", 
                    Offset[{0, -1}, {-2., 1.0000000000000002`}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"4\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ReshapeLayer", "[", 
                    RowBox[{"{", 
                    RowBox[{"28", ",", "28"}], "}"}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["4", Bold], 
                    Style[
                    HoldForm[
                    ReshapeLayer[{28, 28}]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-0.9999999999999999, 1.}], 
                    Offset[{10, 10}, {-0.9999999999999999, 1.}]]}, 
                    InsetBox["\"A\"", 
                    Offset[{0, -1}, {-0.9999999999999999, 1.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"5\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"AggregationLayer", "[", 
                    RowBox[{"Total", ",", "2", ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"28", ",", "28"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["5", Bold], 
                    Style[
                    HoldForm[
                    AggregationLayer[Total, 2, "Input" -> {28, 28}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{6.123233995736766*^-17, 1.}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, FontSize -> 10]}, {
                    StyleBox[{
                    InsetBox["\"inDec\"", 
                    Offset[{0, -7}, {-6., 3.6739403974420594`*^-16}], {0, 1.},
                     Automatic, {1, 0}], 
                    InsetBox["\"1\"", 
                    Offset[{0, -13}, {-5., 3.061616997868383*^-16}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"2\"", 
                    Offset[{0, -13}, {-4., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"inInput\"", 
                    Offset[{0, -7}, {-5., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"3\"", 
                    Offset[{0, -13}, {-3., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"4\"", 
                    Offset[{0, -13}, {-2., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"5\"", 
                    Offset[{0, -13}, {-0.9999999999999999, 1.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"Output\"", 
                    Offset[{0, -7}, {6.123233995736766*^-17, 1.}], {0, 1.}, 
                    Automatic, {1, 0}]}, StripOnInput -> False, FontColor -> 
                    GrayLevel[0.5]], 
                    StyleBox[{
                    InsetBox["\"\"", 
                    
                    Offset[{3.3677786976552195`*^-16, 5.5}, {-5.4, 
                    3.3065463576978537`*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736762*^-17}], 
                    InsetBox["\"\"", 
                    
                    Offset[{-3.889087296526011, 3.8890872965260117`}, {-4.4, 
                    0.6000000000000002}], {0., -0.17}, Automatic, {
                    0.7071067811865476, 0.7071067811865475}], 
                    InsetBox["\"\"", 
                    Offset[{0., 5.5}, {-4.4, 1.0000000000000002`}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox["\"\"", 
                    Offset[{0., 5.5}, {-3.4, 1.0000000000000002`}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox["\"\"", 
                    
                    Offset[{0., 5.5}, {-2.4000000000000004`, 
                    1.0000000000000002`}], {0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], 
                    Offset[{1.2212453270876722`*^-15, 5.5}, {-1.4, 1.}], {
                    0., -0.17}, Automatic, {1., -2.220446049250313*^-16}], 
                    InsetBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"28\""}, 
                    "RowWithSeparators"], 
                    Offset[{0., 5.5}, {-0.3999999999999999, 1.}], {0., -0.17},
                     Automatic, {1., 0.}]}, StripOnInput -> False, FontSize -> 
                    8, FontWeight -> "Thin", FontColor -> GrayLevel[0.7]]}, {
                    EdgeForm[{
                    GrayLevel[0.5], 
                    Thickness[Large], 
                    Dashing[{0, Small}]}], 
                    FaceForm[None], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    Part[{{-6., 3.6739403974420594`*^-16}, {-5., 
                    3.061616997868383*^-16}, {-4., 1.0000000000000002`}, {-5.,
                     1.0000000000000002`}, {-3., 1.0000000000000002`}, {-2., 
                    1.0000000000000002`}, {-0.9999999999999999, 1.}, {
                    6.123233995736766*^-17, 1.}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 20, 20, 8, 20, 20, 20, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, AspectRatio -> Full, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    ImagePadding -> {{24., 26.5}, {27., 14.}}, 
                    ImageSize -> {380.5, 96.}, PlotRangePadding -> 0], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "inDec"], 
                    NeuralNetworks`NetPath["Nodes", "1"], 
                    NeuralNetworks`NetPath["Nodes", "2"], 
                    NeuralNetworks`NetPath["Inputs", "inInput"], 
                    NeuralNetworks`NetPath["Nodes", "3"], 
                    NeuralNetworks`NetPath["Nodes", "4"], 
                    NeuralNetworks`NetPath["Nodes", "5"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association["inDec" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT], "inInput" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{28}, NeuralNetworks`RealT]], 
                    Association[
                    "1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Power, 
                    NeuralNetworks`Private`ScalarSymbol[1], 2.}]]], 
                    "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Reshape", "Arrays" -> Association[], 
                    "Parameters" -> Association["Dimensions" -> {28, 28}], 
                    "Inputs" -> Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{28, 28}, NeuralNetworks`RealT]]], 
                    "5" -> Association[
                    "Type" -> "Aggregation", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> Total, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[2]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{28}, NeuralNetworks`RealT]]]]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"inDec\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"tensor\"", "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"28\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{"\"inInput\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"tensor\"", "SummaryItem"], "", "", "", ""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    ImageSizeCache -> {211., {17.75, 22.75}}, 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}, "RowsIndexed" -> {}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.739804938767502*^9, 3.7398049592561083`*^9}, 
   3.7398050836238785`*^9, 3.7398076302055736`*^9, {3.7398077530527544`*^9, 
   3.739807767772581*^9}, 3.7398078588814487`*^9, 3.739807927186401*^9, 
   3.739808070620982*^9, 3.7398081160723844`*^9, 3.7398081979615545`*^9, {
   3.73980843736344*^9, 3.7398084547568502`*^9}, 3.7398085616115828`*^9, 
   3.739808671295955*^9, 3.7398092202151923`*^9, {3.7398093590058517`*^9, 
   3.7398093828270087`*^9}, {3.739809414956716*^9, 3.7398094224546185`*^9}, 
   3.7398096092590914`*^9, {3.739809642264011*^9, 3.739809695710767*^9}, {
   3.739809901506184*^9, 3.739809936283263*^9}, 3.739810030323654*^9, 
   3.7398100663844795`*^9, 3.739810108583022*^9, {3.739810160299252*^9, 
   3.7398101979128523`*^9}},
 CellLabel->
  "Out[1389]=",ExpressionUUID->"b74fca63-7d21-41d2-8ee5-3c53674dd7a7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7398079772824926`*^9, 3.739808011739949*^9}, 
   3.7398080585236807`*^9},ExpressionUUID->"cd8471b6-4cdc-45fd-b167-\
bbeeefcad251"],

Cell[BoxData[
 RowBox[{"{", "0.`", "}"}]], "Output",
 CellChangeTimes->{{3.7398080073826513`*^9, 3.739808012300243*^9}},
 CellLabel->
  "Out[1312]=",ExpressionUUID->"c279ac73-f6f2-4001-a6ae-ff3a34cb8a18"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Latent Loss", "Subsection",
 CellChangeTimes->{{3.7396580504733496`*^9, 3.7396580704733276`*^9}, {
  3.739658183848325*^9, 3.7396581867788134`*^9}, {3.7396607866514063`*^9, 
  3.739660791490347*^9}},ExpressionUUID->"1de5c636-2c07-4bc9-98bb-\
1e273b057422"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Assume", " ", "input", " ", "is", " ", 
     RowBox[{"{", "8", "}"}]}], ",", " ", 
    RowBox[{"{", "8", "}"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"latentLoss", " ", "=", " ", 
   RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ElementwiseLayer", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "0.5"}], "*", "#"}], "&"}], "]"}], ",", " ", 
       RowBox[{"TotalLayer", "[", "]"}], ",", " ", 
       RowBox[{"ElementwiseLayer", "[", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"#", "^", "2"}], ")"}]}], "&"}], "]"}], ",", " ", 
       RowBox[{"ElementwiseLayer", "[", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Exp", "[", 
           RowBox[{"2", "*", "#"}], "]"}]}], "&"}], "]"}], ",", " ", 
       RowBox[{"ElementwiseLayer", "[", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"2", "*", "#"}]}], "&"}], "]"}], ",", 
       RowBox[{"SummationLayer", "[", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<mn\>\"", "]"}], "\[Rule]", "3"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<sd\>\"", "]"}], "\[Rule]", "4"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<sd\>\"", "]"}], "\[Rule]", "5"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"3", "\[Rule]", "2"}], ",", "\[IndentingNewLine]", 
       RowBox[{"4", "\[Rule]", "2"}], ",", "\[IndentingNewLine]", 
       RowBox[{"5", "\[Rule]", "2"}], ",", "\[IndentingNewLine]", 
       RowBox[{"2", "\[Rule]", "6"}], ",", "\[IndentingNewLine]", 
       RowBox[{"6", "\[Rule]", "1"}]}], "\[IndentingNewLine]", "}"}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7396580504733496`*^9, 3.7396580704733276`*^9}, {
   3.739658183848325*^9, 3.7396581867788134`*^9}, {3.7396607866514063`*^9, 
   3.7396608011688447`*^9}, {3.739661785555604*^9, 3.73966179277761*^9}, {
   3.739661875765953*^9, 3.739662019573432*^9}, {3.739662169718382*^9, 
   3.7396623039581375`*^9}, {3.739662471213227*^9, 3.739662489242158*^9}, {
   3.739662676125009*^9, 3.7396626768218703`*^9}, {3.739662716331247*^9, 
   3.739662765525912*^9}, {3.7396629501185417`*^9, 3.7396629508067074`*^9}, {
   3.739738308445907*^9, 3.739738311391897*^9}, {3.739801684337245*^9, 
   3.7398016966389213`*^9}, {3.739801777185547*^9, 3.739801783970646*^9}, {
   3.7398029610184975`*^9, 3.7398029663454523`*^9}, {3.7398032169269686`*^9, 
   3.739803227170117*^9}, {3.739808120429064*^9, 3.739808122342973*^9}, 
   3.739808194907878*^9, {3.7398083916319027`*^9, 3.739808397133438*^9}, {
   3.739808431454223*^9, 3.739808451609259*^9}, {3.7398085573416867`*^9, 
   3.7398085717260637`*^9}, {3.7398086417986193`*^9, 3.739808659401613*^9}, {
   3.739808986907992*^9, 3.7398089922877884`*^9}, {3.7398092276350017`*^9, 
   3.739809254920138*^9}},
 CellLabel->
  "In[1392]:=",ExpressionUUID->"a483c109-1890-41a9-a395-427c3de3b8fa"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["6", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], {
                    
                    LineBox[{{-5., 3.061616997868383*^-16}, {-4., 
                    2.4492935982947064`*^-16}}], 
                    
                    LineBox[{{-4., 2.4492935982947064`*^-16}, {-3., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-5., 1.0000000000000002`}, {-4., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-5., 2.0000000000000004`}, {-4., 
                    2.0000000000000004`}}], 
                    
                    LineBox[{{-4., 1.0000000000000002`}, {-3., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-4., 2.0000000000000004`}, {-3., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-3., 1.0000000000000002`}, {-2., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-2., 1.0000000000000002`}, {-0.9999999999999999,
                     1.}}], 
                    
                    LineBox[{{-0.9999999999999999, 1.}, {
                    6.123233995736766*^-17, 1.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-4.4, 
                    2.694222958124177*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-3.4, 
                    0.6000000000000002}, {-0.25, 0}, 
                    Offset[8], {1., 1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-4.4, 
                    1.0000000000000002`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-4.4, 
                    2.0000000000000004`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-3.4, 
                    1.0000000000000002`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-3.4, 
                    1.4000000000000004`}, {-0.25, 0}, 
                    Offset[8], {1., -1.0000000000000002`}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, 
                    1.0000000000000002`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    1.}, {-0.25, 0}, 
                    Offset[8], {1., -2.220446049250313*^-16}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-0.3999999999999999, 1.}, {-0.25, 0}, 
                    Offset[8], {1., 0.}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-5., 3.061616997868383*^-16}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"mn\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["mn", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-4., 2.4492935982947064`*^-16}], 
                    Offset[{10, 10}, {-4., 2.4492935982947064`*^-16}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], TraditionalForm]], {-4., 
                    2.4492935982947064`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"3\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Power", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}]}], "&"}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["3", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[Minus[#^2]& , {4, 3}]]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-3., 1.0000000000000002`}], 
                    Offset[{10, 10}, {-3., 1.0000000000000002`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"+\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-3., 1.0000000000000002`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"TotalLayer", "[", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", "Automatic", ",", "Automatic"}],
                     "}"}]}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["2", Bold], 
                    Style[
                    HoldForm[
                    TotalLayer[
                    "Inputs" -> {Automatic, Automatic, Automatic}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-5., 1.0000000000000002`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"sd\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["sd", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-4., 1.0000000000000002`}], 
                    Offset[{10, 10}, {-4., 1.0000000000000002`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], TraditionalForm]], {-4., 
                    1.0000000000000002`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"4\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "]"}]}], "&"}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["4", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[Minus[
                    Exp[2 #]]& , {4, 3}]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-4., 2.0000000000000004`}], 
                    Offset[{10, 10}, {-4., 2.0000000000000004`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], TraditionalForm]], {-4., 
                    2.0000000000000004`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"5\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    RowBox[{"1", "+", 
                    RowBox[{"Times", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}]}], "&"}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["5", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[1 + 2 #& , {4, 3}]]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-2., 1.0000000000000002`}], 
                    Offset[{10, 10}, {-2., 1.0000000000000002`}]]}, 
                    InsetBox[
                    FormBox["\"S\"", TraditionalForm], 
                    Offset[{0, -1}, {-2., 1.0000000000000002`}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"6\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"SummationLayer", "[", "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["6", Bold], 
                    Style[
                    HoldForm[
                    SummationLayer[]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-0.9999999999999999, 1.}], 
                    Offset[{10, 10}, {-0.9999999999999999, 1.}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], 
                    TraditionalForm]], {-0.9999999999999999, 1.}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "0.5`"}], " ", 
                    RowBox[{"Slot", "[", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "]"}]}], "&"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "\"Real\""}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["1", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[(-0.5) #& , {4, 3}], "Input" -> "Real"]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{6.123233995736766*^-17, 1.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-5., 2.0000000000000004`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"sd\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["sd", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    StyleBox[{{
                    InsetBox[
                    FormBox["\"mn\"", TraditionalForm], 
                    Offset[{0, -7}, {-5., 3.061616997868383*^-16}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{0, -13}, {-4., 2.4492935982947064`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    Offset[{0, -13}, {-3., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"sd\"", TraditionalForm], 
                    Offset[{0, -7}, {-5., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    Offset[{0, -13}, {-4., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    Offset[{0, -13}, {-4., 2.0000000000000004`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"6\"", TraditionalForm], 
                    Offset[{0, -13}, {-2., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    Offset[{0, -13}, {-0.9999999999999999, 1.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    Offset[{0, -7}, {6.123233995736766*^-17, 1.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"sd\"", TraditionalForm], 
                    Offset[{0, -7}, {-5., 2.0000000000000004`}], {0, 1.}, 
                    Automatic, {1, 0}]}}, FontColor -> GrayLevel[0.5], 
                    StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-4.4, 
                    2.694222958124177*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{-3.889087296526011, 3.889087296526011}, {-3.4, 
                    0.6000000000000002}], {0., -0.17}, Automatic, {
                    0.7071067811865475, 0.7071067811865475}], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-4.4, 1.0000000000000002`}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-4.4, 2.0000000000000004`}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-3.4, 1.0000000000000002`}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{3.8890872965260117`, 3.889087296526011}, {-3.4, 
                    1.4000000000000004`}], {0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865476}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"\[DottedSquare]\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{0., 5.5}, {-2.4000000000000004`, 
                    1.0000000000000002`}], {0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    Offset[{1.2212453270876722`*^-15, 5.5}, {-1.4, 1.}], {
                    0., -0.17}, Automatic, {1., -2.220446049250313*^-16}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-0.3999999999999999, 1.}], {0., -0.17},
                     Automatic, {1., 0.}]}, FontColor -> GrayLevel[0.7], 
                    FontSize -> 8, FontWeight -> "Thin", StripOnInput -> 
                    False]}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    Part[{{-5., 3.061616997868383*^-16}, {-4., 
                    2.4492935982947064`*^-16}, {-3., 
                    1.0000000000000002`}, {-5., 1.0000000000000002`}, {-4., 
                    1.0000000000000002`}, {-4., 2.0000000000000004`}, {-2., 
                    1.0000000000000002`}, {-0.9999999999999999, 1.}, {
                    6.123233995736766*^-17, 1.}, {-5., 2.0000000000000004`}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 20, 20, 8, 20, 20, 20, 20, 8, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, ImageSize -> {325.5, 151.}, AspectRatio -> 
                    Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{24., 26.5}, {27., 14.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "mn"], 
                    NeuralNetworks`NetPath["Nodes", "3"], 
                    NeuralNetworks`NetPath["Nodes", "2"], 
                    NeuralNetworks`NetPath["Inputs", "sd"], 
                    NeuralNetworks`NetPath["Nodes", "4"], 
                    NeuralNetworks`NetPath["Nodes", "5"], 
                    NeuralNetworks`NetPath["Nodes", "6"], 
                    NeuralNetworks`NetPath["Nodes", "1"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association["mn" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT], "sd" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    Association[
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Power, 
                    NeuralNetworks`Private`ScalarSymbol[1], 2.}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 2., 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[2]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 2., 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Plus, 1., 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT], "3" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{NeuralNetworks`SizeT}, 
                    NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]]], "6" -> 
                    Association[
                    "Type" -> "Summation", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{NeuralNetworks`SizeT}, 
                    NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]]], "1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[NeuralNetworks`Private`ScalarSymbol[2] -> {
                    Times, -0.5, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]]]]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"mn\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"tensor\"", "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{"\"sd\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"tensor\"", "SummaryItem"], "", "", "", ""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7396622608373156`*^9, 3.7396623048376093`*^9, 3.739662490138748*^9, 
   3.739662677868455*^9, {3.7396627190934453`*^9, 3.739662766685849*^9}, 
   3.739662951665894*^9, 3.7396688808984756`*^9, 3.7397059847251883`*^9, 
   3.739715928031291*^9, 3.7397163059861856`*^9, 3.73971819227499*^9, 
   3.739719258063177*^9, 3.7397197586233573`*^9, 3.7397379954984074`*^9, {
   3.7397382835968947`*^9, 3.739738311949894*^9}, 3.7397390042925987`*^9, 
   3.739739343693228*^9, 3.739757006512022*^9, 3.739792669931624*^9, 
   3.7397969432157946`*^9, 3.7397974238974595`*^9, 3.7398008508822117`*^9, {
   3.7398017857464714`*^9, 3.739801814774091*^9}, 3.7398025810910163`*^9, {
   3.7398027829341545`*^9, 3.7398028054091625`*^9}, {3.739802941170739*^9, 
   3.7398029671645093`*^9}, 3.7398031317302675`*^9, {3.7398032242020454`*^9, 
   3.739803227678946*^9}, 3.7398036281841745`*^9, 3.7398042540998487`*^9, 
   3.7398049448813276`*^9, 3.7398078603269715`*^9, {3.739807928556408*^9, 
   3.739807937586903*^9}, 3.7398080723619013`*^9, 3.7398081227473497`*^9, 
   3.7398081990217247`*^9, {3.7398084195206194`*^9, 3.7398084521997447`*^9}, {
   3.7398085639273005`*^9, 3.7398085722241597`*^9}, {3.739808653565483*^9, 
   3.7398086600603933`*^9}, 3.7398089937459397`*^9, {3.7398092395429955`*^9, 
   3.739809264205038*^9}, 3.7398093573145304`*^9, 3.7398094245657187`*^9, 
   3.739809614962909*^9, 3.739809647076957*^9, 3.739810072267169*^9, 
   3.73981021302682*^9},
 CellLabel->
  "Out[1392]=",ExpressionUUID->"e0f9ae9f-c8c5-4b45-8eca-6ab6a9ae1d08"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Loss", "Subsection",
 CellChangeTimes->{{3.7398013789742985`*^9, 
  3.7398013902722845`*^9}},ExpressionUUID->"ad5e5560-d72d-44fd-87ec-\
5a9600863698"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"loss", " ", "=", " ", 
  RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"ReplicateLayer", "[", "28", "]"}], ",", " ", 
      RowBox[{"TotalLayer", "[", "]"}], " ", ",", " ", 
      RowBox[{"ReshapeLayer", "[", 
       RowBox[{"{", "28", "}"}], "]"}], ",", " ", 
      RowBox[{"AggregationLayer", "[", 
       RowBox[{"Mean", ",", " ", "All"}], "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"NetPort", "[", "\"\<latentReal\>\"", "]"}], "\[Rule]", 
       RowBox[{"1", "\[Rule]", "2"}]}], ",", " ", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"NetPort", "[", "\"\<imageVector\>\"", "]"}], "\[Rule]", "2"}],
       ",", "\[IndentingNewLine]", 
      RowBox[{"2", "\[Rule]", 
       RowBox[{"3", "\[Rule]", "4"}]}]}], "\[IndentingNewLine]", "}"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7398013789742985`*^9, 3.7398014089810576`*^9}, {
   3.7398014472325907`*^9, 3.7398014544359026`*^9}, {3.739801502096683*^9, 
   3.7398015059698453`*^9}, {3.7398015947256336`*^9, 
   3.7398015948416057`*^9}, {3.739802786636153*^9, 3.7398027883371468`*^9}, {
   3.7398078755079536`*^9, 3.7398079036247773`*^9}, {3.7398079418822684`*^9, 
   3.739807942665143*^9}, {3.739808134814577*^9, 3.7398081355421376`*^9}, {
   3.7398081786517525`*^9, 3.7398081810198183`*^9}, {3.7398102907862372`*^9, 
   3.739810311839627*^9}, 3.739810379373747*^9, {3.7398104790237556`*^9, 
   3.739810550371975*^9}, {3.739810691196947*^9, 3.739810692833015*^9}, {
   3.739810748270138*^9, 3.7398107973240585`*^9}, {3.739811042899146*^9, 
   3.739811056034383*^9}},
 CellLabel->
  "In[1405]:=",ExpressionUUID->"7d2529f9-03da-4c54-9557-09b8b5cee6ea"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = True}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {10., {0., 10.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["4", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}, "RowsIndexed" -> {}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {10., {0., 10.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], 
                    
                    LineBox[{{-5., 3.061616997868383*^-16}, {-4., 
                    2.4492935982947064`*^-16}}], 
                    
                    LineBox[{{-4., 2.4492935982947064`*^-16}, {-3., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-4., 1.0000000000000002`}, {-3., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-3., 1.0000000000000002`}, {-2., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-2., 1.0000000000000002`}, {-0.9999999999999999,
                     1.}}], 
                    
                    LineBox[{{-0.9999999999999999, 1.}, {
                    6.123233995736766*^-17, 1.}}]}, {
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-4.4, 
                    2.694222958124177*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-3.4, 
                    0.6000000000000002}, {-0.25, 0}, 
                    Offset[8], {1., 1.}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-3.4, 
                    1.0000000000000002`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-2.4000000000000004`,
                     1.0000000000000002`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-1.4, 
                    1.}, {-0.25, 0}, 
                    Offset[8], {1., -2.220446049250313*^-16}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-0.3999999999999999, 
                    1.}, {-0.25, 0}, 
                    Offset[8], {1., 0.}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], 
                    StyleBox[{
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-5., 3.061616997868383*^-16}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"latentReal\"", Bold, StripOnInput -> False]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["latentReal", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-4., 2.4492935982947064`*^-16}], 
                    Offset[{10, 10}, {-4., 2.4492935982947064`*^-16}]]}, 
                    InsetBox[
                    StyleBox[
                    "\"\[VerticalEllipsis]\"", StripOnInput -> False, 
                    FontSize -> 10], 
                    Offset[{0, -1}, {-4., 2.4492935982947064`*^-16}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ReplicateLayer", "[", "28", "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["1", Bold], 
                    Style[
                    HoldForm[
                    ReplicateLayer[28]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-3., 1.0000000000000002`}], 
                    Offset[{10, 10}, {-3., 1.0000000000000002`}]]}, 
                    InsetBox[
                    StyleBox[
                    "\"+\"", StripOnInput -> False, FontSize -> 14], {-3., 
                    1.0000000000000002`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"TotalLayer", "[", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["2", Bold], 
                    Style[
                    HoldForm[
                    TotalLayer["Inputs" -> {Automatic, Automatic}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-4., 1.0000000000000002`}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"imageVector\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["imageVector", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-2., 1.0000000000000002`}], 
                    Offset[{10, 10}, {-2., 1.0000000000000002`}]]}, 
                    InsetBox["\"R\"", 
                    Offset[{0, -1}, {-2., 1.0000000000000002`}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"3\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ReshapeLayer", "[", 
                    RowBox[{"{", "28", "}"}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["3", Bold], 
                    Style[
                    HoldForm[
                    ReshapeLayer[{28}]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-0.9999999999999999, 1.}], 
                    Offset[{10, 10}, {-0.9999999999999999, 1.}]]}, 
                    InsetBox["\"A\"", 
                    Offset[{0, -1}, {-0.9999999999999999, 1.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"4\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"AggregationLayer", "[", 
                    RowBox[{"Mean", ",", "All", ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "28"}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["4", Bold], 
                    Style[
                    HoldForm[
                    AggregationLayer[Mean, All, "Input" -> 28]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{6.123233995736766*^-17, 1.}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, FontSize -> 10]}, {
                    StyleBox[{
                    InsetBox["\"latentReal\"", 
                    Offset[{0, -7}, {-5., 3.061616997868383*^-16}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"1\"", 
                    Offset[{0, -13}, {-4., 2.4492935982947064`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox["\"2\"", 
                    Offset[{0, -13}, {-3., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    TagBox[
                    TooltipBox[
                    "\"imageVect..\"", "\"imageVector\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "imageVector", "Tooltip"]& ], 
                    Offset[{0, -7}, {-4., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"3\"", 
                    Offset[{0, -13}, {-2., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"4\"", 
                    Offset[{0, -13}, {-0.9999999999999999, 1.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"Output\"", 
                    Offset[{0, -7}, {6.123233995736766*^-17, 1.}], {0, 1.}, 
                    Automatic, {1, 0}]}, StripOnInput -> False, FontColor -> 
                    GrayLevel[0.5]], 
                    StyleBox[{
                    InsetBox["\"\"", 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-4.4, 
                    2.694222958124177*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox["\"\"", 
                    
                    Offset[{-3.889087296526011, 3.889087296526011}, {-3.4, 
                    0.6000000000000002}], {0., -0.17}, Automatic, {
                    0.7071067811865475, 0.7071067811865475}], 
                    InsetBox["\"\"", 
                    Offset[{0., 5.5}, {-3.4, 1.0000000000000002`}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox["\"\"", 
                    
                    Offset[{0., 5.5}, {-2.4000000000000004`, 
                    1.0000000000000002`}], {0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"28\""}, 
                    "RowWithSeparators"], 
                    Offset[{1.2212453270876722`*^-15, 5.5}, {-1.4, 1.}], {
                    0., -0.17}, Automatic, {1., -2.220446049250313*^-16}], 
                    InsetBox["\"\[DoubleStruckCapitalR]\"", 
                    Offset[{0., 5.5}, {-0.3999999999999999, 1.}], {0., -0.17},
                     Automatic, {1., 0.}]}, StripOnInput -> False, FontSize -> 
                    8, FontWeight -> "Thin", FontColor -> GrayLevel[0.7]]}, {
                    EdgeForm[{
                    GrayLevel[0.5], 
                    Thickness[Large], 
                    Dashing[{0, Small}]}], 
                    FaceForm[None], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    Part[{{-5., 3.061616997868383*^-16}, {-4., 
                    2.4492935982947064`*^-16}, {-3., 
                    1.0000000000000002`}, {-4., 1.0000000000000002`}, {-2., 
                    1.0000000000000002`}, {-0.9999999999999999, 1.}, {
                    6.123233995736766*^-17, 1.}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 20, 20, 8, 20, 20, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, AspectRatio -> Full, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    ImagePadding -> {{38.499999999999986`, 26.5}, {27., 14.}},
                     ImageSize -> {340., 96.}, PlotRangePadding -> 0], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "latentReal"], 
                    NeuralNetworks`NetPath["Nodes", "1"], 
                    NeuralNetworks`NetPath["Nodes", "2"], 
                    NeuralNetworks`NetPath["Inputs", "imageVector"], 
                    NeuralNetworks`NetPath["Nodes", "3"], 
                    NeuralNetworks`NetPath["Nodes", "4"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association["latentReal" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT], "imageVector" -> 
                    NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    Association[
                    "1" -> Association[
                    "Type" -> "Replicate", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[28], 
                    "Level" -> 1], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Reshape", "Arrays" -> Association[], 
                    "Parameters" -> Association["Dimensions" -> {28}], 
                    "Inputs" -> Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{28}, NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Aggregation", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> Mean, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[All]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]]]]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"latentReal\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"tensor\"", "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{"\"imageVector\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"tensor\"", "SummaryItem"], "", "", "", ""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    ImageSizeCache -> {180., {17.75, 22.75}}, 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}, "RowsIndexed" -> {}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7398015066310177`*^9, 3.7398015954316654`*^9, 3.7398027889380555`*^9, 
   3.7398032319508896`*^9, 3.7398079043414307`*^9, {3.7398079396560135`*^9, 
   3.7398079435324974`*^9}, 3.7398081360533247`*^9, 3.739808181587595*^9, 
   3.739810381543517*^9, 3.7398105552332664`*^9, 3.739810693417615*^9, {
   3.73981074901476*^9, 3.7398108278640184`*^9}, {3.739811048543202*^9, 
   3.739811056667161*^9}},
 CellLabel->
  "Out[1405]=",ExpressionUUID->"048fca8d-0c3d-447e-aaae-013ec89a5a29"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["", "Subsection"]], "Section",
 CellChangeTimes->{{3.7396580504733496`*^9, 3.7396580704733276`*^9}, {
  3.739658183848325*^9, 3.7396581867788134`*^9}, {3.7396607866514063`*^9, 
  3.7396607908372393`*^9}, {3.739801371376523*^9, 
  3.739801373024659*^9}},ExpressionUUID->"1625ce47-7e38-4ccf-93bd-\
d49aa95d21db"],

Cell[CellGroupData[{

Cell["Further AssemBling", "Subsection",
 CellChangeTimes->{{3.7395517151356115`*^9, 
  3.7395517185883427`*^9}},ExpressionUUID->"0cd985cc-3af6-4533-854e-\
e0be71215472"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vaeNet", " ", "=", " ", 
  RowBox[{"NetInitialize", "[", 
   RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<enc\>\"", "->", "encoder"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<mn\>\"", "->", "mn"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<sd\>\"", "->", " ", "sd"}], ",", 
       RowBox[{"\"\<expSd\>\"", "\[Rule]", "expSd"}], ",", 
       RowBox[{"\"\<sdEpsilon\>\"", "\[Rule]", 
        RowBox[{"ThreadingLayer", "[", "Times", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<z\>\"", "->", 
        RowBox[{"TotalLayer", "[", "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<dec\>\"", "->", "decoder"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<imageLoss\>\"", "\[Rule]", "imageLoss"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<latentLoss\>\"", "\[Rule]", "latentLoss"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<loss\>\"", "\[Rule]", "loss"}]}], "\[IndentingNewLine]", 
      "|>"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
        "\"\<enc\>\""}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<enc\>\"", "\[Rule]", "\"\<mn\>\""}], ",", 
       "\[IndentingNewLine]", " ", 
       RowBox[{"\"\<enc\>\"", "\[Rule]", "\"\<sd\>\""}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<sd\>\"", "\[Rule]", "\"\<expSd\>\""}], ",", 
       RowBox[{"\"\<expSd\>\"", "\[Rule]", "\"\<sdEpsilon\>\""}], ",", " ", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<random\>\"", "]"}], " ", "\[Rule]", 
        "\"\<sdEpsilon\>\""}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<mn\>\"", "\[Rule]", "\"\<z\>\""}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<sdEpsilon\>\"", "\[Rule]", "\"\<z\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<z\>\"", "\[Rule]", "\"\<dec\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<dec\>\"", "\[Rule]", 
        RowBox[{"NetPort", "[", "\"\<Output\>\"", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"latent", " ", "loss"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\"\<sd\>\"", "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<latentLoss\>\"", ",", "\"\<sd\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<mn\>\"", "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<latentLoss\>\"", ",", "\"\<mn\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"image", " ", "loss"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\"\<dec\>\"", "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<imageLoss\>\"", ",", " ", "\"\<inDec\>\""}], "]"}]}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<imageLoss\>\"", ",", " ", "\"\<inInput\>\""}], "]"}]}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"image", " ", "loss8"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\"\<latentLoss\>\"", "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<loss\>\"", ",", " ", "\"\<latentReal\>\""}], "]"}]}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<imageLoss\>\"", "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<loss\>\"", ",", " ", "\"\<imageVector\>\""}], "]"}]}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<loss\>\"", "\[Rule]", 
        RowBox[{"NetPort", "[", "\"\<Loss\>\"", "]"}]}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Output\>\"", "->", 
      RowBox[{"NetDecoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Image\>\"", ",", " ", "\"\<Grayscale\>\""}], "}"}], 
       "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", 
      RowBox[{"NetEncoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Image\>\"", ",", " ", 
         RowBox[{"{", 
          RowBox[{"28", ",", "28"}], "}"}], ",", " ", "\"\<Grayscale\>\""}], 
        "}"}], "]"}]}]}], "\[IndentingNewLine]", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7395667951751738`*^9, 3.739566823119445*^9}, {
   3.739574834995954*^9, 3.7395748652310114`*^9}, {3.73957491718008*^9, 
   3.739574917426771*^9}, {3.739575282194539*^9, 3.7395753031761303`*^9}, {
   3.7395753720648174`*^9, 3.7395754054285545`*^9}, {3.739575753558014*^9, 
   3.739575818615221*^9}, {3.739575923773177*^9, 3.739576032295744*^9}, {
   3.73957615725283*^9, 3.739576173140894*^9}, {3.7395779455852795`*^9, 
   3.7395780210064535`*^9}, {3.739578073895379*^9, 3.739578083263719*^9}, {
   3.739578120244849*^9, 3.7395781445247774`*^9}, {3.7395798772539005`*^9, 
   3.739579955987113*^9}, {3.7395799869009967`*^9, 3.7395800066441164`*^9}, {
   3.739580051114643*^9, 3.739580061781546*^9}, {3.7395800954997687`*^9, 
   3.739580113756624*^9}, {3.7395801730651765`*^9, 3.7395801734785357`*^9}, {
   3.73958040387289*^9, 3.739580415517378*^9}, {3.739642073118585*^9, 
   3.739642075307708*^9}, {3.7396422885419416`*^9, 3.7396423085812283`*^9}, {
   3.739653107913578*^9, 3.739653156395689*^9}, {3.7396536936749983`*^9, 
   3.739653721150965*^9}, {3.739653832160608*^9, 3.7396538531965933`*^9}, {
   3.739654031706568*^9, 3.7396540386932983`*^9}, {3.739654494399378*^9, 
   3.739654507330639*^9}, {3.7396556160251646`*^9, 3.739655622666688*^9}, {
   3.739655676499963*^9, 3.739655695158108*^9}, {3.739659126358765*^9, 
   3.7396592334493318`*^9}, {3.739659496978977*^9, 3.7396595181507273`*^9}, {
   3.7396603267595463`*^9, 3.739660327091504*^9}, {3.7396603759149466`*^9, 
   3.7396603902156286`*^9}, {3.7396604372275276`*^9, 3.739660485491572*^9}, {
   3.73966051816661*^9, 3.739660533257409*^9}, {3.739660566399602*^9, 
   3.739660592820536*^9}, {3.7396606785559244`*^9, 3.7396607348536077`*^9}, {
   3.739660770010747*^9, 3.7396607786615324`*^9}, {3.7396612178446693`*^9, 
   3.7396612550095005`*^9}, {3.739662334945963*^9, 3.7396623706221595`*^9}, {
   3.7396624291338043`*^9, 3.7396624649212823`*^9}, {3.7396625144474583`*^9, 
   3.739662523829752*^9}, {3.739662608901328*^9, 3.73966270439748*^9}, {
   3.7396627454343853`*^9, 3.7396627463531523`*^9}, {3.7396629139929028`*^9, 
   3.7396629310823264`*^9}, {3.739662961278787*^9, 3.739663026674754*^9}, 
   3.7397188827808523`*^9, {3.739718970465977*^9, 3.7397189767068577`*^9}, {
   3.7397191806097207`*^9, 3.7397192406211147`*^9}, 3.7398014597348666`*^9, {
   3.7398034656582584`*^9, 3.739803490613632*^9}, {3.7398035244403687`*^9, 
   3.7398035402987995`*^9}, {3.7398036929205694`*^9, 
   3.7398037088200207`*^9}, {3.739803945479252*^9, 3.7398039707659965`*^9}, {
   3.7398040228689985`*^9, 3.7398040257403917`*^9}, {3.739804370291984*^9, 
   3.739804370764393*^9}, 3.7398049621003094`*^9, {3.7398060601874127`*^9, 
   3.739806113406682*^9}, {3.7398071373402176`*^9, 3.7398071524626684`*^9}, {
   3.7398072721425514`*^9, 3.7398072788674555`*^9}, {3.7398076612231283`*^9, 
   3.7398076776800346`*^9}, {3.7398077150159154`*^9, 
   3.7398077215323224`*^9}, {3.7398077789631224`*^9, 
   3.7398077900835953`*^9}, {3.7398082170684934`*^9, 
   3.7398082243783016`*^9}, {3.7398082778213615`*^9, 
   3.7398083143248377`*^9}, {3.7398083516687603`*^9, 3.739808358203776*^9}, {
   3.7398094608180203`*^9, 3.73980947990317*^9}, {3.7398102237285357`*^9, 
   3.7398102555987115`*^9}},
 CellLabel->
  "In[1406]:=",ExpressionUUID->"31419281-fdd4-4dbc-8105-f2287a04b63a"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = True}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {10., {0., 10.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of outputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["10", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}, "RowsIndexed" -> {}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {10., {0., 10.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], 
                    
                    LineBox[{{-9., 5.51091059616309*^-16}, {-8., 
                    4.898587196589413*^-16}}], 
                    
                    LineBox[{{-3., -1.9999999999999998`}, {-2., \
-1.9999999999999998`}}], 
                    LineBox[CompressedData["
1:eJwtkltIkwEUx1exwrX0oW/bt3ZrgRqUZBakdDZfCrWWiQsv1ZalM8O5tRXl
CrUbpAX2sJeU1EpxwRxK0q66nU8jFxbLETjRVWzgXNlDF8uCoO1zP87hvJw/
/A4c6Tl9uWY9g8HITHRyrrEdN50m9mUNUvDs/HJkJSBBmTaosdynoGqADeFu
CZoWYj1qHQVse81me40E3UMn5o+WUjDxaKnshlSC68KkWL+LglY6IMbSpv31
fiYFhXGzPG4W42OVZbQyjLDhuGPx7mExrtoMG0XPEd52pDPJ7yKsVJvV5B2E
7q4kInTr2GMlSoSlZFwuQsmevUKuFKGgM5rfGRVi+kfr6suwD+61JxHiwpkV
p8rkg9CtnEQJcfCT3PSL8MHOlmB2S1CAxrPtBQ9GvNB8NYkACyMzf7IVXvAb
hFMGoQDZtQI3xsaB1FJcLbUNQ9G6a9W3x1M+fDS+Un5Jk40BfY6cj/KiHuvT
kAfyaR8SWf7FxoOXPdBB+5AYKs7d/T7DA3O0D4kDr03LWqs75cPDi0cmh5hF
7pQPD2Ga3dQbccEU7cNDlqIi50CrC3i0Dxdn3/R9DfBdUE/Dxf5jcVvDCyfk
Xfn2N7aFixd08w3TSif8GynmN7s5mBUQ8yd+O4BOazk4qx/1Kp444Kbl1I/J
HRy8XtZV3VjmAFktb7jtA4GE4V1cxHTAz5K+RBHYP1Olr/PZgV7XEJhpzPss
b7NDxcOtIlYugb3lqpO2Q3ZY+x8C0y7N+YYz7PAfxvAZGg==
                    "]], 
                    
                    LineBox[{{-8., 
                    4.898587196589413*^-16}, {-7., -0.9999999999999996}}], 
                    
                    LineBox[{{-7., -0.9999999999999996}, {-6., \
-2.9999999999999996`}}], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQDQEyB/78B4H3+1emv3n09bz0gV9QfuQSHpu7s6Th
8jzbEri3JSD4h+e8CGhQRPAbIkAapOB8h5eT7V5ORvBZ/Lc/a3dF8M928rFK
fJKE82fNBAEEH6zdThLuHou+x0AkAZfv7AABiQN/ofybTbo3mnQR8hq1l9Rr
L4nD+RXlICB+4B+Uf7xQBojE4frFcw6KARFcHuIeUbj8usypQvwOoge8wkL/
pDx+v9/vqd29qpciB4wjQz9O7gWazzPtz52pIge2czDc7/n3br/u/Vm5pq4i
By6lhB71N3u3PzvW17Dlu/CBrtzQJXdM3u43aV/rfnKN8IF7Sgw1xr9e7++I
2b2BJVX4wJmWUJ+Qtlf70+6W5ZgpCB8InRwqan/zxf7znA+q4u4JHSj3Y7j+
+dOz/S3PlwVsyhE6IGlj3jop9fH+fbOfM3EzCx14c9dGPELiwf46tUUTMxYK
HniYriTVKXZr/5H2a39OuQsecK/JOLu+5sr+SftbXIy+CRyQ/TR9gsexc/uf
nF2TMW+NwIGiPTNFz04+un/vJr9M/myBAzzr1wTfOrxrv0xellurocCBSl5z
08WHVuyHpB+BA+wxIsZqyzbaAAD1MGqi
                    "]], 
                    
                    LineBox[{{-5., 3.061616997868383*^-16}, {-4., 
                    2.4492935982947064`*^-16}}], 
                    
                    LineBox[{{-5., 
                    3.061616997868383*^-16}, {-4., -0.9999999999999998}}], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQDQECB9hjRIzVlm20CT5/4+jr+fwHimomzNAo3Giz
0UOyYpcp/4FXMbs5pptttJHIOSiWc5DvQO7fKc2F3zbYtFpeXMjgzHfgd6ws
544NG2z+bABp4D0wpS5kZlbqBpu6S+q1l9R5D1jGW5l0imywYZuXd5a/m+fA
pf9zN6vXrLeZISzLZfCE+4DXQRUR0SPrbIzBgPvADSbOrlsM62wugrTXch0o
ZJnDxWOx1qZI5nihzHHOA9xs+t22+WtshAVBgPPAEvZD3PnLVttsYI0GIo4D
dpyhPQvurrIJ+LXE/9cS9gPXuF7wXBJZZfP+HQiwHSjgqe5l9llp0/fYAojY
DnDx8fGZNq+w0bvRpHujifXAYv6FfWm7ltuYgN3DfODqlbqC47pLba6A3cN0
IO+a4McfKUtsCsHuYTzAcWNJodacxTZCYPcwHlh00/xT9OVFNhvB7mE4YHX7
VFEv1yKbBV8853/x/L//yp3Yz/scF9rcuwsCf/fn3vtQ/KFigY0syLjCP/t5
D7C/dE6YbxMD9tDv/Q6HdV8tOzfXZtZMEPi5v+hY8GtO2zk24Ogy/7G/11Pm
+pRts2w+H1ZKffDy2/7qM5oz8t1m2rCDrN/wdb+df43erDfTbdjB4f9l/8WL
wrNEVk6z+doTu+df5ef9ZiEfbt2rnmoDjq7aT/sh/ptiA1Y+5eP+qoiKO0kp
k20iEv1KNA582B9xS3muTNUkG0j6+bAfkn4m2gAAi80VhQ==
                    "]], 
                    
                    LineBox[{{-6., -2.9999999999999996`}, {-5., \
-1.9999999999999998`}}], 
                    
                    LineBox[{{-6., -1.9999999999999996`}, {-5., \
-1.9999999999999998`}}], 
                    
                    LineBox[{{-5., -1.9999999999999998`}, {-4., \
-0.9999999999999998}}], 
                    
                    LineBox[{{-4., -0.9999999999999998}, {-3., \
-0.9999999999999998}}], 
                    
                    LineBox[{{-3., -0.9999999999999998}, {-2., \
-0.9999999999999999}}], 
                    
                    LineBox[{{-3., -0.9999999999999998}, {-2., \
-1.9999999999999998`}}], 
                    
                    LineBox[{{-2., -1.9999999999999998`}, {-1., 
                    6.123233995736766*^-17}}], 
                    LineBox[{{-1., 6.123233995736766*^-17}, {0., 0.}}]}, {
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-8.4, 
                    5.143516556418883*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-2.4000000000000004`, \
-1.9999999999999996`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-6.355555555555556, 
                    3.8916553839571447`*^-16}, {-0.25, 0}, 
                    Offset[8], {
                    0.08888888888888946, -5.442874662877157*^-18}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-7.4, -0.5999999999999995}, \
{-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-6.417705098312485, \
-2.164589803375031}, {-0.25, 0}, 
                    Offset[8], {1., -2.}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-5.500723193132872, \
-0.9982540573304033}, {-0.25, 0}, 
                    Offset[8], {0.376331391512033, 0.0034918853391929794`}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-4.4, 
                    2.694222958124177*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-4.4, -0.5999999999999998}, \
{-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-2.355555555555556, 
                    1.4423617856624383`*^-16}, {-0.25, 0}, 
                    Offset[8], {
                    0.08888888888888857, -5.4428746628771325`*^-18}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-5.4, -2.3999999999999995`}, \
{-0.25, 0}, 
                    Offset[8], {1., 0.9999999999999998}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-5.4, -1.9999999999999996`}, \
{-0.25, 0}, 
                    Offset[8], {1., -2.220446049250313*^-16}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-4.4, -1.4}, {-0.25, 
                    0}, 
                    Offset[8], {1., 1.}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-3.4, -0.9999999999999998}, \
{-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-2.4000000000000004`, \
-0.9999999999999998}, {-0.25, 0}, 
                    Offset[8], {1., -1.1102230246251565`*^-16}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-2.4000000000000004`, \
-1.5999999999999996`}, {-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-1.4177050983124844`, \
-0.8354101966249686}, {-0.25, 0}, 
                    Offset[8], {1., 1.9999999999999998`}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-0.4, 
                    2.4492935982947065`*^-17}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736766*^-17}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], 
                    StyleBox[{
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-9., 5.51091059616309*^-16}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-8., 4.898587196589413*^-16}], 
                    Offset[{12, 12}, {-8., 4.898587196589413*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, ImageMargins -> 
                    0., ImagePadding -> 0, ImageSize -> 16, PlotRange -> All, 
                    PlotRangePadding -> 1], {-8., 4.898587196589413*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"enc\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "10", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["enc", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[10]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-2., -1.9999999999999998`}], 
                    Offset[{12, 12}, {-2., -1.9999999999999998`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, BaseStyle -> GrayLevel[0.4], 
                    ImageMargins -> 0., ImagePadding -> 0, ImageSize -> 15, 
                    PlotRange -> All, PlotRangePadding -> 
                    0], {-2., -1.9999999999999998`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"imageLoss\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "5", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["imageLoss", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[5], 
                    Skeleton[7]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-5., 3.061616997868383*^-16}], 
                    Offset[{10, 10}, {-5., 3.061616997868383*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[
                    
                    GraphicsComplexBox[{{0.1, 0}, {-0.3, 1}, {0.5, 1}, {
                    1.3, 1}, {0.9, 0}}, {{
                    Opacity[0.2], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    RGBColor[0.33, 0.33, 0.33], 
                    AbsolutePointSize[3.5], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 18], {-5., 
                    3.061616997868383*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"mn\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"LinearLayer", "[", 
                    RowBox[{
                    RowBox[{"{", "8", "}"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "5184"}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["mn", Bold], 
                    Style[
                    HoldForm[
                    LinearLayer[{8}, "Input" -> 5184]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-7., -0.9999999999999996}], 
                    Offset[{12, 12}, {-7., -0.9999999999999996}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, ImageMargins -> 
                    0., ImagePadding -> 0, ImageSize -> 16, PlotRange -> All, 
                    PlotRangePadding -> 1], {-7., -0.9999999999999996}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"sd\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["sd", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[2]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-6., -2.9999999999999996`}], 
                    Offset[{10, 10}, {-6., -2.9999999999999996`}]]}, 
                    InsetBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    StripOnInput -> False, FontFamily -> "Source Code Pro", 
                    FontSize -> 14, FontWeight -> Bold, FontSlant -> Italic, 
                    FontColor -> RGBColor[
                    0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`]], {-6., -2.9999999999999996`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"expSd\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"Slot", "[", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "]"}], "]"}], "&"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "8"}]}], "]"}], HoldForm],
                     FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["expSd", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[Exp[#]& , {4, 3}], "Input" -> 8]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-4., 2.4492935982947064`*^-16}], 
                    Offset[{12, 12}, {-4., 2.4492935982947064`*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, BaseStyle -> GrayLevel[0.4], 
                    ImageMargins -> 0., ImagePadding -> 0, ImageSize -> 15, 
                    PlotRange -> All, PlotRangePadding -> 0], {-4., 
                    2.4492935982947064`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"latentLoss\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "6", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["latentLoss", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[6], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-4., -0.9999999999999998}], 
                    Offset[{10, 10}, {-4., -0.9999999999999998}]]}, 
                    InsetBox[
                    StyleBox[
                    "\"+\"", StripOnInput -> False, FontSize -> 
                    14], {-4., -0.9999999999999998}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"z\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"TotalLayer", "[", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"8", ",", "8"}], "}"}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["z", Bold], 
                    Style[
                    HoldForm[
                    TotalLayer["Inputs" -> {8, 8}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-1., 6.123233995736766*^-17}], 
                    Offset[{12, 12}, {-1., 6.123233995736766*^-17}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, BaseStyle -> GrayLevel[0.4], 
                    ImageMargins -> 0., ImagePadding -> 0, ImageSize -> 15, 
                    PlotRange -> All, PlotRangePadding -> 0], {-1., 
                    6.123233995736766*^-17}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"loss\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "4", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "6", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["loss", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[4], 
                    Skeleton[6]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-5., -1.9999999999999998`}], 
                    Offset[{10, 10}, {-5., -1.9999999999999998`}]]}, 
                    InsetBox[
                    StyleBox[
                    "\"\[Times]\"", StripOnInput -> False, FontSize -> 
                    14], {-5., -1.9999999999999998`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"sdEpsilon\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{"Times", ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"8", ",", "8"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["sdEpsilon", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[Times, "Inputs" -> {8, 8}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 10), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-6., -1.9999999999999996`}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"random\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["random", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 11), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-3., -0.9999999999999998}], 
                    Offset[{12, 12}, {-3., -0.9999999999999998}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, ImageMargins -> 
                    0., ImagePadding -> 0, ImageSize -> 16, PlotRange -> All, 
                    PlotRangePadding -> 1], {-3., -0.9999999999999998}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"dec\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "17", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["dec", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[17]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 12), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-2., -0.9999999999999999}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 13), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Loss\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Loss", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 14), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-3., -1.9999999999999998`}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, FontSize -> 10]}, {
                    StyleBox[{
                    InsetBox["\"Input\"", 
                    Offset[{0, -7}, {-9., 5.51091059616309*^-16}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"enc\"", 
                    Offset[{0, -15}, {-8., 4.898587196589413*^-16}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"imageLoss\"", 
                    Offset[{0, -15}, {-2., -1.9999999999999998`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"mn\"", 
                    Offset[{0, -13}, {-5., 3.061616997868383*^-16}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"sd\"", 
                    Offset[{0, -15}, {-7., -0.9999999999999996}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"expSd\"", 
                    Offset[{0, -13}, {-6., -2.9999999999999996`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"latentLoss\"", 
                    Offset[{0, -15}, {-4., 2.4492935982947064`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox["\"z\"", 
                    Offset[{0, -13}, {-4., -0.9999999999999998}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"loss\"", 
                    Offset[{0, -15}, {-1., 6.123233995736766*^-17}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"sdEpsilon\"", 
                    Offset[{0, -13}, {-5., -1.9999999999999998`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"random\"", 
                    Offset[{0, -7}, {-6., -1.9999999999999996`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"dec\"", 
                    Offset[{0, -15}, {-3., -0.9999999999999998}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"Output\"", 
                    Offset[{0, -7}, {-2., -0.9999999999999999}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"Loss\"", 
                    Offset[{0, -7}, {0., 0.}], {0, 1.}, Automatic, {1, 0}], 
                    InsetBox["\"Input\"", 
                    Offset[{0, -7}, {-3., -1.9999999999999998`}], {0, 1.}, 
                    Automatic, {1, 0}]}, StripOnInput -> False, FontColor -> 
                    GrayLevel[0.5]], 
                    StyleBox[{
                    InsetBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-8.4, 
                    5.143516556418883*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{0., 
                    5.5}, {-2.4000000000000004`, -1.9999999999999996`}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"5184\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{3.3677786976552195`*^-16, 
                    5.5}, {-6.355555555555556, 3.8916553839571447`*^-16}], {
                    0., -0.17}, Automatic, {1., -6.123233995736762*^-17}], 
                    InsetBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"5184\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{3.889087296526011, 
                    3.889087296526011}, {-7.4, -0.5999999999999995}], {
                    0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{4.919349550499537, 
                    2.4596747752497685`}, {-6.417705098312485, \
-2.164589803375031}], {0., -0.17}, Automatic, {
                    0.4472135954999579, -0.8944271909999159}], 
                    InsetBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{-0.05103093472085723, 
                    5.4997632534229615`}, {-5.500723193132872, \
-0.9982540573304033}], {0., -0.17}, Automatic, {0.9999569551678111, 
                    0.009278351767428587}], 
                    InsetBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-4.4, 
                    2.694222958124177*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{3.889087296526011, 
                    3.889087296526011}, {-4.4, -0.5999999999999998}], {
                    0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox["\"\[DoubleStruckCapitalR]\"", 
                    
                    Offset[{3.3677786976552383`*^-16, 
                    5.5}, {-2.355555555555556, 1.4423617856624383`*^-16}], {
                    0., -0.17}, Automatic, {1., -6.123233995736797*^-17}], 
                    InsetBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{-3.889087296526011, 
                    3.8890872965260117`}, {-5.4, -2.3999999999999995`}], {
                    0., -0.17}, Automatic, {0.7071067811865476, 
                    0.7071067811865475}], 
                    InsetBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{1.2212453270876722`*^-15, 
                    5.5}, {-5.4, -1.9999999999999996`}], {0., -0.17}, 
                    Automatic, {1., -2.220446049250313*^-16}], 
                    InsetBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{-3.889087296526011, 
                    3.889087296526011}, {-4.4, -1.4}], {0., -0.17}, 
                    Automatic, {0.7071067811865475, 0.7071067811865475}], 
                    InsetBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], 
                    Offset[{0., 5.5}, {-3.4, -0.9999999999999998}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{6.106226635438361*^-16, 
                    5.5}, {-2.4000000000000004`, -0.9999999999999998}], {
                    0., -0.17}, Automatic, {1., -1.1102230246251565`*^-16}], 
                    InsetBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{3.889087296526011, 
                    3.889087296526011}, {-2.4000000000000004`, \
-1.5999999999999996`}], {0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"28\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{-4.919349550499537, 
                    2.459674775249769}, {-1.4177050983124844`, \
-0.8354101966249686}], {0., -0.17}, Automatic, {0.447213595499958, 
                    0.8944271909999159}], 
                    InsetBox["\"\[DoubleStruckCapitalR]\"", 
                    
                    Offset[{3.3677786976552215`*^-16, 5.5}, {-0.4, 
                    2.4492935982947065`*^-17}], {0., -0.17}, Automatic, {
                    1., -6.123233995736766*^-17}]}, StripOnInput -> False, 
                    FontSize -> 8, FontWeight -> "Thin", FontColor -> 
                    GrayLevel[0.7]]}, {
                    EdgeForm[{
                    GrayLevel[0.5], 
                    Thickness[Large], 
                    Dashing[{0, Small}]}], 
                    FaceForm[None], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    Part[{{-9., 5.51091059616309*^-16}, {-8., 
                    4.898587196589413*^-16}, {-2., -1.9999999999999998`}, \
{-5., 3.061616997868383*^-16}, {-7., -0.9999999999999996}, {-6., \
-2.9999999999999996`}, {-4., 
                    2.4492935982947064`*^-16}, {-4., -0.9999999999999998}, \
{-1., 6.123233995736766*^-17}, {-5., -1.9999999999999998`}, {-6., \
-1.9999999999999996`}, {-3., -0.9999999999999998}, {-2., \
-0.9999999999999999}, {0., 0.}, {-3., -1.9999999999999998`}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 24, 24, 20, 24, 20, 24, 20, 24, 20, 8, 24, 8, 8, 
                    8}, NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, AspectRatio -> Full, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    ImagePadding -> {{28., 28.}, {28., 18.}}, 
                    ImageSize -> {551., 211.}, PlotRangePadding -> 0], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "enc"], 
                    NeuralNetworks`NetPath["Nodes", "imageLoss"], 
                    NeuralNetworks`NetPath["Nodes", "mn"], 
                    NeuralNetworks`NetPath["Nodes", "sd"], 
                    NeuralNetworks`NetPath["Nodes", "expSd"], 
                    NeuralNetworks`NetPath["Nodes", "latentLoss"], 
                    NeuralNetworks`NetPath["Nodes", "z"], 
                    NeuralNetworks`NetPath["Nodes", "loss"], 
                    NeuralNetworks`NetPath["Nodes", "sdEpsilon"], 
                    NeuralNetworks`NetPath["Inputs", "random"], 
                    NeuralNetworks`NetPath["Nodes", "dec"], 
                    NeuralNetworks`NetPath["Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association["Input" -> NetEncoder["Image", 
                    Association[
                    "ImageSize" -> {28, 28}, "ColorSpace" -> "Grayscale", 
                    "ColorChannels" -> 1, "MeanImage" -> None, 
                    "VarianceImage" -> None], 
                    
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "random" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    Association["Output" -> NetDecoder["Image", 
                    Association[
                    "ColorSpace" -> "Grayscale", "MeanImage" -> None, 
                    "VarianceImage" -> None, "$Dimensions" -> {28, 28}, 
                    "$Channels" -> 1], 
                    
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Loss" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    Association[
                    "enc" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{64, 1, 
                    4, 4}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {4, 4}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {2, 2}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 1, 
                    "$GroupNumber" -> 1, "$InputSize" -> {28, 28}, 
                    "$OutputSize" -> {15, 15}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Max, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {64, 15, 15}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{64, 64,
                     4, 4}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {4, 4}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {2, 2}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 64, 
                    "$GroupNumber" -> 1, "$InputSize" -> {15, 15}, 
                    "$OutputSize" -> {8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Max, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {64, 8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{64, 64,
                     4, 4}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {4, 4}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {2, 2}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 64, 
                    "$GroupNumber" -> 1, "$InputSize" -> {8, 8}, 
                    "$OutputSize" -> {9, 9}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]]], "8" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[NeuralNetworks`Private`ScalarSymbol[2] -> {
                    Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Max, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {64, 9, 9}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]]], "9" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]]], "10" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{5184}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{5184}, NeuralNetworks`RealT]]], 
                    "sd" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{8, 
                    5184}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{8}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {8}, "$OutputSize" -> 8, 
                    "$InputSize" -> 5184, "$InputDimensions" -> {5184}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{5184}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 0.5, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{5184}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], "mn" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{8, 5184}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{8}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {8}, "$OutputSize" -> 8, 
                    "$InputSize" -> 5184, "$InputDimensions" -> {5184}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{5184}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], 
                    "latentLoss" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "mn" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT],
                     "sd" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    "Nodes" -> 
                    Association[
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[NeuralNetworks`Private`ScalarSymbol[2] -> {
                    Power, 
                    NeuralNetworks`Private`ScalarSymbol[1], 2.}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 2., 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[2]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 2., 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Plus, 1., 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "3" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Summation", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]], "1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, -0.5, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "mn"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "sd"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "sd"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "3"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}], "expSd" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], 
                    "sdEpsilon" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], "z" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], 
                    "dec" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{25, 
                    8}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{25}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {25}, "$OutputSize" -> 25, 
                    "$InputSize" -> 8, "$InputDimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{25}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Max, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {25}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{25}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{25}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{49, 
                    25}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{49}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {49}, "$OutputSize" -> 49, 
                    "$InputSize" -> 25, "$InputDimensions" -> {25}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{25}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{49}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Max, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {49}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{49}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{49}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Reshape", "Arrays" -> Association[], 
                    "Parameters" -> Association["Dimensions" -> {1, 7, 7}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{49}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1, 7, 7}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Deconvolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{1, 64, 
                    4, 4}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {4, 4}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {2, 2}, 
                    "Interleaving" -> False, "$InputChannels" -> 1, 
                    "$GroupNumber" -> 1, "$InputSize" -> {7, 7}, 
                    "$OutputSize" -> {12, 12}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 12, 12}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]]], "8" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]]], "9" -> 
                    Association[
                    "Type" -> "Deconvolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{64, 64,
                     4, 4}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {4, 4}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {2, 2}, 
                    "Interleaving" -> False, "$InputChannels" -> 64, 
                    "$GroupNumber" -> 1, "$InputSize" -> {12, 12}, 
                    "$OutputSize" -> {11, 11}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]]], "10" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 11, 11}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]]], "11" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]]], "12" -> 
                    Association[
                    "Type" -> "Deconvolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{64, 64,
                     4, 4}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {4, 4}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {2, 2}, 
                    "Interleaving" -> False, "$InputChannels" -> 64, 
                    "$GroupNumber" -> 1, "$InputSize" -> {11, 11}, 
                    "$OutputSize" -> {10, 10}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 10, 10}, 
                    NeuralNetworks`RealT]]], "13" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 10, 10}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 10, 10}, 
                    NeuralNetworks`RealT]]], "14" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{6400}, 
                    NeuralNetworks`RealT]]], "15" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{784, 
                    6400}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{784}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {784}, "$OutputSize" -> 784, 
                    "$InputSize" -> 6400, "$InputDimensions" -> {6400}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{6400}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "16" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid], "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "17" -> 
                    Association[
                    "Type" -> "Reshape", "Arrays" -> Association[], 
                    "Parameters" -> Association["Dimensions" -> {1, 28, 28}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "13", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "12", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "14", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "13", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "15", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "14", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "16", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "15", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "17", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "16", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "17", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], "imageLoss" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "inDec" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT], "inInput" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{28}, NeuralNetworks`RealT]], 
                    "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Power, 
                    NeuralNetworks`Private`ScalarSymbol[1], 2.}]]], 
                    "$Dimensions" -> {1, 28, 28}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Reshape", "Arrays" -> Association[], 
                    "Parameters" -> Association["Dimensions" -> {28, 28}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{28, 28}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Aggregation", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> Total, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[2]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{28}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "inDec"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "inInput"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5", "Outputs", "Output"]}], "loss" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "latentReal" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT], 
                    "imageVector" -> 
                    NeuralNetworks`TensorT[{28}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Replicate", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[28], 
                    "Level" -> 1], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{28}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{28}, NeuralNetworks`RealT],
                     "2" -> NeuralNetworks`TensorT[{28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{28}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Reshape", "Arrays" -> Association[], 
                    "Parameters" -> Association["Dimensions" -> {28}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{28}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Aggregation", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> Mean, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[All]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "latentReal"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "imageVector"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}]]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"image\"", "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"image\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{"\"random\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Loss\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    ImageSizeCache -> {209., {17.75, 22.75}}, 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}, "RowsIndexed" -> {}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7397059898827744`*^9, {3.7397060243717384`*^9, 3.7397060325200596`*^9}, 
   3.7397064717663097`*^9, 3.739715932985835*^9, 3.739716309028764*^9, 
   3.7397182007031107`*^9, 3.7397189027664604`*^9, 3.739718978364338*^9, 
   3.7397192226596165`*^9, 3.7397192604948125`*^9, 3.739719760995125*^9, 
   3.739738001307364*^9, {3.739738288255085*^9, 3.7397383141818953`*^9}, {
   3.739738995760598*^9, 3.739739013670602*^9}, 3.7397390820806007`*^9, 
   3.7397392467749796`*^9, 3.7397393467802362`*^9, 3.739739394182849*^9, 
   3.7397570103611116`*^9, 3.7397573401157465`*^9, 3.7397927577513638`*^9, 
   3.739794496775937*^9, 3.7397969460912013`*^9, 3.739797426127496*^9, 
   3.7398008529359493`*^9, 3.7398027906709976`*^9, {3.73980294509167*^9, 
   3.739802969303913*^9}, {3.7398031333063283`*^9, 3.739803155511769*^9}, 
   3.7398032330853415`*^9, {3.7398034872109966`*^9, 3.7398034912801237`*^9}, 
   3.739803541457939*^9, {3.7398036304990053`*^9, 3.7398036441836843`*^9}, {
   3.739803687951827*^9, 3.7398037094103765`*^9}, {3.7398039735637393`*^9, 
   3.7398039776353655`*^9}, 3.739804026334425*^9, {3.7398042555291214`*^9, 
   3.7398042571874003`*^9}, 3.7398043714886045`*^9, {3.7398045398386097`*^9, 
   3.7398045410411763`*^9}, 3.739804661603113*^9, 3.7398047694674644`*^9, {
   3.7398049461771836`*^9, 3.7398049642554445`*^9}, 3.739805332268571*^9, {
   3.739806103664843*^9, 3.739806114631145*^9}, 3.7398075288293934`*^9, {
   3.73980777484153*^9, 3.7398077906449237`*^9}, 3.7398079067250957`*^9, 
   3.7398079454826117`*^9, 3.739808074065237*^9, {3.7398081259709644`*^9, 
   3.739808137365765*^9}, {3.7398081840965247`*^9, 3.739808200864462*^9}, 
   3.7398082860685167`*^9, {3.739808360036936*^9, 3.739808379010332*^9}, {
   3.739808441394072*^9, 3.7398084563777204`*^9}, {3.739808565907055*^9, 
   3.7398085743385754`*^9}, 3.739808685666136*^9, {3.739809368903793*^9, 
   3.739809385543846*^9}, {3.739809416823183*^9, 3.739809426158105*^9}, 
   3.739809617449951*^9, {3.7398096485251923`*^9, 3.7398096981050415`*^9}, 
   3.739810075819624*^9, 3.7398101161104517`*^9, 3.7398101736964674`*^9, 
   3.7398102108652825`*^9, 3.7398110745736246`*^9},
 CellLabel->
  "Out[1406]=",ExpressionUUID->"8c61f438-de71-40a2-983e-f850d123c2cd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Training", "Subsection",
 CellChangeTimes->{{3.7395663013480153`*^9, 3.739566307299842*^9}, {
  3.739566381757985*^9, 3.739566386357066*^9}, {3.739580286905179*^9, 
  3.7395802885074787`*^9}, {3.7396461037904787`*^9, 
  3.7396461048373337`*^9}},ExpressionUUID->"4d8708ae-94a3-460d-b70f-\
ce3a512d387e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mnistDigits", " ", "=", " ", 
   RowBox[{"Parallelize", "[", 
    RowBox[{"First", "/@", 
     RowBox[{"(", 
      RowBox[{"RandomSample", "[", 
       RowBox[{"ResourceData", "[", "\"\<MNIST\>\"", "]"}], "]"}], ")"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.739642590626321*^9, 3.739642610253044*^9}, 
   3.7396427252545133`*^9, 3.7396436122988987`*^9, {3.739663190903102*^9, 
   3.739663215293248*^9}, {3.739664960933978*^9, 3.739664979468237*^9}, {
   3.739665017215391*^9, 3.739665046251326*^9}, {3.739665167789925*^9, 
   3.7396651916921415`*^9}, {3.7396664762716713`*^9, 3.739666476925453*^9}, {
   3.739670020116852*^9, 3.7396700467427545`*^9}, {3.7397061599148703`*^9, 
   3.7397061648762484`*^9}, {3.7397064793461494`*^9, 3.739706482907383*^9}, {
   3.7397148403478346`*^9, 3.7397148626315994`*^9}, {3.739716315324668*^9, 
   3.739716316004016*^9}, {3.7397166637162633`*^9, 3.7397166640941877`*^9}, 
   3.739717186538661*^9, {3.7397185402413063`*^9, 3.7397185645914183`*^9}, {
   3.739718686586492*^9, 3.739718737952986*^9}, {3.7397187815150456`*^9, 
   3.7397187829606915`*^9}, {3.739718871908619*^9, 3.7397188766390915`*^9}, {
   3.7397575240459805`*^9, 3.739757527538845*^9}, {3.7397577796114044`*^9, 
   3.7397578129131603`*^9}, {3.739792841010005*^9, 3.7397928444728394`*^9}, {
   3.739792893798551*^9, 3.7397928967030106`*^9}, {3.7397929335461316`*^9, 
   3.739792935138728*^9}, {3.739793216078777*^9, 3.739793223269508*^9}, 
   3.7397932795072117`*^9, {3.7397933234179935`*^9, 3.739793325644786*^9}, {
   3.7397975243209834`*^9, 3.739797525464043*^9}, {3.7397998687980537`*^9, 
   3.7397998818072977`*^9}},
 CellLabel->
  "In[969]:=",ExpressionUUID->"a7c64f03-a37b-4ff4-8fa9-4bfc6c4beb84"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"trainingData", " ", "=", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<random\>\"", "\[Rule]", 
      RowBox[{"RandomVariate", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Length", "@", "mnistDigits"}], ",", "nlatent"}], "}"}]}], 
       "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", "mnistDigits"}]}], 
    "|>"}]}]}]], "Input",
 CellChangeTimes->{{3.7395663013480153`*^9, 3.739566307299842*^9}, {
   3.739566381757985*^9, 3.739566386357066*^9}, {3.739580286905179*^9, 
   3.7395803539419622`*^9}, 3.7395804634373894`*^9, 3.739580557204153*^9, {
   3.7396423400539384`*^9, 3.7396423438215675`*^9}, {3.739643233598317*^9, 
   3.7396432490887737`*^9}, {3.739643349560803*^9, 3.7396433755308723`*^9}, {
   3.739643475800774*^9, 3.7396434841699104`*^9}, {3.739714865813456*^9, 
   3.73971486901542*^9}, {3.7397159371170444`*^9, 3.7397159893040023`*^9}, {
   3.7397160224638925`*^9, 3.7397160306296997`*^9}, {3.7397171892988234`*^9, 
   3.739717191015141*^9}, {3.7397184579718*^9, 3.7397184863056498`*^9}, {
   3.739718530047224*^9, 3.739718538937173*^9}, 3.7397185701808057`*^9, {
   3.7397193149761944`*^9, 3.7397193231060047`*^9}, 3.7397380099403787`*^9, {
   3.7397575305396905`*^9, 3.739757533510538*^9}, 3.7397932542311463`*^9},
 CellLabel->
  "In[970]:=",ExpressionUUID->"bc184bf2-cdcb-4b06-8822-87c061f3da92"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"random\"\>", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0.6590246870515817`", ",", 
                RowBox[{"-", "0.3224989216049701`"}], ",", 
                RowBox[{"-", "1.294133341902398`"}], ",", 
                RowBox[{"-", "0.8306085543580054`"}], ",", 
                "0.37881746106834735`", ",", "0.3586870811155686`", ",", 
                "1.2373672611705586`", ",", "0.8379676676951296`"}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{
               "0.9480844736341373`", ",", "0.007282404047082905`", ",", 
                "1.6429109322480873`", ",", "0.357022134603669`", ",", 
                RowBox[{"-", "0.5849015144136561`"}], ",", 
                "0.6562021168219743`", ",", 
                RowBox[{"-", "1.6990888941546634`"}], ",", 
                RowBox[{"-", "0.7815813046716265`"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "0.34655981192209645`"}], ",", 
                "0.5411996194558588`", ",", 
                RowBox[{"-", "1.3504552095127502`"}], ",", 
                RowBox[{"-", "1.585282497760078`"}], ",", 
                RowBox[{"-", "0.03339550315817145`"}], ",", 
                RowBox[{"-", "2.163769297648463`"}], ",", 
                "1.5246454137232606`", ",", "2.1703869075460958`"}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{
               "0.12184152024274701`", ",", "0.15988649889581624`", ",", 
                "1.6757722035224956`", ",", "0.3993380489825623`", ",", 
                "0.46707077323236623`", ",", "0.0039425268374903505`", ",", 
                RowBox[{"-", "0.14087568341673432`"}], ",", 
                RowBox[{"-", "0.8071730418179769`"}]}], "}"}], ",", 
              TemplateBox[{"59993"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "0.16064676383772308`"}], ",", 
                RowBox[{"-", "0.8886182719587813`"}], ",", 
                "1.02746360267358`", ",", "0.7795647941105169`", ",", 
                RowBox[{"-", "0.5662729132747646`"}], ",", 
                "1.5416440887541203`", ",", 
                RowBox[{"-", "0.4187389436506986`"}], ",", 
                RowBox[{"-", "0.46640826338346253`"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "0.2855048874290589`"}], ",", 
                "0.26387105241026776`", ",", 
                RowBox[{"-", "0.8650950112310758`"}], ",", 
                RowBox[{"-", "0.6096611290196957`"}], ",", 
                RowBox[{"-", "0.6525671170163831`"}], ",", 
                "0.6763377685768864`", ",", 
                RowBox[{"-", "0.9527704857824002`"}], ",", 
                RowBox[{"-", "1.0203693155163283`"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "0.33745083335082027`"}], ",", 
                RowBox[{"-", "0.4854717476628758`"}], ",", 
                RowBox[{"-", "0.9305622196649838`"}], ",", 
                "0.8401179505942262`", ",", 
                RowBox[{"-", "0.30376083391968833`"}], ",", 
                "0.32667151941724787`", ",", "0.9915627118816234`", ",", 
                RowBox[{"-", "0.557599821981992`"}]}], "}"}]}], "}"}]}], ",", 
           RowBox[{"\<\"Input\"\>", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/E4CBjBk45DyZ7XFJ9TIw1uOT6mZnO4pLTZCrEJbWWifk1DqkvQYxM
uLRVMzNp45JLZ2JcgkvOjlnrKy45RiYPXFItTMyHcEh90WK0x6VtMTMTznAO
YuK+jkuOidkEl9R/BtxhCdQ3E4++GTjldojj8h0VAQD9peZT
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9AcDWYgZGhFKtUHTeTT3wmx3FMmS+VrL5n//7/LRCMKZfFVPMFRAsE
YMp11f0AUV/5schBQTxTLi6p10riN3HJVTB1YBP+MhEIWJjuY5Haw8sEBhuw
6DJk0gHKBDPJzsWQewKUEHZ8+m+1tDKGqT+qeGxOQ1wThWnqp59g6i6XGC5P
/P+fyX4El9RzA5FvOKRORzJVoAn97lS9/eXL/ft1XOzlv9Hk9rFBfM4UeBnT
rPlZyUx6WRMvfsbtSJoDAPh8xSI=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9IsGcy0KkPsUp90GYyKq13/YBNrkB7xef/H1/9xCL1N+gITtu+MOGW
+xsBl/uFITnlBZRxt/wfutzqmxC6SIQJQ+O9MhD5MJLbMgtD36rU//+XztrL
s/0GFteUpZpbG56oeYTNpSuYZG+exOqHPy9WMGl/wiZz27Bp3rtDTNi0fTAV
e/77/7/337HI9cq/AlEnsOnb2wgif1Rgk7swbfm9T08XYrXvf0m2iIEwkz42
b/9//3+Zq7T5KWxS9AIA593kGA==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9C4N+3bdODgy0UAg7+RJfa7MbIyMgvJMTOw6j8AE1OMrRv374v//9f
eZnB6IXT8L/x4t9xSh4TuYFD5v7/jzzHsEmciVPkVbTi3IxNThPoWAZGRpaY
6ocYcoqMjIbe2dVOjIxcjnfR5J5OaAX5/N+rah5GuVU4XbuEMQCn3P9sG9xy
W0Jwy/XjlvtiuQin3FqN37ikzjj0YZf4tj6aJwKL+PZNydH8jA5Lf2DIhHKa
W4RMWPr8L053EAsAdrnOMw==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8h4HZvcbG4v0d7e2S3R7DdjtqlCKl9HEyoYBFCig1NiilgOUyOAV2K
SagUJseIEBQ9Hrq4svLS8//octJMTAK1v1FdCZRjZmdmYkoHKeh8gCIXxsSk
9GmXR3EUWPdCFLmv1XpMr4H0y4WLdZiYDL+imnq49DOEkQfU+AwtYFysjuCU
a2Uxc6yoOlXBycSa+Bc9REVhPhQ/gS71PxAmxxuHIfe614iJSZaJKfIGhhQQ
PO+9/aqj5Rs2KboAAPnHciM=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9oEOKAU+pfkCu60Iao9xDGe8Y6dLl1jM8gjBmYcm2MJyGMbgy57xqM
d3HJ7WWEmZmFIXeCDSangWmfMkyuFI/cMcYsNKlT7CC53z9//nzPyHoY3S1y
F6vixRgZGb0ZGbegyn1RZhRgZOQREBDgZGRMQDN0ESOjydLXQMaNGkbrn6hy
f+Zs+A5h7WBkfI3uUhh4JYpb7n8w4z2ccmcYbXHKPWVkOohL7mej90ecGmkK
ALEAywg=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/UoJuBUe0mdqlHWkxMTFOxyzkx4ZT7ZAWUcnmOTWpVIEjbfWxS75yB
MlwmT7HJBYF0aWO1rJAZJHcAq1wySMrzDRaZi02sQKmA31ik/pZygLTtw2bg
2YhSJibX1OvY5D6FMwkGvMLqjv//S5jmYhP+M8HIyEiCqeUqFhPfMYFBMFsC
Fn2NIKnTnx98xWLoFJBcO3Z3bBYCypXgcOQSJqVl33DIURMAAHvduOU=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cxeODD0ItLLpKJqQuH1HJWJt0X2KWeizEFPcUu9VGfKfwxDhOPM2k9
wSG1VYDtGi43TuJYiEvqvbocLqn/s5iaoayO3qZT6zPeIMkVK90D0+3xfEwg
sAhJTm4CiHylx8SkmDwpgZ/JBiF1b/07EDVRM3//ByC9iMkaIbcw4huQ/HTu
M4S7m3k5Qi5cac7//7/mQHkfzHiQrCs9FfX//7tLEM4F/9gbyH6Yb3T1/0Ew
63SzpBGq/4qZRHKVm76crAjkEpn8FlVujwYTBHgvuvwfHbwv8tFxm3rx4j8M
mcEBAFEHxMA=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8o8N2AUW/JMxySZ7QsGH0f4dJ6U4Ex4Akuyfv1jCqrcEn+WsbIfgeX
5I8ERidccv9/yBnilDvN4oZd4svJci6ufdhkjgVoMTLqXMSqq4+LQRO7DBD0
SHLEvMAl+SqASeYmTmdWMEp9wiX3p5rRDqfGr4zyb3FIfWpgnIQh+Cj/2N//
L9dGMgp9xJB7JsGoqibJyCh9FItpJ2s0GBltJnzA6RLaAwCVltrU
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8+4PgsEAhgZGRgTD6KEH4Tbm5uLsWEABL74XKzICIiU/hhkhZwuT93
4oFg0s//P3+AgBqyHBpQJ18uB4fUB2Umpks45LqZmKxe4pRjmYVD6os2Excu
lyxhwi0XxsRkgkPqVwAT20occjuZmBxwSD3QZ2I6jEOuGRgJN6kv5/kBhxwa
AADLELVa
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9y4PMMOYY27FIfgxkZGXkuY5WrYWQ0aGb1wyZ1j5ux+Of/JPZTWOQW
MYb//v+/k7ETi9xGxlwgeZzJ+Q+m3F8fJv+zn7sZGW9j0fjAkREM5mJzzacQ
FkYmZX4FrL74/3Lnmf/J7DexSwJBOeMiPHKSX3DJdTBq/sQl94fb5C9OQ3kY
39JZ7iFOuXLxxzjliAQAwIjXPA==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6ccBAXjlGphYsYpZ8LIhEvqGg9TCE7bmORf49LGxGyC2zaxa7hty8Cl
7TQT41lcctXMWl9xyaUzzQTTDxan96Pb288MkpvpIcbMxMwTiyr3SmHm/wdi
jEyMIMzUguaHmf+/1tiLL3l49uwOcZ7rqHKiZ+DsQgZUN8cyia+FyzGh+ceO
iSEY4sI0MW5UM/+fsQe60AQEmJhbMfy4loeBCQxrMKT+/7+ekcGkbZ+xBGcI
DVIAAFwLvNU=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+0oIORgZFRxAWLzLUkXiYgyHLFkHleLMFkMe/r168/f6BLLVcFatmA
1aaP6kzCJ1//xir3hIlpOS4X7mZj0r+PS3KJMhPzUlyST7WZuKp/4ZJdE8ej
fOoPLtlrmdJzccn9X69tdwSn5H8TkeM45V5puHxBFbmPYDZwrkGVQ1Za4I9u
VnvcpRsQlitGHJ0oShBM7TnxZW8uqyeGI24WMDHpgOKW/yGmCz8vyRIDSvks
wOkHKgAARvLPLQ==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x984JOCSSobI2NgStbxH+hynzWYYCDlD7rkceeuZcuW1WapMjEl/MJh
+DsXJqbXOOS2MDFJfsQm8fZ+GisTSw8WmY9xciC3tGDTtR4owa2/4i82uacS
TEypOJzxf30MNxP3TlyyV4NZ+Pfgkvx/ion7Ai65P55MibjkftkxBeGS28LE
2IRd5u90XibOM1gkft5Z4M/IxL0eXXypk+9SW3D0ZWPomQESZmRi4rHCiNn/
v1qimAoMbHs24HIjtQAAuDa4Jw==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9AsCjgG045V8YzeOQUL+GWY9xEplwcLrlKRkYJXHL3yZQLwiMHdIsa
Hrl0PHI4zVxDvh+E7uOQ++zPyFiLS2M1I6PHBhxyz4UYGd1waSxlZFyCS472
AAAP29xL
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cO+FIdxHQQu9Q1LWYm7UNYpaqZGLWuYdfVwsRc8xW7VB+TPHbj/v9f
K8a8DpcLtRhrcEj9r2YWe4hLLohpJi6p/0zMr3FJHcRt238PprMQxsyZa9Gk
Hoh5AMkvZ/rEGIFh8wpF7gwz0CXXgoChWVMTzGyCYnUf0JVn7BjFQOa9UmA8
iyyXzjyzRYw5GOLDViYUOWAMMHHDgsyEAUXugTgTcyuU3cKDFkItQPcFn/56
+kyfHSMTahxe4wnWZgK6EoiZxcTRfTjIAQC4irqW
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+U4Nsh3HLFETilznJuwCmXIIVTahlTF5LVp94gSb0ys/wBY7/p1mOU
jd0Ol2uUvw9jzhW0CJ67qVwOxj8pmg8zYIpA4y+QHRYwuWi5T1CbUpQvgOjf
IZthcoz1UIae8goQ9SC+EW4dA0TudxH3GhC9xPTUH7gcC0TuAGPd/z9P8mzK
4A4DgsRkMKXDeHGfLV/RIxSfz+Fs/Pf//1FRRhudttf/0cBkNktb+0C2nt/o
EmCw9DxW4aEOAAgA3N0=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+kYIMDA1PWBWwy9614mZmYmcWTv2JI/atjZmZW09DQSMUiB5QKh7Cm
HUSTO8DMvAPMuJDF7IQmlw+R+5Iixqz8Aavcl0xmJuWZ6PYdBMkdCGBmdkDX
BXQBE1MW0H9Mk7F4758u0KFMEpsxdQHBJKBc6hlsMhC51dil/k9kYmJimItV
6p8DM58Pk/krrJIXxDX+ZzF7v8dunwbITmx++H9AkCn0fzITE1ZDgWGiKsPM
jFXulTcobrHL/X8/mYlZAqt91AMAkmatbw==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/+oJcJCBiYmIT6Dvz//6nvwKxnCLk+ZiBgAhF8cnLSzHxsEuZwueWc
MDkgwSUDJBQQGresRoCtF1aLIsuhggP8zHm4nSZ9AZecILMNDpkXVkzMK3HI
XQY69gQOuTBmJuNn2KXagSE0FYc2K2bm9D/Ypd7oMTNPxKFtFjOzMA4pYJAw
9+OQA8aWHA6p/wnMzP645JiY/d/glsMVJBhyAFaDs6U=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              TemplateBox[{"59963"},
               "OutputSizeLimit`Skeleton"], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+k4M/NZlMGBkbva1jk6pkgwOsvuszfRhYmJr6FJefVmGajS9UyMSnN
PAtkzZVegCYXxCTbfgbCfIpq5t9F/LJXIMxd7Zv/ocjtY5LcAGVyMzFtR9Hm
ynQayuxjYVJ9jCw3lYn9GYT1UIqJKRPFyF6mLAjjcQ4Tk/YJNLnpYHqbEtDr
0/+jyWne//jyURorUEryOqrcNSkmViVoiF34jwbOu2gzKWedb2FiUv+BLvf/
98+vQMFMJqZ8DCkoMGcSvI1D6iIXky0OqT8NTExVOOTeMTHpP8Ut14zLJdQC
AIYlrr0=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cxKGFoxSVVxsHEjkvuhzwT6zUccic5cesLZ8It549fLgmH1FsZJqb8
/2cPYHPODiYmpgwtLiaBmZhytkxQwLcXQ04UJsck+Bq3HNNuPHLPcMtZfEaX
q4dJSbzCcMtHdahcPRYPHjUCmefJlItF7n87ExPLuWOsV7DJXa5m3fr//XRs
Uv//HzDELj4IAAAyqaD6
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6clkNBvElNparqDTU6SEQgYGFlkr2PKHfTo/ny2oECBkSMfU/LHHxD5
sZ5REae9L3QEzuCSu4Bb31sP3HILGRl7cUidMGbseINd6p0Bo9trHLpwS73z
wyn13peR5xR2qYMWjIYHsEs99GaUWYxd6os4o/Pb/z+enEwCgSxkqT12jAa3
6zP8GCExxX4IIbXVHizIyM0XGKg0oTlmGpI2NpAEM3vBEyy2tbIzGjevwe6S
wQEAZBO5nQ==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cpeGkqrqizGZvMp2XcTMzMzInY5GYxM4PkmFdhSh3WA8qJyDAzd2Pa
xQ3U4nh4PTOzMobccyYmrsZT/39oM/lgyL2RCTwKpHYyM0ti2rcaTGKX+w+T
88Ul14pb7qkiExMubbuZmSVwycUxM5fhkOoVZmaej11qqgMzc/jfL93d3Qf2
d1vkIsn8iDdjYAICGBGHJLcEGg8wIh5Jzp2wnG5cydzlxy9euvQISa4GGEdl
J19+xuW/gQYAP1WRnQ==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+a4EixHANjGzaZzzksTDXO7FpYpOYqqlx4+v+TcBWmVDaLyi0gtdTi
PrrM7yIm5dvYHfGvj1HhLojxJ3MNutwpRrkHYEYR4wQ0qRdi7AdB9EFbZsYT
aHLLGe2A5OkCOSFGjW9ocsaMmx5cyuZteuvBOAndOhNGJX5G+aX//3tgGPn/
WqpZ7pLf//+/EnT7i90j//+HMK7CJfVVE7fcCUbZP7iNnIhL6r8u4w5cUre4
+F7hkstm5L2CS06BcTVO60gAADSsziE=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+C4M9BcUaGyF1Y5YKYmDz9BKywyFxUZGHd9PdpgDem1FMNJrlbQPqd
wj0MOXMmZ7CgL1PMRzSpjSySy4DUvzXSTAovUKXeqDElguhkJiamVnQjnZiU
Xl1ZEczKxGRwCl3ujCiTIA8Te5kaUwemO89bWFjUHrnEJLYQi//AwJ8pGZfU
eX6mEziknrsyhb/DIbeSh2srLiNjmcRxSd13lWzAJRfOZPYDh9QBbrEFOKQ+
6jCV4TJxPpMdeuSQCQAhIMdy
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/E4F69of8LbBKvJ/uzB03c/B1D4k+5mpB9fTdW084xJj/GZdMuxrc4
XXGJ8QxOuRTDfzjljBxwSkHkDuZI+/7FlItVf1oYyB87ifEsptw1Hk6Zlgv/
fzNuw2LojfkfgeRVxtM4rZ2q8AenXLgPTqkfsvU45aazfMMl9c7FHZfU51j+
S9hlvu524DqCTeKBVSQjgxsOXdQDAKJn5/s=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x848HXDYoeiok9Y5SYyM2laK9m+wSL1RoNZ4s3/Z0ytWOSmMDM/A1Im
nGcx5UKZHEHUJ4NwDKkfLsz7wIwwTLm9zK4/wYwa66/ocg7MnRDGMeaN6HIM
TMehLMtidDkmZpicVQkeOT88cszocrxMuyCM+1IY9nUzQ/1Vw9yDLvcIKvfV
Sh4jtN9r8GwB0fUwfyKDWRxMm///38yo+AxT7v90Tu6FC3g4ZmCR+v9/NhMz
M/NsrFL//y9xdFyKQ4oeAACOzsr/
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9AYJmMW04kBY/c8v//T/jvwCa1zezX//9hjFg1p3b9///dkHEdNrmZ
IB1+jFVYpPJ4t///P5mX5yQWOQ2Ln//fyDB2YZG6Lxzw/7+pVuBMLHKVjLMf
WIs/z/2MRS5J5Jwe480r/thcmcwio3zjf0wEVjlGRneggzZilRPp+vb/q85t
bHK37wOJeaLYpCBAVQS3HKPo//3bcMmxl6o24pBjYGSM/oVDzofR7S5uG2kN
ANbI2Lg=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+MYH6JKyNDZPA2LFJXORnBgGkyptwFdrsFQBDIyHQUU/L+RxD514ix
D6e1Joy5uKRmsHGcwiJ8/9jMwhQ2xngsUvXiEIe6f8KQ+iQEkuA01GZUPosu
tw8kY33h/69sRvE7aHJfzKz7wWK/HBjX4vTFHkYbnHIvGflwytUzmuKSeqPC
uAy7zId5qozmb7FI/HkcwsfIaHADQ/zbVC8boB9ZS9B1PQmyBgULq9+iqxim
bWVkNI7IXIsZlFQHAMK/uMo=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6c9uBXP0I9D6q8PE5MULn3xuOV+8TEyYpd7tGAuIw5979KYmIByatjk
tBnBcnVYpD7yMnJm4JBbycgYOY2RkekUptTPJCbGVdOA+h5iyj1gYtL8g0Nu
ESPjvP8gMzHlrssxSd37P4GRyfL1+0fd3ZuRbbNmYjr/pE6ICeQNEERIvYtj
ZGSUFWGEA4TcDWmgG2CAUdqNSWA+TKqTB6KYX4CRkXPx649/Xt99CZNTAcs4
x+zPZGQ0QXPjHof8mee+/fn/34CRsQTTdxCQkZZ2CZfcAAMAc4CDyw==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/SYG3RNRT+p2M/YMxjmcwyKHILmE2grJsmzPILUeQ6mJnPQKTkmJhT
PiFLXVNnkgYzLkkxsQSg6Dpjwiy2HcTYKcfMjCr1H2iOEdicKGZmTVQpfzYm
0zcgxiw+Zs3HyDK/fZiYQIofnfRlYmCaiqJrOjMzs8HCBWFMQJpJ8w2KnBRI
DIoN16HalgYVNwHiA//RwOa+GM2+vk9FTEy+6FIwEMks9hKH1E0m5lpc2g4w
yTzAIfVViqESl7bHohz7cMn9l3PBKfX/2SfccqQAAHFqroI=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+S4FMFgzQOqY+VjIy45Fp4HRmDsEvtYi7t4rqEVeqBqMOfYIkP2E2U
fX6blbESm9QZlsT/FYyMLdjkMuWe3mBjFHqKReo+r+u3UEZGBWzaDjG66nCK
M2ZikzvNyii2JELoGlZnLul+8UpCBasUCJxkLMYpVyr8BJfULxUDnNqWMS7E
JXWTS/EzLrlVjGl/cbqEUeETTjmhiTidQhIAAN3a2Ps=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+cwNUft5wbe9CEXV/+YpWLZwSBoJfY5D67s4IkV2E39VApPyNjLy47
NzMyuuOS88Ut910Lt9wZoFtycMiFMzLK3sEu9ZeFkfEIDm3tjIxqH7BL3eVi
ZJyIQ9s1RkamXTjkShkZM3BI/QcG2FkcUhuYGEUe4pBbycgodB+H3A5mRmNc
1v1vYWzEKUctAADk5NPG
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cO2GmahUPm12x+RuVXWKWuqjMyMtpjk/nbL8HIKMyyHZtcPSMj776i
DGxSN/gYWZb9N2vHIvXYiZFr2f//m35isSyWkbEFh+unMjIKfschV8bIuBeH
1GNRRkcsNoFBNSPjDqjFL1++/IEi58bIfRZE38j1BwaN9UlkuQJG6WdA6qMQ
Ixg4XEaS+yPP6Pfn/1dpRq7Yr1/rGBmVviFJZjMy1n/yZ2RYDmR/s2AUf44k
95yRkUmZkVEPpP6zAaMisoX/XhiBLJKcce9eqzkj4wlUbzxrkGaEAZvf6J58
0ZbGyMiV61J68we61OAGAJlypJ8=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+KYGoqIwNL509MiaMRoixMIODzCV0mTIgJBlSnvkCWemcIFtW3nLQX
RG9BkvoYCBQQSVj7/v//P1FocvOAfKGzYOYvMyB7LaqcCETq/waQmdqocvlg
xitzsFs3osqxyiQvXWomDpKRjz6HZh8cyJ1F8d3TSbwIuUz0UNntJQsEYiC5
Q5hhBgK7gFKeWMITKse6B7vUf3MmJk4cUhs5cMtZAq0rxSEnw8Qkeh+3nCYO
qf/pTEzLcMmRAAC+soK4
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x848DaeUa7uD1apjy5MPNxMOb+xSH2PYIq8tZuPaQIWuQCuCqCWmUxc
dzGkstg2gqjPFkwLMOQEjCF0PaMPhtzq1xD6ggDTHezeAAJFpvVUk/t3Zv78
V7/+3+NmxJTbwQQERgfWMPG8RpdqZym/sMeBUVySqRJd6jjndCD5tQSodwu6
nD0TmGoDyu1DlwtnBBKPQhmYORl9fmHoe/28X5aJt/2+MlMTmtxiVmE+JiaP
hyAWy2k0yemMXIF7/4JY2Yx+6Da+/whl/ErNRZejEwAAldG6dQ==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x904Me6TAWGju9Y5XqZmJj04p9ilcsHyp3DYeZpcSYmRRe3nGmrT2BK
nvOT4WcCAY512Gy9ledlDZQUf4nd6K8XWZnUsUudcAdqW4pNxlmLg4kp8Ak2
qYfCQMtCV2I3sRjkTC5Tx11Y5P4+nFTHBZRm5puCVe/Zg8X+TExC+7Gb/P/v
BRkmWxxy/58bMJXjkPpziIepDYfcESYmESyRVXnmz5dwISZhbPEYwOTDzMRk
jNX/10KA3uM7iMuRVAEAgta3yg==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}]}], "}"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{54., {2., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{43., {1., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{43., {1., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 970, 24699694172489704377, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{51., {1., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{51., {1., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 970, 24699694172489704377, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{38., {1., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{38., {1., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 970, 24699694172489704377, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{67., {1., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{67., {1., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[24699694172489704377 === $SessionID, 
   Out[970], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{
  3.739793256928838*^9, {3.739793320292508*^9, 3.739793336128813*^9}, 
   3.7397969532318215`*^9, 3.7397974330724916`*^9, 3.7397975758969884`*^9, 
   3.739800019616311*^9},
 CellLabel->
  "Out[970]=",ExpressionUUID->"273baf05-57ac-47f0-9df0-25d02c320edc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "trainedVae", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"trainedVae", " ", "=", " ", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"vaeNet", ",", " ", "trainingData", ",", " ", 
    RowBox[{"LossFunction", "\[Rule]", "\"\<Loss\>\""}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"MaxTrainingRounds", "\[Rule]", "100"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Method", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<ADAM\>\"", ",", " ", 
       RowBox[{"\"\<LearningRate\>\"", "\[Rule]", "0.0005"}]}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"TargetDevice", "\[Rule]", "\"\<GPU\>\""}], ",", " ", 
    RowBox[{"BatchSize", "\[Rule]", "64"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.739640917406395*^9, 3.7396409365306387`*^9}, {
   3.739641234230517*^9, 3.739641267372436*^9}, 3.739641484990506*^9, {
   3.739641598182274*^9, 3.739641602211731*^9}, {3.739641826613477*^9, 
   3.739641842161272*^9}, {3.7396419344073505`*^9, 3.7396419543255787`*^9}, {
   3.7396421349665666`*^9, 3.7396421387829113`*^9}, {3.739643564377947*^9, 
   3.7396435646719217`*^9}, 3.7396465019788446`*^9, {3.7396594070129886`*^9, 
   3.739659422753173*^9}, {3.7396630845636253`*^9, 3.7396630850627346`*^9}, {
   3.7396642974209285`*^9, 3.739664299792666*^9}, 3.739665092777877*^9, 
   3.739668632595425*^9, {3.739706542575757*^9, 3.739706543416222*^9}, {
   3.739706643936159*^9, 3.739706644262807*^9}, {3.7397160374637423`*^9, 
   3.7397160410045133`*^9}, {3.739716266336693*^9, 3.739716266843546*^9}, {
   3.7397163290405035`*^9, 3.7397163291394672`*^9}, {3.739716679089787*^9, 
   3.7397166798979435`*^9}, {3.739720714284532*^9, 3.7397207153305655`*^9}, 
   3.739721476889398*^9, {3.7397383492058954`*^9, 3.739738384863912*^9}, {
   3.739757249279292*^9, 3.739757267130204*^9}, {3.73975741031142*^9, 
   3.7397574174190454`*^9}, {3.739797532594019*^9, 3.73979753273199*^9}, {
   3.7397987690635576`*^9, 3.739798769268255*^9}, {3.739799836384035*^9, 
   3.7397998375504875`*^9}, {3.7398108032932243`*^9, 3.739810805684041*^9}},
 CellLabel->
  "In[1407]:=",ExpressionUUID->"8fceabf9-ec10-47c1-a295-9b3b7892aa3b"],

Cell[BoxData[
 TagBox[
  StyleBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        FrameBox[
         StyleBox["\<\"Training Progress\"\>", "SuggestionsBarText",
          StripOnInput->False,
          FontSize->12,
          FontWeight->Bold],
         FrameMargins->{{10, 10}, {-5, 5}},
         FrameStyle->None,
         StripOnInput->False],
        Alignment->{Left, Bottom},
        Background->RGBColor[0.93119, 0.93119, 0.93119],
        Frame->{{False, False}, {True, False}},
        FrameStyle->Opacity[0.1],
        ItemSize->{Automatic, 1},
        StripOnInput->False]},
      {
       ItemBox[
        FrameBox[
         DynamicBox[ToBoxes[
           Grid[{{
              Item[
               ProgressIndicator[
               NeuralNetworks`Private`NetTrain`$progressFraction], Alignment -> 
               Center], SpanFromLeft}, {"progress", 
              NeuralNetworks`Private`NetTrain`row[
               Round[NeuralNetworks`Private`NetTrain`$progressFraction 100], 
               "% ", "(round ", NeuralNetworks`Private`NetTrain`$round, 
               If[
                Not[NeuralNetworks`Private`NetTrain`$noRoundLimit], {
                "/", NeuralNetworks`Private`NetTrain`maxTrainingRounds}], 
               If[
               NeuralNetworks`Private`NetTrain`$showBatch, {
                NeuralNetworks`Private`NetTrain`$c, "batch ", 
                 NeuralNetworks`Private`NetTrain`$batch, "/", 
                 NeuralNetworks`Private`NetTrain`$batchesPerRound}], ")"]}, {
             "time", 
              NeuralNetworks`Private`NetTrain`row[
               GeneralUtilities`TimeString[
                Round[NeuralNetworks`Private`NetTrain`$timeElapsed]], 
               " elapsed", NeuralNetworks`Private`NetTrain`$c, 
               If[
                And[
                NeuralNetworks`Private`NetTrain`$timeElapsed > 1, 
                 NeuralNetworks`Private`NetTrain`$absoluteBatch > 4], {
                 GeneralUtilities`TimeString[
                  Round[NeuralNetworks`Private`NetTrain`$timeRemaining]], 
                 " left", NeuralNetworks`Private`NetTrain`$c}], 
               Round[
               NeuralNetworks`Private`NetTrain`$batchRate 
                NeuralNetworks`Private`NetTrain`$updatesPerBatch 
                NeuralNetworks`Private`NetTrain`batchSize], " inputs/s"]}, {
             "method", 
              
              Row[{"ADAM", " optimizer", ", ", "batch size ", 64, ", ", 
                "GPU"}]}, {"round", 
              NeuralNetworks`Private`NetTrain`row["loss: ", 
               NeuralNetworks`Private`NetTrain`lossForm[
                NeuralNetworks`Private`NetTrain`$unquant[
                NeuralNetworks`Private`NetTrain`$roundLoss]]]}, {
              RawBoxes[
               
               GridBox[{{
                 NeuralNetworks`Private`NetTrain`$lastLossEvolutionPlot}, 
                 Nothing, Nothing}, GridBoxSpacings -> {"Columns" -> {{0}}}]],
               SpanFromLeft}, {
              GeneralUtilities`NiceButton[
              "Stop", NeuralNetworks`Private`NetTrain`manualStop = (
                NeuralNetworks`Private`NetTrain`stop = True)], SpanFromLeft}},
             Dividers -> {{False, 
               Opacity[0.15]}, {}}, ItemStyle -> {{
               GrayLevel[0.4], None}}, ColumnWidths -> {Automatic, 25}, 
            ColumnAlignments -> {Right, Left}, ColumnSpacings -> {1.6, 2.5}, 
            RowSpacings -> 1.5, RowMinHeight -> 1.2, 
            BaseStyle -> {FontSize -> 11}], StandardForm],
          ImageSizeCache->{248., {108.5, 113.5}},
          TrackedSymbols:>{},
          UpdateInterval->0.4],
         FrameMargins->{{10, 10}, {10, 5}},
         FrameStyle->None,
         StripOnInput->False],
        Alignment->Left,
        BaseStyle->{
         FontWeight -> "Light", FontFamily -> "Segoe UI", NumberMarks -> 
          False, ScriptBaselineShifts -> {0, 0.5}, ScriptMinSize -> 8, 
          ScriptSizeMultipliers -> 0.5},
        StripOnInput->False]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9802, 0.9802, 0.9802],
    FrameMargins->{{0, 0}, {0, 0}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   StripOnInput->False,
   LineBreakWithin->False],
  Deploy,
  DefaultBaseStyle->"Deploy"]], "PrintTemporary",
 CellChangeTimes->{3.7398110913719587`*^9},
 CellLabel->
  "During evaluation of \
In[1407]:=",ExpressionUUID->"03d98523-d386-49a7-97aa-a99f81d780ca"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generating", "Subsection",
 CellChangeTimes->{{3.739646118558402*^9, 
  3.739646127619317*^9}},ExpressionUUID->"2a188410-2540-4cfd-b762-\
b5b3e6ba0374"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "newImage", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearAll", "[", "initial", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initial", " ", "=", " ", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "nlatent"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"decc", " ", "=", " ", 
   RowBox[{"NetExtract", "[", 
    RowBox[{"trainedVae", ",", " ", "\"\<dec\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"newImage", " ", "=", " ", 
   RowBox[{"decc", "[", "initial", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", " ", "=", " ", 
   RowBox[{"NetDecoder", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<Image\>\"", ",", " ", "\"\<Grayscale\>\""}], "}"}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"Magnify", "[", 
  RowBox[{
   RowBox[{"a", "[", "newImage", "]"}], ",", "10"}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7396457684933586`*^9, 3.739645778227761*^9}, {
   3.7396458241028724`*^9, 3.7396458796974587`*^9}, {3.739646045256716*^9, 
   3.739646090525081*^9}, {3.739646131275936*^9, 3.739646144087335*^9}, {
   3.7396462320989513`*^9, 3.739646256418172*^9}, {3.7396463003376403`*^9, 
   3.7396463216834593`*^9}, {3.7396464449774623`*^9, 3.7396464524496183`*^9}, 
   3.7396465119526854`*^9, {3.739650975049708*^9, 3.7396509789702554`*^9}, {
   3.739663243587756*^9, 3.739663248978575*^9}, {3.739664925660292*^9, 
   3.7396649575294285`*^9}, {3.739706113203579*^9, 3.73970614661347*^9}, 
   3.7397068904832497`*^9, {3.739706951361699*^9, 3.739706958591832*^9}, {
   3.7397069979669313`*^9, 3.73970701256983*^9}, {3.7397128445409555`*^9, 
   3.7397128447093997`*^9}, 3.7397128868143215`*^9, {3.7397158805128565`*^9, 
   3.7397158970904713`*^9}, {3.739716050159375*^9, 3.739716176521705*^9}, {
   3.7397162066325617`*^9, 3.739716256790491*^9}, {3.73971688064563*^9, 
   3.7397168857913694`*^9}, {3.739716932101802*^9, 3.7397169640094924`*^9}, {
   3.7397193934390154`*^9, 3.7397194692175612`*^9}, {3.739719572325448*^9, 
   3.739719572819581*^9}, {3.73971963989671*^9, 3.7397197260123224`*^9}, {
   3.739720600586546*^9, 3.739720605026532*^9}, {3.739720700904532*^9, 
   3.7397207036425333`*^9}, {3.73975739059271*^9, 3.7397573965718684`*^9}, {
   3.739793414885888*^9, 3.739793424960888*^9}, {3.739793656814999*^9, 
   3.7397936955678744`*^9}, {3.7397938262079773`*^9, 
   3.7397938821451683`*^9}, {3.739793950744464*^9, 3.739793958360307*^9}, {
   3.7397942141883173`*^9, 3.739794219743436*^9}, {3.739794278931448*^9, 
   3.7397943073979473`*^9}, {3.739794454473952*^9, 3.7397944546302004`*^9}, {
   3.7397945365135117`*^9, 3.739794539019004*^9}, {3.739796442970791*^9, 
   3.7397964506809855`*^9}, {3.739797055856947*^9, 3.7397970806651216`*^9}, {
   3.7397996551261187`*^9, 3.739799656415143*^9}},
 CellLabel->
  "In[1002]:=",ExpressionUUID->"b9810408-eec2-4e6e-bc82-b51ac6a95600"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test Ground", "Section",
 CellChangeTimes->{{3.7395514835995884`*^9, 
  3.739551487936183*^9}},ExpressionUUID->"8cb255c6-e198-432c-bcb4-\
a09c4f1145ee"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetDecoder", "[", "\"\<Vector\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.739805960524727*^9, 3.7398059669183073`*^9}},
 CellLabel->
  "In[1260]:=",ExpressionUUID->"02ae2d9c-4198-41b0-abc8-3fe2a4951c59"],

Cell[BoxData[
 TemplateBox[{
  "NetDecoder","badtype",
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"Vector\\\\\\\"\\\"}]\\) is not a valid \
NetDecoder type.\"",2,1260,94,24699694172489704377,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739805967380761*^9},
 CellLabel->
  "During evaluation of \
In[1260]:=",ExpressionUUID->"d4766890-aa89-44bf-aceb-61395bb7cd09"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.739805967380761*^9},
 CellLabel->
  "Out[1260]=",ExpressionUUID->"3d6184f6-f3c1-45c1-98a6-e7bec394037f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Dimensions", "@", 
  RowBox[{"ImageData", "[", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/E4CBjBk45DyZ7XFJ9TIw1uOT6mZnO4pLTZCrEJbWWifk1DqkvQYxM
uLRVMzNp45JLZ2JcgkvOjlnrKy45RiYPXFItTMyHcEh90WK0x6VtMTMTznAO
YuK+jkuOidkEl9R/BtxhCdQ3E4++GTjldojj8h0VAQD9peZT
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "@", 
  RowBox[{"(", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "5"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "4"}], "}"}]}], "}"}], ")"}]}]}], "Input",
 CellChangeTimes->{{3.73964627061879*^9, 3.7396462864776597`*^9}, {
  3.739646370780693*^9, 3.739646383493784*^9}, {3.7398030104134445`*^9, 
  3.739803102142319*^9}},
 CellLabel->
  "In[1050]:=",ExpressionUUID->"216453e6-ca3d-4ef4-bff5-4e2813f0fc08"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"28", ",", "28"}], "}"}]], "Output",
 CellChangeTimes->{{3.7398030839272833`*^9, 3.7398031025657363`*^9}},
 CellLabel->
  "Out[1050]=",ExpressionUUID->"0fa5af2a-8ec3-4434-b08b-47a96874a4f1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{{3.7398030839272833`*^9, 3.7398031025810924`*^9}},
 CellLabel->
  "Out[1051]=",ExpressionUUID->"7878fb20-1921-42ce-a7b9-2a8cdaf93e1e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"m", "=", 
  RowBox[{"Partition", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Range", "[", "25", "]"}], "^", "2"}], ",", "5"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Head", "@", "m"}]}], "Input",
 CellChangeTimes->{{3.7398052619701886`*^9, 3.7398052768164454`*^9}},
 CellLabel->
  "In[1252]:=",ExpressionUUID->"8d392152-0404-41b5-be45-9b5b294fcae0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "9", ",", "16", ",", "25"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"36", ",", "49", ",", "64", ",", "81", ",", "100"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"121", ",", "144", ",", "169", ",", "196", ",", "225"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"256", ",", "289", ",", "324", ",", "361", ",", "400"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"441", ",", "484", ",", "529", ",", "576", ",", "625"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.739805269765497*^9, 3.739805277622357*^9}},
 CellLabel->
  "Out[1252]=",ExpressionUUID->"288abf6d-57ce-46b0-a8a9-9b3cb803c788"],

Cell[BoxData["List"], "Output",
 CellChangeTimes->{{3.739805269765497*^9, 3.739805277624425*^9}},
 CellLabel->
  "Out[1253]=",ExpressionUUID->"d3994e05-9de3-4558-bec9-cc0b56e094ed"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Dimensions", " ", "@", 
  RowBox[{"b", "[", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/E4CBjBk45DyZ7XFJ9TIw1uOT6mZnO4pLTZCrEJbWWifk1DqkvQYxM
uLRVMzNp45JLZ2JcgkvOjlnrKy45RiYPXFItTMyHcEh90WK0x6VtMTMTznAO
YuK+jkuOidkEl9R/BtxhCdQ3E4++GTjldojj8h0VAQD9peZT
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Head", "@", 
  RowBox[{"ArrayReshape", "[", 
   RowBox[{
    RowBox[{"b", "[", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/E4CBjBk45DyZ7XFJ9TIw1uOT6mZnO4pLTZCrEJbWWifk1DqkvQYxM
uLRVMzNp45JLZ2JcgkvOjlnrKy45RiYPXFItTMyHcEh90WK0x6VtMTMTznAO
YuK+jkuOidkEl9R/BtxhCdQ3E4++GTjldojj8h0VAQD9peZT
        "], {{0, 28}, {28, 0}}, {0, 255},
        ColorFunction->GrayLevel],
       BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{28, 28},
      PlotRange->{{0, 28}, {0, 28}}], "]"}], ",", " ", 
    RowBox[{"{", "2828", "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"loss", "=", 
  RowBox[{"MeanSquaredLossLayer", "[", 
   RowBox[{"\"\<Input\>\"", "\[Rule]", "\"\<Varying\>\""}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"loss", "[", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<Input\>\"", "\[Rule]", 
     RowBox[{"First", "@", 
      RowBox[{"b", "[", 
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/E4CBjBk45DyZ7XFJ9TIw1uOT6mZnO4pLTZCrEJbWWifk1DqkvQYxM
uLRVMzNp45JLZ2JcgkvOjlnrKy45RiYPXFItTMyHcEh90WK0x6VtMTMTznAO
YuK+jkuOidkEl9R/BtxhCdQ3E4++GTjldojj8h0VAQD9peZT
          "], {{0, 28}, {28, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{28, 28},
        PlotRange->{{0, 28}, {0, 28}}], "]"}]}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"28", ",", "28"}], "}"}], ",", " ", 
    RowBox[{"\"\<Target\>\"", "\[Rule]", 
     RowBox[{"ArrayReshape", "[", 
      RowBox[{
       RowBox[{"b", "[", 
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/E4CBjBk45DyZ7XFJ9TIw1uOT6mZnO4pLTZCrEJbWWifk1DqkvQYxM
uLRVMzNp45JLZ2JcgkvOjlnrKy45RiYPXFItTMyHcEh90WK0x6VtMTMTznAO
YuK+jkuOidkEl9R/BtxhCdQ3E4++GTjldojj8h0VAQD9peZT
           "], {{0, 28}, {28, 0}}, {0, 255},
           ColorFunction->GrayLevel],
          BoxForm`ImageTag[
          "Byte", ColorSpace -> Automatic, Interleaving -> None],
          Selectable->False],
         DefaultBaseStyle->"ImageGraphics",
         ImageSizeRaw->{28, 28},
         PlotRange->{{0, 28}, {0, 28}}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"28", ",", "28"}], "}"}]}], "]"}]}]}], "|>"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "@", "%"}]}], "Input",
 CellChangeTimes->{{3.7398031645987444`*^9, 3.739803198390415*^9}, {
   3.7398036077179565`*^9, 3.7398036105937023`*^9}, {3.7398036648099613`*^9, 
   3.7398036690257964`*^9}, 3.7398041973048763`*^9, {3.739804314657527*^9, 
   3.7398043587840233`*^9}, {3.7398044205160737`*^9, 
   3.7398044839135604`*^9}, {3.739804549795489*^9, 3.739804583934817*^9}, {
   3.7398049736350303`*^9, 3.7398049740076256`*^9}, 3.7398050395042744`*^9, {
   3.7398050993954926`*^9, 3.739805125329423*^9}, {3.7398052062373877`*^9, 
   3.7398052115498447`*^9}, {3.7398071913320556`*^9, 3.739807233284705*^9}},
 CellLabel->
  "In[1209]:=",ExpressionUUID->"1818bb40-bce0-4eec-a21f-dd904e6f070a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "28", ",", "28"}], "}"}]], "Output",
 CellChangeTimes->{3.7398072237886634`*^9},
 CellLabel->
  "Out[1282]=",ExpressionUUID->"78bea722-04ab-4bf9-895e-f9fc311b0fb2"],

Cell[BoxData["List"], "Output",
 CellChangeTimes->{3.7398072237911067`*^9},
 CellLabel->
  "Out[1283]=",ExpressionUUID->"76392810-6e9f-41e0-9453-d0cc9ffc2fb6"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["MeanSquaredLossLayer", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014705882352941176`], {
                 RGBColor[0.557, 0.557, 0.557], 
                 RGBColor[0.33, 0.33, 0.33], 
                 Thickness[0.015029411764705883`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 18.5}, {14., 18.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.557, 0.557, 0.557], 
                 Thickness[0.015029411764705883`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{52.5, 18.5}, {44., 18.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.85, 0.85, 0.85], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{22.23,
                   18.5}, {33.5, 29.77}, {44.77, 18.5}, {33.5, 7.23}}}]}, {
                 FaceForm[{
                   RGBColor[0.56, 0.56, 0.56], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{33.5, 30.29}, {21.71, 
                  18.5}, {33.5, 6.71}, {45.29, 18.5}}, {{33.5, 29.25}, {44.25,
                   18.5}, {33.5, 7.75}, {22.75, 18.5}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{53.56, 15.4}, {51.88, 15.4}, {50.52, 16.76}, {
                  50.52, 18.44}, {50.52, 20.12}, {51.88, 21.48}, {53.56, 
                  21.48}, {55.24, 21.48}, {56.6, 20.12}, {56.6, 18.44}, {56.6,
                   16.76}, {55.24, 15.4}, {53.56, 15.4}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {0, 1, 0}}}, {{{53.56, 21.83}, {51.69, 21.83}, {50.17, 
                   20.31}, {50.17, 18.44}, {50.17, 16.57}, {51.69, 15.05}, {
                   53.56, 15.05}, {55.43, 15.05}, {56.95, 16.57}, {56.95, 
                   18.44}, {56.95, 20.31}, {55.43, 21.83}, {53.56, 21.83}}, {{
                   53.56, 21.83}, {53.56, 21.13}, {55.04, 21.13}, {56.25, 
                   19.92}, {56.25, 18.44}, {56.25, 16.96}, {55.04, 15.75}, {
                   53.56, 15.75}, {52.08, 15.75}, {50.87, 16.96}, {50.87, 
                   18.44}, {50.87, 19.92}, {52.08, 21.13}, {53.56, 21.13}, {
                   53.56, 21.83}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{13.56, 15.5}, {11.94, 15.5}, {10.62, 16.82}, {
                  10.62, 18.44}, {10.62, 20.06}, {11.94, 21.38}, {13.56, 
                  21.38}, {15.18, 21.38}, {16.5, 20.06}, {16.5, 18.44}, {16.5,
                   16.82}, {15.18, 15.5}, {13.56, 15.5}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}}}, {{{13.56, 21.73}, {11.74, 21.73}, {10.27, 
                   20.26}, {10.27, 18.44}, {10.27, 16.62}, {11.74, 15.15}, {
                   13.56, 15.15}, {15.38, 15.15}, {16.85, 16.62}, {16.85, 
                   18.44}, {16.85, 20.26}, {15.38, 21.73}, {13.56, 
                   21.73}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQLd/6OnCHnLaDx8MqkXXspg4MINCgA+efPQMCug6H
v2rE9B8ygYgf13MAa3M1gYrrQ8WNHdJAQM3AAcR1V0TwC225ri8uMILzwfqY
DB2qgcoe/tJ1MAaBzfoOMPfA+GBtezXhfIg5GlB1Bg7fQNaXqjsAya8acwwg
5lWpOcyaCQSShhD1H1Qh/jqA4MPcA+ODzbtnDHGXkwbc/+jhAwASgHiO
                   "]}]}}, ImageSize -> {40, Automatic}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"seq. of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], "\" \"",
                     "\"reals\""}, "RowDefault"], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Target\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"seq. of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], "\" \"",
                     "\"reals\""}, "RowDefault"], "SummaryItem"]}}, 
               BaselinePosition -> Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014705882352941176`], {
                 RGBColor[0.557, 0.557, 0.557], 
                 RGBColor[0.33, 0.33, 0.33], 
                 Thickness[0.015029411764705883`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 18.5}, {14., 18.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.557, 0.557, 0.557], 
                 Thickness[0.015029411764705883`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{52.5, 18.5}, {44., 18.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.85, 0.85, 0.85], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{22.23,
                   18.5}, {33.5, 29.77}, {44.77, 18.5}, {33.5, 7.23}}}]}, {
                 FaceForm[{
                   RGBColor[0.56, 0.56, 0.56], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{33.5, 30.29}, {21.71, 
                  18.5}, {33.5, 6.71}, {45.29, 18.5}}, {{33.5, 29.25}, {44.25,
                   18.5}, {33.5, 7.75}, {22.75, 18.5}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{53.56, 15.4}, {51.88, 15.4}, {50.52, 16.76}, {
                  50.52, 18.44}, {50.52, 20.12}, {51.88, 21.48}, {53.56, 
                  21.48}, {55.24, 21.48}, {56.6, 20.12}, {56.6, 18.44}, {56.6,
                   16.76}, {55.24, 15.4}, {53.56, 15.4}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {0, 1, 0}}}, {{{53.56, 21.83}, {51.69, 21.83}, {50.17, 
                   20.31}, {50.17, 18.44}, {50.17, 16.57}, {51.69, 15.05}, {
                   53.56, 15.05}, {55.43, 15.05}, {56.95, 16.57}, {56.95, 
                   18.44}, {56.95, 20.31}, {55.43, 21.83}, {53.56, 21.83}}, {{
                   53.56, 21.83}, {53.56, 21.13}, {55.04, 21.13}, {56.25, 
                   19.92}, {56.25, 18.44}, {56.25, 16.96}, {55.04, 15.75}, {
                   53.56, 15.75}, {52.08, 15.75}, {50.87, 16.96}, {50.87, 
                   18.44}, {50.87, 19.92}, {52.08, 21.13}, {53.56, 21.13}, {
                   53.56, 21.83}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{13.56, 15.5}, {11.94, 15.5}, {10.62, 16.82}, {
                  10.62, 18.44}, {10.62, 20.06}, {11.94, 21.38}, {13.56, 
                  21.38}, {15.18, 21.38}, {16.5, 20.06}, {16.5, 18.44}, {16.5,
                   16.82}, {15.18, 15.5}, {13.56, 15.5}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}}}, {{{13.56, 21.73}, {11.74, 21.73}, {10.27, 
                   20.26}, {10.27, 18.44}, {10.27, 16.62}, {11.74, 15.15}, {
                   13.56, 15.15}, {15.38, 15.15}, {16.85, 16.62}, {16.85, 
                   18.44}, {16.85, 20.26}, {15.38, 21.73}, {13.56, 
                   21.73}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQLd/6OnCHnLaDx8MqkXXspg4MINCgA+efPQMCug6H
v2rE9B8ygYgf13MAa3M1gYrrQ8WNHdJAQM3AAcR1V0TwC225ri8uMILzwfqY
DB2qgcoe/tJ1MAaBzfoOMPfA+GBtezXhfIg5GlB1Bg7fQNaXqjsAya8acwwg
5lWpOcyaCQSShhD1H1Qh/jqA4MPcA+ODzbtnDHGXkwbc/+jhAwASgHiO
                   "]}]}}, ImageSize -> {40, Automatic}], 
              GridBox[{{
                 ItemBox[
                  StyleBox["Ports", Bold]], 
                 ItemBox[""]}, {
                 StyleBox[
                  TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"seq. of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], "\" \"",
                     "\"reals\""}, "RowDefault"], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Target\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"seq. of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], "\" \"",
                     "\"reals\""}, "RowDefault"], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Loss\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}}, 
               BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 3}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("MeanSquaredLossLayer[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7398072238165464`*^9},
 CellLabel->
  "Out[1284]=",ExpressionUUID->"67aca7a1-c163-4a91-9f8d-e01953df2b5b"],

Cell[BoxData[
 TemplateBox[{
  "MeanSquaredLossLayer","invargc",
   "\"\\!\\(\\*RowBox[{\\\"1\\\"}]\\) inputs provided, \\!\\(\\*RowBox[{\\\"2\
\\\"}]\\) were expected.\"",2,1285,113,24699694172489704377,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739807223838518*^9},
 CellLabel->
  "During evaluation of \
In[1282]:=",ExpressionUUID->"10dc1839-e7c7-4e29-ac38-73a669586da4"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.7398072238571033`*^9},
 CellLabel->
  "Out[1285]=",ExpressionUUID->"ba6ce336-1426-4cb4-9d88-d783314351af"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.739807223859064*^9},
 CellLabel->
  "Out[1286]=",ExpressionUUID->"22571734-5f03-4daf-97da-4cecb5e640f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"28", ",", "28"}], "}"}]], "Input",
 CellChangeTimes->{3.739803075764016*^9},
 CellLabel->
  "In[1043]:=",ExpressionUUID->"babf0536-5d41-47b8-9a89-787eacd04a58"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"28", ",", "28"}], "}"}]], "Output",
 CellChangeTimes->{{3.7398030184307985`*^9, 3.739803025866808*^9}, {
  3.7398030609760685`*^9, 3.739803075866352*^9}},
 CellLabel->
  "Out[1043]=",ExpressionUUID->"79a31074-9cc4-4ec1-8d80-c7e5fef8dedb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"a", " ", "=", " ", 
  RowBox[{"NetDecoder", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<Image\>\"", ",", " ", "\"\<Grayscale\>\""}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"b", " ", "=", " ", 
  RowBox[{"NetEncoder", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<Image\>\"", ",", " ", 
     RowBox[{"{", 
      RowBox[{"28", ",", "28"}], "}"}], ",", " ", "\"\<Grayscale\>\""}], 
    "}"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.73964627061879*^9, 3.7396462864776597`*^9}, {
  3.739646370780693*^9, 3.739646383493784*^9}, {3.7398030104134445`*^9, 
  3.73980301344127*^9}},
 CellLabel->
  "In[1108]:=",ExpressionUUID->"fa010b29-8bc5-4b3a-937d-69d188f16a56"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetDecoder", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      PanelBox[
       GridBox[{{
          GridBox[{{
             StyleBox[
              TemplateBox[{"\"Type\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox["\"Image\"", "SummaryItem"]}, {
             StyleBox[
              TemplateBox[{"\"Color space\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox["\"Grayscale\"", "SummaryItem"]}, {
             StyleBox[
              TemplateBox[{"\"Mean image\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox["None", "SummaryItem"]}, {
             StyleBox[
              TemplateBox[{"\"Variance image\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox["None", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
           GridBoxAlignment -> {
            "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
        GridBoxAlignment -> {"Rows" -> {{Top}}}, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}], 
       BaselinePosition -> Baseline, 
       BaseStyle -> {
        ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
         3, ShowSyntaxStyles -> False}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetDecoder[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7396462867432675`*^9, 3.739646383885127*^9, 
  3.739804329574935*^9},
 CellLabel->
  "Out[1108]=",ExpressionUUID->"d164ac55-0091-4ced-b4bc-48542245da97"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetEncoder", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      PanelBox[
       GridBox[{{
          GridBox[{{
             StyleBox[
              TemplateBox[{"\"Type\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox["\"Image\"", "SummaryItem"]}, {
             StyleBox[
              TemplateBox[{"\"Image size\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox[
              RowBox[{"{", 
                RowBox[{"28", ",", "28"}], "}"}], "SummaryItem"]}, {
             StyleBox[
              TemplateBox[{"\"Color space\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox["\"Grayscale\"", "SummaryItem"]}, {
             StyleBox[
              TemplateBox[{"\"Color channels\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox["1", "SummaryItem"]}, {
             StyleBox[
              TemplateBox[{"\"Mean image\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox["None", "SummaryItem"]}, {
             StyleBox[
              TemplateBox[{"\"Variance image\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox["None", "SummaryItem"]}, {
             StyleBox[
              TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox[
              TemplateBox[{"\"3-tensor\"", "\" \"", 
                StyleBox[
                 
                 TemplateBox[{
                  "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                   "\" \"", 
                   
                   TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                  "RowDefault"], 
                 GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
              "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
           GridBoxAlignment -> {
            "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
        GridBoxAlignment -> {"Rows" -> {{Top}}}, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}], 
       BaselinePosition -> Baseline, 
       BaseStyle -> {
        ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
         3, ShowSyntaxStyles -> False}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetEncoder[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7396462867432675`*^9, 3.739646383885127*^9, 
  3.739804329602499*^9},
 CellLabel->
  "Out[1109]=",ExpressionUUID->"2a409afa-9a74-4e29-ad94-572492011b1c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "[", 
  RowBox[{"ArrayReshape", "[", 
   RowBox[{
    RowBox[{"ConstantArray", "[", 
     RowBox[{"0.5", ",", 
      RowBox[{"28", "*", "28"}]}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", "28", ",", "28"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7396459677435527`*^9, 3.739645978571994*^9}, {
  3.7396460679306936`*^9, 3.739646072385008*^9}, {3.7396461562435613`*^9, 
  3.739646170150709*^9}, {3.739646217674387*^9, 3.739646252478238*^9}, {
  3.739646289836887*^9, 3.7396462935395536`*^9}, {3.739646431071356*^9, 
  3.7396464324476624`*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"77a3d246-4ba2-4719-8c73-74f4892462b6"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztyUEKQFAUBdCfgSzCxB5kKltgBV8xUuobyG4tBbEEw/Pq3tPtVePaz1kI
YSvu6uPepRSPIX/GFJemnp5n+eW9syVJkiRJkiRJkvzLCwbOd1Q=
    "], {{0, 28}, {28, 0}}, {0., 1.},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag["Real", ColorSpace -> "Grayscale", Interleaving -> None],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{28, 28},
  PlotRange->{{0, 28}, {0, 28}}]], "Output",
 CellChangeTimes->{{3.7396459718696184`*^9, 3.739645978899598*^9}, 
   3.7396460727546277`*^9, {3.7396461580090246`*^9, 3.739646170572424*^9}, {
   3.7396462142122064`*^9, 3.7396462529615793`*^9}, {3.739646290262314*^9, 
   3.7396462939285192`*^9}, {3.739646425384534*^9, 3.7396464328848705`*^9}},
 CellLabel->"Out[95]=",ExpressionUUID->"c9cc56fb-dfbe-45e2-aa40-96b58c53c4ba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"b", "[", 
  RowBox[{"First", " ", "@", " ", "mnistDigits"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"a", "[", "%", "]"}]}], "Input",
 CellChangeTimes->{{3.7396459334309883`*^9, 3.739645961385113*^9}, {
  3.7396461819817514`*^9, 3.739646201774161*^9}, {3.739646329765486*^9, 
  3.739646416102643*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"67c62aa0-7153-4db5-a1c4-690aab0bd398"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "0.800000011920929`", ",", 
      "0.3764705955982208`", ",", "0.007843137718737125`", ",", 
      "0.3764705955982208`", ",", "0.8039215803146362`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "0.8117647171020508`", ",", 
      "0.06666667014360428`", ",", "0.0117647061124444`", ",", 
      "0.0117647061124444`", ",", "0.0117647061124444`", ",", 
      "0.07058823853731155`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "0.7882353067398071`", ",", "0.10980392247438431`", ",", 
      "0.007843137718737125`", ",", "0.0117647061124444`", ",", 
      "0.062745101749897`", ",", "0.08627451211214066`", ",", 
      "0.0117647061124444`", ",", "0.7764706015586853`", ",", 
      "0.9764705896377563`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "0.9607843160629272`", ",", "0.7647058963775635`", ",", 
      "0.12156862765550613`", ",", "0.0117647061124444`", ",", 
      "0.007843137718737125`", ",", "0.0117647061124444`", ",", 
      "0.2078431397676468`", ",", "0.6705882549285889`", ",", 
      "0.0117647061124444`", ",", "0.007843137718737125`", ",", 
      "0.5215686559677124`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "0.3607843220233917`", ",", "0.0117647061124444`", ",", 
      "0.0117647061124444`", ",", "0.0117647061124444`", ",", 
      "0.007843137718737125`", ",", "0.0117647061124444`", ",", 
      "0.0117647061124444`", ",", "0.6235294342041016`", ",", 
      "0.25882354378700256`", ",", "0.007843137718737125`", ",", 
      "0.3450980484485626`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "0.800000011920929`", 
      ",", "0.06666667014360428`", ",", "0.007843137718737125`", ",", 
      "0.007843137718737125`", ",", "0.2549019753932953`", ",", 
      "0.5529412031173706`", ",", "0.007843137718737125`", ",", 
      "0.10588235408067703`", ",", "0.8156862854957581`", ",", 
      "0.6901960968971252`", ",", "0.`", ",", "0.34117648005485535`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "0.8117647171020508`", ",", 
      "0.06666667014360428`", ",", "0.0117647061124444`", ",", 
      "0.0117647061124444`", ",", "0.2980392277240753`", ",", 
      "0.9529411792755127`", ",", "0.7058823704719543`", ",", 
      "0.5254902243614197`", ",", "0.9176470637321472`", ",", "1.`", ",", 
      "1.`", ",", "0.007843137718737125`", ",", "0.0470588244497776`", ",", 
      "0.8039215803146362`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "0.8509804010391235`", ",", 
      "0.3529411852359772`", ",", "0.007843137718737125`", ",", 
      "0.08627451211214066`", ",", "0.18431372940540314`", ",", 
      "0.6705882549285889`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "0.007843137718737125`", ",", 
      "0.0117647061124444`", ",", "0.3529411852359772`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "0.9725490212440491`", ",", "0.3019607961177826`", ",", 
      "0.0117647061124444`", ",", "0.05882352963089943`", ",", 
      "0.7215686440467834`", ",", "0.9254902005195618`", ",", 
      "0.8901960849761963`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "0.007843137718737125`", ",", 
      "0.0117647061124444`", ",", "0.23529411852359772`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "0.7764706015586853`", ",", "0.0117647061124444`", ",", 
      "0.0117647061124444`", ",", "0.7529411911964417`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "0.007843137718737125`", ",", 
      "0.0117647061124444`", ",", "0.23529411852359772`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "0.2235294133424759`", ",", "0.007843137718737125`", ",", 
      "0.2549019753932953`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "0.`", ",", "0.007843137718737125`", ",", "0.23137255012989044`", 
      ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "0.7019608020782471`", ",", "0.03529411926865578`", ",", 
      "0.0117647061124444`", ",", "0.5607843399047852`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "0.007843137718737125`", ",", 
      "0.0117647061124444`", ",", "0.41960784792900085`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "0.6666666865348816`", ",", "0.0117647061124444`", ",", 
      "0.09803921729326248`", ",", "0.9019607901573181`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "0.9725490212440491`", ",", "0.47058823704719543`", ",", 
      "0.007843137718737125`", ",", "0.2705882489681244`", ",", 
      "0.9529411792755127`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "0.6666666865348816`", ",", "0.0117647061124444`", ",", 
      "0.125490203499794`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "0.9725490212440491`", ",", "0.48627451062202454`", ",", 
      "0.0117647061124444`", ",", "0.11764705926179886`", ",", 
      "0.7215686440467834`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "0.6666666865348816`", ",", "0.0117647061124444`", ",", 
      "0.4313725531101227`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "1.`", ",", "0.8117647171020508`", ",", 
      "0.3529411852359772`", ",", "0.0117647061124444`", ",", 
      "0.32156863808631897`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "0.6627451181411743`", ",", "0.007843137718737125`", ",", 
      "0.11764705926179886`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "0.5529412031173706`", ",", 
      "0.06666667014360428`", ",", "0.007843137718737125`", ",", 
      "0.364705890417099`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "0.6666666865348816`", ",", "0.0117647061124444`", ",", 
      "0.0235294122248888`", ",", "0.4274509847164154`", ",", 
      "0.8117647171020508`", ",", "0.886274516582489`", ",", 
      "0.6666666865348816`", ",", "0.3019607961177826`", ",", 
      "0.11764705926179886`", ",", "0.007843137718737125`", ",", 
      "0.125490203499794`", ",", "0.3450980484485626`", ",", 
      "0.7803921699523926`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "0.6666666865348816`", ",", "0.0117647061124444`", ",", 
      "0.0117647061124444`", ",", "0.0117647061124444`", ",", 
      "0.10196078568696976`", ",", "0.1568627506494522`", ",", 
      "0.0117647061124444`", ",", "0.0117647061124444`", ",", 
      "0.0117647061124444`", ",", "0.23137255012989044`", ",", 
      "0.4901960790157318`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "0.8901960849761963`", ",", "0.21960784494876862`", ",", 
      "0.0117647061124444`", ",", "0.0117647061124444`", ",", 
      "0.007843137718737125`", ",", "0.0117647061124444`", ",", 
      "0.0117647061124444`", ",", "0.08627451211214066`", ",", 
      "0.4313725531101227`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "0.9019607901573181`", ",", "0.49803921580314636`", ",", 
      "0.0117647061124444`", ",", "0.007843137718737125`", ",", 
      "0.0117647061124444`", ",", "0.4470588266849518`", ",", 
      "0.8549019694328308`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.739646188899716*^9, 3.739646202118474*^9}, 
   3.739646244180478*^9, {3.739646331071579*^9, 3.7396464164464245`*^9}},
 CellLabel->"Out[91]=",ExpressionUUID->"5fe2eb57-2300-4a03-9a82-09618d20217d"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOmUkqSFIGiiHgg/0oPUqP
0iOKXjBz5ksQrSAhcQNMCwg0IPMP7Nz5cjC4k2T610+IvwQFN0L904GVFhLa
NCjcSyTtYGkJ8ZeMzB60+OqA8jeAaTGxbcjiD27ceAHWb2//fjD4A0Yf2Lfv
HYhuqKgAu09BXn4/mn9Q/Ldg1qxTYPWlpU+xqTuwYcODweAvGK0gLn4db/pD
jz8ozfDl82OwfydMuICiTkzs2mDwF7zcgOUvmPugdEJAANjdBzZufIgiLy29
G0xLSb2C+ucZ1FwweHD16tUB9R+hckNY+DI4/dXVgdPtgmnTwO5/cOECON0l
xMa+xZoOEPG8AhwudC5XHaytX0Pdew0tPYHLiQXTpx9Hzlekmo+RT6H20Npf
wPICXJ4lBAdfRoknObl10Pz3HOyeuXPB8dJQU/OGGv4Dmn+OHv6DldtYyo8X
VA3HAfLfgjlzziDbDys3aGAfGMDsAaaHs7T0V0NZGbhcALYvFiGHK8Onjw9p
kg/Q4u/BrVu3aOm/hNBQ1PpXUnIn2N47d8jKXxj+geZrYDq8h5I+AgMvgsMX
Wv7SzX8CAgeo6i95+fto+W0fmIaWV7TyFy7/LZg9+zZF5kLrTXj9AjN3ypQr
9PAPOu1gavoUJV9Aw5dUc+DtF7R2TkJ4+PWB8BeMxkifEhIzwOLR0beR4yMh
JuYNsnp4PQlLb4h2Gzh9w9uXP39QtX6hgv9QaSmpXWBaROQIPnWwcj4hPv7+
QPoHnYa1Q4D9uDNY3Y+jXwBvr1GaX+lEw+qDB/fv38fnP2A74A40/b4eDO4e
pUfpUZpONACIeg7J
    "], {{0, 28}, {28, 0}}, {0., 1.},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag["Real", ColorSpace -> "Grayscale", Interleaving -> None],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{283., Automatic},
  ImageSizeRaw->{28, 28},
  PlotRange->{{0, 28}, {0, 28}}]], "Output",
 CellChangeTimes->{{3.739646188899716*^9, 3.739646202118474*^9}, 
   3.739646244180478*^9, {3.739646331071579*^9, 3.7396464164464245`*^9}},
 CellLabel->"Out[92]=",ExpressionUUID->"bdd57797-6397-412b-92ae-4e5717c64fd7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomVariate", "[", 
  RowBox[{
   RowBox[{"NormalDistribution", "[", "]"}], ",", "nlatent"}], "]"}]], "Input",
 CellChangeTimes->{{3.7395514835995884`*^9, 3.7395515761183033`*^9}, {
  3.7395553679723654`*^9, 3.739555372051862*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"ce1618ae-157d-4bbc-956c-d07e5a884f1a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1.1500749388821876`"}], ",", 
   RowBox[{"-", "1.0895390325304017`"}], ",", "0.611584971678216`", ",", 
   RowBox[{"-", "0.4643912233589231`"}], ",", 
   RowBox[{"-", "0.35339602460989245`"}], ",", 
   RowBox[{"-", "0.8399505035812386`"}], ",", "1.1450024092869175`", ",", 
   RowBox[{"-", "1.7747706063630981`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.739555372451578*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"a34444bf-85ce-4679-b810-1bf8e6d4d9d5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetChain", "[", 
  RowBox[{"{", 
   RowBox[{"8", ",", " ", 
    RowBox[{"ElementwiseLayer", "[", 
     RowBox[{
      RowBox[{"#", "*", "0.5"}], "&"}], "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7395503880041895`*^9, 3.739550398609557*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"0de0b708-e4c7-4aae-ba9c-6fc372259861"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, BaseStyle -> GrayLevel[0.6], 
                 ImageMargins -> 0, ImageSize -> {36, Automatic}, 
                 PlotRangePadding -> 0], 
                StyleBox[
                "uninitialized", LineColor -> RGBColor[0.66, 0, 0], 
                 FrontFaceColor -> RGBColor[0.66, 0, 0], BackFaceColor -> 
                 RGBColor[0.66, 0, 0], GraphicsColor -> RGBColor[0.66, 0, 0], 
                 FontFamily -> "Roboto", FontSize -> 8, FontColor -> 
                 RGBColor[0.66, 0, 0], Background -> GrayLevel[1, 0.65]]}, 
               Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"tensor\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}, "RowsIndexed" -> {}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, BaseStyle -> GrayLevel[0.6], 
                 ImageMargins -> 0, ImageSize -> {36, Automatic}, 
                 PlotRangePadding -> 0], 
                StyleBox[
                "uninitialized", LineColor -> RGBColor[0.66, 0, 0], 
                 FrontFaceColor -> RGBColor[0.66, 0, 0], BackFaceColor -> 
                 RGBColor[0.66, 0, 0], GraphicsColor -> RGBColor[0.66, 0, 0], 
                 FontFamily -> "Roboto", FontSize -> 8, FontColor -> 
                 RGBColor[0.66, 0, 0], Background -> GrayLevel[1, 0.65]]}, 
               Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{8, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {8}, "$OutputSize" -> 8, 
                    "$InputSize" -> NeuralNetworks`SizeT, "$InputDimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 0.5, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"tensor\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"0.5`", " ", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False]}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   ImageSizeCache -> {169., {29., 35.}}, 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}, "RowsIndexed" -> {}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7395504005961494`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"ccb29947-de04-493e-8fe6-5f6a6b9d806b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "NetGraph"}]], "Input",
 CellChangeTimes->{{3.7395526841539993`*^9, 3.7395526992318234`*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"2cf0169d-bd9c-48b5-884f-0b62076b158e"],

Cell[BoxData[
 RowBox[{"\<\"\\!\\(\\*RowBox[{\\\"NetGraph\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"layer\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"layer\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{SubscriptBox[StyleBox[\\\"m\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\"\[Rule]\\\", \
SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]]}], \\\",\\\", RowBox[{SubscriptBox[StyleBox[\\\"m\\\", \
\\\"TI\\\"], \\\"2\\\"], \\\"\[Rule]\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\
\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) specifies a \
neural net defined by a graph in which the output of layer \
\\!\\(\\*SubscriptBox[StyleBox[\\\"m\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \\\
\"TI\\\"]]\\) is given as input to layer \\!\\(\\*SubscriptBox[StyleBox[\\\"n\
\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\
\"NetGraph\\\", \\\"[\\\", RowBox[{RowBox[{\\\"\[LeftAssociation]\\\", \
RowBox[{RowBox[{SubscriptBox[StyleBox[\\\"name\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\"\[Rule]\\\", \
SubscriptBox[StyleBox[\\\"layer\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]]}], \\\",\\\", RowBox[{SubscriptBox[StyleBox[\\\"name\\\", \\\"TI\
\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\"\[Rule]\\\", \
SubscriptBox[StyleBox[\\\"layer\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]]}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"\
\[RightAssociation]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{SubscriptBox[StyleBox[\\\"name\\\", \\\"TI\\\"], \
StyleBox[\\\"m1\\\", \\\"TI\\\"]], \\\"\[Rule]\\\", \
SubscriptBox[StyleBox[\\\"name\\\", \\\"TI\\\"], StyleBox[\\\"n1\\\", \
\\\"TI\\\"]]}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\
\\\"}]}], \\\"]\\\"}]\\) specifies a net with explicitly named layers.\"\>", 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/NetGraph"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.739552699899799*^9},
 CellTags->
  "Info633739538299-1323769",ExpressionUUID->"646dcfd2-b7c5-4ed0-ada0-\
4ae05019658e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"LinearLayer", "[", "8", "]"}]], "Input",
 CellChangeTimes->{{3.739552948161874*^9, 3.7395529511883698`*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"e48b707b-c47e-4d16-8acb-7fad2f20b1ee"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"scale", "=", 
  RowBox[{"ConstantTimesLayer", "[", 
   RowBox[{
    RowBox[{"\"\<Scaling\>\"", "\[Rule]", 
     RowBox[{"{", "0.5", "}"}]}], ",", 
    RowBox[{"\"\<Input\>\"", "\[Rule]", 
     RowBox[{"NetEncoder", "[", "\"\<Scalar\>\"", "]"}]}], ",", 
    RowBox[{"\"\<Output\>\"", "\[Rule]", 
     RowBox[{"NetDecoder", "[", "\"\<Scalar\>\"", "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"scale", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7395535354947248`*^9, 3.739553542220421*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"1a1466f4-0e1e-4065-b012-91a2d8a6af48"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ConstantTimesLayer", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[
               
               GraphicsComplexBox[{{0, 0}, {-0.5, 1}, {0.5, 1}, {1.5, 1}, {1, 
                 0}}, {{
                  Opacity[0.3], 
                  LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 4}}]}, {
                  AbsolutePointSize[5], 
                  RGBColor[0.33, 0.33, 0.33], 
                  PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 37], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{"\"Dimensions\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  
                  TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                   "RowWithSeparators"], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"scalar\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[
               
               GraphicsComplexBox[{{0, 0}, {-0.5, 1}, {0.5, 1}, {1.5, 1}, {1, 
                 0}}, {{
                  Opacity[0.3], 
                  LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 4}}]}, {
                  AbsolutePointSize[5], 
                  RGBColor[0.33, 0.33, 0.33], 
                  PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 37], 
              GridBox[{{
                 ItemBox[
                  StyleBox["Parameters", Bold]], 
                 ItemBox[""]}, {
                 StyleBox[
                  TemplateBox[{"\"Dimensions\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  
                  TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                   "RowWithSeparators"], "SummaryItem"]}, {
                 ItemBox[
                  StyleBox["Arrays", Bold], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]], 
                 ItemBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                   "CacheGraphics" -> False], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]]}, {
                 StyleBox[
                  TemplateBox[{"\"Scaling\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 ItemBox[
                  StyleBox["Ports", Bold], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]], 
                 ItemBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                   "CacheGraphics" -> False], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]]}, {
                 StyleBox[
                  TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"scalar\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"scalar\"", "SummaryItem"]}}, 
               BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 3}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ConstantTimesLayer[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.739553536963663*^9, 3.739553542560365*^9}},
 CellLabel->"Out[68]=",ExpressionUUID->"c0dca769-0cf8-465a-8442-8bf2243a7064"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.5`", ",", "1.`", ",", "1.5`"}], "}"}]], "Output",
 CellChangeTimes->{{3.739553536963663*^9, 3.7395535428073683`*^9}},
 CellLabel->"Out[69]=",ExpressionUUID->"aaefcfd2-7d0f-471f-839c-f2558687df55"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"elem", "=", 
  RowBox[{"ElementwiseLayer", "[", 
   RowBox[{
    RowBox[{"#", "*", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "&"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7395551901539154`*^9, 3.739555195664076*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"13a9a81f-ae02-4ad8-876b-99cf6015df85"],

Cell[BoxData[
 TemplateBox[{
  "ElementwiseLayer","invscf",
   "\"\\!\\(\\*RowBox[{RowBox[{\\\"#1\\\", \\\" \\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \\\"3\\\"}], \
\\\"}\\\"}]}], \\\"&\\\"}]\\) could not be symbolically evaluated as a \\!\\(\
\\*RowBox[{\\\"\\\\\\\"unary\\\\\\\"\\\"}]\\) scalar function.\"",2,110,30,
   24697668008397269180,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7395551968783965`*^9},
 CellLabel->
  "During evaluation of \
In[110]:=",ExpressionUUID->"5fd3dd66-724b-4a86-9a8f-0e231285c7e9"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.7395551968949056`*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"d2681ea3-20ae-4ee5-b218-fc0e33d7474a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "*", "{"}]], "Input",
 CellChangeTimes->{{3.7395555758141074`*^9, 
  3.739555578436471*^9}},ExpressionUUID->"fed3c233-4f38-479a-b72d-\
5f5d14bfe5f4"]
}, Open  ]]
},
WindowSize->{1500, 917},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>0.8 Inherited,
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 7, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info633739538299-1323769"->{
  Cell[444420, 9079, 2465, 41, 55, "Print",ExpressionUUID->"646dcfd2-b7c5-4ed0-ada0-4ae05019658e",
   CellTags->"Info633739538299-1323769"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info633739538299-1323769", 456823, 9362}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[583, 22, 163, 3, 42, "Subsection",ExpressionUUID->"a97b6548-7444-4f52-8385-55f7e3aac111"],
Cell[749, 27, 446, 9, 38, "Input",ExpressionUUID->"d8eb4aa3-ea91-4560-a5e4-89e2aa5ad890"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1232, 41, 230, 4, 42, "Subsection",ExpressionUUID->"8fef335a-119a-4684-9c73-4161c696fc69"],
Cell[CellGroupData[{
Cell[1487, 49, 473, 11, 22, "Input",ExpressionUUID->"37b3c95e-cf6e-4345-8213-2834e7838772"],
Cell[1963, 62, 14688, 294, 59, "Output",ExpressionUUID->"7e3343b9-0239-4e2a-8cc9-2acfb917d51b"]
}, Open  ]],
Cell[16666, 359, 2703, 45, 188, "Input",ExpressionUUID->"b61fd62d-6249-4276-95f6-4e6f7dbc912f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19406, 409, 170, 3, 42, "Subsection",ExpressionUUID->"1d510bfb-5494-494c-a291-1cda52559c0d"],
Cell[19579, 414, 2097, 42, 83, "Input",ExpressionUUID->"5ffd5e94-746f-4af8-ba2d-32f494356219"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21713, 461, 159, 3, 42, "Subsection",ExpressionUUID->"b8773a27-cd1e-48ec-8d51-81bf6ff63b4b"],
Cell[21875, 466, 3318, 57, 293, "Input",ExpressionUUID->"edbf0ee2-cf30-4d82-9dab-f9b0c346225e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25230, 528, 159, 3, 42, "Subsection",ExpressionUUID->"1510df37-b6e3-4059-8d8a-68933a55834f"],
Cell[CellGroupData[{
Cell[25414, 535, 4099, 82, 158, "Input",ExpressionUUID->"f0396d21-c023-4886-859b-4555aa089e09"],
Cell[29516, 619, 44198, 891, 159, "Output",ExpressionUUID->"b74fca63-7d21-41d2-8ee5-3c53674dd7a7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73751, 1515, 179, 3, 22, "Input",ExpressionUUID->"cd8471b6-4cdc-45fd-b167-bbeeefcad251"],
Cell[73933, 1520, 204, 4, 26, "Output",ExpressionUUID->"c279ac73-f6f2-4001-a6ae-ff3a34cb8a18"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[74186, 1530, 262, 4, 42, "Subsection",ExpressionUUID->"1de5c636-2c07-4bc9-98bb-1e273b057422"],
Cell[CellGroupData[{
Cell[74473, 1538, 3189, 67, 218, "Input",ExpressionUUID->"a483c109-1890-41a9-a395-427c3de3b8fa"],
Cell[77665, 1607, 53044, 1064, 71, "Output",ExpressionUUID->"e0f9ae9f-c8c5-4b45-8eca-6ab6a9ae1d08"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[130758, 2677, 156, 3, 42, "Subsection",ExpressionUUID->"ad5e5560-d72d-44fd-87ec-5a9600863698"],
Cell[CellGroupData[{
Cell[130939, 2684, 1823, 36, 128, "Input",ExpressionUUID->"7d2529f9-03da-4c54-9557-09b8b5cee6ea"],
Cell[132765, 2722, 37227, 754, 159, "Output",ExpressionUUID->"048fca8d-0c3d-447e-aaae-013ec89a5a29"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[170041, 3482, 333, 5, 44, "Section",ExpressionUUID->"1625ce47-7e38-4ccf-93bd-d49aa95d21db"],
Cell[CellGroupData[{
Cell[170399, 3491, 170, 3, 42, "Subsection",ExpressionUUID->"0cd985cc-3af6-4533-854e-e0be71215472"],
Cell[CellGroupData[{
Cell[170594, 3498, 7716, 138, 518, "Input",ExpressionUUID->"31419281-fdd4-4dbc-8105-f2287a04b63a"],
Cell[178313, 3638, 139266, 2713, 251, "Output",ExpressionUUID->"8c61f438-de71-40a2-983e-f850d123c2cd"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[317628, 6357, 308, 5, 42, "Subsection",ExpressionUUID->"4d8708ae-94a3-460d-b70f-ce3a512d387e"],
Cell[317939, 6364, 1755, 29, 22, "Input",ExpressionUUID->"a7c64f03-a37b-4ff4-8fa9-4bfc6c4beb84"],
Cell[CellGroupData[{
Cell[319719, 6397, 1500, 28, 53, "Input",ExpressionUUID->"bc184bf2-cdcb-4b06-8822-87c061f3da92"],
Cell[321222, 6427, 40071, 860, 149, "Output",ExpressionUUID->"273baf05-57ac-47f0-9df0-25d02c320edc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[361330, 7292, 2168, 36, 83, "Input",ExpressionUUID->"8fceabf9-ec10-47c1-a295-9b3b7892aa3b"],
Cell[363501, 7330, 5201, 122, 275, "PrintTemporary",ExpressionUUID->"03d98523-d386-49a7-97aa-a99f81d780ca"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[368751, 7458, 158, 3, 42, "Subsection",ExpressionUUID->"2a188410-2540-4cfd-b762-b5b3e6ba0374"],
Cell[368912, 7463, 3066, 58, 128, "Input",ExpressionUUID->"b9810408-eec2-4e6e-bc82-b51ac6a95600"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[372027, 7527, 158, 3, 52, "Section",ExpressionUUID->"8cb255c6-e198-432c-bcb4-a09c4f1145ee"],
Cell[CellGroupData[{
Cell[372210, 7534, 228, 4, 22, "Input",ExpressionUUID->"02ae2d9c-4198-41b0-abc8-3fe2a4951c59"],
Cell[372441, 7540, 381, 9, 18, "Message",ExpressionUUID->"d4766890-aa89-44bf-aceb-61395bb7cd09"],
Cell[372825, 7551, 160, 3, 26, "Output",ExpressionUUID->"3d6184f6-f3c1-45c1-98a6-e7bec394037f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[373022, 7559, 1172, 28, 51, "Input",ExpressionUUID->"216453e6-ca3d-4ef4-bff5-4e2813f0fc08"],
Cell[374197, 7589, 229, 5, 26, "Output",ExpressionUUID->"0fa5af2a-8ec3-4434-b08b-47a96874a4f1"],
Cell[374429, 7596, 227, 5, 26, "Output",ExpressionUUID->"7878fb20-1921-42ce-a7b9-2a8cdaf93e1e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[374693, 7606, 383, 10, 38, "Input",ExpressionUUID->"8d392152-0404-41b5-be45-9b5b294fcae0"],
Cell[375079, 7618, 697, 18, 26, "Output",ExpressionUUID->"288abf6d-57ce-46b0-a8a9-9b3cb803c788"],
Cell[375779, 7638, 181, 3, 26, "Output",ExpressionUUID->"d3994e05-9de3-4558-bec9-cc0b56e094ed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[375997, 7646, 4029, 91, 123, "Input",ExpressionUUID->"1818bb40-bce0-4eec-a21f-dd904e6f070a"],
Cell[380029, 7739, 213, 5, 26, "Output",ExpressionUUID->"78bea722-04ab-4bf9-895e-f9fc311b0fb2"],
Cell[380245, 7746, 159, 3, 26, "Output",ExpressionUUID->"76392810-6e9f-41e0-9453-d0cc9ffc2fb6"],
Cell[380407, 7751, 14096, 278, 59, "Output",ExpressionUUID->"67aca7a1-c163-4a91-9f8d-e01953df2b5b"],
Cell[394506, 8031, 403, 9, 18, "Message",ExpressionUUID->"10dc1839-e7c7-4e29-ac38-73a669586da4"],
Cell[394912, 8042, 162, 3, 26, "Output",ExpressionUUID->"ba6ce336-1426-4cb4-9d88-d783314351af"],
Cell[395077, 8047, 171, 4, 26, "Output",ExpressionUUID->"22571734-5f03-4daf-97da-4cecb5e640f0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[395285, 8056, 200, 5, 22, InheritFromParent,ExpressionUUID->"babf0536-5d41-47b8-9a89-787eacd04a58"],
Cell[395488, 8063, 278, 6, 26, "Output",ExpressionUUID->"79a31074-9cc4-4ec1-8d80-c7e5fef8dedb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[395803, 8074, 688, 17, 38, "Input",ExpressionUUID->"fa010b29-8bc5-4b3a-937d-69d188f16a56"],
Cell[396494, 8093, 2111, 50, 85, "Output",ExpressionUUID->"d164ac55-0091-4ced-b4bc-48542245da97"],
Cell[398608, 8145, 3285, 77, 123, "Output",ExpressionUUID->"2a409afa-9a74-4e29-ad94-572492011b1c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[401930, 8227, 681, 14, 22, "Input",ExpressionUUID->"77a3d246-4ba2-4719-8c73-74f4892462b6"],
Cell[402614, 8243, 834, 16, 36, "Output",ExpressionUUID->"c9cc56fb-dfbe-45e2-aa40-96b58c53c4ba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[403485, 8264, 408, 8, 38, "Input",ExpressionUUID->"67c62aa0-7153-4db5-a1c4-690aab0bd398"],
Cell[403896, 8274, 15074, 263, 357, "Output",ExpressionUUID->"5fe2eb57-2300-4a03-9a82-09618d20217d"],
Cell[418973, 8539, 1465, 28, 240, "Output",ExpressionUUID->"bdd57797-6397-412b-92ae-4e5717c64fd7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[420475, 8572, 340, 7, 22, "Input",ExpressionUUID->"ce1618ae-157d-4bbc-956c-d07e5a884f1a"],
Cell[420818, 8581, 516, 11, 25, "Output",ExpressionUUID->"a34444bf-85ce-4679-b810-1bf8e6d4d9d5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[421371, 8597, 355, 8, 22, "Input",ExpressionUUID->"0de0b708-e4c7-4aae-ba9c-6fc372259861"],
Cell[421729, 8607, 22451, 462, 70, "Output",ExpressionUUID->"ccb29947-de04-493e-8fe6-5f6a6b9d806b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[444217, 9074, 200, 3, 22, "Input",ExpressionUUID->"2cf0169d-bd9c-48b5-884f-0b62076b158e"],
Cell[444420, 9079, 2465, 41, 55, "Print",ExpressionUUID->"646dcfd2-b7c5-4ed0-ada0-4ae05019658e",
 CellTags->"Info633739538299-1323769"]
}, Open  ]],
Cell[446900, 9123, 211, 3, 22, "Input",ExpressionUUID->"e48b707b-c47e-4d16-8acb-7fad2f20b1ee"],
Cell[CellGroupData[{
Cell[447136, 9130, 667, 15, 38, "Input",ExpressionUUID->"1a1466f4-0e1e-4065-b012-91a2d8a6af48"],
Cell[447806, 9147, 7034, 153, 57, "Output",ExpressionUUID->"c0dca769-0cf8-465a-8442-8bf2243a7064"],
Cell[454843, 9302, 238, 4, 25, "Output",ExpressionUUID->"aaefcfd2-7d0f-471f-839c-f2558687df55"]
}, Open  ]],
Cell[CellGroupData[{
Cell[455118, 9311, 353, 9, 22, "Input",ExpressionUUID->"13a9a81f-ae02-4ad8-876b-99cf6015df85"],
Cell[455474, 9322, 581, 12, 18, "Message",ExpressionUUID->"5fd3dd66-724b-4a86-9a8f-0e231285c7e9"],
Cell[456058, 9336, 161, 3, 25, "Output",ExpressionUUID->"d2681ea3-20ae-4ee5-b218-fc0e33d7474a"]
}, Open  ]],
Cell[456234, 9342, 234, 6, 22, "Input",ExpressionUUID->"fed3c233-4f38-479a-b72d-5f5d14bfe5f4"]
}, Open  ]]
}
]
*)

