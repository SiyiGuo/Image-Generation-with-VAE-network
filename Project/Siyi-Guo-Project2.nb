(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='WolframDesktop 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       161,          7]
NotebookDataLength[    301531,       6156]
NotebookOptionsPosition[    296118,       6053]
NotebookOutlinePosition[    296681,       6074]
CellTagsIndexPosition[    296592,       6069]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Hyper Parameter", "Subsection",
 CellChangeTimes->{{3.739551732245135*^9, 
  3.739551736385481*^9}},ExpressionUUID->"a97b6548-7444-4f52-8385-\
55f7e3aac111"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nlatent", " ", "=", " ", "8"}], ";"}]], "Input",
 CellChangeTimes->{{3.739551316690058*^9, 3.739551333600608*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"d8eb4aa3-ea91-4560-a5e4-89e2aa5ad890"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Encoder", "Subsection",
 CellChangeTimes->{{3.739551680305462*^9, 
  3.739551682201329*^9}},ExpressionUUID->"8fef335a-119a-4684-9c73-\
4161c696fc69"],

Cell[BoxData[
 RowBox[{
  RowBox[{"encoder", " ", "=", " ", 
   RowBox[{"NetChain", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
     "128", ",", "\[IndentingNewLine]", "Ramp", ",", "\[IndentingNewLine]", 
      RowBox[{"DropoutLayer", "[", "]"}], ",", "\[IndentingNewLine]", "128", 
      ",", "\[IndentingNewLine]", "Ramp", ",", "\[IndentingNewLine]", 
      RowBox[{"DropoutLayer", "[", "]"}], ","}], "\[IndentingNewLine]", "}"}],
     "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7395491087158737`*^9, 3.73954917811176*^9}, {
   3.739549218210209*^9, 3.7395492956660833`*^9}, {3.7395493546752667`*^9, 
   3.7395493694767766`*^9}, {3.739550100213616*^9, 3.7395501005517516`*^9}, 
   3.7395506987487946`*^9, {3.739550763158961*^9, 3.7395507829405527`*^9}, {
   3.7395513101844034`*^9, 3.7395513112562037`*^9}, {3.739553041169927*^9, 
   3.7395530814694223`*^9}, {3.7396427053090143`*^9, 3.7396427062149363`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"b61fd62d-6249-4276-95f6-4e6f7dbc912f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Middle Trick Z layer", "Subsection",
 CellChangeTimes->{{3.739551687254616*^9, 
  3.7395516940382557`*^9}},ExpressionUUID->"1d510bfb-5494-494c-a291-\
1cda52559c0d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mn", " ", "=", " ", 
   RowBox[{"LinearLayer", "[", "nlatent", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"expSd", "=", " ", 
   RowBox[{"NetChain", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"LinearLayer", "[", "nlatent", "]"}], ",", 
      RowBox[{"ElementwiseLayer", "[", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"#", "*", "0.5"}], "]"}], "&"}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z", " ", "=", 
   RowBox[{"TotalLayer", "[", "]"}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7395491087158737`*^9, 3.73954917811176*^9}, {
   3.739549218210209*^9, 3.7395492956660833`*^9}, {3.7395493546752667`*^9, 
   3.7395493694767766`*^9}, {3.739550100213616*^9, 3.7395501005517516`*^9}, {
   3.7395506987487946`*^9, 3.739550715179901*^9}, {3.7395512449249754`*^9, 
   3.739551276851375*^9}, 3.7395513375830107`*^9, {3.7395515781816907`*^9, 
   3.7395515847436523`*^9}, {3.7395529647125893`*^9, 
   3.7395529676392713`*^9}, {3.739553158868684*^9, 3.7395532248187704`*^9}, {
   3.739553457330779*^9, 3.739553521142729*^9}, {3.739553908178919*^9, 
   3.739553930029264*^9}, {3.739554079763504*^9, 3.7395540897121577`*^9}, {
   3.739554133563135*^9, 3.7395542311423635`*^9}, {3.7395546155509634`*^9, 
   3.7395546362187023`*^9}, {3.7395546795450125`*^9, 3.739554687174427*^9}, {
   3.739554745978673*^9, 3.7395547579545517`*^9}, {3.7395550832738695`*^9, 
   3.7395550911013155`*^9}, {3.739563601684586*^9, 3.739563634298044*^9}, {
   3.7395779331005144`*^9, 3.7395779348582907`*^9}, {3.7395801891391616`*^9, 
   3.739580189373973*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"5ffd5e94-746f-4af8-ba2d-32f494356219"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Decoder", "Subsection",
 CellChangeTimes->{{3.7395516987804565`*^9, 
  3.7395517004113936`*^9}},ExpressionUUID->"b8773a27-cd1e-48ec-8d51-\
81bf6ff63b4b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"decoder", " ", "=", " ", 
   RowBox[{"NetChain", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
     "128", ",", "\[IndentingNewLine]", "Ramp", ",", "\[IndentingNewLine]", 
      RowBox[{"DropoutLayer", "[", "]"}], ",", "\[IndentingNewLine]", "128", 
      ",", "\[IndentingNewLine]", "Ramp", ",", "\[IndentingNewLine]", 
      RowBox[{"DropoutLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"28", "*", "28"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ReshapeLayer", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "28", ",", "28"}], "}"}], "]"}]}], 
     "\[IndentingNewLine]", "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7395494974551506`*^9, 3.7395495046283197`*^9}, {
  3.7395510248368125`*^9, 3.7395510310459833`*^9}, {3.7395530865320435`*^9, 
  3.7395530890187006`*^9}, {3.739574426986454*^9, 3.7395744331238127`*^9}, {
  3.739574497367547*^9, 3.7395744993428903`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"edbf0ee2-cf30-4d82-9dab-f9b0c346225e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Further AssemBling", "Subsection",
 CellChangeTimes->{{3.7395517151356115`*^9, 
  3.7395517185883427`*^9}},ExpressionUUID->"0cd985cc-3af6-4533-854e-\
e0be71215472"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vaeNet", " ", "=", " ", 
  RowBox[{"NetInitialize", "[", 
   RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<enc\>\"", "->", "encoder"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<mn\>\"", "->", "mn"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<expSd\>\"", "->", " ", "expSd"}], ",", 
       RowBox[{"\"\<sdEpsilon\>\"", "\[Rule]", 
        RowBox[{"ThreadingLayer", "[", "Times", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<z\>\"", "->", 
        RowBox[{"TotalLayer", "[", "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<dec\>\"", "->", "decoder"}]}], "|>"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
        "\"\<enc\>\""}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<enc\>\"", "\[Rule]", "\"\<mn\>\""}], ",", 
       "\[IndentingNewLine]", " ", 
       RowBox[{"\"\<enc\>\"", "\[Rule]", "\"\<expSd\>\""}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<expSd\>\"", "\[Rule]", "\"\<sdEpsilon\>\""}], ",", " ", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<random\>\"", "]"}], " ", "\[Rule]", 
        "\"\<sdEpsilon\>\""}], ",", 
       RowBox[{"(*", 
        RowBox[{"epsilon", " ", "*", " ", "Exp", 
         RowBox[{"(", "sd", ")"}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\"\<mn\>\"", "\[Rule]", "\"\<z\>\""}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<sdEpsilon\>\"", "\[Rule]", "\"\<z\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<z\>\"", "\[Rule]", "\"\<dec\>\""}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Output\>\"", "->", 
      RowBox[{"NetDecoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Image\>\"", ",", " ", "\"\<Grayscale\>\""}], "}"}], 
       "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "28", ",", "28"}], "}"}]}]}], "\[IndentingNewLine]", 
    "]"}], "]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQzTY7NXLFndeOdZcex4Do2/fi3dYA6aIUdS8QbX54
aQCIllmxFkyvsnSrA9F3Fj1tANF/hJo6QfSObWt7QbTDbcOdIPrJ+uCDIPre
3opzIHpPGecdEK0vvuI1iDZpWvIWRM/ZZXR6LUidyYIrIPrTMpvbIDq5IOMO
iD53lf0hiP51SuAJiP4iv2LPOiCdN63+GIj+fiXmFIieNefKGRCtsTr5EojO
Zdp5GURL/3t/HUS7mFncAtFvRRc9BNFaAevB9PZ31f9AdEzfh/8guvi0svRZ
IL3vRiaYnhYuaAaic2ZOsgDRALlsvls=
  "],
 CellLabel->"In[7]:=",ExpressionUUID->"31419281-fdd4-4dbc-8105-f2287a04b63a"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["6", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], {
                    
                    LineBox[{{-6., 3.6739403974420594`*^-16}, {-5., 
                    3.061616997868383*^-16}}], 
                    
                    LineBox[{{-5., 3.061616997868383*^-16}, {-4., 
                    2.4492935982947064`*^-16}}], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQEiBziLb+5fz7/N5snEqTurzgkfyOM1N118aMV+
Z9+N0z5MET7AsX5N8K3Du/bLGgVPTwwWPlCwZ6bo2clH9+c7VO8+yyl8QObT
9Akex87tt67QZDbdIXTAvSbj7PqaK/ubbsbmTY8TOnA/XUmqU+zWfqcUib9f
/ggeeHvXRjxC4sH+GonI9b6TBQ9I2Zi3Tkp9vN/gm3zrQkXBA5V+DNc/f3q2
f4ZS5+ST9wUOhE4OFbW/+WJ/xWIX/9+zBA6cawn1CWl7tf9MRdAOs2CBAw+U
GGqMf73eP3XRpnPVHAIHenJDl9wxebt/heMplaml/AeupIQe9Td7t1/g+WU2
tyt8B7ZzMNzv+fduf4ppkzOXLt8Bk8jQj5N73+9fonP11sN63gPeYaF/Uh6/
33/2DAjwHPj3HwTe709/8+jreWmeA3+g/F+JE40+lHDD5Vt0bzTp3uA68B/K
Z/Hf/qzdlQsuX31ML+7/Hk44/9Vku5eT7RB8sPJTHHD+GgN1K5EEBB8SXwg+
ADARBK0=
                    "]], 
                    
                    LineBox[{{-3., -0.9999999999999998}, {-2., \
-0.9999999999999999}}], 
                    
                    LineBox[{{-4., 2.4492935982947064`*^-16}, {-3., 
                    1.8369701987210297`*^-16}}], 
                    
                    LineBox[{{-4., 1.0000000000000002`}, {-3., 
                    1.8369701987210297`*^-16}}], 
                    
                    LineBox[{{-3., 
                    1.8369701987210297`*^-16}, {-2., -0.9999999999999999}}], 
                    
                    LineBox[{{-2., -0.9999999999999999}, {-1., \
-0.9999999999999999}}], 
                    
                    LineBox[{{-1., -0.9999999999999999}, \
{-6.123233995736766*^-17, -1.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-5.4, 
                    3.3065463576978537`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736762*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-4.4, 
                    2.694222958124177*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-3.8128207114948767`, -0.9773027452952465}, \
{-0.25, 0}, 
                    Offset[8], {0.08165695756016156, -0.01745942669596412}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, -0.9999999999999998}, \
{-0.25, 0}, 
                    Offset[8], {1., -1.1102230246251565`*^-16}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-3.4, 
                    2.0818995585505003`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-3.4, 
                    0.40000000000000024`}, {-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, -0.5999999999999998}, \
{-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-1.4, -0.9999999999999998}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-0.4000000000000001, -1.}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999999, -1.1102230246251565`*^-16}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-6., 3.6739403974420594`*^-16}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-5., 3.061616997868383*^-16}], 
                    Offset[{12, 12}, {-5., 3.061616997868383*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-5., 3.061616997868383*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"enc\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "6", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["enc", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[6]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-4., 2.4492935982947064`*^-16}], 
                    Offset[{12, 12}, {-4., 2.4492935982947064`*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-4., 
                    2.4492935982947064`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"expSd\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["expSd", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[2]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-3., -0.9999999999999998}], 
                    Offset[{10, 10}, {-3., -0.9999999999999998}]]}, 
                    InsetBox[
                    GraphicsBox[
                    
                    GraphicsComplexBox[{{0.1, 0}, {-0.3, 1}, {0.5, 1}, {
                    1.3, 1}, {0.9, 0}}, {{
                    Opacity[0.2], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[3.5], 
                    RGBColor[0.33, 0.33, 0.33], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 
                    18], {-3., -0.9999999999999998}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"mn\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"LinearLayer", "[", 
                    RowBox[{
                    RowBox[{"{", "8", "}"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "128"}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["mn", Bold], 
                    Style[
                    HoldForm[
                    LinearLayer[{8}, "Input" -> 128]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-2., -0.9999999999999999}], 
                    Offset[{10, 10}, {-2., -0.9999999999999999}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"+\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-2., -0.9999999999999999}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"z\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"TotalLayer", "[", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"8", ",", "8"}], "}"}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["z", Bold], 
                    Style[
                    HoldForm[
                    TotalLayer["Inputs" -> {8, 8}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-3., 1.8369701987210297`*^-16}], 
                    Offset[{10, 10}, {-3., 1.8369701987210297`*^-16}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[Times]\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-3., 1.8369701987210297`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"sdEpsilon\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{"Times", ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"8", ",", "8"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["sdEpsilon", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[Times, "Inputs" -> {8, 8}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-4., 1.0000000000000002`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"random\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["random", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-1., -0.9999999999999999}], 
                    Offset[{12, 12}, {-1., -0.9999999999999999}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-1., -0.9999999999999999}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"dec\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "8", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["dec", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[8]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-6.123233995736766*^-17, -1.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    StyleBox[{{
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    Offset[{0, -7}, {-6., 3.6739403974420594`*^-16}], {0, 1.},
                     Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"enc\"", TraditionalForm], 
                    Offset[{0, -15}, {-5., 3.061616997868383*^-16}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"expSd\"", TraditionalForm], 
                    Offset[{0, -15}, {-4., 2.4492935982947064`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"mn\"", TraditionalForm], 
                    Offset[{0, -13}, {-3., -0.9999999999999998}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"z\"", TraditionalForm], 
                    Offset[{0, -13}, {-2., -0.9999999999999999}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"sdEpsilon\"", TraditionalForm], 
                    Offset[{0, -13}, {-3., 1.8369701987210297`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"random\"", TraditionalForm], 
                    Offset[{0, -7}, {-4., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"dec\"", TraditionalForm], 
                    Offset[{0, -15}, {-1., -0.9999999999999999}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    Offset[{0, -7}, {-6.123233995736766*^-17, -1.}], {0, 1.}, 
                    Automatic, {1, 0}]}}, FontColor -> GrayLevel[0.5], 
                    StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.3677786976552195`*^-16, 5.5}, {-5.4, 
                    3.3065463576978537`*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736762*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"128\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-4.4, 
                    2.694222958124177*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"128\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.1499858073915705`, 
                    5.378432173300873}, {-3.8128207114948767`, \
-0.9773027452952465}], {0., -0.17}, Automatic, {
                    0.977896758781977, -0.20908832861664917`}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{6.106226635438361*^-16, 
                    5.5}, {-2.4000000000000004`, -0.9999999999999998}], {
                    0., -0.17}, Automatic, {1., -1.1102230246251565`*^-16}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-3.4, 
                    2.0818995585505003`*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.889087296526011, 3.889087296526011}, {-3.4, 
                    0.40000000000000024`}], {0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.889087296526011, 
                    3.889087296526011}, {-2.4000000000000004`, \
-0.5999999999999998}], {0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{0., 5.5}, {-1.4, -0.9999999999999998}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{6.106226635438362*^-16, 
                    5.5}, {-0.4000000000000001, -1.}], {0., -0.17}, 
                    Automatic, {1., -1.1102230246251568`*^-16}]}, FontColor -> 
                    GrayLevel[0.7], FontSize -> 8, FontWeight -> "Thin", 
                    StripOnInput -> False]}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    Part[{{-6., 3.6739403974420594`*^-16}, {-5., 
                    3.061616997868383*^-16}, {-4., 
                    2.4492935982947064`*^-16}, {-3., -0.9999999999999998}, \
{-2., -0.9999999999999999}, {-3., 1.8369701987210297`*^-16}, {-4., 
                    1.0000000000000002`}, {-1., -0.9999999999999999}, \
{-6.123233995736766*^-17, -1.}}, NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 24, 24, 20, 20, 20, 8, 24, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, ImageSize -> {386., 157.}, AspectRatio -> 
                    Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{28., 28.}, {28.99999999999999, 18.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "enc"], 
                    NeuralNetworks`NetPath["Nodes", "expSd"], 
                    NeuralNetworks`NetPath["Nodes", "mn"], 
                    NeuralNetworks`NetPath["Nodes", "z"], 
                    NeuralNetworks`NetPath["Nodes", "sdEpsilon"], 
                    NeuralNetworks`NetPath["Inputs", "random"], 
                    NeuralNetworks`NetPath["Nodes", "dec"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, NeuralNetworks`RealT],
                     "random" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    Association["Output" -> NetDecoder["Image", 
                    Association[
                    "ColorSpace" -> "Grayscale", "MeanImage" -> None, 
                    "VarianceImage" -> None, "$Dimensions" -> {28, 28}, 
                    "$Channels" -> 1], 
                    
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], 
                    Association[
                    "enc" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{128, 
                    784}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {128}, "$OutputSize" -> 128, 
                    "$InputSize" -> 784, "$InputDimensions" -> {1, 28, 28}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{128, 
                    128}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["OutputDimensions" -> {128}, "$OutputSize" -> 
                    128, "$InputSize" -> 128, "$InputDimensions" -> {128}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "mn" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{8, 128}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{8}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {8}, "$OutputSize" -> 8, 
                    "$InputSize" -> 128, "$InputDimensions" -> {128}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], 
                    "expSd" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{8, 
                    128}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{8}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {8}, "$OutputSize" -> 8, 
                    "$InputSize" -> 128, "$InputDimensions" -> {128}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 0.5, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], 
                    "sdEpsilon" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], "z" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], 
                    "dec" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{128, 
                    8}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {128}, "$OutputSize" -> 128, 
                    "$InputSize" -> 8, "$InputDimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{128, 
                    128}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {128}, "$OutputSize" -> 128, 
                    "$InputSize" -> 128, "$InputDimensions" -> {128}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{784, 
                    128}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{784}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {784}, "$OutputSize" -> 784, 
                    "$InputSize" -> 128, "$InputDimensions" -> {128}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "8" -> 
                    Association[
                    "Type" -> "Reshape", "Arrays" -> Association[], 
                    "Parameters" -> Association["Dimensions" -> {1, 28, 28}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "8", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]]]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"image\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{"\"random\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"], "", "", "", ""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.739566824408349*^9, 3.739574522619733*^9, {3.739574849135829*^9, 
   3.7395748658940296`*^9}, 3.7395749180388308`*^9, {3.739575289480953*^9, 
   3.7395753039215*^9}, {3.739575376570299*^9, 3.7395754061349173`*^9}, {
   3.7395757758250284`*^9, 3.7395758192873716`*^9}, {3.739575932337609*^9, 
   3.73957594561294*^9}, {3.73957601095173*^9, 3.7395760380070267`*^9}, 
   3.739576130223472*^9, 3.7395761737084093`*^9, 3.739578025784453*^9, {
   3.739578076470274*^9, 3.739578084470869*^9}, {3.7395781320573444`*^9, 
   3.739578150508464*^9}, {3.7395799611607847`*^9, 3.7395800119153366`*^9}, 
   3.7395800804057674`*^9, {3.739580175878442*^9, 3.7395802020560474`*^9}, 
   3.7395804162347183`*^9, 3.7396405575801306`*^9, 3.739641309020645*^9, 
   3.739642114598181*^9, 3.739642310026139*^9, {3.739642664701149*^9, 
   3.7396426687653255`*^9}, 3.739642714984126*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"67bb2ab0-2600-4c4a-9b2f-d5fd57fbed65"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Training", "Subsection",
 CellChangeTimes->{{3.7395663013480153`*^9, 3.739566307299842*^9}, {
  3.739566381757985*^9, 3.739566386357066*^9}, {3.739580286905179*^9, 
  3.7395802885074787`*^9}, {3.7396461037904787`*^9, 
  3.7396461048373337`*^9}},ExpressionUUID->"4d8708ae-94a3-460d-b70f-\
ce3a512d387e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mnistDigits", " ", "=", " ", 
   RowBox[{"First", "/@", 
    RowBox[{"ResourceData", "[", "\"\<MNIST\>\"", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.739642590626321*^9, 3.739642610253044*^9}, 
   3.7396427252545133`*^9, 3.7396436122988987`*^9},
 CellLabel->"In[38]:=",ExpressionUUID->"a7c64f03-a37b-4ff4-8fa9-4bfc6c4beb84"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"trainingData", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<random\>\"", "\[Rule]", 
         RowBox[{"First", "@", 
          RowBox[{"RandomVariate", "[", 
           RowBox[{
            RowBox[{"NormalDistribution", "[", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Length", "@", "mnistDigits"}], ",", "nlatent"}], 
             "}"}]}], "]"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<Input\>\"", "\[Rule]", 
         RowBox[{"ArrayReshape", "[", 
          RowBox[{
           RowBox[{"ImageData", "[", "#", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "28", ",", "28"}], "}"}]}], "]"}]}]}], "|>"}], 
      "&"}], "/@", "mnistDigits"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.7395663013480153`*^9, 3.739566307299842*^9}, {
   3.739566381757985*^9, 3.739566386357066*^9}, {3.739580286905179*^9, 
   3.7395803539419622`*^9}, 3.7395804634373894`*^9, 3.739580557204153*^9, {
   3.7396423400539384`*^9, 3.7396423438215675`*^9}, {3.739643233598317*^9, 
   3.7396432490887737`*^9}, {3.739643349560803*^9, 3.7396433755308723`*^9}, {
   3.739643475800774*^9, 3.7396434841699104`*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"bc184bf2-cdcb-4b06-8822-87c061f3da92"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trainedVae", " ", "=", " ", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"vaeNet", ",", " ", "trainingData", ",", " ", 
    RowBox[{"LossFunction", "\[Rule]", "\"\<Output\>\""}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"TargetDevice", "\[Rule]", "\"\<GPU\>\""}], ",", " ", 
    RowBox[{"BatchSize", "\[Rule]", "64"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.739640917406395*^9, 3.7396409365306387`*^9}, {
   3.739641234230517*^9, 3.739641267372436*^9}, 3.739641484990506*^9, {
   3.739641598182274*^9, 3.739641602211731*^9}, {3.739641826613477*^9, 
   3.739641842161272*^9}, {3.7396419344073505`*^9, 3.7396419543255787`*^9}, {
   3.7396421349665666`*^9, 3.7396421387829113`*^9}, {3.739643564377947*^9, 
   3.7396435646719217`*^9}, 3.7396465019788446`*^9},
 CellLabel->
  "In[120]:=",ExpressionUUID->"8fceabf9-ec10-47c1-a295-9b3b7892aa3b"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["6", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], {
                    
                    LineBox[{{-6., 3.6739403974420594`*^-16}, {-5., 
                    3.061616997868383*^-16}}], 
                    
                    LineBox[{{-5., 3.061616997868383*^-16}, {-4., 
                    2.4492935982947064`*^-16}}], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQEiBziLb+5fz7/N5snEqTurzgkfyOM1N118aMV+
Z9+N0z5MET7AsX5N8K3Du/bLGgVPTwwWPlCwZ6bo2clH9+c7VO8+yyl8QObT
9Akex87tt67QZDbdIXTAvSbj7PqaK/ubbsbmTY8TOnA/XUmqU+zWfqcUib9f
/ggeeHvXRjxC4sH+GonI9b6TBQ9I2Zi3Tkp9vN/gm3zrQkXBA5V+DNc/f3q2
f4ZS5+ST9wUOhE4OFbW/+WJ/xWIX/9+zBA6cawn1CWl7tf9MRdAOs2CBAw+U
GGqMf73eP3XRpnPVHAIHenJDl9wxebt/heMplaml/AeupIQe9Td7t1/g+WU2
tyt8B7ZzMNzv+fduf4ppkzOXLt8Bk8jQj5N73+9fonP11sN63gPeYaF/Uh6/
33/2DAjwHPj3HwTe709/8+jreWmeA3+g/F+JE40+lHDD5Vt0bzTp3uA68B/K
Z/Hf/qzdlQsuX31ML+7/Hk44/9Vku5eT7RB8sPJTHHD+GgN1K5EEBB8SXwg+
ADARBK0=
                    "]], 
                    
                    LineBox[{{-3., -0.9999999999999998}, {-2., \
-0.9999999999999999}}], 
                    
                    LineBox[{{-4., 2.4492935982947064`*^-16}, {-3., 
                    1.8369701987210297`*^-16}}], 
                    
                    LineBox[{{-4., 1.0000000000000002`}, {-3., 
                    1.8369701987210297`*^-16}}], 
                    
                    LineBox[{{-3., 
                    1.8369701987210297`*^-16}, {-2., -0.9999999999999999}}], 
                    
                    LineBox[{{-2., -0.9999999999999999}, {-1., \
-0.9999999999999999}}], 
                    
                    LineBox[{{-1., -0.9999999999999999}, \
{-6.123233995736766*^-17, -1.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-5.4, 
                    3.3065463576978537`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736762*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-4.4, 
                    2.694222958124177*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-3.8128207114948767`, -0.9773027452952465}, \
{-0.25, 0}, 
                    Offset[8], {0.08165695756016156, -0.01745942669596412}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, -0.9999999999999998}, \
{-0.25, 0}, 
                    Offset[8], {1., -1.1102230246251565`*^-16}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-3.4, 
                    2.0818995585505003`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-3.4, 
                    0.40000000000000024`}, {-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, -0.5999999999999998}, \
{-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-1.4, -0.9999999999999998}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-0.4000000000000001, -1.}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999999, -1.1102230246251565`*^-16}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-6., 3.6739403974420594`*^-16}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-5., 3.061616997868383*^-16}], 
                    Offset[{12, 12}, {-5., 3.061616997868383*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-5., 3.061616997868383*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"enc\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "6", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["enc", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[6]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-4., 2.4492935982947064`*^-16}], 
                    Offset[{12, 12}, {-4., 2.4492935982947064`*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-4., 
                    2.4492935982947064`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"expSd\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["expSd", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[2]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-3., -0.9999999999999998}], 
                    Offset[{10, 10}, {-3., -0.9999999999999998}]]}, 
                    InsetBox[
                    GraphicsBox[
                    
                    GraphicsComplexBox[{{0.1, 0}, {-0.3, 1}, {0.5, 1}, {
                    1.3, 1}, {0.9, 0}}, {{
                    Opacity[0.2], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[3.5], 
                    RGBColor[0.33, 0.33, 0.33], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 
                    18], {-3., -0.9999999999999998}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"mn\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"LinearLayer", "[", 
                    RowBox[{
                    RowBox[{"{", "8", "}"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "128"}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["mn", Bold], 
                    Style[
                    HoldForm[
                    LinearLayer[{8}, "Input" -> 128]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-2., -0.9999999999999999}], 
                    Offset[{10, 10}, {-2., -0.9999999999999999}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"+\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-2., -0.9999999999999999}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"z\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"TotalLayer", "[", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"8", ",", "8"}], "}"}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["z", Bold], 
                    Style[
                    HoldForm[
                    TotalLayer["Inputs" -> {8, 8}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-3., 1.8369701987210297`*^-16}], 
                    Offset[{10, 10}, {-3., 1.8369701987210297`*^-16}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[Times]\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-3., 1.8369701987210297`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"sdEpsilon\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{"Times", ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"8", ",", "8"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["sdEpsilon", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[Times, "Inputs" -> {8, 8}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-4., 1.0000000000000002`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"random\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["random", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-1., -0.9999999999999999}], 
                    Offset[{12, 12}, {-1., -0.9999999999999999}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-1., -0.9999999999999999}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"dec\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "8", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["dec", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[8]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-6.123233995736766*^-17, -1.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    StyleBox[{{
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    Offset[{0, -7}, {-6., 3.6739403974420594`*^-16}], {0, 1.},
                     Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"enc\"", TraditionalForm], 
                    Offset[{0, -15}, {-5., 3.061616997868383*^-16}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"expSd\"", TraditionalForm], 
                    Offset[{0, -15}, {-4., 2.4492935982947064`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"mn\"", TraditionalForm], 
                    Offset[{0, -13}, {-3., -0.9999999999999998}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"z\"", TraditionalForm], 
                    Offset[{0, -13}, {-2., -0.9999999999999999}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"sdEpsilon\"", TraditionalForm], 
                    Offset[{0, -13}, {-3., 1.8369701987210297`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"random\"", TraditionalForm], 
                    Offset[{0, -7}, {-4., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"dec\"", TraditionalForm], 
                    Offset[{0, -15}, {-1., -0.9999999999999999}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    Offset[{0, -7}, {-6.123233995736766*^-17, -1.}], {0, 1.}, 
                    Automatic, {1, 0}]}}, FontColor -> GrayLevel[0.5], 
                    StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.3677786976552195`*^-16, 5.5}, {-5.4, 
                    3.3065463576978537`*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736762*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"128\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-4.4, 
                    2.694222958124177*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"128\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.1499858073915705`, 
                    5.378432173300873}, {-3.8128207114948767`, \
-0.9773027452952465}], {0., -0.17}, Automatic, {
                    0.977896758781977, -0.20908832861664917`}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{6.106226635438361*^-16, 
                    5.5}, {-2.4000000000000004`, -0.9999999999999998}], {
                    0., -0.17}, Automatic, {1., -1.1102230246251565`*^-16}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-3.4, 
                    2.0818995585505003`*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.889087296526011, 3.889087296526011}, {-3.4, 
                    0.40000000000000024`}], {0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.889087296526011, 
                    3.889087296526011}, {-2.4000000000000004`, \
-0.5999999999999998}], {0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{0., 5.5}, {-1.4, -0.9999999999999998}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{6.106226635438362*^-16, 
                    5.5}, {-0.4000000000000001, -1.}], {0., -0.17}, 
                    Automatic, {1., -1.1102230246251568`*^-16}]}, FontColor -> 
                    GrayLevel[0.7], FontSize -> 8, FontWeight -> "Thin", 
                    StripOnInput -> False]}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    Part[{{-6., 3.6739403974420594`*^-16}, {-5., 
                    3.061616997868383*^-16}, {-4., 
                    2.4492935982947064`*^-16}, {-3., -0.9999999999999998}, \
{-2., -0.9999999999999999}, {-3., 1.8369701987210297`*^-16}, {-4., 
                    1.0000000000000002`}, {-1., -0.9999999999999999}, \
{-6.123233995736766*^-17, -1.}}, NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 24, 24, 20, 20, 20, 8, 24, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, ImageSize -> {386., 157.}, AspectRatio -> 
                    Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{28., 28.}, {28.99999999999999, 18.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "enc"], 
                    NeuralNetworks`NetPath["Nodes", "expSd"], 
                    NeuralNetworks`NetPath["Nodes", "mn"], 
                    NeuralNetworks`NetPath["Nodes", "z"], 
                    NeuralNetworks`NetPath["Nodes", "sdEpsilon"], 
                    NeuralNetworks`NetPath["Inputs", "random"], 
                    NeuralNetworks`NetPath["Nodes", "dec"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, NeuralNetworks`RealT],
                     "random" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    Association["Output" -> NetDecoder["Image", 
                    Association[
                    "ColorSpace" -> "Grayscale", "MeanImage" -> None, 
                    "VarianceImage" -> None, "$Dimensions" -> {28, 28}, 
                    "$Channels" -> 1], 
                    
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], 
                    Association[
                    "enc" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{128, 
                    784}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {128}, "$OutputSize" -> 128, 
                    "$InputSize" -> 784, "$InputDimensions" -> {1, 28, 28}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{128, 
                    128}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["OutputDimensions" -> {128}, "$OutputSize" -> 
                    128, "$InputSize" -> 128, "$InputDimensions" -> {128}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "mn" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{8, 128}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{8}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {8}, "$OutputSize" -> 8, 
                    "$InputSize" -> 128, "$InputDimensions" -> {128}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], 
                    "expSd" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{8, 
                    128}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{8}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {8}, "$OutputSize" -> 8, 
                    "$InputSize" -> 128, "$InputDimensions" -> {128}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 0.5, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], 
                    "sdEpsilon" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], "z" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], 
                    "dec" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{128, 
                    8}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {128}, "$OutputSize" -> 128, 
                    "$InputSize" -> 8, "$InputDimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{128, 
                    128}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {128}, "$OutputSize" -> 128, 
                    "$InputSize" -> 128, "$InputDimensions" -> {128}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{784, 
                    128}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{784}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {784}, "$OutputSize" -> 784, 
                    "$InputSize" -> 128, "$InputDimensions" -> {128}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "8" -> 
                    Association[
                    "Type" -> "Reshape", "Arrays" -> Association[], 
                    "Parameters" -> Association["Dimensions" -> {1, 28, 28}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "8", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]]]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"image\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{"\"random\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"], "", "", "", ""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.739646682588168*^9},
 CellLabel->
  "Out[120]=",ExpressionUUID->"30e3bc1c-9610-4895-abf7-fd04c6d59fd1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["%102"], "Input",
 NumberMarks->False,
 CellLabel->
  "In[103]:=",ExpressionUUID->"655b4940-67a3-48a6-80ca-1f7a40eb3712"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = True}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["6", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}, "RowsIndexed" -> {}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], 
                    
                    LineBox[{{-6., 3.6739403974420594`*^-16}, {-5., 
                    3.061616997868383*^-16}}], 
                    
                    LineBox[{{-5., 3.061616997868383*^-16}, {-4., 
                    2.4492935982947064`*^-16}}], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQEiBziLb+5fz7/N5snEqTurzgkfyOM1N118aMV+
Z9+N0z5MET7AsX5N8K3Du/bLGgVPTwwWPlCwZ6bo2clH9+c7VO8+yyl8QObT
9Akex87tt67QZDbdIXTAvSbj7PqaK/ubbsbmTY8TOnA/XUmqU+zWfqcUib9f
/ggeeHvXRjxC4sH+GonI9b6TBQ9I2Zi3Tkp9vN/gm3zrQkXBA5V+DNc/f3q2
f4ZS5+ST9wUOhE4OFbW/+WJ/xWIX/9+zBA6cawn1CWl7tf9MRdAOs2CBAw+U
GGqMf73eP3XRpnPVHAIHenJDl9wxebt/heMplaml/AeupIQe9Td7t1/g+WU2
tyt8B7ZzMNzv+fduf4ppkzOXLt8Bk8jQj5N73+9fonP11sN63gPeYaF/Uh6/
33/2DAjwHPj3HwTe709/8+jreWmeA3+g/F+JE40+lHDD5Vt0bzTp3uA68B/K
Z/Hf/qzdlQsuX31ML+7/Hk44/9Vku5eT7RB8sPJTHHD+GgN1K5EEBB8SXwg+
ADARBK0=
                    "]], 
                    
                    LineBox[{{-3., -0.9999999999999998}, {-2., \
-0.9999999999999999}}], 
                    
                    LineBox[{{-4., 2.4492935982947064`*^-16}, {-3., 
                    1.8369701987210297`*^-16}}], 
                    
                    LineBox[{{-4., 1.0000000000000002`}, {-3., 
                    1.8369701987210297`*^-16}}], 
                    LineBox[{{-3., 
                    1.8369701987210297`*^-16}, {-2., -0.9999999999999999}}], 
                    
                    LineBox[{{-2., -0.9999999999999999}, {-1., \
-0.9999999999999999}}], 
                    
                    LineBox[{{-1., -0.9999999999999999}, \
{-6.123233995736766*^-17, -1.}}]}, {
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-5.4, 
                    3.3065463576978537`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736762*^-17}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-4.4, 
                    2.694222958124177*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-3.8128207114948767`, \
-0.9773027452952465}, {-0.25, 0}, 
                    Offset[8], {0.08165695756016156, -0.01745942669596412}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-2.4000000000000004`, \
-0.9999999999999998}, {-0.25, 0}, 
                    Offset[8], {1., -1.1102230246251565`*^-16}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-3.4, 
                    2.0818995585505003`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-3.4, 
                    0.40000000000000024`}, {-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-2.4000000000000004`, \
-0.5999999999999998}, {-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-1.4, -0.9999999999999998}, \
{-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-0.4000000000000001, -1.}, \
{-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999999, -1.1102230246251565`*^-16}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], 
                    StyleBox[{
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-6., 3.6739403974420594`*^-16}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-5., 3.061616997868383*^-16}], 
                    Offset[{12, 12}, {-5., 3.061616997868383*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, ImageMargins -> 
                    0., ImagePadding -> 0, ImageSize -> 16, PlotRange -> All, 
                    PlotRangePadding -> 1], {-5., 3.061616997868383*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"enc\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "6", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["enc", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[6]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-4., 2.4492935982947064`*^-16}], 
                    Offset[{12, 12}, {-4., 2.4492935982947064`*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, ImageMargins -> 
                    0., ImagePadding -> 0, ImageSize -> 16, PlotRange -> All, 
                    PlotRangePadding -> 1], {-4., 2.4492935982947064`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"expSd\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["expSd", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[2]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-3., -0.9999999999999998}], 
                    Offset[{10, 10}, {-3., -0.9999999999999998}]]}, 
                    InsetBox[
                    GraphicsBox[
                    
                    GraphicsComplexBox[{{0.1, 0}, {-0.3, 1}, {0.5, 1}, {
                    1.3, 1}, {0.9, 0}}, {{
                    Opacity[0.2], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    RGBColor[0.33, 0.33, 0.33], 
                    AbsolutePointSize[3.5], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 
                    18], {-3., -0.9999999999999998}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"mn\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"LinearLayer", "[", 
                    RowBox[{
                    RowBox[{"{", "8", "}"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "128"}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["mn", Bold], 
                    Style[
                    HoldForm[
                    LinearLayer[{8}, "Input" -> 128]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-2., -0.9999999999999999}], 
                    Offset[{10, 10}, {-2., -0.9999999999999999}]]}, 
                    InsetBox[
                    StyleBox[
                    "\"+\"", StripOnInput -> False, FontSize -> 
                    14], {-2., -0.9999999999999999}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"z\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"TotalLayer", "[", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"8", ",", "8"}], "}"}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["z", Bold], 
                    Style[
                    HoldForm[
                    TotalLayer["Inputs" -> {8, 8}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-3., 1.8369701987210297`*^-16}], 
                    Offset[{10, 10}, {-3., 1.8369701987210297`*^-16}]]}, 
                    InsetBox[
                    StyleBox[
                    "\"\[Times]\"", StripOnInput -> False, FontSize -> 
                    14], {-3., 1.8369701987210297`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"sdEpsilon\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{"Times", ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"8", ",", "8"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["sdEpsilon", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[Times, "Inputs" -> {8, 8}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-4., 1.0000000000000002`}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"random\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["random", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-1., -0.9999999999999999}], 
                    Offset[{12, 12}, {-1., -0.9999999999999999}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, ImageMargins -> 
                    0., ImagePadding -> 0, ImageSize -> 16, PlotRange -> All, 
                    PlotRangePadding -> 1], {-1., -0.9999999999999999}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"dec\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "8", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["dec", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[8]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-6.123233995736766*^-17, -1.}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, FontSize -> 10]}, {
                    StyleBox[{
                    InsetBox["\"Input\"", 
                    Offset[{0, -7}, {-6., 3.6739403974420594`*^-16}], {0, 1.},
                     Automatic, {1, 0}], 
                    InsetBox["\"enc\"", 
                    Offset[{0, -15}, {-5., 3.061616997868383*^-16}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"expSd\"", 
                    Offset[{0, -15}, {-4., 2.4492935982947064`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox["\"mn\"", 
                    Offset[{0, -13}, {-3., -0.9999999999999998}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"z\"", 
                    Offset[{0, -13}, {-2., -0.9999999999999999}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"sdEpsilon\"", 
                    Offset[{0, -13}, {-3., 1.8369701987210297`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox["\"random\"", 
                    Offset[{0, -7}, {-4., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"dec\"", 
                    Offset[{0, -15}, {-1., -0.9999999999999999}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"Output\"", 
                    Offset[{0, -7}, {-6.123233995736766*^-17, -1.}], {0, 1.}, 
                    Automatic, {1, 0}]}, StripOnInput -> False, FontColor -> 
                    GrayLevel[0.5]], 
                    StyleBox[{
                    InsetBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{3.3677786976552195`*^-16, 5.5}, {-5.4, 
                    3.3065463576978537`*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736762*^-17}], 
                    InsetBox[
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"128\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-4.4, 
                    2.694222958124177*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"128\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{1.1499858073915705`, 
                    5.378432173300873}, {-3.8128207114948767`, \
-0.9773027452952465}], {0., -0.17}, Automatic, {
                    0.977896758781977, -0.20908832861664917`}], 
                    InsetBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{6.106226635438361*^-16, 
                    5.5}, {-2.4000000000000004`, -0.9999999999999998}], {
                    0., -0.17}, Automatic, {1., -1.1102230246251565`*^-16}], 
                    InsetBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-3.4, 
                    2.0818995585505003`*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{3.889087296526011, 3.889087296526011}, {-3.4, 
                    0.40000000000000024`}], {0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{3.889087296526011, 
                    3.889087296526011}, {-2.4000000000000004`, \
-0.5999999999999998}], {0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], 
                    Offset[{0., 5.5}, {-1.4, -0.9999999999999998}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{6.106226635438362*^-16, 
                    5.5}, {-0.4000000000000001, -1.}], {0., -0.17}, 
                    Automatic, {1., -1.1102230246251568`*^-16}]}, 
                    StripOnInput -> False, FontSize -> 8, FontWeight -> 
                    "Thin", FontColor -> GrayLevel[0.7]]}, {
                    EdgeForm[{
                    GrayLevel[0.5], 
                    Thickness[Large], 
                    Dashing[{0, Small}]}], 
                    FaceForm[None], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    Part[{{-6., 3.6739403974420594`*^-16}, {-5., 
                    3.061616997868383*^-16}, {-4., 
                    2.4492935982947064`*^-16}, {-3., -0.9999999999999998}, \
{-2., -0.9999999999999999}, {-3., 1.8369701987210297`*^-16}, {-4., 
                    1.0000000000000002`}, {-1., -0.9999999999999999}, \
{-6.123233995736766*^-17, -1.}}, NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 24, 24, 20, 20, 20, 8, 24, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, AspectRatio -> Full, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    ImagePadding -> {{28., 28.}, {28.99999999999999, 18.}}, 
                    ImageSize -> {386., 157.}, PlotRangePadding -> 0], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "enc"], 
                    NeuralNetworks`NetPath["Nodes", "expSd"], 
                    NeuralNetworks`NetPath["Nodes", "mn"], 
                    NeuralNetworks`NetPath["Nodes", "z"], 
                    NeuralNetworks`NetPath["Nodes", "sdEpsilon"], 
                    NeuralNetworks`NetPath["Inputs", "random"], 
                    NeuralNetworks`NetPath["Nodes", "dec"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, NeuralNetworks`RealT],
                     "random" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    Association["Output" -> NetDecoder["Image", 
                    Association[
                    "ColorSpace" -> "Grayscale", "MeanImage" -> None, 
                    "VarianceImage" -> None, "$Dimensions" -> {28, 28}, 
                    "$Channels" -> 1], 
                    
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], 
                    Association[
                    "enc" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{128, 
                    784}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {128}, "$OutputSize" -> 128, 
                    "$InputSize" -> 784, "$InputDimensions" -> {1, 28, 28}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{128, 
                    128}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {128}, "$OutputSize" -> 128, 
                    "$InputSize" -> 128, "$InputDimensions" -> {128}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "mn" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{8, 128}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{8}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {8}, "$OutputSize" -> 8, 
                    "$InputSize" -> 128, "$InputDimensions" -> {128}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], 
                    "expSd" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{8, 
                    128}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{8}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {8}, "$OutputSize" -> 8, 
                    "$InputSize" -> 128, "$InputDimensions" -> {128}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 0.5, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], 
                    "sdEpsilon" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], "z" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], 
                    "dec" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{128, 
                    8}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {128}, "$OutputSize" -> 128, 
                    "$InputSize" -> 8, "$InputDimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{128, 
                    128}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {128}, "$OutputSize" -> 128, 
                    "$InputSize" -> 128, "$InputDimensions" -> {128}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{784, 
                    128}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{784}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {784}, "$OutputSize" -> 784, 
                    "$InputSize" -> 128, "$InputDimensions" -> {128}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "8" -> 
                    Association[
                    "Type" -> "Reshape", "Arrays" -> Association[], 
                    "Parameters" -> Association["Dimensions" -> {1, 28, 28}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "8", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]]]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"image\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{"\"random\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"], "", "", "", ""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    ImageSizeCache -> {304., {22.75, 28.75}}, 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}, "RowsIndexed" -> {}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7396465003542356`*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"59ab936e-d289-4708-aafd-b8ae01e9efe5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generating", "Subsection",
 CellChangeTimes->{{3.739646118558402*^9, 
  3.739646127619317*^9}},ExpressionUUID->"2a188410-2540-4cfd-b762-\
b5b3e6ba0374"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pureWhiteImageData", " ", "=", " ", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"1.0", ",", 
     RowBox[{"28", "*", "28"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"newImage", " ", "=", " ", 
  RowBox[{"trainedVae", "[", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<random\>\"", "\[Rule]", 
      RowBox[{"First", "@", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "nlatent"}], "}"}]}], "]"}]}]}], ",", 
     "\[IndentingNewLine]", "\t\t", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", 
      RowBox[{"ArrayReshape", "[", 
       RowBox[{"pureWhiteImageData", ",", " ", 
        RowBox[{"{", 
         RowBox[{"1", ",", "28", ",", "28"}], "}"}]}], "]"}]}]}], "|>"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.7396457684933586`*^9, 3.739645778227761*^9}, {
   3.7396458241028724`*^9, 3.7396458796974587`*^9}, {3.739646045256716*^9, 
   3.739646090525081*^9}, {3.739646131275936*^9, 3.739646144087335*^9}, {
   3.7396462320989513`*^9, 3.739646256418172*^9}, {3.7396463003376403`*^9, 
   3.7396463216834593`*^9}, {3.7396464449774623`*^9, 3.7396464524496183`*^9}, 
   3.7396465119526854`*^9, {3.739650975049708*^9, 3.7396509789702554`*^9}},
 CellLabel->
  "In[139]:=",ExpressionUUID->"b9810408-eec2-4e6e-bc82-b51ac6a95600"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJwtWAlcT2kXvlJoMhVqMh/pn2TLki0hdWmxa5S04qZiJkuDCmO7zCg+y1gz
ielOzD9LtjTDmKFbUUiMJkn6zB3DWJpUpCjy+T9P/X51u/e9933Pec5znnPe
135OjN9cI0EQlrb78McvfNmYJUvCV/i3MdxEhS9wGRplGOza8vvhRwx2b5tn
+CehysRw1aZueJ374SrPvG9kuJcDTATDVefoj6u8P9AU71u4m+P96Hh8L2b1
xHMxxJr3D8reGeZRdV5Whnt1Uc+PMc/Tx7gKTs8wv1buaGa4Sg6fdsD8J/55
g++mtLfE/S4LXu9UNOG54+PW+E5tgL1q0ZJ2hqtSXWyBeXfcbY/7yedhr1rS
g/79cITzziqH3fKXJrBDCtzJdXfsw3yy00M81y5JrfBdp8PPDd8JxXGtaO8+
Y/j3c5oJ/b74HvNeTiZefQ/CX6liJnGquQb7peZw+KmO82rEfNoeZazhWpb4
EZ4/Sn5reK5kxmFcDSnE/ILNW6wn755QgefP6+sNV8nUvA3WP3TrpeFefNEG
uOiOtYb/uk1f1hie69yP43vh48JOeO6aATuFzLa00/l6M94bGIj1xQQf+Kn4
OsAueVlAR7yXVf0C76mdH8MO84FPwZOcMtihzolGvLXnEtaVf9wM3OXrURiX
7FYAV7nIHvYLlhPAMyHgzgNcl99GvISkebRvrkMl/BzYB3bKh/v+i3kzD8Be
TR96G3Z0tic+DVYNwO/ga4xL88eDL4IQlGrAWXExeYj7s5MZz8mN5OGZjYyn
SSzs1GW+r8M6AVmMX5sTLXzTyKcxizG/qFnjuXTTCTgJn3vhO6XnBvr32xx8
rxpHwA4pM5RX50KsJ320HjxU9zohXsI9e6wvZN0iTu9mA3dxeBh547YJPJdH
98jBPMIY5p9rK1wVtxjET9v1mPwOjEK8pcQm2KeZtMW6OksP8qv7Mswv9P6W
fmXcxfry8rmIvziEeazOcKM9J+/ehN+2AYzPgizy9o8+9DcoRjPgrG3qBTvU
5ePAe91qD+SdGBxKPnQKYz7o28M+xb8z/NJO+8EebZIV8/VJXS2+0/fDVXiZ
Sv+jbWGfFFIPP3TBvlhfs4wjDyuLYJ+YPhrryls7QxfE81c4fjWW/K4bjHiJ
1q+Br3JuEv2vuEX/h35PXoVsQJzV9a7wS056hXipCQXARUyjjsnDh4P/8ux6
5oFTG+CjpGzhenuq4JfOfTryWvr7K/KhsAY4aGvN4Z90IQV6ItTlE+fAtdSB
26OOwd5F5zEuqW2Rj5r9wGrg7fM58k5yj4Q/2g+vwHOx4RvYKxa8oJ6JC5nX
k04jX+SqMq7z9VvyIjYZ/iq7dkEXdaFm1NULPuCJtDqbet3+HewV9ueTb8tD
wHdN6E5dzzGFndqSZurqp5cQX9VoDOepOlSM+DnGcJ6s3q+QP9c2Ia+F1CLG
re4z5L34fCbsEcZspR+H1nDeNfNgj873AcbVg/pC+LWyLdaT+z/Ecy1vLuIt
PXtHPZv4EnYqXVPJg0Qv6t/hrRy3DmM+vr6K+YVha2nP9TPUUxcPfKfFZLOu
nd7CfL0XST0ZFEVezGVdE9e5wW/xhsQ4F1wwZV5tA0+V3GGsk5lN/D5vCPN1
8jZr3B8tIN+n/E2/b2djfaGxjHUtxoF1KCYKfugmngUfxCsKde7gz8S96Tva
EWoBv+SX+/G9MMgFPJG7GNcw37qzvjbowQchfif4Jwcu5f2cJ8RNtCIeHcw5
n+105vkSD/gnTY5+gu+mCcRDa00cp+cBB11pMvuK0+GsQ623wQ95Xh3yWlaf
oM5I61w4TyLrupJizDxM8ibvum2APaqFHfgtRWyn/l9IoU6aZlDnBl0k//Uj
qBPZE+i3iRnz9v5I2KVWuwMXzb8t8d4bx7y9IlGPlVNYV7e/ivH8TQQv5UQr
4uv+XUuc/Fp46EleFbT0ORX2HI9dg7hqLp6s2/8cpb71X087Uyqhl+r4YvYl
Zntgt1pwEvkibTenX+Oi8b6uoQeeC7YDgJ8S95T4TH6BdeQ7r6nbrhOBj+IR
zzztEsH4eWSwfqezPojiRsa7T9ozPG+eD5wE3XLoi3qs7n8G3RdLSxE/wTeM
epnbUucfj0e8pafp1NP4iX9hvWNmuIrG1xin1+3hl256PvRQWJiRhveqHaj7
45+AV8r6JvgnGiUSh/kb0UeI40cBH3XIWMbf6Dze1yJGUWe/WQAcBe09+6aZ
bsBFybuDfkZc+ns51vs1m/n6SX/a+0sI/WqlR5+i9NIzfsmNWEdcGEweDWXc
dPWWtxjPa+xDzonky6jLsFO3dD77ArP7wEU12VyA90eVATfZobAQeFbm0L5p
NuThqibqXrex+YZxeUUD9ePpea5jUYS8F6wcqOeLWzEvC1PwXGrbjTh2PUp+
TH7I/MsdSb7azSIfszvTvpvktXp/KuvczRPMk91bq9BP1QVVwZ+UR9wfpB0h
Ty0z4IfoaIP6ItqZcnyaGfcFKengjc7ZEXkp+rvSnq2Xcg3zCk23MY8ydgH5
n5ZNv40bbuC9zf2oC/URjHPQcObdbG/UE9lmIf3+15v9y71I9i/mX7MuZvjd
Ax4z6I9Q8T4P8w6No87bhcIeXfoT6tLqUtadkc/YtyyxoQ6dF5An6sYa9oMr
jmFdrfpb4ny5ljraw5f8tmxNnRhgxvpp9YA6Nu0s91sbVqHPkabms295exm6
J9ofZf80/ifakZ7Ovu2T+cBXNU5gHBuf0t+9VeTj7aPYFwhXOzOvc8LIo8x4
8jTdpZn9US7tvhsHHMS4M+zfIhMQH11lCnihzB9GHetXR53Re7HuHF5NnFz6
Ek+7qaybeu7zNKcTzMNrvdinJonUn0V9qS8Wb1jnRF/m8SD2hep0D/J4/XrG
/5tVjOuIWu4ri22Bl26EKfogpX0y708vZzyGl3J/ZvIx/UiPJI4JAcy74/fY
RwXZ8j73M+ZbwyLWr1Vp4JmY6s664qBw/9NrJvnnOYl+fxpBXrxxo25/1J92
x94g3gn5TaybA8yp6wJ55st+UKmPoo4utIX/6r4K1pWF/+X46liso7VSoN9K
5Ub2xzXh7DseRhP3+KnU6aNTfodf+wqYh+ID6nHPm9x3xBdzn/XFVeI/Yjtx
GjOKfXCoI/u9rt2Jw54v4Jf66Cz2T2o4dUI5Fck+eRj1Uph6nfpr/wf7aJ/x
56FTdV25nt8qK9rpzTgmOZNPf9pyXx/0BevY1efsO55tZz80JJV93fUixrU0
gPv9jjdwFdPd6edBxk2bNwRxErfMYz9rGst6llCJdcQdl+iPUM08CAmgPu83
og7qyRvVo5F1onMJ+Z4aTf1eHEO9KboFPRI7yqhjinMS9dvVGPsz1fsK+d/J
m3Wi16/Yz4pnHblP+/Vn1qNyE/L/zV/kfdfR7IdnidTHzEqsq3xmxvobKZUi
r30u0r7Np2hvgR3xyvHHfIrFHPYHJ5cxvo/1HH8UQX375xbySBodzT62YwfY
I/amfmt3zjAv0tqgPipJShns33SA/f6K3Xw/eQfrhu9E1nvjYOpOUyP3McvP
Ug9fbmPfMEDjvDlN0C8tuZz7v26pnGf1UNbXH3fCPyWhlv3wG+7D1bdJrE9V
K1n/3BLIe5ta8vPkV4y/93PyZlsJ+94BD/m+TRXyRfJ7BTtkoxvMr9ZzifvA
/fTLNZBx61LMvrXndfJ6bAh1r7qZ5yDxPoyTcQzzsn40z4mWjYb/4qs65seQ
VqwDg7v+ibxI/Yn+/nuDedE7A/NKRz157jDCuqUP88T3inMG+2mvPM5/6gTq
g1A4j+tuWst6uOMq9xPJO6lH1uuIw2FL6vLaZPaxu66RFxdbzj/s8qGf6oEZ
xCvmAscPlQEPrSie+7oVNTxf6+TN/rt5GPv54BT2Y4HfU7/GLsa+TRexhPuz
kjDqZe048FjnN4j9lZzK7/uupD6fDCCPZtxgvN7F81xsHPt3uYL7EmlwP9aF
7ons77LG8NxmUnzLuV876kF4LfM1Ko99jNVI6khf8k24eQd2CrWe1AG//niu
23KB50n311M3JnTk+KLB5FuFNfXvl3Wsu/kHuB/a8QnnPaXpcW/ah3Ut8gjj
dsIfuiTqnyEeWvli6rxe5v7nssp6nhfG/snrKuOWd4TzlrtQpzptIS8z92xF
vxhkxP3DxHOM++sqnnNlONHeiFfEc8Jv5OFNV/L2oH2LjlBP1IPBxFuKYr1o
7M3+qYL7d6G5H/F7ybwQji9l3z67hrydWM68WunJdUs61bNev4e+ifbv2E/7
fE0eZW/k+dl1E+qr1WDOH5UOXKSQGcgDrcSVPG5XyX530lbibrmS5xWn7Wif
vy11YK8z6/m6kRzPIz7SAB3rlM8Q+C/c+w/70eM2XHfHI+qWfw755aHQj68m
Id+Umi/Js9ux9Lu/O89JHHKZf1nDWN/v8BxLl25H/SspJV4HvmMe9y2mH85d
2Oee09P/44ncr2fUMH9iAoibEky9uCfyPOPuQOZZWAH1qwPPvzS3Js5TYolz
IfkI8RYtc3GvBa2lXqw70nI+vZu6eu4ydFP4PJD9txjE+rjGk7zLucK6OyWV
edjnLc/Pf1eYxz0zuD/Y4MQ8C53LfP6zB8+lvJKpF1MKWD88Zhnn/R8KmJ2L

    "], {{0, 28}, {28, 0}}, {0., 1.},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag["Real", ColorSpace -> "Grayscale", Interleaving -> None],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{282., Automatic},
  ImageSizeRaw->{28, 28},
  PlotRange->{{0, 28}, {0, 28}}]], "Output",
 CellChangeTimes->{{3.739646091291886*^9, 3.7396460972277794`*^9}, {
   3.7396461346804166`*^9, 3.7396461445111775`*^9}, {3.739646232718531*^9, 
   3.739646256884614*^9}, 3.7396463223117824`*^9, {3.7396464385560865`*^9, 
   3.739646452786436*^9}, {3.739646508164813*^9, 3.739646519336656*^9}, {
   3.7396509621202383`*^9, 3.739650979470257*^9}},
 CellLabel->
  "Out[140]=",ExpressionUUID->"1ce912ea-1e42-4309-9e66-e3349641db73"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test Ground", "Section",
 CellChangeTimes->{{3.7395514835995884`*^9, 
  3.739551487936183*^9}},ExpressionUUID->"8cb255c6-e198-432c-bcb4-\
a09c4f1145ee"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"a", " ", "=", " ", 
  RowBox[{"NetDecoder", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<Image\>\"", ",", " ", "\"\<Grayscale\>\""}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"b", " ", "=", " ", 
  RowBox[{"NetEncoder", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<Image\>\"", ",", " ", 
     RowBox[{"{", 
      RowBox[{"28", ",", "28"}], "}"}], ",", " ", "\"\<Grayscale\>\""}], 
    "}"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.73964627061879*^9, 3.7396462864776597`*^9}, {
  3.739646370780693*^9, 3.739646383493784*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"216453e6-ca3d-4ef4-bff5-4e2813f0fc08"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetDecoder", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      PanelBox[
       GridBox[{{
          GridBox[{{
             StyleBox[
              TemplateBox[{"\"Type\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox["\"Image\"", "SummaryItem"]}, {
             StyleBox[
              TemplateBox[{"\"Color space\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox["\"Grayscale\"", "SummaryItem"]}, {
             StyleBox[
              TemplateBox[{"\"Mean image\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox["None", "SummaryItem"]}, {
             StyleBox[
              TemplateBox[{"\"Variance image\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox["None", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
           GridBoxAlignment -> {
            "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
        GridBoxAlignment -> {"Rows" -> {{Top}}}, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}], 
       BaselinePosition -> Baseline, 
       BaseStyle -> {
        ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
         3, ShowSyntaxStyles -> False}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetDecoder[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7396462867432675`*^9, 3.739646383885127*^9},
 CellLabel->"Out[86]=",ExpressionUUID->"597e7de7-e47f-488e-9107-8f808e8142cf"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetEncoder", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      PanelBox[
       GridBox[{{
          GridBox[{{
             StyleBox[
              TemplateBox[{"\"Type\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox["\"Image\"", "SummaryItem"]}, {
             StyleBox[
              TemplateBox[{"\"Image size\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox[
              RowBox[{"{", 
                RowBox[{"28", ",", "28"}], "}"}], "SummaryItem"]}, {
             StyleBox[
              TemplateBox[{"\"Color space\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox["\"Grayscale\"", "SummaryItem"]}, {
             StyleBox[
              TemplateBox[{"\"Color channels\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox["1", "SummaryItem"]}, {
             StyleBox[
              TemplateBox[{"\"Mean image\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox["None", "SummaryItem"]}, {
             StyleBox[
              TemplateBox[{"\"Variance image\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox["None", "SummaryItem"]}, {
             StyleBox[
              TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox[
              TemplateBox[{"\"3-tensor\"", "\" \"", 
                StyleBox[
                 
                 TemplateBox[{
                  "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                   "\" \"", 
                   
                   TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                  "RowDefault"], 
                 GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
              "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
           GridBoxAlignment -> {
            "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
        GridBoxAlignment -> {"Rows" -> {{Top}}}, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}], 
       BaselinePosition -> Baseline, 
       BaseStyle -> {
        ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
         3, ShowSyntaxStyles -> False}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetEncoder[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7396462867432675`*^9, 3.739646383900716*^9},
 CellLabel->"Out[87]=",ExpressionUUID->"d1c1149c-1f3e-4d25-8453-398750445764"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "[", 
  RowBox[{"ArrayReshape", "[", 
   RowBox[{
    RowBox[{"ConstantArray", "[", 
     RowBox[{"0.5", ",", 
      RowBox[{"28", "*", "28"}]}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", "28", ",", "28"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7396459677435527`*^9, 3.739645978571994*^9}, {
  3.7396460679306936`*^9, 3.739646072385008*^9}, {3.7396461562435613`*^9, 
  3.739646170150709*^9}, {3.739646217674387*^9, 3.739646252478238*^9}, {
  3.739646289836887*^9, 3.7396462935395536`*^9}, {3.739646431071356*^9, 
  3.7396464324476624`*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"77a3d246-4ba2-4719-8c73-74f4892462b6"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztyUEKQFAUBdCfgSzCxB5kKltgBV8xUuobyG4tBbEEw/Pq3tPtVePaz1kI
YSvu6uPepRSPIX/GFJemnp5n+eW9syVJkiRJkiRJkvzLCwbOd1Q=
    "], {{0, 28}, {28, 0}}, {0., 1.},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag["Real", ColorSpace -> "Grayscale", Interleaving -> None],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{28, 28},
  PlotRange->{{0, 28}, {0, 28}}]], "Output",
 CellChangeTimes->{{3.7396459718696184`*^9, 3.739645978899598*^9}, 
   3.7396460727546277`*^9, {3.7396461580090246`*^9, 3.739646170572424*^9}, {
   3.7396462142122064`*^9, 3.7396462529615793`*^9}, {3.739646290262314*^9, 
   3.7396462939285192`*^9}, {3.739646425384534*^9, 3.7396464328848705`*^9}},
 CellLabel->"Out[95]=",ExpressionUUID->"c9cc56fb-dfbe-45e2-aa40-96b58c53c4ba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"b", "[", 
  RowBox[{"First", " ", "@", " ", "mnistDigits"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"a", "[", "%", "]"}]}], "Input",
 CellChangeTimes->{{3.7396459334309883`*^9, 3.739645961385113*^9}, {
  3.7396461819817514`*^9, 3.739646201774161*^9}, {3.739646329765486*^9, 
  3.739646416102643*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"67c62aa0-7153-4db5-a1c4-690aab0bd398"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "0.800000011920929`", ",", 
      "0.3764705955982208`", ",", "0.007843137718737125`", ",", 
      "0.3764705955982208`", ",", "0.8039215803146362`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "0.8117647171020508`", ",", 
      "0.06666667014360428`", ",", "0.0117647061124444`", ",", 
      "0.0117647061124444`", ",", "0.0117647061124444`", ",", 
      "0.07058823853731155`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "0.7882353067398071`", ",", "0.10980392247438431`", ",", 
      "0.007843137718737125`", ",", "0.0117647061124444`", ",", 
      "0.062745101749897`", ",", "0.08627451211214066`", ",", 
      "0.0117647061124444`", ",", "0.7764706015586853`", ",", 
      "0.9764705896377563`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "0.9607843160629272`", ",", "0.7647058963775635`", ",", 
      "0.12156862765550613`", ",", "0.0117647061124444`", ",", 
      "0.007843137718737125`", ",", "0.0117647061124444`", ",", 
      "0.2078431397676468`", ",", "0.6705882549285889`", ",", 
      "0.0117647061124444`", ",", "0.007843137718737125`", ",", 
      "0.5215686559677124`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "0.3607843220233917`", ",", "0.0117647061124444`", ",", 
      "0.0117647061124444`", ",", "0.0117647061124444`", ",", 
      "0.007843137718737125`", ",", "0.0117647061124444`", ",", 
      "0.0117647061124444`", ",", "0.6235294342041016`", ",", 
      "0.25882354378700256`", ",", "0.007843137718737125`", ",", 
      "0.3450980484485626`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "0.800000011920929`", 
      ",", "0.06666667014360428`", ",", "0.007843137718737125`", ",", 
      "0.007843137718737125`", ",", "0.2549019753932953`", ",", 
      "0.5529412031173706`", ",", "0.007843137718737125`", ",", 
      "0.10588235408067703`", ",", "0.8156862854957581`", ",", 
      "0.6901960968971252`", ",", "0.`", ",", "0.34117648005485535`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "0.8117647171020508`", ",", 
      "0.06666667014360428`", ",", "0.0117647061124444`", ",", 
      "0.0117647061124444`", ",", "0.2980392277240753`", ",", 
      "0.9529411792755127`", ",", "0.7058823704719543`", ",", 
      "0.5254902243614197`", ",", "0.9176470637321472`", ",", "1.`", ",", 
      "1.`", ",", "0.007843137718737125`", ",", "0.0470588244497776`", ",", 
      "0.8039215803146362`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "0.8509804010391235`", ",", 
      "0.3529411852359772`", ",", "0.007843137718737125`", ",", 
      "0.08627451211214066`", ",", "0.18431372940540314`", ",", 
      "0.6705882549285889`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "0.007843137718737125`", ",", 
      "0.0117647061124444`", ",", "0.3529411852359772`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "0.9725490212440491`", ",", "0.3019607961177826`", ",", 
      "0.0117647061124444`", ",", "0.05882352963089943`", ",", 
      "0.7215686440467834`", ",", "0.9254902005195618`", ",", 
      "0.8901960849761963`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "0.007843137718737125`", ",", 
      "0.0117647061124444`", ",", "0.23529411852359772`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "0.7764706015586853`", ",", "0.0117647061124444`", ",", 
      "0.0117647061124444`", ",", "0.7529411911964417`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "0.007843137718737125`", ",", 
      "0.0117647061124444`", ",", "0.23529411852359772`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "0.2235294133424759`", ",", "0.007843137718737125`", ",", 
      "0.2549019753932953`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "0.`", ",", "0.007843137718737125`", ",", "0.23137255012989044`", 
      ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "0.7019608020782471`", ",", "0.03529411926865578`", ",", 
      "0.0117647061124444`", ",", "0.5607843399047852`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "0.007843137718737125`", ",", 
      "0.0117647061124444`", ",", "0.41960784792900085`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "0.6666666865348816`", ",", "0.0117647061124444`", ",", 
      "0.09803921729326248`", ",", "0.9019607901573181`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "0.9725490212440491`", ",", "0.47058823704719543`", ",", 
      "0.007843137718737125`", ",", "0.2705882489681244`", ",", 
      "0.9529411792755127`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "0.6666666865348816`", ",", "0.0117647061124444`", ",", 
      "0.125490203499794`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "0.9725490212440491`", ",", "0.48627451062202454`", ",", 
      "0.0117647061124444`", ",", "0.11764705926179886`", ",", 
      "0.7215686440467834`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "0.6666666865348816`", ",", "0.0117647061124444`", ",", 
      "0.4313725531101227`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "1.`", ",", "0.8117647171020508`", ",", 
      "0.3529411852359772`", ",", "0.0117647061124444`", ",", 
      "0.32156863808631897`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "0.6627451181411743`", ",", "0.007843137718737125`", ",", 
      "0.11764705926179886`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "0.5529412031173706`", ",", 
      "0.06666667014360428`", ",", "0.007843137718737125`", ",", 
      "0.364705890417099`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "0.6666666865348816`", ",", "0.0117647061124444`", ",", 
      "0.0235294122248888`", ",", "0.4274509847164154`", ",", 
      "0.8117647171020508`", ",", "0.886274516582489`", ",", 
      "0.6666666865348816`", ",", "0.3019607961177826`", ",", 
      "0.11764705926179886`", ",", "0.007843137718737125`", ",", 
      "0.125490203499794`", ",", "0.3450980484485626`", ",", 
      "0.7803921699523926`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "0.6666666865348816`", ",", "0.0117647061124444`", ",", 
      "0.0117647061124444`", ",", "0.0117647061124444`", ",", 
      "0.10196078568696976`", ",", "0.1568627506494522`", ",", 
      "0.0117647061124444`", ",", "0.0117647061124444`", ",", 
      "0.0117647061124444`", ",", "0.23137255012989044`", ",", 
      "0.4901960790157318`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "0.8901960849761963`", ",", "0.21960784494876862`", ",", 
      "0.0117647061124444`", ",", "0.0117647061124444`", ",", 
      "0.007843137718737125`", ",", "0.0117647061124444`", ",", 
      "0.0117647061124444`", ",", "0.08627451211214066`", ",", 
      "0.4313725531101227`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "0.9019607901573181`", ",", "0.49803921580314636`", ",", 
      "0.0117647061124444`", ",", "0.007843137718737125`", ",", 
      "0.0117647061124444`", ",", "0.4470588266849518`", ",", 
      "0.8549019694328308`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.739646188899716*^9, 3.739646202118474*^9}, 
   3.739646244180478*^9, {3.739646331071579*^9, 3.7396464164464245`*^9}},
 CellLabel->"Out[91]=",ExpressionUUID->"5fe2eb57-2300-4a03-9a82-09618d20217d"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOmUkqSFIGiiHgg/0oPUqP
0iOKXjBz5ksQrSAhcQNMCwg0IPMP7Nz5cjC4k2T610+IvwQFN0L904GVFhLa
NCjcSyTtYGkJ8ZeMzB60+OqA8jeAaTGxbcjiD27ceAHWb2//fjD4A0Yf2Lfv
HYhuqKgAu09BXn4/mn9Q/Ldg1qxTYPWlpU+xqTuwYcODweAvGK0gLn4db/pD
jz8ozfDl82OwfydMuICiTkzs2mDwF7zcgOUvmPugdEJAANjdBzZufIgiLy29
G0xLSb2C+ucZ1FwweHD16tUB9R+hckNY+DI4/dXVgdPtgmnTwO5/cOECON0l
xMa+xZoOEPG8AhwudC5XHaytX0Pdew0tPYHLiQXTpx9Hzlekmo+RT6H20Npf
wPICXJ4lBAdfRoknObl10Pz3HOyeuXPB8dJQU/OGGv4Dmn+OHv6DldtYyo8X
VA3HAfLfgjlzziDbDys3aGAfGMDsAaaHs7T0V0NZGbhcALYvFiGHK8Onjw9p
kg/Q4u/BrVu3aOm/hNBQ1PpXUnIn2N47d8jKXxj+geZrYDq8h5I+AgMvgsMX
Wv7SzX8CAgeo6i95+fto+W0fmIaWV7TyFy7/LZg9+zZF5kLrTXj9AjN3ypQr
9PAPOu1gavoUJV9Aw5dUc+DtF7R2TkJ4+PWB8BeMxkifEhIzwOLR0beR4yMh
JuYNsnp4PQlLb4h2Gzh9w9uXP39QtX6hgv9QaSmpXWBaROQIPnWwcj4hPv7+
QPoHnYa1Q4D9uDNY3Y+jXwBvr1GaX+lEw+qDB/fv38fnP2A74A40/b4eDO4e
pUfpUZpONACIeg7J
    "], {{0, 28}, {28, 0}}, {0., 1.},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag["Real", ColorSpace -> "Grayscale", Interleaving -> None],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{283., Automatic},
  ImageSizeRaw->{28, 28},
  PlotRange->{{0, 28}, {0, 28}}]], "Output",
 CellChangeTimes->{{3.739646188899716*^9, 3.739646202118474*^9}, 
   3.739646244180478*^9, {3.739646331071579*^9, 3.7396464164464245`*^9}},
 CellLabel->"Out[92]=",ExpressionUUID->"bdd57797-6397-412b-92ae-4e5717c64fd7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomVariate", "[", 
  RowBox[{
   RowBox[{"NormalDistribution", "[", "]"}], ",", "nlatent"}], "]"}]], "Input",
 CellChangeTimes->{{3.7395514835995884`*^9, 3.7395515761183033`*^9}, {
  3.7395553679723654`*^9, 3.739555372051862*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"ce1618ae-157d-4bbc-956c-d07e5a884f1a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1.1500749388821876`"}], ",", 
   RowBox[{"-", "1.0895390325304017`"}], ",", "0.611584971678216`", ",", 
   RowBox[{"-", "0.4643912233589231`"}], ",", 
   RowBox[{"-", "0.35339602460989245`"}], ",", 
   RowBox[{"-", "0.8399505035812386`"}], ",", "1.1450024092869175`", ",", 
   RowBox[{"-", "1.7747706063630981`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.739555372451578*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"a34444bf-85ce-4679-b810-1bf8e6d4d9d5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetChain", "[", 
  RowBox[{"{", 
   RowBox[{"8", ",", " ", 
    RowBox[{"ElementwiseLayer", "[", 
     RowBox[{
      RowBox[{"#", "*", "0.5"}], "&"}], "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7395503880041895`*^9, 3.739550398609557*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"0de0b708-e4c7-4aae-ba9c-6fc372259861"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, BaseStyle -> GrayLevel[0.6], 
                 ImageMargins -> 0, ImageSize -> {36, Automatic}, 
                 PlotRangePadding -> 0], 
                StyleBox[
                "uninitialized", LineColor -> RGBColor[0.66, 0, 0], 
                 FrontFaceColor -> RGBColor[0.66, 0, 0], BackFaceColor -> 
                 RGBColor[0.66, 0, 0], GraphicsColor -> RGBColor[0.66, 0, 0], 
                 FontFamily -> "Roboto", FontSize -> 8, FontColor -> 
                 RGBColor[0.66, 0, 0], Background -> GrayLevel[1, 0.65]]}, 
               Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"tensor\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}, "RowsIndexed" -> {}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, BaseStyle -> GrayLevel[0.6], 
                 ImageMargins -> 0, ImageSize -> {36, Automatic}, 
                 PlotRangePadding -> 0], 
                StyleBox[
                "uninitialized", LineColor -> RGBColor[0.66, 0, 0], 
                 FrontFaceColor -> RGBColor[0.66, 0, 0], BackFaceColor -> 
                 RGBColor[0.66, 0, 0], GraphicsColor -> RGBColor[0.66, 0, 0], 
                 FontFamily -> "Roboto", FontSize -> 8, FontColor -> 
                 RGBColor[0.66, 0, 0], Background -> GrayLevel[1, 0.65]]}, 
               Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{8, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {8}, "$OutputSize" -> 8, 
                    "$InputSize" -> NeuralNetworks`SizeT, "$InputDimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 0.5, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"tensor\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"0.5`", " ", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False]}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   ImageSizeCache -> {169., {29., 35.}}, 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}, "RowsIndexed" -> {}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7395504005961494`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"ccb29947-de04-493e-8fe6-5f6a6b9d806b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "NetGraph"}]], "Input",
 CellChangeTimes->{{3.7395526841539993`*^9, 3.7395526992318234`*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"2cf0169d-bd9c-48b5-884f-0b62076b158e"],

Cell[BoxData[
 RowBox[{"\<\"\\!\\(\\*RowBox[{\\\"NetGraph\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"layer\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"layer\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{SubscriptBox[StyleBox[\\\"m\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\"\[Rule]\\\", \
SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]]}], \\\",\\\", RowBox[{SubscriptBox[StyleBox[\\\"m\\\", \
\\\"TI\\\"], \\\"2\\\"], \\\"\[Rule]\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\
\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) specifies a \
neural net defined by a graph in which the output of layer \
\\!\\(\\*SubscriptBox[StyleBox[\\\"m\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \\\
\"TI\\\"]]\\) is given as input to layer \\!\\(\\*SubscriptBox[StyleBox[\\\"n\
\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\
\"NetGraph\\\", \\\"[\\\", RowBox[{RowBox[{\\\"\[LeftAssociation]\\\", \
RowBox[{RowBox[{SubscriptBox[StyleBox[\\\"name\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\"\[Rule]\\\", \
SubscriptBox[StyleBox[\\\"layer\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]]}], \\\",\\\", RowBox[{SubscriptBox[StyleBox[\\\"name\\\", \\\"TI\
\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\"\[Rule]\\\", \
SubscriptBox[StyleBox[\\\"layer\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]]}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"\
\[RightAssociation]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{SubscriptBox[StyleBox[\\\"name\\\", \\\"TI\\\"], \
StyleBox[\\\"m1\\\", \\\"TI\\\"]], \\\"\[Rule]\\\", \
SubscriptBox[StyleBox[\\\"name\\\", \\\"TI\\\"], StyleBox[\\\"n1\\\", \
\\\"TI\\\"]]}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\
\\\"}]}], \\\"]\\\"}]\\) specifies a net with explicitly named layers.\"\>", 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/NetGraph"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.739552699899799*^9},
 CellTags->
  "Info633739538299-1323769",ExpressionUUID->"646dcfd2-b7c5-4ed0-ada0-\
4ae05019658e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"LinearLayer", "[", "8", "]"}]], "Input",
 CellChangeTimes->{{3.739552948161874*^9, 3.7395529511883698`*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"e48b707b-c47e-4d16-8acb-7fad2f20b1ee"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"scale", "=", 
  RowBox[{"ConstantTimesLayer", "[", 
   RowBox[{
    RowBox[{"\"\<Scaling\>\"", "\[Rule]", 
     RowBox[{"{", "0.5", "}"}]}], ",", 
    RowBox[{"\"\<Input\>\"", "\[Rule]", 
     RowBox[{"NetEncoder", "[", "\"\<Scalar\>\"", "]"}]}], ",", 
    RowBox[{"\"\<Output\>\"", "\[Rule]", 
     RowBox[{"NetDecoder", "[", "\"\<Scalar\>\"", "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"scale", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7395535354947248`*^9, 3.739553542220421*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"1a1466f4-0e1e-4065-b012-91a2d8a6af48"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ConstantTimesLayer", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[
               
               GraphicsComplexBox[{{0, 0}, {-0.5, 1}, {0.5, 1}, {1.5, 1}, {1, 
                 0}}, {{
                  Opacity[0.3], 
                  LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 4}}]}, {
                  AbsolutePointSize[5], 
                  RGBColor[0.33, 0.33, 0.33], 
                  PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 37], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{"\"Dimensions\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  
                  TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                   "RowWithSeparators"], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"scalar\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[
               
               GraphicsComplexBox[{{0, 0}, {-0.5, 1}, {0.5, 1}, {1.5, 1}, {1, 
                 0}}, {{
                  Opacity[0.3], 
                  LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 4}}]}, {
                  AbsolutePointSize[5], 
                  RGBColor[0.33, 0.33, 0.33], 
                  PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 37], 
              GridBox[{{
                 ItemBox[
                  StyleBox["Parameters", Bold]], 
                 ItemBox[""]}, {
                 StyleBox[
                  TemplateBox[{"\"Dimensions\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  
                  TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                   "RowWithSeparators"], "SummaryItem"]}, {
                 ItemBox[
                  StyleBox["Arrays", Bold], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]], 
                 ItemBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                   "CacheGraphics" -> False], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]]}, {
                 StyleBox[
                  TemplateBox[{"\"Scaling\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 ItemBox[
                  StyleBox["Ports", Bold], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]], 
                 ItemBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                   "CacheGraphics" -> False], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]]}, {
                 StyleBox[
                  TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"scalar\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"scalar\"", "SummaryItem"]}}, 
               BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 3}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ConstantTimesLayer[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.739553536963663*^9, 3.739553542560365*^9}},
 CellLabel->"Out[68]=",ExpressionUUID->"c0dca769-0cf8-465a-8442-8bf2243a7064"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.5`", ",", "1.`", ",", "1.5`"}], "}"}]], "Output",
 CellChangeTimes->{{3.739553536963663*^9, 3.7395535428073683`*^9}},
 CellLabel->"Out[69]=",ExpressionUUID->"aaefcfd2-7d0f-471f-839c-f2558687df55"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"elem", "=", 
  RowBox[{"ElementwiseLayer", "[", 
   RowBox[{
    RowBox[{"#", "*", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "&"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7395551901539154`*^9, 3.739555195664076*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"13a9a81f-ae02-4ad8-876b-99cf6015df85"],

Cell[BoxData[
 TemplateBox[{
  "ElementwiseLayer","invscf",
   "\"\\!\\(\\*RowBox[{RowBox[{\\\"#1\\\", \\\" \\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \\\"3\\\"}], \
\\\"}\\\"}]}], \\\"&\\\"}]\\) could not be symbolically evaluated as a \\!\\(\
\\*RowBox[{\\\"\\\\\\\"unary\\\\\\\"\\\"}]\\) scalar function.\"",2,110,30,
   24697668008397269180,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7395551968783965`*^9},
 CellLabel->
  "During evaluation of \
In[110]:=",ExpressionUUID->"5fd3dd66-724b-4a86-9a8f-0e231285c7e9"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.7395551968949056`*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"d2681ea3-20ae-4ee5-b218-fc0e33d7474a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "*", "{"}]], "Input",
 CellChangeTimes->{{3.7395555758141074`*^9, 
  3.739555578436471*^9}},ExpressionUUID->"fed3c233-4f38-479a-b72d-\
5f5d14bfe5f4"]
}, Open  ]]
},
WindowSize->{1500, 917},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 7, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info633739538299-1323769"->{
  Cell[284054, 5781, 2465, 41, 69, "Print",ExpressionUUID->"646dcfd2-b7c5-4ed0-ada0-4ae05019658e",
   CellTags->"Info633739538299-1323769"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info633739538299-1323769", 296427, 6063}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[583, 22, 163, 3, 53, "Subsection",ExpressionUUID->"a97b6548-7444-4f52-8385-55f7e3aac111"],
Cell[749, 27, 227, 4, 28, "Input",ExpressionUUID->"d8eb4aa3-ea91-4560-a5e4-89e2aa5ad890"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1013, 36, 155, 3, 53, "Subsection",ExpressionUUID->"8fef335a-119a-4684-9c73-4161c696fc69"],
Cell[1171, 41, 1011, 17, 162, "Input",ExpressionUUID->"b61fd62d-6249-4276-95f6-4e6f7dbc912f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2219, 63, 170, 3, 53, "Subsection",ExpressionUUID->"1d510bfb-5494-494c-a291-1cda52559c0d"],
Cell[2392, 68, 1753, 34, 86, "Input",ExpressionUUID->"5ffd5e94-746f-4af8-ba2d-32f494356219"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4182, 107, 159, 3, 53, "Subsection",ExpressionUUID->"b8773a27-cd1e-48ec-8d51-81bf6ff63b4b"],
Cell[4344, 112, 1036, 19, 200, "Input",ExpressionUUID->"edbf0ee2-cf30-4d82-9dab-f9b0c346225e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5417, 136, 170, 3, 53, "Subsection",ExpressionUUID->"0cd985cc-3af6-4533-854e-e0be71215472"],
Cell[CellGroupData[{
Cell[5612, 143, 2614, 56, 333, "Input",ExpressionUUID->"31419281-fdd4-4dbc-8105-f2287a04b63a"],
Cell[8229, 201, 73039, 1459, 88, "Output",ExpressionUUID->"67bb2ab0-2600-4c4a-9b2f-d5fd57fbed65"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[81317, 1666, 308, 5, 53, "Subsection",ExpressionUUID->"4d8708ae-94a3-460d-b70f-ce3a512d387e"],
Cell[81628, 1673, 366, 7, 28, "Input",ExpressionUUID->"a7c64f03-a37b-4ff4-8fa9-4bfc6c4beb84"],
Cell[81997, 1682, 1365, 30, 67, "Input",ExpressionUUID->"bc184bf2-cdcb-4b06-8822-87c061f3da92"],
Cell[CellGroupData[{
Cell[83387, 1716, 866, 15, 48, "Input",ExpressionUUID->"8fceabf9-ec10-47c1-a295-9b3b7892aa3b"],
Cell[84256, 1733, 72201, 1448, 88, "Output",ExpressionUUID->"30e3bc1c-9610-4895-abf7-fd04c6d59fd1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[156494, 3186, 134, 3, 28, "Input",ExpressionUUID->"655b4940-67a3-48a6-80ca-1f7a40eb3712"],
Cell[156631, 3191, 71559, 1437, 256, "Output",ExpressionUUID->"59ab936e-d289-4708-aafd-b8ae01e9efe5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[228239, 4634, 158, 3, 53, "Subsection",ExpressionUUID->"2a188410-2540-4cfd-b762-b5b3e6ba0374"],
Cell[CellGroupData[{
Cell[228422, 4641, 1393, 31, 67, "Input",ExpressionUUID->"b9810408-eec2-4e6e-bc82-b51ac6a95600"],
Cell[229818, 4674, 5502, 95, 332, "Output",ExpressionUUID->"1ce912ea-1e42-4309-9e66-e3349641db73"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[235369, 4775, 158, 3, 67, "Section",ExpressionUUID->"8cb255c6-e198-432c-bcb4-a09c4f1145ee"],
Cell[CellGroupData[{
Cell[235552, 4782, 633, 15, 48, "Input",ExpressionUUID->"216453e6-ca3d-4ef4-bff5-4e2813f0fc08"],
Cell[236188, 4799, 2081, 48, 106, "Output",ExpressionUUID->"597e7de7-e47f-488e-9107-8f808e8142cf"],
Cell[238272, 4849, 3255, 75, 156, "Output",ExpressionUUID->"d1c1149c-1f3e-4d25-8453-398750445764"]
}, Open  ]],
Cell[CellGroupData[{
Cell[241564, 4929, 681, 14, 28, "Input",ExpressionUUID->"77a3d246-4ba2-4719-8c73-74f4892462b6"],
Cell[242248, 4945, 834, 16, 45, "Output",ExpressionUUID->"c9cc56fb-dfbe-45e2-aa40-96b58c53c4ba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[243119, 4966, 408, 8, 48, "Input",ExpressionUUID->"67c62aa0-7153-4db5-a1c4-690aab0bd398"],
Cell[243530, 4976, 15074, 263, 527, "Output",ExpressionUUID->"5fe2eb57-2300-4a03-9a82-09618d20217d"],
Cell[258607, 5241, 1465, 28, 300, "Output",ExpressionUUID->"bdd57797-6397-412b-92ae-4e5717c64fd7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[260109, 5274, 340, 7, 28, "Input",ExpressionUUID->"ce1618ae-157d-4bbc-956c-d07e5a884f1a"],
Cell[260452, 5283, 516, 11, 32, "Output",ExpressionUUID->"a34444bf-85ce-4679-b810-1bf8e6d4d9d5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[261005, 5299, 355, 8, 28, "Input",ExpressionUUID->"0de0b708-e4c7-4aae-ba9c-6fc372259861"],
Cell[261363, 5309, 22451, 462, 88, "Output",ExpressionUUID->"ccb29947-de04-493e-8fe6-5f6a6b9d806b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[283851, 5776, 200, 3, 28, "Input",ExpressionUUID->"2cf0169d-bd9c-48b5-884f-0b62076b158e"],
Cell[284054, 5781, 2465, 41, 69, "Print",ExpressionUUID->"646dcfd2-b7c5-4ed0-ada0-4ae05019658e",
 CellTags->"Info633739538299-1323769"]
}, Open  ]],
Cell[286534, 5825, 211, 3, 28, "Input",ExpressionUUID->"e48b707b-c47e-4d16-8acb-7fad2f20b1ee"],
Cell[CellGroupData[{
Cell[286770, 5832, 667, 15, 48, "Input",ExpressionUUID->"1a1466f4-0e1e-4065-b012-91a2d8a6af48"],
Cell[287440, 5849, 7034, 153, 72, "Output",ExpressionUUID->"c0dca769-0cf8-465a-8442-8bf2243a7064"],
Cell[294477, 6004, 238, 4, 32, "Output",ExpressionUUID->"aaefcfd2-7d0f-471f-839c-f2558687df55"]
}, Open  ]],
Cell[CellGroupData[{
Cell[294752, 6013, 353, 9, 28, "Input",ExpressionUUID->"13a9a81f-ae02-4ad8-876b-99cf6015df85"],
Cell[295108, 6024, 581, 12, 23, "Message",ExpressionUUID->"5fd3dd66-724b-4a86-9a8f-0e231285c7e9"],
Cell[295692, 6038, 161, 3, 32, "Output",ExpressionUUID->"d2681ea3-20ae-4ee5-b218-fc0e33d7474a"]
}, Open  ]],
Cell[295868, 6044, 234, 6, 28, "Input",ExpressionUUID->"fed3c233-4f38-479a-b72d-5f5d14bfe5f4"]
}, Open  ]]
}
]
*)

