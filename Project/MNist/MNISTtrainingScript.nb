(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='WolframDesktop 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       161,          7]
NotebookDataLength[    575427,      11448]
NotebookOptionsPosition[    570025,      11346]
NotebookOutlinePosition[    570398,      11362]
CellTagsIndexPosition[    570355,      11359]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Hyper Parameter", "Subsection",
 CellChangeTimes->{{3.739551732245135*^9, 
  3.739551736385481*^9}},ExpressionUUID->"a97b6548-7444-4f52-8385-\
55f7e3aac111"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nlatent", " ", "=", " ", "8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sampleSize", "=", " ", "60000"}], ";"}]}], "Input",
 CellChangeTimes->{{3.739551316690058*^9, 3.739551333600608*^9}, {
   3.7396686423057833`*^9, 3.7396686465900373`*^9}, 3.739670092731775*^9, {
   3.739717174778987*^9, 3.739717181629671*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"d8eb4aa3-ea91-4560-a5e4-89e2aa5ad890"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Encoder", "Subsection",
 CellChangeTimes->{{3.739551680305462*^9, 3.739551682201329*^9}, 
   3.739797298066251*^9, {3.739797342840246*^9, 
   3.7397973460662866`*^9}},ExpressionUUID->"8fef335a-119a-4684-9c73-\
4161c696fc69"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lrelu", " ", "=", " ", 
  RowBox[{"ElementwiseLayer", "[", 
   RowBox[{
    RowBox[{"Max", "[", 
     RowBox[{
      RowBox[{"Ramp", "[", "#", "]"}], ",", " ", 
      RowBox[{"#", "*", "0.3"}]}], "]"}], "&"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.739551680305462*^9, 3.739551682201329*^9}, 
   3.739797298066251*^9, {3.739797342840246*^9, 3.739797397032279*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"37b3c95e-cf6e-4345-8213-2834e7838772"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ElementwiseLayer", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014705882352941176`], {
                 RGBColor[0.557, 0.557, 0.557], 
                 RGBColor[0.33, 0.33, 0.33], 
                 Thickness[0.015029411764705883`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 18.5}, {14., 18.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.557, 0.557, 0.557], 
                 Thickness[0.015029411764705883`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{52.5, 18.5}, {44., 18.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.85, 0.85, 0.85], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{22.23,
                   18.5}, {33.5, 29.77}, {44.77, 18.5}, {33.5, 7.23}}}]}, {
                 FaceForm[{
                   RGBColor[0.56, 0.56, 0.56], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{33.5, 30.29}, {21.71, 
                  18.5}, {33.5, 6.71}, {45.29, 18.5}}, {{33.5, 29.25}, {44.25,
                   18.5}, {33.5, 7.75}, {22.75, 18.5}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{53.56, 15.4}, {51.88, 15.4}, {50.52, 16.76}, {
                  50.52, 18.44}, {50.52, 20.12}, {51.88, 21.48}, {53.56, 
                  21.48}, {55.24, 21.48}, {56.6, 20.12}, {56.6, 18.44}, {56.6,
                   16.76}, {55.24, 15.4}, {53.56, 15.4}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {0, 1, 0}}}, {{{53.56, 21.83}, {51.69, 21.83}, {50.17, 
                   20.31}, {50.17, 18.44}, {50.17, 16.57}, {51.69, 15.05}, {
                   53.56, 15.05}, {55.43, 15.05}, {56.95, 16.57}, {56.95, 
                   18.44}, {56.95, 20.31}, {55.43, 21.83}, {53.56, 21.83}}, {{
                   53.56, 21.83}, {53.56, 21.13}, {55.04, 21.13}, {56.25, 
                   19.92}, {56.25, 18.44}, {56.25, 16.96}, {55.04, 15.75}, {
                   53.56, 15.75}, {52.08, 15.75}, {50.87, 16.96}, {50.87, 
                   18.44}, {50.87, 19.92}, {52.08, 21.13}, {53.56, 21.13}, {
                   53.56, 21.83}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{13.56, 15.5}, {11.94, 15.5}, {10.62, 16.82}, {
                  10.62, 18.44}, {10.62, 20.06}, {11.94, 21.38}, {13.56, 
                  21.38}, {15.18, 21.38}, {16.5, 20.06}, {16.5, 18.44}, {16.5,
                   16.82}, {15.18, 15.5}, {13.56, 15.5}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}}}, {{{13.56, 21.73}, {11.74, 21.73}, {10.27, 
                   20.26}, {10.27, 18.44}, {10.27, 16.62}, {11.74, 15.15}, {
                   13.56, 15.15}, {15.38, 15.15}, {16.85, 16.62}, {16.85, 
                   18.44}, {16.85, 20.26}, {15.38, 21.73}, {13.56, 
                   21.73}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQLd/6OnCHnLaDx8MqkXXspg4MINCgA+efPQMCug6H
v2rE9B8ygYgf13MAa3M1gYrrQ8WNHdJAQM3AAcR1V0TwC225ri8uMILzwfqY
DB2qgcoe/tJ1MAaBzfoOMPfA+GBtezXhfIg5GlB1Bg7fQNaXqjsAya8acwwg
5lWpOcyaCQSShhD1H1Qh/jqA4MPcA+ODzbtnDHGXkwbc/+jhAwASgHiO
                   "]}]}}, ImageSize -> {40, Automatic}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{"\"Function\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TagBox[
                   FormBox[
                    RowBox[{"max", "(", 
                    RowBox[{
                    RowBox[{"0.3`", " ", "\"x\""}], ",", 
                    RowBox[{"Ramp", "[", "\"x\"", "]"}]}], ")"}], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"tensor\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014705882352941176`], {
                 RGBColor[0.557, 0.557, 0.557], 
                 RGBColor[0.33, 0.33, 0.33], 
                 Thickness[0.015029411764705883`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 18.5}, {14., 18.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.557, 0.557, 0.557], 
                 Thickness[0.015029411764705883`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{52.5, 18.5}, {44., 18.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.85, 0.85, 0.85], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{22.23,
                   18.5}, {33.5, 29.77}, {44.77, 18.5}, {33.5, 7.23}}}]}, {
                 FaceForm[{
                   RGBColor[0.56, 0.56, 0.56], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{33.5, 30.29}, {21.71, 
                  18.5}, {33.5, 6.71}, {45.29, 18.5}}, {{33.5, 29.25}, {44.25,
                   18.5}, {33.5, 7.75}, {22.75, 18.5}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{53.56, 15.4}, {51.88, 15.4}, {50.52, 16.76}, {
                  50.52, 18.44}, {50.52, 20.12}, {51.88, 21.48}, {53.56, 
                  21.48}, {55.24, 21.48}, {56.6, 20.12}, {56.6, 18.44}, {56.6,
                   16.76}, {55.24, 15.4}, {53.56, 15.4}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {0, 1, 0}}}, {{{53.56, 21.83}, {51.69, 21.83}, {50.17, 
                   20.31}, {50.17, 18.44}, {50.17, 16.57}, {51.69, 15.05}, {
                   53.56, 15.05}, {55.43, 15.05}, {56.95, 16.57}, {56.95, 
                   18.44}, {56.95, 20.31}, {55.43, 21.83}, {53.56, 21.83}}, {{
                   53.56, 21.83}, {53.56, 21.13}, {55.04, 21.13}, {56.25, 
                   19.92}, {56.25, 18.44}, {56.25, 16.96}, {55.04, 15.75}, {
                   53.56, 15.75}, {52.08, 15.75}, {50.87, 16.96}, {50.87, 
                   18.44}, {50.87, 19.92}, {52.08, 21.13}, {53.56, 21.13}, {
                   53.56, 21.83}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{13.56, 15.5}, {11.94, 15.5}, {10.62, 16.82}, {
                  10.62, 18.44}, {10.62, 20.06}, {11.94, 21.38}, {13.56, 
                  21.38}, {15.18, 21.38}, {16.5, 20.06}, {16.5, 18.44}, {16.5,
                   16.82}, {15.18, 15.5}, {13.56, 15.5}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}}}, {{{13.56, 21.73}, {11.74, 21.73}, {10.27, 
                   20.26}, {10.27, 18.44}, {10.27, 16.62}, {11.74, 15.15}, {
                   13.56, 15.15}, {15.38, 15.15}, {16.85, 16.62}, {16.85, 
                   18.44}, {16.85, 20.26}, {15.38, 21.73}, {13.56, 
                   21.73}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQLd/6OnCHnLaDx8MqkXXspg4MINCgA+efPQMCug6H
v2rE9B8ygYgf13MAa3M1gYrrQ8WNHdJAQM3AAcR1V0TwC225ri8uMILzwfqY
DB2qgcoe/tJ1MAaBzfoOMPfA+GBtezXhfIg5GlB1Bg7fQNaXqjsAya8acwwg
5lWpOcyaCQSShhD1H1Qh/jqA4MPcA+ODzbtnDHGXkwbc/+jhAwASgHiO
                   "]}]}}, ImageSize -> {40, Automatic}], 
              GridBox[{{
                 ItemBox[
                  StyleBox["Parameters", Bold]], 
                 ItemBox[""]}, {
                 StyleBox[
                  TemplateBox[{"\"Function\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TagBox[
                   FormBox[
                    RowBox[{"max", "(", 
                    RowBox[{
                    RowBox[{"0.3`", " ", "\"x\""}], ",", 
                    RowBox[{"Ramp", "[", "\"x\"", "]"}]}], ")"}], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                  "SummaryItem"]}, {
                 ItemBox[
                  StyleBox["Ports", Bold], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]], 
                 ItemBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                   "CacheGraphics" -> False], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]]}, {
                 StyleBox[
                  TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"tensor\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"tensor\"", "SummaryItem"]}}, 
               BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 3}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ElementwiseLayer[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7472647918872347`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"0ef30924-681b-4dfa-b0ef-ddb0540f5918"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ElementwiseLayer", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014705882352941176`], {
                 RGBColor[0.557, 0.557, 0.557], 
                 RGBColor[0.33, 0.33, 0.33], 
                 Thickness[0.015029411764705883`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 18.5}, {14., 18.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.557, 0.557, 0.557], 
                 Thickness[0.015029411764705883`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{52.5, 18.5}, {44., 18.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.85, 0.85, 0.85], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{22.23,
                   18.5}, {33.5, 29.77}, {44.77, 18.5}, {33.5, 7.23}}}]}, {
                 FaceForm[{
                   RGBColor[0.56, 0.56, 0.56], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{33.5, 30.29}, {21.71, 
                  18.5}, {33.5, 6.71}, {45.29, 18.5}}, {{33.5, 29.25}, {44.25,
                   18.5}, {33.5, 7.75}, {22.75, 18.5}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{53.56, 15.4}, {51.88, 15.4}, {50.52, 16.76}, {
                  50.52, 18.44}, {50.52, 20.12}, {51.88, 21.48}, {53.56, 
                  21.48}, {55.24, 21.48}, {56.6, 20.12}, {56.6, 18.44}, {56.6,
                   16.76}, {55.24, 15.4}, {53.56, 15.4}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {0, 1, 0}}}, {{{53.56, 21.83}, {51.69, 21.83}, {50.17, 
                   20.31}, {50.17, 18.44}, {50.17, 16.57}, {51.69, 15.05}, {
                   53.56, 15.05}, {55.43, 15.05}, {56.95, 16.57}, {56.95, 
                   18.44}, {56.95, 20.31}, {55.43, 21.83}, {53.56, 21.83}}, {{
                   53.56, 21.83}, {53.56, 21.13}, {55.04, 21.13}, {56.25, 
                   19.92}, {56.25, 18.44}, {56.25, 16.96}, {55.04, 15.75}, {
                   53.56, 15.75}, {52.08, 15.75}, {50.87, 16.96}, {50.87, 
                   18.44}, {50.87, 19.92}, {52.08, 21.13}, {53.56, 21.13}, {
                   53.56, 21.83}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{13.56, 15.5}, {11.94, 15.5}, {10.62, 16.82}, {
                  10.62, 18.44}, {10.62, 20.06}, {11.94, 21.38}, {13.56, 
                  21.38}, {15.18, 21.38}, {16.5, 20.06}, {16.5, 18.44}, {16.5,
                   16.82}, {15.18, 15.5}, {13.56, 15.5}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}}}, {{{13.56, 21.73}, {11.74, 21.73}, {10.27, 
                   20.26}, {10.27, 18.44}, {10.27, 16.62}, {11.74, 15.15}, {
                   13.56, 15.15}, {15.38, 15.15}, {16.85, 16.62}, {16.85, 
                   18.44}, {16.85, 20.26}, {15.38, 21.73}, {13.56, 
                   21.73}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQLd/6OnCHnLaDx8MqkXXspg4MINCgA+efPQMCug6H
v2rE9B8ygYgf13MAa3M1gYrrQ8WNHdJAQM3AAcR1V0TwC225ri8uMILzwfqY
DB2qgcoe/tJ1MAaBzfoOMPfA+GBtezXhfIg5GlB1Bg7fQNaXqjsAya8acwwg
5lWpOcyaCQSShhD1H1Qh/jqA4MPcA+ODzbtnDHGXkwbc/+jhAwASgHiO
                   "]}]}}, ImageSize -> {40, Automatic}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{"\"Function\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TagBox[
                   FormBox[
                    RowBox[{"max", "(", 
                    RowBox[{
                    RowBox[{"0.3`", " ", "\"x\""}], ",", 
                    RowBox[{"Ramp", "[", "\"x\"", "]"}]}], ")"}], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"tensor\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014705882352941176`], {
                 RGBColor[0.557, 0.557, 0.557], 
                 RGBColor[0.33, 0.33, 0.33], 
                 Thickness[0.015029411764705883`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 18.5}, {14., 18.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.557, 0.557, 0.557], 
                 Thickness[0.015029411764705883`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{52.5, 18.5}, {44., 18.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.85, 0.85, 0.85], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{22.23,
                   18.5}, {33.5, 29.77}, {44.77, 18.5}, {33.5, 7.23}}}]}, {
                 FaceForm[{
                   RGBColor[0.56, 0.56, 0.56], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{33.5, 30.29}, {21.71, 
                  18.5}, {33.5, 6.71}, {45.29, 18.5}}, {{33.5, 29.25}, {44.25,
                   18.5}, {33.5, 7.75}, {22.75, 18.5}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{53.56, 15.4}, {51.88, 15.4}, {50.52, 16.76}, {
                  50.52, 18.44}, {50.52, 20.12}, {51.88, 21.48}, {53.56, 
                  21.48}, {55.24, 21.48}, {56.6, 20.12}, {56.6, 18.44}, {56.6,
                   16.76}, {55.24, 15.4}, {53.56, 15.4}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {0, 1, 0}}}, {{{53.56, 21.83}, {51.69, 21.83}, {50.17, 
                   20.31}, {50.17, 18.44}, {50.17, 16.57}, {51.69, 15.05}, {
                   53.56, 15.05}, {55.43, 15.05}, {56.95, 16.57}, {56.95, 
                   18.44}, {56.95, 20.31}, {55.43, 21.83}, {53.56, 21.83}}, {{
                   53.56, 21.83}, {53.56, 21.13}, {55.04, 21.13}, {56.25, 
                   19.92}, {56.25, 18.44}, {56.25, 16.96}, {55.04, 15.75}, {
                   53.56, 15.75}, {52.08, 15.75}, {50.87, 16.96}, {50.87, 
                   18.44}, {50.87, 19.92}, {52.08, 21.13}, {53.56, 21.13}, {
                   53.56, 21.83}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{13.56, 15.5}, {11.94, 15.5}, {10.62, 16.82}, {
                  10.62, 18.44}, {10.62, 20.06}, {11.94, 21.38}, {13.56, 
                  21.38}, {15.18, 21.38}, {16.5, 20.06}, {16.5, 18.44}, {16.5,
                   16.82}, {15.18, 15.5}, {13.56, 15.5}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}}}, {{{13.56, 21.73}, {11.74, 21.73}, {10.27, 
                   20.26}, {10.27, 18.44}, {10.27, 16.62}, {11.74, 15.15}, {
                   13.56, 15.15}, {15.38, 15.15}, {16.85, 16.62}, {16.85, 
                   18.44}, {16.85, 20.26}, {15.38, 21.73}, {13.56, 
                   21.73}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQLd/6OnCHnLaDx8MqkXXspg4MINCgA+efPQMCug6H
v2rE9B8ygYgf13MAa3M1gYrrQ8WNHdJAQM3AAcR1V0TwC225ri8uMILzwfqY
DB2qgcoe/tJ1MAaBzfoOMPfA+GBtezXhfIg5GlB1Bg7fQNaXqjsAya8acwwg
5lWpOcyaCQSShhD1H1Qh/jqA4MPcA+ODzbtnDHGXkwbc/+jhAwASgHiO
                   "]}]}}, ImageSize -> {40, Automatic}], 
              GridBox[{{
                 ItemBox[
                  StyleBox["Parameters", Bold]], 
                 ItemBox[""]}, {
                 StyleBox[
                  TemplateBox[{"\"Function\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TagBox[
                   FormBox[
                    RowBox[{"max", "(", 
                    RowBox[{
                    RowBox[{"0.3`", " ", "\"x\""}], ",", 
                    RowBox[{"Ramp", "[", "\"x\"", "]"}]}], ")"}], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                  "SummaryItem"]}, {
                 ItemBox[
                  StyleBox["Ports", Bold], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]], 
                 ItemBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                   "CacheGraphics" -> False], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]]}, {
                 StyleBox[
                  TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"tensor\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"tensor\"", "SummaryItem"]}}, 
               BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 3}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ElementwiseLayer[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Input",
 CellChangeTimes->{3.747264784820238*^9},
 CellLabel->"In[4]:=",ExpressionUUID->"0a228ccc-e6a7-4500-9cef-cda9e51dda38"],

Cell[BoxData[
 TemplateBox[{
  "General","noinfo",
   "\"Input expression \\!\\(\\*TagBox[\\\"ElementwiseLayer[<>]\\\", False, \
Rule[Editable, False], Rule[SelectWithContents, True], Rule[Selectable, \
False]]\\) contains insufficient information to interpret the result.\"",2,4,
   1,24810950533563454663,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.747264792202236*^9},
 CellLabel->
  "During evaluation of \
In[4]:=",ExpressionUUID->"bf892dda-0356-42d0-8b67-d1effba743d4"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"encoder", " ", "=", " ", 
   RowBox[{"NetChain", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ConvolutionLayer", "[", 
       RowBox[{"64", ",", " ", "4", ",", " ", 
        RowBox[{"\"\<Stride\>\"", "\[Rule]", "2"}], ",", " ", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", "2"}]}], "]"}], ",", 
      "\[IndentingNewLine]", "lrelu", ",", "\[IndentingNewLine]", 
      RowBox[{"DropoutLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ConvolutionLayer", "[", 
       RowBox[{"64", ",", " ", "4", ",", " ", 
        RowBox[{"\"\<Stride\>\"", "\[Rule]", "2"}], ",", " ", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", "2"}]}], "]"}], ",", 
      "\[IndentingNewLine]", "lrelu", ",", "\[IndentingNewLine]", 
      RowBox[{"DropoutLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ConvolutionLayer", "[", 
       RowBox[{"64", ",", " ", "4", ",", " ", 
        RowBox[{"\"\<Stride\>\"", "\[Rule]", "1"}], ",", " ", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", "2"}]}], "]"}], ",", 
      "\[IndentingNewLine]", "lrelu", ",", "\[IndentingNewLine]", 
      RowBox[{"DropoutLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"FlattenLayer", "[", "]"}]}], "\[IndentingNewLine]", "}"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7395491087158737`*^9, 3.73954917811176*^9}, {
   3.739549218210209*^9, 3.7395492956660833`*^9}, {3.7395493546752667`*^9, 
   3.7395493694767766`*^9}, {3.739550100213616*^9, 3.7395501005517516`*^9}, 
   3.7395506987487946`*^9, {3.739550763158961*^9, 3.7395507829405527`*^9}, {
   3.7395513101844034`*^9, 3.7395513112562037`*^9}, {3.739553041169927*^9, 
   3.7395530814694223`*^9}, {3.7396427053090143`*^9, 
   3.7396427062149363`*^9}, {3.7397064531160984`*^9, 3.7397064556743484`*^9}, 
   3.739716288881195*^9, {3.7397197436824937`*^9, 3.73971974511782*^9}, {
   3.7397382200078974`*^9, 3.739738237032915*^9}, {3.7397386776756477`*^9, 
   3.7397387248926487`*^9}, {3.739738764458597*^9, 3.7397388295626097`*^9}, {
   3.739738946903629*^9, 3.7397389531816115`*^9}, {3.739739030868601*^9, 
   3.7397390745136156`*^9}, {3.73973918457199*^9, 3.739739184768979*^9}, {
   3.739739235728995*^9, 3.7397392421189823`*^9}, {3.7397393644694333`*^9, 
   3.7397393798952384`*^9}, {3.739756551760101*^9, 3.739756555321489*^9}, {
   3.7397569889289956`*^9, 3.739756995272276*^9}, {3.7397573111038747`*^9, 
   3.739757319776167*^9}, {3.739796901869957*^9, 3.7397969077870407`*^9}, {
   3.73979740163824*^9, 3.739797405355241*^9}, {3.7398000923253517`*^9, 
   3.7398001425868797`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"b61fd62d-6249-4276-95f6-4e6f7dbc912f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Middle Trick Z layer", "Subsection",
 CellChangeTimes->{{3.739551687254616*^9, 
  3.7395516940382557`*^9}},ExpressionUUID->"1d510bfb-5494-494c-a291-\
1cda52559c0d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mn", " ", "=", " ", 
   RowBox[{"LinearLayer", "[", "nlatent", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sd", "=", " ", 
   RowBox[{"NetChain", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"LinearLayer", "[", "nlatent", "]"}], ",", 
      RowBox[{"ElementwiseLayer", "[", 
       RowBox[{
        RowBox[{"#", "*", "0.5"}], "&"}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"expSd", " ", "=", " ", 
   RowBox[{"ElementwiseLayer", "[", 
    RowBox[{
     RowBox[{"Exp", "[", "#", "]"}], "&"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z", " ", "=", 
   RowBox[{"TotalLayer", "[", "]"}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7395491087158737`*^9, 3.73954917811176*^9}, {
   3.739549218210209*^9, 3.7395492956660833`*^9}, {3.7395493546752667`*^9, 
   3.7395493694767766`*^9}, {3.739550100213616*^9, 3.7395501005517516`*^9}, {
   3.7395506987487946`*^9, 3.739550715179901*^9}, {3.7395512449249754`*^9, 
   3.739551276851375*^9}, 3.7395513375830107`*^9, {3.7395515781816907`*^9, 
   3.7395515847436523`*^9}, {3.7395529647125893`*^9, 
   3.7395529676392713`*^9}, {3.739553158868684*^9, 3.7395532248187704`*^9}, {
   3.739553457330779*^9, 3.739553521142729*^9}, {3.739553908178919*^9, 
   3.739553930029264*^9}, {3.739554079763504*^9, 3.7395540897121577`*^9}, {
   3.739554133563135*^9, 3.7395542311423635`*^9}, {3.7395546155509634`*^9, 
   3.7395546362187023`*^9}, {3.7395546795450125`*^9, 3.739554687174427*^9}, {
   3.739554745978673*^9, 3.7395547579545517`*^9}, {3.7395550832738695`*^9, 
   3.7395550911013155`*^9}, {3.739563601684586*^9, 3.739563634298044*^9}, {
   3.7395779331005144`*^9, 3.7395779348582907`*^9}, {3.7395801891391616`*^9, 
   3.739580189373973*^9}, {3.739653171873227*^9, 3.739653173339471*^9}, {
   3.739653666217244*^9, 3.7396536862047267`*^9}, {3.739658054893764*^9, 
   3.7396580554502954`*^9}, {3.739800365648552*^9, 3.739800368103361*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"5ffd5e94-746f-4af8-ba2d-32f494356219"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Decoder", "Subsection",
 CellChangeTimes->{{3.7395516987804565`*^9, 
  3.7395517004113936`*^9}},ExpressionUUID->"b8773a27-cd1e-48ec-8d51-\
81bf6ff63b4b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"decoder", " ", "=", " ", 
   RowBox[{"NetChain", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
     "25", ",", "\[IndentingNewLine]", "lrelu", ",", "\[IndentingNewLine]", 
      "49", ",", " ", "\[IndentingNewLine]", "lrelu", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ReshapeLayer", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "7", ",", "7"}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"DeconvolutionLayer", "[", 
       RowBox[{"64", ",", " ", "4", ",", " ", 
        RowBox[{"\"\<Stride\>\"", "\[Rule]", "2"}], ",", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", "2"}]}], "]"}], ",", 
      "\[IndentingNewLine]", "Ramp", ",", "\[IndentingNewLine]", 
      RowBox[{"DropoutLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"DeconvolutionLayer", "[", 
       RowBox[{"64", ",", " ", "4", ",", " ", 
        RowBox[{"\"\<Stride\>\"", "\[Rule]", "1"}], ",", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", "2"}]}], "]"}], ",", 
      "\[IndentingNewLine]", "Ramp", ",", "\[IndentingNewLine]", 
      RowBox[{"DropoutLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"DeconvolutionLayer", "[", 
       RowBox[{"64", ",", " ", "4", ",", " ", 
        RowBox[{"\"\<Stride\>\"", "\[Rule]", "1"}], ",", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", "2"}]}], "]"}], ",", 
      "\[IndentingNewLine]", "Ramp", ",", "\[IndentingNewLine]", 
      RowBox[{"FlattenLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"28", "*", "28"}], ",", "\[IndentingNewLine]", 
      "LogisticSigmoid", ",", "\[IndentingNewLine]", 
      RowBox[{"ReshapeLayer", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "28", ",", "28"}], "}"}], "]"}]}], 
     "\[IndentingNewLine]", "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7395494974551506`*^9, 3.7395495046283197`*^9}, {
   3.7395510248368125`*^9, 3.7395510310459833`*^9}, {3.7395530865320435`*^9, 
   3.7395530890187006`*^9}, {3.739574426986454*^9, 3.7395744331238127`*^9}, {
   3.739574497367547*^9, 3.7395744993428903`*^9}, 3.7396531773926125`*^9, {
   3.739706461019185*^9, 3.7397064632360244`*^9}, {3.7397162948216295`*^9, 
   3.73971630056956*^9}, {3.739719747686528*^9, 3.739719749966364*^9}, {
   3.739738264288909*^9, 3.7397382739389133`*^9}, {3.739738853730604*^9, 
   3.7397389720616074`*^9}, {3.73973938318534*^9, 3.739739384977476*^9}, {
   3.739739420803893*^9, 3.739739443681853*^9}, {3.7397396218078933`*^9, 
   3.7397396313349075`*^9}, {3.7397396799720216`*^9, 3.739739681793908*^9}, {
   3.7397397124359007`*^9, 3.739739730399901*^9}, {3.739739814692984*^9, 
   3.73973981614898*^9}, {3.739739865804993*^9, 3.7397398829687643`*^9}, {
   3.7397566218803396`*^9, 3.739756681167693*^9}, {3.739756759474098*^9, 
   3.739756837663678*^9}, {3.73975693884508*^9, 3.7397569632685223`*^9}, {
   3.7397573254543333`*^9, 3.7397573339639964`*^9}, {3.739793536041973*^9, 
   3.739793542061054*^9}, {3.7397944858854265`*^9, 3.739794489394738*^9}, {
   3.7397969140676365`*^9, 3.7397969186518593`*^9}, {3.739800489331607*^9, 
   3.7398005375078735`*^9}, {3.7398006155175943`*^9, 
   3.7398006279111056`*^9}, {3.7398008319336505`*^9, 3.73980083207866*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"edbf0ee2-cf30-4d82-9dab-f9b0c346225e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["ImageLoss", "Subsection",
 CellChangeTimes->{{3.7396580504733496`*^9, 
  3.739658066790998*^9}},ExpressionUUID->"1510df37-b6e3-4059-8d8a-\
68933a55834f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Assume", " ", "input", " ", "is", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", "28", ",", "28"}], "}"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "output", " ", "the", " ", "real", " ", "number", " ", "as", " ", "wll"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"imageLoss", " ", "=", " ", 
   RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ElementwiseLayer", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "*", "#"}], " ", "&"}], "]"}], ",", " ", 
       RowBox[{"TotalLayer", "[", "]"}], ",", " ", 
       RowBox[{"ElementwiseLayer", "[", 
        RowBox[{
         RowBox[{"#", "^", "2"}], "&"}], "]"}], ",", " ", 
       RowBox[{"ReshapeLayer", "[", 
        RowBox[{"{", 
         RowBox[{"28", ",", "28"}], "}"}], "]"}], ",", " ", 
       RowBox[{"SummationLayer", "[", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<inDec\>\"", "]"}], "\[Rule]", 
        RowBox[{"1", "->", "2"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<inInput\>\"", "]"}], "\[Rule]", "2"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"2", "\[Rule]", 
        RowBox[{"3", "\[Rule]", 
         RowBox[{"4", "\[Rule]", "5"}]}]}]}], "\[IndentingNewLine]", "}"}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7396580504733496`*^9, 3.7396580704733276`*^9}, {
   3.739658183848325*^9, 3.739658231838282*^9}, {3.7396582697827425`*^9, 
   3.7396582776903963`*^9}, {3.739658334942755*^9, 3.739658339791144*^9}, {
   3.7396589960878963`*^9, 3.739658999169059*^9}, {3.7396598749534454`*^9, 
   3.7396598778682594`*^9}, {3.739659999094411*^9, 3.739659999297686*^9}, {
   3.739660029523304*^9, 3.73966003873488*^9}, {3.739660095430449*^9, 
   3.7396601408837013`*^9}, {3.73966033166679*^9, 3.739660332402121*^9}, {
   3.739660371402605*^9, 3.739660372759054*^9}, {3.739801871719342*^9, 
   3.7398018874229064`*^9}, {3.7398027411215754`*^9, 
   3.7398027730066285`*^9}, {3.739803124346739*^9, 3.739803152802951*^9}, 
   3.739803211448743*^9, {3.739803623768796*^9, 3.739803641118581*^9}, 
   3.739803682781166*^9, {3.739803715240907*^9, 3.739803716062747*^9}, {
   3.7398038647194386`*^9, 3.739803865080753*^9}, {3.739804183405492*^9, 
   3.739804183776039*^9}, {3.7398042395820026`*^9, 3.739804250000084*^9}, {
   3.7398044941909447`*^9, 3.7398045212432337`*^9}, {3.739804905798359*^9, 
   3.739804958637001*^9}, {3.739805080714749*^9, 3.7398050831231155`*^9}, {
   3.7398075943133726`*^9, 3.739807629214981*^9}, {3.739807748553124*^9, 
   3.7398077671812134`*^9}, {3.739807829325135*^9, 3.7398078337119646`*^9}, {
   3.739808060318533*^9, 3.739808060482891*^9}, {3.739808111369532*^9, 
   3.73980811410174*^9}, {3.739808196752138*^9, 3.739808196923518*^9}, {
   3.739808436809472*^9, 3.73980844868378*^9}, {3.7398085609394836`*^9, 
   3.7398085610534115`*^9}, {3.739808666071518*^9, 3.739808670784358*^9}, 
   3.7398090468229074`*^9, {3.739809202091514*^9, 3.7398092193793154`*^9}, {
   3.7398093821562147`*^9, 3.739809382282889*^9}, {3.739809414304573*^9, 
   3.739809421663409*^9}, {3.7398094899230976`*^9, 3.739809607759758*^9}, {
   3.7398096408717833`*^9, 3.739809694435369*^9}, {3.7398099356477766`*^9, 
   3.7398099479985595`*^9}, {3.739810026899426*^9, 3.7398100296190786`*^9}, {
   3.7398100999142323`*^9, 3.7398101076445475`*^9}, {3.739810145297225*^9, 
   3.73981016437331*^9}, {3.739915434894289*^9, 3.73991547693605*^9}, {
   3.739917009501216*^9, 3.739917016333226*^9}, {3.739918398086446*^9, 
   3.7399184090230455`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"f0396d21-c023-4886-859b-4555aa089e09"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["5", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], {
                    
                    LineBox[{{-6., 3.6739403974420594`*^-16}, {-5., 
                    3.061616997868383*^-16}}], 
                    
                    LineBox[{{-5., 3.061616997868383*^-16}, {-4., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-5., 1.0000000000000002`}, {-4., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-4., 1.0000000000000002`}, {-3., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-3., 1.0000000000000002`}, {-2., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-2., 1.0000000000000002`}, {-0.9999999999999999,
                     1.}}], 
                    
                    LineBox[{{-0.9999999999999999, 1.}, {
                    6.123233995736766*^-17, 1.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-5.4, 
                    3.3065463576978537`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736762*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-4.4, 
                    0.6000000000000002}, {-0.25, 0}, 
                    Offset[8], {1., 0.9999999999999999}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-4.4, 
                    1.0000000000000002`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-3.4, 
                    1.0000000000000002`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, 
                    1.0000000000000002`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    1.}, {-0.25, 0}, 
                    Offset[8], {1., -2.220446049250313*^-16}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-0.3999999999999999, 1.}, {-0.25, 0}, 
                    Offset[8], {1., 0.}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-6., 3.6739403974420594`*^-16}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"inDec\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["inDec", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-5., 3.061616997868383*^-16}], 
                    Offset[{10, 10}, {-5., 3.061616997868383*^-16}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], TraditionalForm]], {-5., 
                    3.061616997868383*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Slot", "[", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "]"}]}], "&"}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["1", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[Minus[#]& , {4, 3}]]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-4., 1.0000000000000002`}], 
                    Offset[{10, 10}, {-4., 1.0000000000000002`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"+\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-4., 1.0000000000000002`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"TotalLayer", "[", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["2", Bold], 
                    Style[
                    HoldForm[
                    TotalLayer["Inputs" -> {Automatic, Automatic}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-5., 1.0000000000000002`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"inInput\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["inInput", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-3., 1.0000000000000002`}], 
                    Offset[{10, 10}, {-3., 1.0000000000000002`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], TraditionalForm]], {-3., 
                    1.0000000000000002`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"3\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"Slot", "[", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "]"}], "2"], "&"}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["3", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[#^2& , {4, 3}]]], FontFamily -> "Source Code Pro",
                     ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-2., 1.0000000000000002`}], 
                    Offset[{10, 10}, {-2., 1.0000000000000002`}]]}, 
                    InsetBox[
                    FormBox["\"R\"", TraditionalForm], 
                    Offset[{0, -1}, {-2., 1.0000000000000002`}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"4\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ReshapeLayer", "[", 
                    RowBox[{"{", 
                    RowBox[{"28", ",", "28"}], "}"}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["4", Bold], 
                    Style[
                    HoldForm[
                    ReshapeLayer[{28, 28}]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-0.9999999999999999, 1.}], 
                    Offset[{10, 10}, {-0.9999999999999999, 1.}]]}, 
                    InsetBox[
                    FormBox["\"S\"", TraditionalForm], 
                    Offset[{0, -1}, {-0.9999999999999999, 1.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"5\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"SummationLayer", "[", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"28", ",", "28"}], "}"}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["5", Bold], 
                    Style[
                    HoldForm[
                    SummationLayer["Input" -> {28, 28}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{6.123233995736766*^-17, 1.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    StyleBox[{{
                    InsetBox[
                    FormBox["\"inDec\"", TraditionalForm], 
                    Offset[{0, -7}, {-6., 3.6739403974420594`*^-16}], {0, 1.},
                     Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    Offset[{0, -13}, {-5., 3.061616997868383*^-16}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    Offset[{0, -13}, {-4., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"inInput\"", TraditionalForm], 
                    Offset[{0, -7}, {-5., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{0, -13}, {-3., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    Offset[{0, -13}, {-2., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    Offset[{0, -13}, {-0.9999999999999999, 1.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    Offset[{0, -7}, {6.123233995736766*^-17, 1.}], {0, 1.}, 
                    Automatic, {1, 0}]}}, FontColor -> GrayLevel[0.5], 
                    StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{3.3677786976552195`*^-16, 5.5}, {-5.4, 
                    3.3065463576978537`*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736762*^-17}], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{-3.889087296526011, 3.8890872965260117`}, {-4.4, 
                    0.6000000000000002}], {0., -0.17}, Automatic, {
                    0.7071067811865476, 0.7071067811865475}], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-4.4, 1.0000000000000002`}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-3.4, 1.0000000000000002`}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0., 5.5}, {-2.4000000000000004`, 
                    1.0000000000000002`}], {0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{1.2212453270876722`*^-15, 5.5}, {-1.4, 1.}], {
                    0., -0.17}, Automatic, {1., -2.220446049250313*^-16}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-0.3999999999999999, 1.}], {0., -0.17},
                     Automatic, {1., 0.}]}, FontColor -> GrayLevel[0.7], 
                    FontSize -> 8, FontWeight -> "Thin", StripOnInput -> 
                    False]}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    Part[{{-6., 3.6739403974420594`*^-16}, {-5., 
                    3.061616997868383*^-16}, {-4., 1.0000000000000002`}, {-5.,
                     1.0000000000000002`}, {-3., 1.0000000000000002`}, {-2., 
                    1.0000000000000002`}, {-0.9999999999999999, 1.}, {
                    6.123233995736766*^-17, 1.}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 20, 20, 8, 20, 20, 20, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, ImageSize -> {380.5, 96.}, AspectRatio -> 
                    Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{24., 26.5}, {27., 14.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "inDec"], 
                    NeuralNetworks`NetPath["Nodes", "1"], 
                    NeuralNetworks`NetPath["Nodes", "2"], 
                    NeuralNetworks`NetPath["Inputs", "inInput"], 
                    NeuralNetworks`NetPath["Nodes", "3"], 
                    NeuralNetworks`NetPath["Nodes", "4"], 
                    NeuralNetworks`NetPath["Nodes", "5"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association["inDec" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT], "inInput" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    Association[
                    "1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Power, 
                    NeuralNetworks`Private`ScalarSymbol[1], 2.}]]], 
                    "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Reshape", "Arrays" -> Association[], 
                    "Parameters" -> Association["Dimensions" -> {28, 28}], 
                    "Inputs" -> Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{28, 28}, NeuralNetworks`RealT]]], 
                    "5" -> Association[
                    "Type" -> "Summation", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]]]]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"inDec\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"tensor\"", "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{"\"inInput\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"tensor\"", "SummaryItem"], "", "", "", ""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.7399154623567705`*^9, 3.7399154841591644`*^9}, 
   3.7399181767859435`*^9, 3.7472649387432337`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"e737983f-a04d-40ee-b50f-76f478fd20b0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7398079772824926`*^9, 3.739808011739949*^9}, 
   3.7398080585236807`*^9},ExpressionUUID->"cd8471b6-4cdc-45fd-b167-\
bbeeefcad251"],

Cell[BoxData[
 RowBox[{"{", "0.`", "}"}]], "Output",
 CellChangeTimes->{{3.7398080073826513`*^9, 3.739808012300243*^9}},
 CellLabel->
  "Out[1312]=",ExpressionUUID->"c279ac73-f6f2-4001-a6ae-ff3a34cb8a18"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Latent Loss", "Subsection",
 CellChangeTimes->{{3.7396580504733496`*^9, 3.7396580704733276`*^9}, {
  3.739658183848325*^9, 3.7396581867788134`*^9}, {3.7396607866514063`*^9, 
  3.739660791490347*^9}},ExpressionUUID->"1de5c636-2c07-4bc9-98bb-\
1e273b057422"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Assume", " ", "input", " ", "is", " ", 
     RowBox[{"{", "8", "}"}]}], ",", " ", 
    RowBox[{"{", "8", "}"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"latentLoss", " ", "=", " ", 
   RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ElementwiseLayer", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "0.5"}], "*", "#"}], "&"}], "]"}], ",", " ", 
       RowBox[{"TotalLayer", "[", "]"}], ",", " ", 
       RowBox[{"ElementwiseLayer", "[", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"#", "^", "2"}], ")"}]}], "&"}], "]"}], ",", " ", 
       RowBox[{"ElementwiseLayer", "[", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Exp", "[", 
           RowBox[{"2", "*", "#"}], "]"}]}], "&"}], "]"}], ",", " ", 
       RowBox[{"ElementwiseLayer", "[", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"2", "*", "#"}]}], "&"}], "]"}], ",", 
       RowBox[{"SummationLayer", "[", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<mn\>\"", "]"}], "\[Rule]", "3"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<sd\>\"", "]"}], "\[Rule]", "4"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<sd\>\"", "]"}], "\[Rule]", "5"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"3", "\[Rule]", "2"}], ",", "\[IndentingNewLine]", 
       RowBox[{"4", "\[Rule]", "2"}], ",", "\[IndentingNewLine]", 
       RowBox[{"5", "\[Rule]", "2"}], ",", "\[IndentingNewLine]", 
       RowBox[{"2", "\[Rule]", "6"}], ",", "\[IndentingNewLine]", 
       RowBox[{"6", "\[Rule]", "1"}]}], "\[IndentingNewLine]", "}"}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7396580504733496`*^9, 3.7396580704733276`*^9}, {
   3.739658183848325*^9, 3.7396581867788134`*^9}, {3.7396607866514063`*^9, 
   3.7396608011688447`*^9}, {3.739661785555604*^9, 3.73966179277761*^9}, {
   3.739661875765953*^9, 3.739662019573432*^9}, {3.739662169718382*^9, 
   3.7396623039581375`*^9}, {3.739662471213227*^9, 3.739662489242158*^9}, {
   3.739662676125009*^9, 3.7396626768218703`*^9}, {3.739662716331247*^9, 
   3.739662765525912*^9}, {3.7396629501185417`*^9, 3.7396629508067074`*^9}, {
   3.739738308445907*^9, 3.739738311391897*^9}, {3.739801684337245*^9, 
   3.7398016966389213`*^9}, {3.739801777185547*^9, 3.739801783970646*^9}, {
   3.7398029610184975`*^9, 3.7398029663454523`*^9}, {3.7398032169269686`*^9, 
   3.739803227170117*^9}, {3.739808120429064*^9, 3.739808122342973*^9}, 
   3.739808194907878*^9, {3.7398083916319027`*^9, 3.739808397133438*^9}, {
   3.739808431454223*^9, 3.739808451609259*^9}, {3.7398085573416867`*^9, 
   3.7398085717260637`*^9}, {3.7398086417986193`*^9, 3.739808659401613*^9}, {
   3.739808986907992*^9, 3.7398089922877884`*^9}, {3.7398092276350017`*^9, 
   3.739809254920138*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"a483c109-1890-41a9-a395-427c3de3b8fa"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["6", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], {
                    
                    LineBox[{{-5., 3.061616997868383*^-16}, {-4., 
                    2.4492935982947064`*^-16}}], 
                    
                    LineBox[{{-4., 2.4492935982947064`*^-16}, {-3., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-5., 1.0000000000000002`}, {-4., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-5., 2.0000000000000004`}, {-4., 
                    2.0000000000000004`}}], 
                    
                    LineBox[{{-4., 1.0000000000000002`}, {-3., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-4., 2.0000000000000004`}, {-3., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-3., 1.0000000000000002`}, {-2., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-2., 1.0000000000000002`}, {-0.9999999999999999,
                     1.}}], 
                    
                    LineBox[{{-0.9999999999999999, 1.}, {
                    6.123233995736766*^-17, 1.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-4.4, 
                    2.694222958124177*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-3.4, 
                    0.6000000000000002}, {-0.25, 0}, 
                    Offset[8], {1., 1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-4.4, 
                    1.0000000000000002`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-4.4, 
                    2.0000000000000004`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-3.4, 
                    1.0000000000000002`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-3.4, 
                    1.4000000000000004`}, {-0.25, 0}, 
                    Offset[8], {1., -1.0000000000000002`}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, 
                    1.0000000000000002`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    1.}, {-0.25, 0}, 
                    Offset[8], {1., -2.220446049250313*^-16}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-0.3999999999999999, 1.}, {-0.25, 0}, 
                    Offset[8], {1., 0.}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-5., 3.061616997868383*^-16}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"mn\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["mn", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-4., 2.4492935982947064`*^-16}], 
                    Offset[{10, 10}, {-4., 2.4492935982947064`*^-16}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], TraditionalForm]], {-4., 
                    2.4492935982947064`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"3\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Power", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}]}], "&"}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["3", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[Minus[#^2]& , {4, 3}]]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-3., 1.0000000000000002`}], 
                    Offset[{10, 10}, {-3., 1.0000000000000002`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"+\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-3., 1.0000000000000002`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"TotalLayer", "[", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", "Automatic", ",", "Automatic"}],
                     "}"}]}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["2", Bold], 
                    Style[
                    HoldForm[
                    TotalLayer[
                    "Inputs" -> {Automatic, Automatic, Automatic}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-5., 1.0000000000000002`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"sd\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["sd", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-4., 1.0000000000000002`}], 
                    Offset[{10, 10}, {-4., 1.0000000000000002`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], TraditionalForm]], {-4., 
                    1.0000000000000002`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"4\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "]"}]}], "&"}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["4", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[Minus[
                    Exp[2 #]]& , {4, 3}]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-4., 2.0000000000000004`}], 
                    Offset[{10, 10}, {-4., 2.0000000000000004`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], TraditionalForm]], {-4., 
                    2.0000000000000004`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"5\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    RowBox[{"1", "+", 
                    RowBox[{"Times", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}]}], "&"}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["5", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[1 + 2 #& , {4, 3}]]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-2., 1.0000000000000002`}], 
                    Offset[{10, 10}, {-2., 1.0000000000000002`}]]}, 
                    InsetBox[
                    FormBox["\"S\"", TraditionalForm], 
                    Offset[{0, -1}, {-2., 1.0000000000000002`}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"6\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"SummationLayer", "[", "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["6", Bold], 
                    Style[
                    HoldForm[
                    SummationLayer[]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-0.9999999999999999, 1.}], 
                    Offset[{10, 10}, {-0.9999999999999999, 1.}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], 
                    TraditionalForm]], {-0.9999999999999999, 1.}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "0.5`"}], " ", 
                    RowBox[{"Slot", "[", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "]"}]}], "&"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "\"Real\""}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["1", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[(-0.5) #& , {4, 3}], "Input" -> "Real"]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{6.123233995736766*^-17, 1.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-5., 2.0000000000000004`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"sd\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["sd", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    StyleBox[{{
                    InsetBox[
                    FormBox["\"mn\"", TraditionalForm], 
                    Offset[{0, -7}, {-5., 3.061616997868383*^-16}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{0, -13}, {-4., 2.4492935982947064`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    Offset[{0, -13}, {-3., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"sd\"", TraditionalForm], 
                    Offset[{0, -7}, {-5., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    Offset[{0, -13}, {-4., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    Offset[{0, -13}, {-4., 2.0000000000000004`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"6\"", TraditionalForm], 
                    Offset[{0, -13}, {-2., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    Offset[{0, -13}, {-0.9999999999999999, 1.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    Offset[{0, -7}, {6.123233995736766*^-17, 1.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"sd\"", TraditionalForm], 
                    Offset[{0, -7}, {-5., 2.0000000000000004`}], {0, 1.}, 
                    Automatic, {1, 0}]}}, FontColor -> GrayLevel[0.5], 
                    StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-4.4, 
                    2.694222958124177*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{-3.889087296526011, 3.889087296526011}, {-3.4, 
                    0.6000000000000002}], {0., -0.17}, Automatic, {
                    0.7071067811865475, 0.7071067811865475}], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-4.4, 1.0000000000000002`}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-4.4, 2.0000000000000004`}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-3.4, 1.0000000000000002`}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{3.8890872965260117`, 3.889087296526011}, {-3.4, 
                    1.4000000000000004`}], {0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865476}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"\[DottedSquare]\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{0., 5.5}, {-2.4000000000000004`, 
                    1.0000000000000002`}], {0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    Offset[{1.2212453270876722`*^-15, 5.5}, {-1.4, 1.}], {
                    0., -0.17}, Automatic, {1., -2.220446049250313*^-16}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-0.3999999999999999, 1.}], {0., -0.17},
                     Automatic, {1., 0.}]}, FontColor -> GrayLevel[0.7], 
                    FontSize -> 8, FontWeight -> "Thin", StripOnInput -> 
                    False]}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    Part[{{-5., 3.061616997868383*^-16}, {-4., 
                    2.4492935982947064`*^-16}, {-3., 
                    1.0000000000000002`}, {-5., 1.0000000000000002`}, {-4., 
                    1.0000000000000002`}, {-4., 2.0000000000000004`}, {-2., 
                    1.0000000000000002`}, {-0.9999999999999999, 1.}, {
                    6.123233995736766*^-17, 1.}, {-5., 2.0000000000000004`}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 20, 20, 8, 20, 20, 20, 20, 8, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, ImageSize -> {325.5, 151.}, AspectRatio -> 
                    Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{24., 26.5}, {27., 14.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "mn"], 
                    NeuralNetworks`NetPath["Nodes", "3"], 
                    NeuralNetworks`NetPath["Nodes", "2"], 
                    NeuralNetworks`NetPath["Inputs", "sd"], 
                    NeuralNetworks`NetPath["Nodes", "4"], 
                    NeuralNetworks`NetPath["Nodes", "5"], 
                    NeuralNetworks`NetPath["Nodes", "6"], 
                    NeuralNetworks`NetPath["Nodes", "1"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association["mn" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT], "sd" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    Association[
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Power, 
                    NeuralNetworks`Private`ScalarSymbol[1], 2.}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 2., 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[2]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 2., 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Plus, 1., 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT], "3" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{NeuralNetworks`SizeT}, 
                    NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]]], "6" -> 
                    Association[
                    "Type" -> "Summation", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{NeuralNetworks`SizeT}, 
                    NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]]], "1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[NeuralNetworks`Private`ScalarSymbol[2] -> {
                    Times, -0.5, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]]]]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"mn\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"tensor\"", "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{"\"sd\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"tensor\"", "SummaryItem"], "", "", "", ""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7396622608373156`*^9, 3.7396623048376093`*^9, 3.739662490138748*^9, 
   3.739662677868455*^9, {3.7396627190934453`*^9, 3.739662766685849*^9}, 
   3.739662951665894*^9, 3.7396688808984756`*^9, 3.7397059847251883`*^9, 
   3.739715928031291*^9, 3.7397163059861856`*^9, 3.73971819227499*^9, 
   3.739719258063177*^9, 3.7397197586233573`*^9, 3.7397379954984074`*^9, {
   3.7397382835968947`*^9, 3.739738311949894*^9}, 3.7397390042925987`*^9, 
   3.739739343693228*^9, 3.739757006512022*^9, 3.739792669931624*^9, 
   3.7397969432157946`*^9, 3.7397974238974595`*^9, 3.7398008508822117`*^9, {
   3.7398017857464714`*^9, 3.739801814774091*^9}, 3.7398025810910163`*^9, {
   3.7398027829341545`*^9, 3.7398028054091625`*^9}, {3.739802941170739*^9, 
   3.7398029671645093`*^9}, 3.7398031317302675`*^9, {3.7398032242020454`*^9, 
   3.739803227678946*^9}, 3.7398036281841745`*^9, 3.7398042540998487`*^9, 
   3.7398049448813276`*^9, 3.7398078603269715`*^9, {3.739807928556408*^9, 
   3.739807937586903*^9}, 3.7398080723619013`*^9, 3.7398081227473497`*^9, 
   3.7398081990217247`*^9, {3.7398084195206194`*^9, 3.7398084521997447`*^9}, {
   3.7398085639273005`*^9, 3.7398085722241597`*^9}, {3.739808653565483*^9, 
   3.7398086600603933`*^9}, 3.7398089937459397`*^9, {3.7398092395429955`*^9, 
   3.739809264205038*^9}, 3.7398093573145304`*^9, 3.7398094245657187`*^9, 
   3.739809614962909*^9, 3.739809647076957*^9, 3.739810072267169*^9, 
   3.73981021302682*^9, 3.7398114198866787`*^9, 3.739915487456744*^9, {
   3.7399181577939234`*^9, 3.7399181837330804`*^9}, 3.7472647998162336`*^9, 
   3.7472649252192335`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"478b2d1c-b30d-4fba-82a8-6f4ac1106b3d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Loss", "Subsection",
 CellChangeTimes->{{3.7398013789742985`*^9, 
  3.7398013902722845`*^9}},ExpressionUUID->"ad5e5560-d72d-44fd-87ec-\
5a9600863698"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"loss", " ", "=", " ", 
  RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"ReplicateLayer", "[", "28", "]"}], ",", " ", 
      RowBox[{"TotalLayer", "[", "]"}], " ", ",", " ", 
      RowBox[{"ReshapeLayer", "[", 
       RowBox[{"{", "28", "}"}], "]"}], ",", " ", 
      RowBox[{"AggregationLayer", "[", 
       RowBox[{"Mean", ",", " ", "All"}], "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"NetPort", "[", "\"\<latentReal\>\"", "]"}], "\[Rule]", 
       RowBox[{"1", "\[Rule]", "2"}]}], ",", " ", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"NetPort", "[", "\"\<imageVector\>\"", "]"}], "\[Rule]", "2"}],
       ",", "\[IndentingNewLine]", 
      RowBox[{"2", "\[Rule]", 
       RowBox[{"3", "\[Rule]", "4"}]}]}], "\[IndentingNewLine]", "}"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7398013789742985`*^9, 3.7398014089810576`*^9}, {
   3.7398014472325907`*^9, 3.7398014544359026`*^9}, {3.739801502096683*^9, 
   3.7398015059698453`*^9}, {3.7398015947256336`*^9, 
   3.7398015948416057`*^9}, {3.739802786636153*^9, 3.7398027883371468`*^9}, {
   3.7398078755079536`*^9, 3.7398079036247773`*^9}, {3.7398079418822684`*^9, 
   3.739807942665143*^9}, {3.739808134814577*^9, 3.7398081355421376`*^9}, {
   3.7398081786517525`*^9, 3.7398081810198183`*^9}, {3.7398102907862372`*^9, 
   3.739810311839627*^9}, 3.739810379373747*^9, {3.7398104790237556`*^9, 
   3.739810550371975*^9}, {3.739810691196947*^9, 3.739810692833015*^9}, {
   3.739810748270138*^9, 3.7398107973240585`*^9}, {3.739811042899146*^9, 
   3.739811056034383*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"7d2529f9-03da-4c54-9557-09b8b5cee6ea"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["4", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], {
                    
                    LineBox[{{-5., 3.061616997868383*^-16}, {-4., 
                    2.4492935982947064`*^-16}}], 
                    
                    LineBox[{{-4., 2.4492935982947064`*^-16}, {-3., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-4., 1.0000000000000002`}, {-3., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-3., 1.0000000000000002`}, {-2., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-2., 1.0000000000000002`}, {-0.9999999999999999,
                     1.}}], 
                    
                    LineBox[{{-0.9999999999999999, 1.}, {
                    6.123233995736766*^-17, 1.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-4.4, 
                    2.694222958124177*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-3.4, 
                    0.6000000000000002}, {-0.25, 0}, 
                    Offset[8], {1., 1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-3.4, 
                    1.0000000000000002`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, 
                    1.0000000000000002`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    1.}, {-0.25, 0}, 
                    Offset[8], {1., -2.220446049250313*^-16}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-0.3999999999999999, 1.}, {-0.25, 0}, 
                    Offset[8], {1., 0.}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-5., 3.061616997868383*^-16}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"latentReal\"", Bold, StripOnInput -> False]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["latentReal", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-4., 2.4492935982947064`*^-16}], 
                    Offset[{10, 10}, {-4., 2.4492935982947064`*^-16}]]}, 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\[VerticalEllipsis]\"", 10, StripOnInput -> False], 
                    TraditionalForm], 
                    Offset[{0, -1}, {-4., 2.4492935982947064`*^-16}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ReplicateLayer", "[", "28", "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["1", Bold], 
                    Style[
                    HoldForm[
                    ReplicateLayer[28]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-3., 1.0000000000000002`}], 
                    Offset[{10, 10}, {-3., 1.0000000000000002`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"+\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-3., 1.0000000000000002`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"TotalLayer", "[", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["2", Bold], 
                    Style[
                    HoldForm[
                    TotalLayer["Inputs" -> {Automatic, Automatic}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-4., 1.0000000000000002`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"imageVector\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["imageVector", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-2., 1.0000000000000002`}], 
                    Offset[{10, 10}, {-2., 1.0000000000000002`}]]}, 
                    InsetBox[
                    FormBox["\"R\"", TraditionalForm], 
                    Offset[{0, -1}, {-2., 1.0000000000000002`}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"3\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ReshapeLayer", "[", 
                    RowBox[{"{", "28", "}"}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["3", Bold], 
                    Style[
                    HoldForm[
                    ReshapeLayer[{28}]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-0.9999999999999999, 1.}], 
                    Offset[{10, 10}, {-0.9999999999999999, 1.}]]}, 
                    InsetBox[
                    FormBox["\"A\"", TraditionalForm], 
                    Offset[{0, -1}, {-0.9999999999999999, 1.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"4\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"AggregationLayer", "[", 
                    RowBox[{"Mean", ",", "All", ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "28"}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["4", Bold], 
                    Style[
                    HoldForm[
                    AggregationLayer[Mean, All, "Input" -> 28]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{6.123233995736766*^-17, 1.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    StyleBox[{{
                    InsetBox[
                    FormBox["\"latentReal\"", TraditionalForm], 
                    Offset[{0, -7}, {-5., 3.061616997868383*^-16}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    Offset[{0, -13}, {-4., 2.4492935982947064`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    Offset[{0, -13}, {-3., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"imageVect..\"", "\"imageVector\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "imageVector", "Tooltip"]& ], 
                    TraditionalForm], 
                    Offset[{0, -7}, {-4., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{0, -13}, {-2., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    Offset[{0, -13}, {-0.9999999999999999, 1.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    Offset[{0, -7}, {6.123233995736766*^-17, 1.}], {0, 1.}, 
                    Automatic, {1, 0}]}}, FontColor -> GrayLevel[0.5], 
                    StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-4.4, 
                    2.694222958124177*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{-3.889087296526011, 3.889087296526011}, {-3.4, 
                    0.6000000000000002}], {0., -0.17}, Automatic, {
                    0.7071067811865475, 0.7071067811865475}], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-3.4, 1.0000000000000002`}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0., 5.5}, {-2.4000000000000004`, 
                    1.0000000000000002`}], {0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"28\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{1.2212453270876722`*^-15, 5.5}, {-1.4, 1.}], {
                    0., -0.17}, Automatic, {1., -2.220446049250313*^-16}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-0.3999999999999999, 1.}], {0., -0.17},
                     Automatic, {1., 0.}]}, FontColor -> GrayLevel[0.7], 
                    FontSize -> 8, FontWeight -> "Thin", StripOnInput -> 
                    False]}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    Part[{{-5., 3.061616997868383*^-16}, {-4., 
                    2.4492935982947064`*^-16}, {-3., 
                    1.0000000000000002`}, {-4., 1.0000000000000002`}, {-2., 
                    1.0000000000000002`}, {-0.9999999999999999, 1.}, {
                    6.123233995736766*^-17, 1.}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 20, 20, 8, 20, 20, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, ImageSize -> {340., 96.}, AspectRatio -> Full,
                     PlotRangePadding -> 0, 
                    ImagePadding -> {{38.499999999999986`, 26.5}, {27., 14.}},
                     ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "latentReal"], 
                    NeuralNetworks`NetPath["Nodes", "1"], 
                    NeuralNetworks`NetPath["Nodes", "2"], 
                    NeuralNetworks`NetPath["Inputs", "imageVector"], 
                    NeuralNetworks`NetPath["Nodes", "3"], 
                    NeuralNetworks`NetPath["Nodes", "4"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association["latentReal" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT], "imageVector" -> 
                    NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    Association[
                    "1" -> Association[
                    "Type" -> "Replicate", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[28], 
                    "Level" -> 1], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Reshape", "Arrays" -> Association[], 
                    "Parameters" -> Association["Dimensions" -> {28}], 
                    "Inputs" -> Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{28}, NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Aggregation", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> Mean, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[All]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]]]]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"latentReal\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"tensor\"", "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{"\"imageVector\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"tensor\"", "SummaryItem"], "", "", "", ""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7398015066310177`*^9, 3.7398015954316654`*^9, 3.7398027889380555`*^9, 
   3.7398032319508896`*^9, 3.7398079043414307`*^9, {3.7398079396560135`*^9, 
   3.7398079435324974`*^9}, 3.7398081360533247`*^9, 3.739808181587595*^9, 
   3.739810381543517*^9, 3.7398105552332664`*^9, 3.739810693417615*^9, {
   3.73981074901476*^9, 3.7398108278640184`*^9}, {3.739811048543202*^9, 
   3.739811056667161*^9}, 3.739811359004665*^9, 3.739811422278698*^9, 
   3.7472649265302353`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"8095b382-c677-428c-9036-f45bcb67b046"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["", "Subsection"]], "Section",
 CellChangeTimes->{{3.7396580504733496`*^9, 3.7396580704733276`*^9}, {
  3.739658183848325*^9, 3.7396581867788134`*^9}, {3.7396607866514063`*^9, 
  3.7396607908372393`*^9}, {3.739801371376523*^9, 
  3.739801373024659*^9}},ExpressionUUID->"1625ce47-7e38-4ccf-93bd-\
d49aa95d21db"],

Cell[CellGroupData[{

Cell["Further AssemBling", "Subsection",
 CellChangeTimes->{{3.7395517151356115`*^9, 
  3.7395517185883427`*^9}},ExpressionUUID->"0cd985cc-3af6-4533-854e-\
e0be71215472"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vaeNet", " ", "=", " ", 
  RowBox[{"NetInitialize", "[", 
   RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<enc\>\"", "->", "encoder"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<mn\>\"", "->", "mn"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<sd\>\"", "->", " ", "sd"}], ",", 
       RowBox[{"\"\<expSd\>\"", "\[Rule]", "expSd"}], ",", 
       RowBox[{"\"\<sdEpsilon\>\"", "\[Rule]", 
        RowBox[{"ThreadingLayer", "[", "Times", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<z\>\"", "->", 
        RowBox[{"TotalLayer", "[", "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<dec\>\"", "->", "decoder"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<imageLoss\>\"", "\[Rule]", "imageLoss"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<latentLoss\>\"", "\[Rule]", "latentLoss"}]}], 
      "\[IndentingNewLine]", "|>"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
        "\"\<enc\>\""}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<enc\>\"", "\[Rule]", "\"\<mn\>\""}], ",", 
       "\[IndentingNewLine]", " ", 
       RowBox[{"\"\<enc\>\"", "\[Rule]", "\"\<sd\>\""}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<sd\>\"", "\[Rule]", "\"\<expSd\>\""}], ",", 
       RowBox[{"\"\<expSd\>\"", "\[Rule]", "\"\<sdEpsilon\>\""}], ",", " ", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<random\>\"", "]"}], " ", "\[Rule]", 
        "\"\<sdEpsilon\>\""}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<mn\>\"", "\[Rule]", "\"\<z\>\""}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<sdEpsilon\>\"", "\[Rule]", "\"\<z\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<z\>\"", "\[Rule]", "\"\<dec\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<dec\>\"", "\[Rule]", 
        RowBox[{"NetPort", "[", "\"\<Output\>\"", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"latent", " ", "loss"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\"\<sd\>\"", "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<latentLoss\>\"", ",", "\"\<sd\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<mn\>\"", "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<latentLoss\>\"", ",", "\"\<mn\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"image", " ", "loss"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\"\<dec\>\"", "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<imageLoss\>\"", ",", " ", "\"\<inDec\>\""}], "]"}]}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<imageLoss\>\"", ",", " ", "\"\<inInput\>\""}], "]"}]}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"image", " ", "loss8"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\"\<latentLoss\>\"", "\[Rule]", 
        RowBox[{"NetPort", "[", "\"\<latentLoss\>\"", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<imageLoss\>\"", "\[Rule]", 
        RowBox[{"NetPort", "[", "\"\<imageLoss\>\"", "]"}]}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Output\>\"", "->", 
      RowBox[{"NetDecoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Image\>\"", ",", " ", "\"\<Grayscale\>\""}], "}"}], 
       "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", 
      RowBox[{"NetEncoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Image\>\"", ",", " ", 
         RowBox[{"{", 
          RowBox[{"28", ",", "28"}], "}"}], ",", " ", "\"\<Grayscale\>\""}], 
        "}"}], "]"}]}]}], "\[IndentingNewLine]", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7395667951751738`*^9, 3.739566823119445*^9}, {
   3.739574834995954*^9, 3.7395748652310114`*^9}, {3.73957491718008*^9, 
   3.739574917426771*^9}, {3.739575282194539*^9, 3.7395753031761303`*^9}, {
   3.7395753720648174`*^9, 3.7395754054285545`*^9}, {3.739575753558014*^9, 
   3.739575818615221*^9}, {3.739575923773177*^9, 3.739576032295744*^9}, {
   3.73957615725283*^9, 3.739576173140894*^9}, {3.7395779455852795`*^9, 
   3.7395780210064535`*^9}, {3.739578073895379*^9, 3.739578083263719*^9}, {
   3.739578120244849*^9, 3.7395781445247774`*^9}, {3.7395798772539005`*^9, 
   3.739579955987113*^9}, {3.7395799869009967`*^9, 3.7395800066441164`*^9}, {
   3.739580051114643*^9, 3.739580061781546*^9}, {3.7395800954997687`*^9, 
   3.739580113756624*^9}, {3.7395801730651765`*^9, 3.7395801734785357`*^9}, {
   3.73958040387289*^9, 3.739580415517378*^9}, {3.739642073118585*^9, 
   3.739642075307708*^9}, {3.7396422885419416`*^9, 3.7396423085812283`*^9}, {
   3.739653107913578*^9, 3.739653156395689*^9}, {3.7396536936749983`*^9, 
   3.739653721150965*^9}, {3.739653832160608*^9, 3.7396538531965933`*^9}, {
   3.739654031706568*^9, 3.7396540386932983`*^9}, {3.739654494399378*^9, 
   3.739654507330639*^9}, {3.7396556160251646`*^9, 3.739655622666688*^9}, {
   3.739655676499963*^9, 3.739655695158108*^9}, {3.739659126358765*^9, 
   3.7396592334493318`*^9}, {3.739659496978977*^9, 3.7396595181507273`*^9}, {
   3.7396603267595463`*^9, 3.739660327091504*^9}, {3.7396603759149466`*^9, 
   3.7396603902156286`*^9}, {3.7396604372275276`*^9, 3.739660485491572*^9}, {
   3.73966051816661*^9, 3.739660533257409*^9}, {3.739660566399602*^9, 
   3.739660592820536*^9}, {3.7396606785559244`*^9, 3.7396607348536077`*^9}, {
   3.739660770010747*^9, 3.7396607786615324`*^9}, {3.7396612178446693`*^9, 
   3.7396612550095005`*^9}, {3.739662334945963*^9, 3.7396623706221595`*^9}, {
   3.7396624291338043`*^9, 3.7396624649212823`*^9}, {3.7396625144474583`*^9, 
   3.739662523829752*^9}, {3.739662608901328*^9, 3.73966270439748*^9}, {
   3.7396627454343853`*^9, 3.7396627463531523`*^9}, {3.7396629139929028`*^9, 
   3.7396629310823264`*^9}, {3.739662961278787*^9, 3.739663026674754*^9}, 
   3.7397188827808523`*^9, {3.739718970465977*^9, 3.7397189767068577`*^9}, {
   3.7397191806097207`*^9, 3.7397192406211147`*^9}, 3.7398014597348666`*^9, {
   3.7398034656582584`*^9, 3.739803490613632*^9}, {3.7398035244403687`*^9, 
   3.7398035402987995`*^9}, {3.7398036929205694`*^9, 
   3.7398037088200207`*^9}, {3.739803945479252*^9, 3.7398039707659965`*^9}, {
   3.7398040228689985`*^9, 3.7398040257403917`*^9}, {3.739804370291984*^9, 
   3.739804370764393*^9}, 3.7398049621003094`*^9, {3.7398060601874127`*^9, 
   3.739806113406682*^9}, {3.7398071373402176`*^9, 3.7398071524626684`*^9}, {
   3.7398072721425514`*^9, 3.7398072788674555`*^9}, {3.7398076612231283`*^9, 
   3.7398076776800346`*^9}, {3.7398077150159154`*^9, 
   3.7398077215323224`*^9}, {3.7398077789631224`*^9, 
   3.7398077900835953`*^9}, {3.7398082170684934`*^9, 
   3.7398082243783016`*^9}, {3.7398082778213615`*^9, 
   3.7398083143248377`*^9}, {3.7398083516687603`*^9, 3.739808358203776*^9}, {
   3.7398094608180203`*^9, 3.73980947990317*^9}, {3.7398102237285357`*^9, 
   3.7398102555987115`*^9}, {3.7399153818513737`*^9, 
   3.7399154159782753`*^9}, {3.739917022557266*^9, 3.739917025949258*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"31419281-fdd4-4dbc-8105-f2287a04b63a"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of outputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["3", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["9", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], {
                    
                    LineBox[{{-8., 4.898587196589413*^-16}, {-7., 
                    4.286263797015736*^-16}}], 
                    
                    LineBox[{{-2., -0.9999999999999999}, {-1., \
-0.9999999999999999}}], 
                    
                    LineBox[{{-7., 4.286263797015736*^-16}, {-6., 
                    3.6739403974420594`*^-16}}], 
                    
                    LineBox[{{-7., 
                    4.286263797015736*^-16}, {-6., -0.9999999999999997}}], 
                    
                    LineBox[{{-6., 
                    3.6739403974420594`*^-16}, {-5., -0.9999999999999997}}], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQDQESB7i65vlYVu6yWZn+5tHX8+IHylZJbbJ22WUT
uYTH5u4s8QNvu1yVVnHusuHZlsC9LUH8QKG2/NyWkzttDs95EdCgKH7gb/dy
pdPNO23qI0AaxA7MWHNvU63FThv7l5PtXk4WO2Dbe8R3zvMdNiz+25+1u4od
eKsb+Vlt4g6bs518rBKfRA+s7JuzWNZ0h82smSAgeqBgfV9cw+XtNmDtdqIH
bAxuyEnmb7ex7Hts0fdY5ADXRsX7G7m223R2gIDIgWuG2fO9lm2zudmke6NJ
V+TA4k1b4h87brPRqL2kXntJ+EC+8T/5mrtbbSrKQUD4gM0W9wcilVttjhfK
AJHwAU7TiQvWimy1Ec85KJZzUOjAta23Etw2bIG6R/BA3oyTF79lbrZ5BXaP
4AErSeFJ/ayboe4ROMAxKyZIY+Emmy6wewQOXJVaJnTQZpPNDbB7BA4smP3+
UuSNjTYBv5b4/1rCfyBPxnLyp+KNNh/egQDfAau5TcHd/BttwMZZ8B1glzsj
rLJ6g40e2ADeA1fmiV7Z47bB5uwZEOA54GC/T2P1kfU24OiS5jlwpmHRvALG
9Ta/EicafSjhPuDmpPk/1nOdTQvI+htcB5Y1B3kVz1kLDX+uA+9c5Bo2/Fpj
U31ML+7/Hs4DSm09C0RT1kD9x3nAzn3u6kU3VtuAlZ/iOODSEbAwPGK1zRoD
dSuRBI4DRp7LGk0er7KBpB8OaPpZZQMA47MdMg==
                    "]], 
                    
                    LineBox[{{-6., -0.9999999999999997}, {-5., \
-2.9999999999999996`}}], 
                    
                    LineBox[{{-6., -0.9999999999999997}, {-5., \
-0.9999999999999997}}], 
                    
                    LineBox[{{-5., -2.9999999999999996`}, {-4., \
-1.9999999999999998`}}], 
                    
                    LineBox[{{-5., -1.9999999999999998`}, {-4., \
-1.9999999999999998`}}], 
                    
                    LineBox[{{-4., -1.9999999999999998`}, {-3., 
                    1.8369701987210297`*^-16}}], 
                    
                    LineBox[{{-3., 1.8369701987210297`*^-16}, {-2., 
                    1.2246467991473532`*^-16}}], 
                    
                    LineBox[{{-2., 1.2246467991473532`*^-16}, {-1., 
                    6.123233995736766*^-17}}], 
                    
                    LineBox[{{-2., 
                    1.2246467991473532`*^-16}, {-1., -0.9999999999999999}}], 
                    
                    LineBox[{{-1., -0.9999999999999999}, \
{-6.123233995736766*^-17, -1.}}], 
                    
                    LineBox[{{-5., -0.9999999999999997}, {-4., \
-0.9999999999999998}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-7.4, 
                    4.531193156845207*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-1.4, -0.9999999999999998}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-6.4, 
                    3.9188697572715305`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-6.4, -0.5999999999999995}, {-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-5.4, -0.5999999999999996}, {-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-4.355555555555556, 
                    2.667008584809791*^-16}, {-0.25, 0}, 
                    Offset[8], {
                    0.08888888888888857, -5.442874662877157*^-18}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-5.417705098312485, -2.164589803375031}, {-0.25,
                     0}, 
                    Offset[8], {1., -2.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-5.4, -0.9999999999999997}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-4.4, -2.3999999999999995`}, {-0.25, 0}, 
                    Offset[8], {1., 0.9999999999999998}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-4.4, -1.9999999999999996`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-3.417705098312484, -0.8354101966249685}, \
{-0.25, 0}, 
                    Offset[8], {1., 2.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, 1.4695761589768238`*^-16},
                     {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736765*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    8.572527594031473*^-17}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736766*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-1.4, -0.5999999999999999}, {-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-0.4000000000000001, -1.}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999999, -1.1102230246251565`*^-16}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-4.4, -0.9999999999999998}, {-0.25, 0}, 
                    Offset[8], {1., -1.1102230246251565`*^-16}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-8., 4.898587196589413*^-16}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-7., 4.286263797015736*^-16}], 
                    Offset[{12, 12}, {-7., 4.286263797015736*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-7., 4.286263797015736*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"enc\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "10", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["enc", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[10]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-1., -0.9999999999999999}], 
                    Offset[{12, 12}, {-1., -0.9999999999999999}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 0.,
                     BaseStyle -> GrayLevel[
                    0.4]], {-1., -0.9999999999999999}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"imageLoss\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "5", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["imageLoss", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[5], 
                    Skeleton[7]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-6., 3.6739403974420594`*^-16}], 
                    Offset[{10, 10}, {-6., 3.6739403974420594`*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[
                    
                    GraphicsComplexBox[{{0.1, 0}, {-0.3, 1}, {0.5, 1}, {
                    1.3, 1}, {0.9, 0}}, {{
                    Opacity[0.2], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[3.5], 
                    RGBColor[0.33, 0.33, 0.33], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 18], {-6., 
                    3.6739403974420594`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"mn\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"LinearLayer", "[", 
                    RowBox[{
                    RowBox[{"{", "8", "}"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "5184"}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["mn", Bold], 
                    Style[
                    HoldForm[
                    LinearLayer[{8}, "Input" -> 5184]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-6., -0.9999999999999997}], 
                    Offset[{12, 12}, {-6., -0.9999999999999997}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-6., -0.9999999999999997}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"sd\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["sd", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[2]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-5., -0.9999999999999997}], 
                    Offset[{12, 12}, {-5., -0.9999999999999997}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 0.,
                     BaseStyle -> GrayLevel[
                    0.4]], {-5., -0.9999999999999997}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"latentLoss\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "6", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["latentLoss", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[6], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-3., 1.8369701987210297`*^-16}], 
                    Offset[{10, 10}, {-3., 1.8369701987210297`*^-16}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"+\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-3., 1.8369701987210297`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"z\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"TotalLayer", "[", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"8", ",", "8"}], "}"}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["z", Bold], 
                    Style[
                    HoldForm[
                    TotalLayer["Inputs" -> {8, 8}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-5., -2.9999999999999996`}], 
                    Offset[{10, 10}, {-5., -2.9999999999999996`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], 
                    TraditionalForm]], {-5., -2.9999999999999996`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"expSd\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"Slot", "[", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "]"}], "]"}], "&"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "8"}]}], "]"}], HoldForm],
                     FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["expSd", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[Exp[#]& , {4, 3}], "Input" -> 8]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-4., -1.9999999999999998`}], 
                    Offset[{10, 10}, {-4., -1.9999999999999998`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[Times]\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-4., -1.9999999999999998`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"sdEpsilon\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{"Times", ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"8", ",", "8"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["sdEpsilon", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[Times, "Inputs" -> {8, 8}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-5., -1.9999999999999998`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"random\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["random", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 10), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-2., 1.2246467991473532`*^-16}], 
                    Offset[{12, 12}, {-2., 1.2246467991473532`*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-2., 
                    1.2246467991473532`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"dec\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "17", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["dec", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[17]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 11), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1., 6.123233995736766*^-17}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 12), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-6.123233995736766*^-17, -1.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"imageLoss\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["imageLoss", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 13), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-4., -0.9999999999999998}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"latentLoss\"", Bold, StripOnInput -> False]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["latentLoss", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 14), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-2., -0.9999999999999999}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    StyleBox[{{
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    Offset[{0, -7}, {-8., 4.898587196589413*^-16}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"enc\"", TraditionalForm], 
                    Offset[{0, -15}, {-7., 4.286263797015736*^-16}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"imageLoss\"", TraditionalForm], 
                    Offset[{0, -15}, {-1., -0.9999999999999999}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"mn\"", TraditionalForm], 
                    Offset[{0, -13}, {-6., 3.6739403974420594`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"sd\"", TraditionalForm], 
                    Offset[{0, -15}, {-6., -0.9999999999999997}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"latentLoss\"", TraditionalForm], 
                    Offset[{0, -15}, {-5., -0.9999999999999997}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"z\"", TraditionalForm], 
                    Offset[{0, -13}, {-3., 1.8369701987210297`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"expSd\"", TraditionalForm], 
                    Offset[{0, -13}, {-5., -2.9999999999999996`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"sdEpsilon\"", TraditionalForm], 
                    Offset[{0, -13}, {-4., -1.9999999999999998`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"random\"", TraditionalForm], 
                    Offset[{0, -7}, {-5., -1.9999999999999998`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"dec\"", TraditionalForm], 
                    Offset[{0, -15}, {-2., 1.2246467991473532`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    Offset[{0, -7}, {-1., 6.123233995736766*^-17}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"imageLoss\"", TraditionalForm], 
                    Offset[{0, -7}, {-6.123233995736766*^-17, -1.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"latentLoss\"", TraditionalForm], 
                    Offset[{0, -7}, {-4., -0.9999999999999998}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    Offset[{0, -7}, {-2., -0.9999999999999999}], {0, 1.}, 
                    Automatic, {1, 0}]}}, FontColor -> GrayLevel[0.5], 
                    StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-7.4, 
                    4.531193156845207*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{0., 5.5}, {-1.4, -0.9999999999999998}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"5184\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-6.4, 
                    3.9188697572715305`*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"5184\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.889087296526011, 
                    3.889087296526011}, {-6.4, -0.5999999999999995}], {
                    0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.889087296526011, 
                    3.889087296526011}, {-5.4, -0.5999999999999996}], {
                    0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.367778697655253*^-16, 5.5}, {-4.355555555555556,
                     2.667008584809791*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736824*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{4.919349550499537, 
                    2.4596747752497685`}, {-5.417705098312485, \
-2.164589803375031}], {0., -0.17}, Automatic, {
                    0.4472135954999579, -0.8944271909999159}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{0., 5.5}, {-5.4, -0.9999999999999997}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{-3.889087296526011, 
                    3.8890872965260117`}, {-4.4, -2.3999999999999995`}], {
                    0., -0.17}, Automatic, {0.7071067811865476, 
                    0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{0., 5.5}, {-4.4, -1.9999999999999996`}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-4.919349550499537, 
                    2.4596747752497685`}, {-3.417705098312484, \
-0.8354101966249685}], {0., -0.17}, Automatic, {0.4472135954999579, 
                    0.8944271909999159}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.3677786976552205`*^-16, 
                    5.5}, {-2.4000000000000004`, 1.4695761589768238`*^-16}], {
                    0., -0.17}, Automatic, {1., -6.123233995736765*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.3677786976552215`*^-16, 5.5}, {-1.4, 
                    8.572527594031473*^-17}], {0., -0.17}, Automatic, {
                    1., -6.123233995736766*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.889087296526011, 
                    3.889087296526011}, {-1.4, -0.5999999999999999}], {
                    0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    
                    Offset[{6.106226635438362*^-16, 
                    5.5}, {-0.4000000000000001, -1.}], {0., -0.17}, 
                    Automatic, {1., -1.1102230246251568`*^-16}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    
                    Offset[{6.106226635438361*^-16, 
                    5.5}, {-4.4, -0.9999999999999998}], {0., -0.17}, 
                    Automatic, {1., -1.1102230246251565`*^-16}]}, FontColor -> 
                    GrayLevel[0.7], FontSize -> 8, FontWeight -> "Thin", 
                    StripOnInput -> False]}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    Part[{{-8., 4.898587196589413*^-16}, {-7., 
                    4.286263797015736*^-16}, {-1., -0.9999999999999999}, {-6.,
                     3.6739403974420594`*^-16}, {-6., -0.9999999999999997}, \
{-5., -0.9999999999999997}, {-3., 
                    1.8369701987210297`*^-16}, {-5., -2.9999999999999996`}, \
{-4., -1.9999999999999998`}, {-5., -1.9999999999999998`}, {-2., 
                    1.2246467991473532`*^-16}, {-1., 
                    6.123233995736766*^-17}, {-6.123233995736766*^-17, -1.}, \
{-4., -0.9999999999999998}, {-2., -0.9999999999999999}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 24, 24, 20, 24, 24, 20, 20, 20, 8, 24, 8, 8, 8, 
                    8}, NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, ImageSize -> {503.5, 211.}, AspectRatio -> 
                    Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{28., 35.5}, {28., 18.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "enc"], 
                    NeuralNetworks`NetPath["Nodes", "imageLoss"], 
                    NeuralNetworks`NetPath["Nodes", "mn"], 
                    NeuralNetworks`NetPath["Nodes", "sd"], 
                    NeuralNetworks`NetPath["Nodes", "latentLoss"], 
                    NeuralNetworks`NetPath["Nodes", "z"], 
                    NeuralNetworks`NetPath["Nodes", "expSd"], 
                    NeuralNetworks`NetPath["Nodes", "sdEpsilon"], 
                    NeuralNetworks`NetPath["Inputs", "random"], 
                    NeuralNetworks`NetPath["Nodes", "dec"], 
                    NeuralNetworks`NetPath["Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "imageLoss"], 
                    NeuralNetworks`NetPath["Outputs", "latentLoss"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association["Input" -> NetEncoder["Image", 
                    Association[
                    "ImageSize" -> {28, 28}, "ColorSpace" -> "Grayscale", 
                    "ColorChannels" -> 1, "MeanImage" -> None, 
                    "VarianceImage" -> None], 
                    
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "random" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    Association["Output" -> NetDecoder["Image", 
                    Association[
                    "ColorSpace" -> "Grayscale", "MeanImage" -> None, 
                    "VarianceImage" -> None, "$Dimensions" -> {28, 28}, 
                    "$Channels" -> 1], 
                    
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "latentLoss" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT], 
                    "imageLoss" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    Association[
                    "enc" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{64, 1, 
                    4, 4}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {4, 4}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {2, 2}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 1, 
                    "$GroupNumber" -> 1, "$InputSize" -> {28, 28}, 
                    "$OutputSize" -> {15, 15}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Max, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {64, 15, 15}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{64, 64,
                     4, 4}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {4, 4}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {2, 2}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 64, 
                    "$GroupNumber" -> 1, "$InputSize" -> {15, 15}, 
                    "$OutputSize" -> {8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Max, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {64, 8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{64, 64,
                     4, 4}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {4, 4}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {2, 2}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 64, 
                    "$GroupNumber" -> 1, "$InputSize" -> {8, 8}, 
                    "$OutputSize" -> {9, 9}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]]], "8" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Max, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {64, 9, 9}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]]], "9" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]]], "10" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{5184}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{5184}, NeuralNetworks`RealT]]], 
                    "mn" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{8, 5184}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{8}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {8}, "$OutputSize" -> 8, 
                    "$InputSize" -> 5184, "$InputDimensions" -> {5184}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{5184}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], "sd" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{8, 
                    5184}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{8}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {8}, "$OutputSize" -> 8, 
                    "$InputSize" -> 5184, "$InputDimensions" -> {5184}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{5184}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 0.5, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{5184}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], 
                    "expSd" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], 
                    "sdEpsilon" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], "z" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], 
                    "dec" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{25, 
                    8}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{25}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {25}, "$OutputSize" -> 25, 
                    "$InputSize" -> 8, "$InputDimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{25}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Max, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {25}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{25}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{25}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{49, 
                    25}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{49}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {49}, "$OutputSize" -> 49, 
                    "$InputSize" -> 25, "$InputDimensions" -> {25}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{25}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{49}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Max, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {49}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{49}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{49}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Reshape", "Arrays" -> Association[], 
                    "Parameters" -> Association["Dimensions" -> {1, 7, 7}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{49}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1, 7, 7}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Deconvolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{1, 64, 
                    4, 4}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {4, 4}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {2, 2}, 
                    "Interleaving" -> False, "$InputChannels" -> 1, 
                    "$GroupNumber" -> 1, "$InputSize" -> {7, 7}, 
                    "$OutputSize" -> {12, 12}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 12, 12}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]]], "8" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]]], "9" -> 
                    Association[
                    "Type" -> "Deconvolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{64, 64,
                     4, 4}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {4, 4}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {2, 2}, 
                    "Interleaving" -> False, "$InputChannels" -> 64, 
                    "$GroupNumber" -> 1, "$InputSize" -> {12, 12}, 
                    "$OutputSize" -> {11, 11}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]]], "10" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 11, 11}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]]], "11" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]]], "12" -> 
                    Association[
                    "Type" -> "Deconvolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{64, 64,
                     4, 4}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {4, 4}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {2, 2}, 
                    "Interleaving" -> False, "$InputChannels" -> 64, 
                    "$GroupNumber" -> 1, "$InputSize" -> {11, 11}, 
                    "$OutputSize" -> {10, 10}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 10, 10}, 
                    NeuralNetworks`RealT]]], "13" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 10, 10}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 10, 10}, 
                    NeuralNetworks`RealT]]], "14" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{6400}, 
                    NeuralNetworks`RealT]]], "15" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{784, 
                    6400}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{784}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {784}, "$OutputSize" -> 784, 
                    "$InputSize" -> 6400, "$InputDimensions" -> {6400}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{6400}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "16" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid], "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "17" -> 
                    Association[
                    "Type" -> "Reshape", "Arrays" -> Association[], 
                    "Parameters" -> Association["Dimensions" -> {1, 28, 28}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "13", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "12", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "14", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "13", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "15", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "14", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "16", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "15", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "17", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "16", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "17", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], "imageLoss" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "inDec" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT], "inInput" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[NeuralNetworks`Private`ScalarSymbol[2] -> {
                    Power, 
                    NeuralNetworks`Private`ScalarSymbol[1], 2.}]]], 
                    "$Dimensions" -> {1, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Reshape", "Arrays" -> Association[], 
                    "Parameters" -> Association["Dimensions" -> {28, 28}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{28, 28}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Summation", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "inDec"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "inInput"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5", "Outputs", "Output"]}], "latentLoss" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "mn" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT],
                     "sd" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    "Nodes" -> 
                    Association[
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Power, 
                    NeuralNetworks`Private`ScalarSymbol[1], 2.}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 2., 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[2]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 2., 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Plus, 1., 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "3" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Summation", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]], "1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[NeuralNetworks`Private`ScalarSymbol[2] -> {
                    Times, -0.5, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "mn"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "sd"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "sd"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "3"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}]]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"image\"", "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"image\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{"\"random\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"latentLoss\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}, {"", "", "", "", 
                    StyleBox[
                    TemplateBox[{"\"imageLoss\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7397059898827744`*^9, {3.7397060243717384`*^9, 3.7397060325200596`*^9}, 
   3.7397064717663097`*^9, 3.739715932985835*^9, 3.739716309028764*^9, 
   3.7397182007031107`*^9, 3.7397189027664604`*^9, 3.739718978364338*^9, 
   3.7397192226596165`*^9, 3.7397192604948125`*^9, 3.739719760995125*^9, 
   3.739738001307364*^9, {3.739738288255085*^9, 3.7397383141818953`*^9}, {
   3.739738995760598*^9, 3.739739013670602*^9}, 3.7397390820806007`*^9, 
   3.7397392467749796`*^9, 3.7397393467802362`*^9, 3.739739394182849*^9, 
   3.7397570103611116`*^9, 3.7397573401157465`*^9, 3.7397927577513638`*^9, 
   3.739794496775937*^9, 3.7397969460912013`*^9, 3.739797426127496*^9, 
   3.7398008529359493`*^9, 3.7398027906709976`*^9, {3.73980294509167*^9, 
   3.739802969303913*^9}, {3.7398031333063283`*^9, 3.739803155511769*^9}, 
   3.7398032330853415`*^9, {3.7398034872109966`*^9, 3.7398034912801237`*^9}, 
   3.739803541457939*^9, {3.7398036304990053`*^9, 3.7398036441836843`*^9}, {
   3.739803687951827*^9, 3.7398037094103765`*^9}, {3.7398039735637393`*^9, 
   3.7398039776353655`*^9}, 3.739804026334425*^9, {3.7398042555291214`*^9, 
   3.7398042571874003`*^9}, 3.7398043714886045`*^9, {3.7398045398386097`*^9, 
   3.7398045410411763`*^9}, 3.739804661603113*^9, 3.7398047694674644`*^9, {
   3.7398049461771836`*^9, 3.7398049642554445`*^9}, 3.739805332268571*^9, {
   3.739806103664843*^9, 3.739806114631145*^9}, 3.7398075288293934`*^9, {
   3.73980777484153*^9, 3.7398077906449237`*^9}, 3.7398079067250957`*^9, 
   3.7398079454826117`*^9, 3.739808074065237*^9, {3.7398081259709644`*^9, 
   3.739808137365765*^9}, {3.7398081840965247`*^9, 3.739808200864462*^9}, 
   3.7398082860685167`*^9, {3.739808360036936*^9, 3.739808379010332*^9}, {
   3.739808441394072*^9, 3.7398084563777204`*^9}, {3.739808565907055*^9, 
   3.7398085743385754`*^9}, 3.739808685666136*^9, {3.739809368903793*^9, 
   3.739809385543846*^9}, {3.739809416823183*^9, 3.739809426158105*^9}, 
   3.739809617449951*^9, {3.7398096485251923`*^9, 3.7398096981050415`*^9}, 
   3.739810075819624*^9, 3.7398101161104517`*^9, 3.7398101736964674`*^9, 
   3.7398102108652825`*^9, 3.7398110745736246`*^9, 3.7398113933406563`*^9, 
   3.739811424949652*^9, {3.739915410994813*^9, 3.739915417136042*^9}, 
   3.7399154948845973`*^9, 3.739918186593193*^9, {3.7472649301862335`*^9, 
   3.7472649433162346`*^9}},
 CellLabel->"Out[15]=",ExpressionUUID->"8552dbda-630f-497f-bde9-c90b16d44991"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Training", "Subsection",
 CellChangeTimes->{{3.7395663013480153`*^9, 3.739566307299842*^9}, {
  3.739566381757985*^9, 3.739566386357066*^9}, {3.739580286905179*^9, 
  3.7395802885074787`*^9}, {3.7396461037904787`*^9, 
  3.7396461048373337`*^9}},ExpressionUUID->"4d8708ae-94a3-460d-b70f-\
ce3a512d387e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"mnistDigits", " ", "=", " ", 
   RowBox[{"Parallelize", "[", 
    RowBox[{"First", "/@", 
     RowBox[{"(", 
      RowBox[{"RandomSample", "[", 
       RowBox[{"ResourceData", "[", "\"\<MNIST\>\"", "]"}], "]"}], ")"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.739642590626321*^9, 3.739642610253044*^9}, 
   3.7396427252545133`*^9, 3.7396436122988987`*^9, {3.739663190903102*^9, 
   3.739663215293248*^9}, {3.739664960933978*^9, 3.739664979468237*^9}, {
   3.739665017215391*^9, 3.739665046251326*^9}, {3.739665167789925*^9, 
   3.7396651916921415`*^9}, {3.7396664762716713`*^9, 3.739666476925453*^9}, {
   3.739670020116852*^9, 3.7396700467427545`*^9}, {3.7397061599148703`*^9, 
   3.7397061648762484`*^9}, {3.7397064793461494`*^9, 3.739706482907383*^9}, {
   3.7397148403478346`*^9, 3.7397148626315994`*^9}, {3.739716315324668*^9, 
   3.739716316004016*^9}, {3.7397166637162633`*^9, 3.7397166640941877`*^9}, 
   3.739717186538661*^9, {3.7397185402413063`*^9, 3.7397185645914183`*^9}, {
   3.739718686586492*^9, 3.739718737952986*^9}, {3.7397187815150456`*^9, 
   3.7397187829606915`*^9}, {3.739718871908619*^9, 3.7397188766390915`*^9}, {
   3.7397575240459805`*^9, 3.739757527538845*^9}, {3.7397577796114044`*^9, 
   3.7397578129131603`*^9}, {3.739792841010005*^9, 3.7397928444728394`*^9}, {
   3.739792893798551*^9, 3.7397928967030106`*^9}, {3.7397929335461316`*^9, 
   3.739792935138728*^9}, {3.739793216078777*^9, 3.739793223269508*^9}, 
   3.7397932795072117`*^9, {3.7397933234179935`*^9, 3.739793325644786*^9}, {
   3.7397975243209834`*^9, 3.739797525464043*^9}, {3.7397998687980537`*^9, 
   3.7397998818072977`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"a7c64f03-a37b-4ff4-8fa9-4bfc6c4beb84"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Get", "::", "noopen"}], "MessageName"], " ", ":", 
  "  ", "\<\"Cannot open \
\\!\\(\\*RowBox[{\\\"\\\\\\\"CloudObject`\\\\\\\"\\\"}]\\).\"\>"}]], "Message",\
 "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.7472649619884667`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"c36531be-5601-446f-9f0f-050cc1bccf00"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Get", "::", "noopen"}], "MessageName"], " ", ":", 
  "  ", "\<\"Cannot open \
\\!\\(\\*RowBox[{\\\"\\\\\\\"CloudObject`\\\\\\\"\\\"}]\\).\"\>"}]], "Message",\
 "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.7472649620744667`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"eb1f5604-556a-43ae-a3a1-8c452e087439"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Get", "::", "noopen"}], "MessageName"], " ", ":", 
  "  ", "\<\"Cannot open \
\\!\\(\\*RowBox[{\\\"\\\\\\\"CloudObject`\\\\\\\"\\\"}]\\).\"\>"}]], "Message",\
 "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.7472649621184654`*^9},
 CellLabel->
  "(kernel 3)",ExpressionUUID->"56b49c04-2995-4702-a276-4dcf21c35b8d"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Get", "::", "noopen"}], "MessageName"], " ", ":", 
  "  ", "\<\"Cannot open \
\\!\\(\\*RowBox[{\\\"\\\\\\\"CloudObject`\\\\\\\"\\\"}]\\).\"\>"}]], "Message",\
 "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.747264962145467*^9},
 CellLabel->
  "(kernel 4)",ExpressionUUID->"e1f86be1-765d-49cd-8221-ba66ca4c7dbc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"trainingData", " ", "=", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<random\>\"", "\[Rule]", 
      RowBox[{"RandomVariate", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Length", "@", "mnistDigits"}], ",", "nlatent"}], "}"}]}], 
       "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", "mnistDigits"}]}], 
    "|>"}]}]}]], "Input",
 CellChangeTimes->{{3.7395663013480153`*^9, 3.739566307299842*^9}, {
   3.739566381757985*^9, 3.739566386357066*^9}, {3.739580286905179*^9, 
   3.7395803539419622`*^9}, 3.7395804634373894`*^9, 3.739580557204153*^9, {
   3.7396423400539384`*^9, 3.7396423438215675`*^9}, {3.739643233598317*^9, 
   3.7396432490887737`*^9}, {3.739643349560803*^9, 3.7396433755308723`*^9}, {
   3.739643475800774*^9, 3.7396434841699104`*^9}, {3.739714865813456*^9, 
   3.73971486901542*^9}, {3.7397159371170444`*^9, 3.7397159893040023`*^9}, {
   3.7397160224638925`*^9, 3.7397160306296997`*^9}, {3.7397171892988234`*^9, 
   3.739717191015141*^9}, {3.7397184579718*^9, 3.7397184863056498`*^9}, {
   3.739718530047224*^9, 3.739718538937173*^9}, 3.7397185701808057`*^9, {
   3.7397193149761944`*^9, 3.7397193231060047`*^9}, 3.7397380099403787`*^9, {
   3.7397575305396905`*^9, 3.739757533510538*^9}, 3.7397932542311463`*^9},
 CellLabel->"In[19]:=",ExpressionUUID->"bc184bf2-cdcb-4b06-8822-87c061f3da92"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"random\"\>", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "2.010145426513965`"}], ",", 
                RowBox[{"-", "0.36556053175138975`"}], ",", 
                "0.08190812150274321`", ",", "0.31246273498697297`", ",", 
                "0.35428111288103936`", ",", "1.2161399361831948`", ",", 
                RowBox[{"-", "0.9217348284256563`"}], ",", 
                "1.2723500129297274`"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0.04865924850234112`", ",", 
                RowBox[{"-", "0.9617689403647572`"}], ",", 
                RowBox[{"-", "2.4376079888048126`"}], ",", 
                RowBox[{"-", "0.1899069519741161`"}], ",", 
                RowBox[{"-", "0.512757373753601`"}], ",", 
                "1.5853944287132813`", ",", 
                RowBox[{"-", "2.166135966607987`"}], ",", 
                RowBox[{"-", "1.011551210163736`"}]}], "}"}], ",", 
              TemplateBox[{"59996"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"{", 
               RowBox[{"2.3727017735204634`", ",", 
                RowBox[{"-", "1.235460897729796`"}], ",", 
                RowBox[{"-", "0.017783770499505674`"}], ",", 
                RowBox[{"-", "1.4151318244674085`"}], ",", 
                RowBox[{"-", "0.6562353442803175`"}], ",", 
                "0.43428655928452686`", ",", "1.1186308321933782`", ",", 
                "1.079367361145065`"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "0.7119767749562209`"}], ",", 
                "0.107729657379576`", ",", 
                RowBox[{"-", "0.868805015712149`"}], ",", 
                "0.5987401234009345`", ",", "1.2422805867644475`", ",", 
                RowBox[{"-", "0.14705042953115038`"}], ",", 
                RowBox[{"-", "0.24260978941725034`"}], ",", 
                RowBox[{"-", "0.11457283824433086`"}]}], "}"}]}], "}"}]}], 
           ",", 
           RowBox[{"\<\"Input\"\>", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cp+Dz/9vz5q7HLZbBoszBxT7j/GYucIwsLCxMQB63HlMuEyrHwztj/
HU3uPgtLOlgOSDzAbu31RBsmpiW4HPzcS9gZl9z//weMzuOUuy+1EKdcAwtO
ucVMUkdwSQmz7EKxoaG+AQjqGw7cb0D13/kCKRaot4VBrOLfcKnD0rDgghLG
b+ByKUxMTHYMQIIJRmjNh8kBVeukQrTIFB882MoNZMHkgmDGBTeCHbHAGSH3
OcuZm0XK2fksLFrfy8HlgGDNQhTfrsEdZgMEABT1hBE=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+K4GFZrjgjA4PVAQyZ2wVCTExMHDZMTMIP0KT+ajIxZ++4/+j7fS6m
K6hS35OYuBZBmNzyt1HlNjCxQqXuc6xDMzKDyR7C+POu9gqGXAqYfjpXfSu6
KzOYOFccXT/RRo5J+T663FleJiZOZqAnmI5h+O7/w8WLy2yBUhpvMeVA4B1Q
70bsUv/XMjHV4pA6yskkfg671BsrJiYM90NBGhOT4x/sUvsVmHgf4dAmw8Q0
HYdUMRNT+D/sUg9EmJjKcWh7Jsuk/Q2HHIkAAIzzvZw=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+U4PPdWQUFDP6z/mJK7TZhBgImZuZudJnrSULM7Gntly/nMkuiyxmx
Sha8ATG+abCoPkKR+qAi8hrMuJ8CNPgEitweZma7o+uWLSuXBFmqexxZbj8r
MzMXC8QtHMzMvAXIkk0gCSBgr5lzfI4Ks8hhJLl9XMzMfnv3xk0FcU6bMIs/
h0ttlGZOvvcHzm1lZvaHsd8o86ch2/DLkokJxp7AjCIFNIeZGcYsYD6IKncJ
IcfGfBlV7iQzD4wphR7AqcwdCDMlLiBLzZdgvgdjL2Fm9oBL/rudwCc7F+6h
T67MzBK7L916fePS1tQYZuaEG0iGvFUGBRifOjcwPDkDlv1EsfzJ0khmZjd5
ZofCMw//0xIAAAxshnk=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cCWMmUi0vqpgqzAi65PmbccgbMzPo4pDYwMTOvxi71iImBSfoCDjlm
JuZsHEaC5E78OAYEbzDkWoByB2uABLN12Hs0uTBmJuMEZpAcM3Mxmlwo0C1A
ACGWokid4YFoSX/ypJaZyQbFzmNQ4x5AXYUstw0iF/Qfi5wVVB+QOQVd7hjQ
BWVSTEz/b+aDHHQc3T4eTmZmWVGgZqa6n8hyn1IgZoKJKhSp//+fKkDlJPWx
xEa/EFDOsf8ZpswgBwDA5XzY
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6c9cGDYj0uqHugCHJIgKVySDmA5B9xSWCX3M8AADql6kG4MGx1gDsE0
FOFGDKfuh7tiP9hkDBPBZjGgy+2Hm7gfw6H18ABxwPBgPUzEAcNIsFz9//0O
WP3OgATqccthBGc9bilEJKAbiJCs349NahAAAG9VcIQ=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9sYL0TIwMjI2PgrAdnP6NL8TJBgbqsobn5UWS5WUwoQOYUkhwLqhwT
m9c7uFyrpmbioUN9mpqsMNlLmG6a1tMjBJarw+rkT8/D+ZiYLLD75+9MHiam
Fdjl3gONtHqJVeqlJxMTyyxsMn/mWDIxcWB3yRyQIx2wyXTJczMxCTx8gSlz
NEwL5IwN2HStBMrwlr3Hapc6UK7o4HdsUr8EwKEVHBsbu//7D1S59RxIMWGx
F1VygYUMVEZZ0kwE3djTc+YEAqVabxx7OQerk6gAAM7fdt0=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8o8HKed+nlP1ilqrmZmJmZw65gynxK42cGyTFz7MGQWwYUBssxLcaQ
i2NmNi8rKxPHJhfLxLQFSF3hY0jFkCtmbv8OoiWZ3DDk7nrcA1G7ObGYCQWV
2OyDAgNmnrO45PSZTuGSuiTMjEvqfxpzOE45d+YyXFIvNXDKfdJmYsp+/vxE
aWlJaehFVLnnzPAAZ2a+RLzcBxWEnMwjNAtvKzEzO5aFJ5Vtefkep19oCQC+
P6cY
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cXKNI/j0NmRyojUzpWmR8b+JkY9Z5jk/p6nImJyf4AVm2VQKkSrDJf
5zEwMua+wCpXx8TIEvUVq9QqDiaRZqwy/6/5MAnVY5daw80kdBS71H+gMxZg
l/kSysgy98/3128wpR7oMDHaPAs3YuSY/BNd7go30Pn8TEyMTEzb0eXSwMJC
KSmCTBvQpF4zMjIyMOZ9/z+NkRFd7osPUN+kt6+rGVmC3qKbmQeUc7EAEhwn
Mdx5WwZkHxMT90oMZ/7/fyFFnYnJvPMSpsygAADIRaze
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9W4M82G0YGIMx+jiG115kJCnTRZD7PYgEJC6hxAclyVLlOkEzJnmv/
z+gxMQk/QZZ6o8TE5HX8N4gpwcSk8hZZbhJQ1wMw6yAbE1MyipHFULlPFaJM
TNyXMeT8IyMjhUHWGqA65RQrEwKsQvPDHjNBJiZmMzOgS4y+Yvj99pkzZ///
l2ZiCsCQggKgK7twSG1hZuK5gF3qRzwTkx4ObaeAruzAITcdKLcbu9RvRSYm
21/Y5RYAtfF9wi43ESgX+BO73D4tpsrPOJyCDgCLMJYM
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+O4L5OwG4k7ockPRBYcFgHSCoyMcUgyR1mggJGCLUX2ZhiJk+oHKcj
E5PTd2Q7/j76/OhRaMajR4+enBNm6sDhki+aTDjlPjDhltvFxCT3A4dcNBPT
JBxSt9WY9B7gkGthZPTBIfVfj4mpEJdLBJk4n+CQ82fi3IFD6hIjkyAu27IY
mZTxyC3DKccgfhSXXDOjwC5ccv8Z1G7hlEMDAM/7vIA=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+kYAmD9LU97puwSV2VZWJals/E9QCLXAYTk8DBfCamu5hSs5mZmAL+
Y5X7qsnE5PzydwI2uZdMTEwX/j9mwiL31piJyeAFdrkwoOC0/1jldpkxMU35
A3Zr/G80N/IyMan++v//oxMTUyaqVAhQiknV1dXVEkjLurouewOX+iTMhAbc
4HKdEAFWTk52qJw4qpxP3db//5/posv9LMnMPPYLzIwCSsQEMPljBA0wKkCO
uvvt7icscueYsIULYbk3LkxMftgMBHvVlgmXFHUAAOqbf0Y=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cW+KK+AqdcANMmXFKLWYNwSR1h4rqKQ+oMO8daHFKH5VnX4ZC6r8wY
g0PqVwyjwXccchmM0jdwSO1mYZmOQ+qlJqNB/6LTv7DJqTGCQWjkPnSZ91bM
jFo63j09G6R5zv//v+Q9QupLNxP3+r9g5nTGlf+/mj5C0veEWRLKMgbKWTIi
y01hrAfTf6qYlK/9NESRc2a8CXZsLqPI/f8bGWXfocs9mKPBKAp0SQXTHmR3
zmCUcKxSYGQvew3kVPSg+OGFL9BvOvVnwJyKY9gCYPACAPzkwDM=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9ocJ0h8AwuuQgmJgkcUrPYmJhEccj5M+GX68Iu9caYicnjE1ap1y5A
bfOwa5sNlHJ9h1VqKT8Tk+Ib7JbpArV5Y5fyAkqpvMQqtwEoxdSLVeq9HxMT
T+9zrHLBQF2BWGX+bwa6kes4VqlDfEBtk7FKfQNaxmSO3TJfoJTeC+y2iTAx
sUzHLgWSm4lDin4AAPTBxtw=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/EYHcUA+N9HHJOTExMOOSuquOUe6zChFMuGCTl9A6b1E5+kFwrVm1r
QFKSJ7BJXRMDyR3Aqi0ZJMV0HpuUPCtQhmveXyxS8zlBurqwmlgCktK8jk3q
lDxQirkEqzYtkLZQrFKzuIBS/LuxyjWDtK3EKvU9HeTGf1jl7oG0zcUq9f9v
LROT6C7sciD7XHBIURUAAPwJuBM=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9YcHnatONYJV6u0JNiYhLX09Pb/RFV5u8HZyYmRiYIOIIqNxMkxsjk
iUXOgouJiX/po0fPQFJ1P1DkJnILhR76//+QOxMTW8FvNJesAjtQj4lJaxpW
l55MZ2HS7cYm8367FCOvxQOsunyB7sRu3id3RkZ7rDL/52owiW94i03m3woe
Jq692HWtYGISOIDDQB4m111w3rctQADjbOFnYjr+6SEQPADiGGCYM4nA5NxB
YegBCWsIyDoHk2NgggEQSzZm9UdEgJZAJIS8cvT0LY5cRXHKlelgsAe7Q+kG
ABaTiuM=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+C4PcCDU0g0AjrnPELXe46k1FgYEKPAhMTUwq63CaN7yDq85s3IkyY
+m5CWaIYcu9txJ+DGW8EJDAcM5fxBpD89diadTd2uUPJTNITMD3Rx5haLsMu
FfcJTfzQVBsbAUYmJvP1L1AlrkUzMrDZ2PAz9GKYdUKHN3Hz7f9v3Bk3o0u9
sGA6B6Ifi0g8R5er4z30F0TfYm/6gy4XwnUeRD1IYFqDYV0y30Mg+WsZpz6m
ty7Ia058fTSTSeYBptz/tYEcTIwc+bexSAHB2wXH3mKXoSMAAM3KwqY=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9Q8C07WETzMVapXZJMQHARi8yHDBZGFg4mpgBMqVuKTEymm8pEmFow
pG4qMTEFvf//v4fJGUOuholJYNt/kJwxNrlKEH0Zi9xEJibNp0D6HpP6N3S5
Nx5MTOrP//+PZ7L4hKHxhQ4T0BnfNZjmY/HfeR5GBkdtRuEnWOT+FzIzMjFJ
nsQm9f+9MlBuHzaZ7/USTIxYQ+z/y3AmvoRztkwGmFI3lZlMDv1/a8u0E1Mu
nKnk4//9hkwCTzGkXosxLd27V4uRbT+mtucCoFhlksPqysNawNjruI9Nim4A
AGkzqFw=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9W4Md0F0ZG1+k/sEh9m8PEqGuowNiMRe4EE1Pf7//vTLjXY8oZMmWA
qDfCIRhSOxklwXQao9AbdLkVTD5A8lcOIxPTLnS5OKaD/z9MtmFi1OG9iSm3
4a4UExMTY7w1hn3TGRkZGfhmuTHUnMGQ+5FkWLL0zX93xv1Y/AcGfxwYX+CS
e85k8hOnHKMbLqn/W5kicMolMS3CKWeARy6LMQOnXDeTO045B6ZCnHKBKs9w
yqECAI7vy9g=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/8oHclmsDe9l8wljAzqtQnE+aXYMaPJaLM5ShS3wKZVT9CdDEz+39E
katnZp4MZpxyYFbaiCL1xZRJ4xWYtZ+BqRVF6l0xE/dcCMuOSeEZstQZZ2YO
iNQbZ2aNuchSh/WYmSUPLzoCZPYzMzciSzVwMzMzs3Azc0tKSHIyM59ClmNg
YmISl5CUZGMCsZjEviHJ6Si0LP4OpLcsTgAawGx9D0nuB9xdk5mZZ+36jxWc
EmO2+YZd6r8uE/MG7DI/JjMxpOLQtYSZma0Lu1SHKDNzDw5tM2R0T+KQAoby
y7845agFAOCJsBk=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8w8PlsBhAYeJ3ElPpZxcjIaGbHyMi6D0Oui1Go98Gv31+7WDww5Fbq
3wDT9/hdMOT+foDQjUz+uFx0Woz/KXaZs/L8PJXYJJ7cnM7EaHMCi8xJXwlB
RvFJf7Dpkgd6j7GoJnkvFrkFKSDgyChwCJcz/7YxOuGS+//dnG02Tsl6Rsxw
gYENuOX++DL6ogg8C/4IYwYzaj1BkbvN3P37//9v//8/tmXW2I5mkjOjY1yc
YFwcE2PeEzSp/3dtGEDBwmjTgzXM6AQAMjjDbA==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+s4JzopJe45FYwMirW4ZD7ysjI7/sHu1wXI6OM02/scpqMjIx9OMzU
ZGTguYxd6qEYI6MWDm0HGPHLNeKQWwWUq8UhFwGUw+H1P15AuUnY5d4zEpD7
gkfuF+lyP21wy/3fiEfuHBejOI4Y+v+/HmcMUQ0AAGCYz/k=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+O4FoqEJx+jSnx7mQsEyMIOKDLXNzuyQgF6HIHhUCiJjtAZAWqpihe
oFj09SYpIKX9HFlqtggjo2/djd8RIF06G1C0JQP1LPz/P5aRkTmtD0XX///6
jGxAchc/o8xqDNeD5XYKMUhfx/TZUl2mukNAhxZhSv3/v5uVUZiBMfAFNrm5
IAcq38Um9bWdjZGRsxeb1AstoC7J+1hkHtWLA6XUtmKRuiwDlJGpfYDNQH9G
oZA6rDL//88pe4xdggYAACCnpU4=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8+4HBAgAYDg1xA/JmfGHJZTNqFhREKsoyMmnfQ5T5cAlM/DygwXsdl
9hNJUZz2nmcMxClXz9CGU65M9hFOOQNHnFKP2XHL3WfELXeQYS1OuXKBlzjl
Mrie4pRzcMUp9YF1Jk65WQznccoFMOKTO4YZtXA5xee45Bq5F+M0Ew0AAJDi
6Wo=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+k4NeFJF59Vobop5hSt7QZGdmkpIwZtV5jyCUwMuZc+v+/kpHxPIYc
J2PMt///TwgyKj7HkPNnzP//f60OI9txTPsWM5p+yOViZNmPxZkPZBgVmRgZ
l2P1wwxGELiOTeqmCCMjuw+HIxapO2qMjErr/wdKfsaQ+hTHyGh94P//Iuaj
GHKHGBlZJwPpZtZF6FIf8hgZy0CMJJaz6HLngCb+AzFcGbehy21hZOwHUhdy
2DD1XWFlXPb//74MLkbXdxhuUWRcdn8ZNyOj331M78UzSvIAQ0XlDabU/2e8
jIycUhlvsUj9/3/XSiHtO1YZagIATUmmhg==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cW+PtQk1H5AVapT9NYDcukFmCTWqTHZIHDwHmsjJr3sUvt5GBSw27V
/2fmTO6PcJjYyKT2HYfUY3l1HHaBtCXjkjrCwnQNl9xBxjBcUv9rmWbjknog
y3T+//+3t26d3Ikht52J6fybWbqMTExC59HlwpiYdtszMQHlmLajy1UwMckB
xZWZmAROo8stBUooHTlfxcQUjWEf0Ewmu7lagli03eVkAgNGnmYMbX+DIHIO
B3F5cvACAE4ZuYA=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cD+HKtrGzpX6xS6VqMQHAXU+JdWjATSIoxHkPqjCcjDKBL3eEDiXIX
XNBm1EKXywFJ2T79/0CGcR26XDwjo/6mn/9BclXoclmCJTtA9HkJrvfocu8f
gamzUoyVWL0HBJGMjHewy/zOEWVM/Y5VakUiI6PkPWwyd5KYGRm9z2KR+fvZ
CuhB0SuYMv+uRTKApC6hS3w8fz4GEpCLXqPKfF1iDA9kRi13d/e1rTCpk3qM
GAAmx48uETkF7vnyCig4Nami4s27be8+Y/X6AAMAt/CGow==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+eYCo7BKAIzu0HgiI+ViYwsEaSuZzCwoQAtnnfEFILpeDiLoYpG74g
G8gHFFRovQ8CX96huQAkZ/UBu+tAckz+77HKGYOtWoZV7unRSVxMTEIbsJv6
/5gcE5MzDrn/rXjkVmKVe3399Z//d3yxyjUxGYTF8DJhlTOCBhfnTEw5Bqjc
NCyuYAeKs/NbT3yBRe5YV1fXdlzOpyYAAOYioJU=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9e4Of6EjlGxqQvWKTm2zCCQSCGzHttrSZDRk1JRkaWaxiSL19HMrp8
2yfOKPUa08xOxhSgVVsZozGltnNZf/7//4gGow2mXCzLjP//+5kZGXUxpO7y
OPz/NImRrUoUU+4yo6K7CKPSqf/SmHKPBBgZlSse/8cm9//KBjB1kMEDUw4K
DjLOxSlXwPcUp1yWGU6pT9K45XYwOuGUm8i4FaecrcEPXFJHWXAbuV7qBk45
VAAApODKMg==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+04FmzKYPWsk9YZJ6ukWYCAV9MyZf6TKzN9+9v5WBajCG3m4n7Foiu
YMrEkEtiEgLT6kxdWOQcgOSjOGbVF9j13fFmsnmA6cyjYkL/U+WYiv5g8cJ/
G2YxNqnpv7FJ3TVgYmr8iU3mf5UY0Nsnscn8XswSfa2ZqesvFrldTCH//79j
YrqGKfXHgekCULMPUzOm3E8mrudA6hQ7FrlfMnY/gNRHTSss9mUw7QCSc5iK
sMhdZOLYeu8CMzb7/t8XBker9BUscv8fV2ozceZdwCZFTQAA9z27ow==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9osKkTCJ6tmbwfU2ouJxMQCHIwc2NIHeFlYvHzM2Xi8/NDl5qjxzPp
8P//rw+dwdC1hYt7Bg5nbLCJnI1D6rst0xNcrv/IhFPu0xzccneY8Mvl38Yu
9zkYKClVhV3ypwdQ0vAPdsk9IMll6KLTv////2H6dB5scowK01zkQBHAJHQY
Q44JCoRTMGwqlYZICazH4oxb5eIgsBm7IwcBAAA57bkL
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+MIJpBJf8HdqmjbLxcTL5/scoZMJ1YocBU+QGL1GdJpv+/n4Qwma7+
jCF3nokJSP6+3qTPFz5x/WtUOUZGKOv6NHcGlXvIclfZmPq3QdlZjAmoBhsw
CadAWItZXdHsfPsAaskFSa07WH3y//9XB6adOKT+FzHKfcUhdUGIaTNWiW+7
6+WZmAo3Ygmct1pMTIxMZk7dWNzyeUElk8rhP9gt+xPAmIrLjfd4mLbgkqtn
YhLEJWfIxBSOS86LiQlXcFENAADDf8v2
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cxeGaGWy5HE6fUZ6UqnHIPGWfhlNsv+QmX1J9UJZzanjK645Gbg1Nu
r8QXnHIT5UDkujlTfuGQO8nGyLgAU84bKPfCRmezZBOmnL3c/2+hUo8/i+di
ygXJ/Z/OtfH/Vr5H2Ox7wBr9/6xYABZ3rmD2ZMyO5DJ/g0XuazAjIyNvy3cs
Uv//vxIwXPsVqwwQ5Ljgkvn//1PYB9ySAwwAosnjRQ==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9YcETb4TZ2mY/JrExM/Vil9qkyMjFxbvuNKfM0kp+JkSnl8WG7Mxhy
ZUxMTIzizz7GMYWjS80WYGKJ9is96cRkcwRVZpmvAJNoz//tRsJMzh/RdNUw
MYme////gwST8Ck0qW/8TGIgMQcm5mXoln1lYioGUncYmYIw3PiVkXHW3iff
jRgYj2PKAd3PJJwI9J90Tc8PVLk/XswgWaAcECT+QdO5sdHPFuhWNZDkFgxz
//9WYfr49e3bSKY4TLn/6kwg8gRmmAFBFtNcIBmMVe4+Ews3NzczUx8WuV9F
PCCn5H7BIvf//1VxJrkpn7FK0QEAAN8smbc=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x96YGe7CaNU/k1Miac5koxM7IZCTDx96FL3A5mYQk5e/f+oiykMXS6U
iXshmHGBiQlNahEj3x4Iq5aR8S6qXCGjI4SxnwVDnzvjNggjj4mJ6RuK1Dc9
k58QVhxQbhGK3HNG4x8QViwjIyOq3J8gxmYIi0sYXd//1YzcS4E6/zQxloij
y/1PZ2IyiV8UyGTywABD7n8lH9AmRpPd/7MY3dDl/r9Z2tNzA+jabiZ3DDkY
6GZy+INbjvEFTjlGBtxy+PQxcbzCJXddOgOXFLEAAB6LtSo=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9u4P7e+IQEF8ZaNOHr7nJycgJMjExA4IYmd4mfhYmJiydz1h4mppkY
5u1avfoTkK5hEriHw8ob0kzOuJxTysSxC4fUC1GmXFzaWplk7+KQ+sLPVIJL
WzSjwB0cUn2MDHNxSH1TYvL6g0POhIntOC7b9JgScEmdZ+M4jEuugckTl9QP
Eyb0iIODKCb++zikXkgxdeHS9ilb6SEuOSwAAJBe1JU=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/MYJUtTqnLjkxrcEj1SzEp7sYq876FlYkpBavUbjVGITum9VhkHicz
Mga9tuW+hCm1Xo1JZs7/10xaGDLLAxg58m8DaaZcNJkNxixMBjtBrE6mLlSp
i9xMTEyJc+f2tc8xYAqbO+fUA4QXX3gLMzIyMDIiEUcROp/cuDGnoqLiULkI
k1NFeUXFmm9YPKKJbh+K3H48cm9wSX2UF/mAS66fKQKnkYxMG3HLse7FLZeI
U4pKAADLSr4/
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9wsJ3pFU45O+ZDGGJQ1TMZmTCkWkxeQ+SYQtClHogx1oDoL1qMS9Dl
FjMznQXR1VAaGTAyeYDpdCYTdKlrTMwzoa5El3tgxyh2Dap/JqZt9tdQ9CNA
OhMjE6NWupgmkNY8U52BIsfMhAwnIMu9mgkEHiYmIH3yJoWv0Z0KAmeYmUKw
SgBBHxNmqMCAGLPYQ1xyDEyiwbjkgG7MwCE1gwEaqljAISYscU4/AAC5cbYz

                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              TemplateBox[{"59927"},
               "OutputSizeLimit`Skeleton"], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9BoMVkHQ6ZV9VMjEyMWun923ecXpzWjySztkWBiRkZwiT67IA6mLhb
//+fObPFhJGJgcnjEEwOpC5jwnWoCUzM9hMQBh6cOfM1jL0YaOc17A4qBOp6
iN2xQUzcsTj8AbQLl1QQE2MwDqkWJubgr9iltuPW9d+OWQyHC/+3MDJh9xfQ
ZwpMIbhM7GNizMAl188sdhaX3P+1uGwjGQAA3bDEQw==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x984GRNYiSDcOLCX+gSv/ersDEy8svJCTEqFH1FkXqRy8jIVbfn1v//
j6o5GNtQ5M7xx234DWW/NmfegyL5CIndwxiGy037BaSuYJc558sqMRmbxN8V
oZyMjJuxSVV4MIKAou8GTLly1tKJ96/EyjGyNGDIfb0Mpl5vEWTK/4QhexIS
YEeFGVvQ9UW4/ICwTgiyHEWR+h0m+B7GjmE8iCK3gjHkPy65k6x7Ycy3Omhy
p9i1rv4BMf5OUWF0+YjqluWMjKYrdz846sTIqPsKzZ0/N6RzMDIKsjPqr/z6
HxMcmW6blLTgJxYZ6gEAWnG3bg==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+M4MuZYGZG5tozmDIHZ1azsrIyAzGmXAZYHIRb8MiZAnnXTE2vw6Vm
MAPtYj73fyYzsybQXgZmZm2Y1Mw4kB6nR/8P6cL0n4PJgflO1xFmO81+jSyn
/QjIWCvBCmdDAdAu5mtA+kw1yF5FhDug+hRnzpwJNk/38H90OTjO+o9bTmI9
quRacZD/YHgpquSSrBCwXRD/rUULtTNguw4rwcINQ07ClA+b3GmEfdr/selj
hYYrDrnZs6+jS/3/eu6cDnPYuXMYEtQFAP+/P8Y=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9e4Ho1A6Nq5kEsMj/juJlAQPgouszvUi4mheqvT3rVmZw+o8mVM7Hn
fQExvpkzrUGVqmXmXAlleqLJPRVjmgRlfjNFk7vF5PUV6qJgJuaNaHKWl0D0
2RZrJiYDNPfbMPFqaTUu52JiZ2GqQ3PmvUlmskxMPB1r/1tgyAHBszNnrgEp
AWxyUECuXBEeuQq8ct445SYzcazGJfeQhcnpLy7JRCam27jkPjha/sBpIwIA
AKO9wdg=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+s4FNenIvQCaxSJbJMTIxMqZgSL5sNGJkSp/syif9Al3qawsQUN+HT
XRsmphnoci6MHJ3///8IZeRTj0OVuSnJKHPr//9vFkx8M798QJWSZuI4CaSj
mbjvohu4nolJZNaiRRkcTPUYbnwXyAgFytOPoUv+Od7T08LPKGPIz8jmfQHT
g7f5OXb8v1sqysS0CkPOgCkD7K4OJpGzaFLbGRkhjCtujFPQ5IKZOqCsq4xe
39DkuE9DWXcZhR+hyk1jsoX6ezejyidUuU9KjGC3/L8mxdCMZt+vO9Ls3s+A
ERLIZPEF3Q+/LuowaQQGijNxn8Hw3///l9OFgfGuswuLFNUAAFPFoKA=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+k4PnixSb2ixe/xZD4luxpxggG4e/+oEp99GFEgMZLKFJhUGHHpdFA
ciqygci60OTeQcUEjYqvX9/CyFjxB11OtWcjiHMVyPyAKsfrfA/CwSJnBONg
kWPqh3LmMzJO/Icqp3ELwv6tj+nO61B2NxY/4JPrhjA/A4NB+iiS3O8KuDtP
MzIwhv5HBqfloHKnFRgZXd+jyP0/ycheffTo0f0ijIwMLahS/z/6wgNa8gya
3P/vByEyFlM/oUv9//92aTUjY+HSF5gy1AQAyJtwJg==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+K4GuvJYPEbKxSM6yNnDIZzbHInFP3u/rz/zdOTLm/iUzaD4H0Zw4M
ua8+jB6PQIx1mGY2MyY/+w+Ri0KTeiakCpH6P4FxLZrc08CnUFaoznesfgCC
Y+yRuKT+Fwm8xSX1TS0Ip7aFTHNwSX1WZcepbTFjPE65ALYTOLWxpuKS+urO
dgiXXC1jJi6pR4oS53HJXWBfhkuKRAAAy3PkGA==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9gcJWPkYHR9gkWmced2kwg0I1FzgYsw2R5B0PmpQMjWEr0E4bUA08m
iJwYpoEbmHDK3ZdhYmItvCmERe4cUIrJ+v9/EUy5k3og05Zik3ugCpTJPfYf
m9x1RkZG4aUglhAjgwiqXC0TE89CMAtDXzMHE9M8OAtF7o0z0LabQMbXWqAU
0xlkuU6ggP0LIKOSCcZCkQMauTKZgYkJZjgMTAKaNOn1OhFQmIkmfUB1pj8k
boBylhhxAJNT6MaMuesCYKlZlzBk6AkAUFhxBw==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9m4H2RFBMDE9MSTJlLx3yYmZmZmJk12hd+QpH5OpEfJA7Fx1HkIHqi
lz5+bIImd5gPaI/vLBDzhzETIxOS3Cc9oNq2b2CpTKB+pzcIuWPMzNyLwPbf
TAWazY1sJFBuC4TVB3JLALJDjjEx1b38/+maOhPQLiY+FEe+0WBmEg0zhPqh
BNXfCVB/ye8G0qdR5b76MjFr8hf3vDnDxOz3BzPMwKARxW+oFkswab7BIRfM
zDQJh9RTRWbpb9ilftczMcXg0PaImVnmJi6XyKP7Gwl0MF/HKYcGAOtkkVM=

                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9o8G79tRNYJeo9OTkYWVn0dqNL/GrUZWBkVM6dlsmo8wZV6mcSI6Ng
7sHP////aWN0QZV7yaOY9RzCnMoYiWbmvc8w1kJGX5xuXc4YgFMumGkbLqkX
Qry4pD7ZMTagikwSYlSKmPjn//+P0Yw+KDIf7JkVPUQZGRXb/zcz+vxCltog
7nb/6/9PG2OZWQ1Zwn4jS8UzO7+HsNwYGSs+IkslMMV9AjMezGRlZBSuR5Zj
NPgGop5U8zParC9mY6+5fRcux7X27/+Ps935GI3W/P3/f0mGjAxCqwyjlZ08
I7N5N1rMgMBWXi4uyaR1uMJiUAAA+E+wew==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+G4PuemZmN8fHx9afRJN5Nc5ZiBAFxdXVV9WqY8J+Fs25ODwUKs3LZ
bDr+7P//T8ePw+QWgNUzCkWcwrRHEiQj1/cWmxvSGBnZFzzF7r49jIy+uNz+
p4iPZQFOn+025Zj7DZfk605h/YiPuGSvZDNwN+KyNI+RkR+H3DxGRqYOHEYq
MTKGYZf6YMXI6PEHq9T3BEZGvzfYtVUwMuq9xC51lJkxDIfU/2SJync4pP5/
/YBLBisAAH1ixVo=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9AcAYMXqMLr50xc+ZMZlZWVmbW+JnIEukZGRIQcQhGlkMWB+EYJDlG
ZmZmZKyJZGcImj5m1tlwuWAgfzYUgOWcriPZV38Oxe4sbD58oAW27wGmzMyZ
Dqw49LXA3KJ4GD1kTPkgcvXnrqPKXFsM9ZtJG4Z5pjDzZh46CAzZma+xyTHr
6oDoUEy74Hg5XG4GangyADFc7pAuK3pcIKw7rAQTq3VyRI/D6+eg4Oujh2Aa
M9RoDwCDFy48
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9AUMTAwMjAYNXxA4ucGBMEbMEjx4dFYzhUjqkPU+5+VXBwsCB2ORD4
o49T7lcBDjOB4AjYvofYpC4KgeWOYpPrBsnwWyzDkNixqJsXKCV+HV3iqpcg
K8RzIehSJ2xg/mayPvwV1VcOTEgg9C+y3BZkKSaXP8hyishSevf/Y5U7ceXK
lY//scixWD7+h8PPTLWYEkDwL5KJyXXSH6xy9AMAXOZ4lA==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8EYD8Dw35ccg4MDPU4pOoZGBxwm4jTSAacJu53wB0gDrhNdMBjIm4p
oOtxOR8khcOy/bilHHBLgWQcsEqBvYxDigGnC8EOrMfpCuzm4Qt5kByuuKQv
AAALFMht
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9y4Fh5bJyQcmz/JwyZE4psTIxMTEAsewJdTohJWDikrMxIiIlJGF2O
UeXNGxC9E6gXXa5DYj2IeurCyFiOYeGrec/+/3+oychk+ROrU7drMzFGf8Mm
czeDg4kpDKuuyYwMjIzKO+9jynzKgfpPvhFDzgUkLi4pKcTEtg9dDqgnY9dP
sP/i0eUOb4bQCxg5zmL1w/9fvVxMkjik8pgY2SdjlTqcwsQkPRebzI9yJUZG
k7tYZE4oijMxyizDGipSQP+FPMLujF1cfguxy5AOAPpaqyM=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9q4EsSI0tkxNoNGzZ8xJD7a8LExMQIxEz2HzAk62FyTKcx5D739gaZ
mRdzYJODgPt8TAY/cMj5MzEdxSF1lptJ/jl2qZ9cTGyncGgLYGKKxiG1hJFJ
/B12qVuMDIyTsUtdZWdirMXu/h8hTEyuv7FrW8TEJPINu9QDTiaWTdilfiQz
MSVglwKZKIkZN2BwjYuJ9xgObaeYmBxxSAHlLN/jkiMZAAB+18e/
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9aoI0x/fgzHHKbWZmYpHT16iZM+44puYSDCQKkLmFKrq2SFuViYmRi
EtqH1eQLbdZMTIyWH7Hb+/Mm0NjXOBx1DmgsDrm7DkxMet+wyx0C2jcXu9Q/
fyYmtsPY5VYCXeKGXeqzD9B/D7HLFQO1Zf3CKrWYmYmJ5zFWqdfyTEzsOBzp
BTQxFrvURQ5GJmssMQQCCUyMwsewS/13Y2JcikPq/xSmkn+45EgDAHeCwZg=

                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8E4HmnpfgkrDIHLGUZGRmD0IX/3dqYyMUKlBFUXYEm9dSfEQzYZ91C
1/WmVoSRUUo6qGk7hj2vEoFaUv5ic0KrGCMj544fWGS+lbAzykWewerwG4yM
DK4TJ178+Q9TzogRChI3XkSX2ydtnJKSIgD2gckhNMnff0DE00nhMoyMIg+Q
JN4dQ7BfrmRkzESSW8q2D8H5EMRYiiRnzZiL4LwQZUcOzA5GFpuvEObnV76M
vLuR5Pq1GRnDdwPB0mAVoEtR4+A0K8x/jCzOxY9QvTBNHSIjbhX1E93v/98X
ZmY2Xbz4CEOCjgAA3RuZnQ==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+c4PWzyrySZ1+xSR0QZWZmZmIO+Iwh87VCjBksxxyNIXeOGQxsmJk1
3qLLrYbI/algZo5Bl6sHyQRM+P+MmdkeXe6hHHPQxN9gNUqP0CXfvfgFJL/w
YtEHBTuZmaWuoIn9/XSturra3YaBickITepPD8SZIP8Zo+mCSYHkRJNuIcvd
ZkaSY2ZOvYckVw2TUqjbnivOzCxd8RMu5wiRka9/AOQcAEoy5/6GyS0CS3lc
hPDuxgA5E+FuuZBi2nD7B4z7ZbM9sxOSlV9QHP6tejOOwBkoAAA0PYTW
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9A8MmY6TguuT4mZpxymXjk5HDLnedjwGlfPDOT5hugi47dx5SzYpa4
8v//12DmEgypp4rMckDqETOm3O96JqYYIL2YiakYXQ6oXuYmkI5kZt6HLpcK
NYuJWf4Nql19MUzMzNeBrDNMzOGomkKZmBiZgNi3yIGRCU0un5kZqA+K5TuO
HfuEkPt0PDk8PNxIHSYvdgvdOZ/enypxZGLWLKl/ieF7EOhlJC8OyZWjNQAA
/YisOQ==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9Q8KaLj4FJfQkWmaftcszMTMzMzElv0KWmK4LEDRcV8DC1osp8cuYE
6tFc+un//y1MnLNRpIyZmJhYMp+BObxMvr+RHGELMm8LlNfNzPwYIdcCNE++
E8Z7hCw3C2QXXAokVw9nqzMxMSo+g8tdY2KCyxUB7WJqQ9hQxCz2EkVuNUJO
ijkczuYDykl/g3PPMCHJMQL9pgnnnXdg5DgL50kD9S2Hh0Iwit3TgXIw9tdg
ZmZbpLB+rwGTu9knBVT36T8SCGNi4i069ejRdCkmRibbA/9R5CDxBsIcbWiR
txYu53f2Pxr4sa8EKG5avO/xH3QpOgIAULV8CQ==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9g8CGLkfEADrlVTExMO3DLmeMys5+JaRMOqXU8TDLPcMjpMLL04JDq
ZmQSxyH1U4ORyQeH3BImBvEz2KW+GTExhuPQdp2Rkf0UDrkYJiZ/HFJXeJiY
puCQAwaXzG3sUm/NmZim49AGjBzGq9ilbkszMYV+wS5nzMjEg0Pbf21Gpjgc
Uv+bGVUf4pKjEwAA+EbXLw==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9IcDuJUfompvC5z///b2JjYmJijb+KLvfr7///JkxgoInFxA2sEDmW
AlTxM0DL1JiggGUhity7//8XQyQMgXg6upEQOeEjnlhstADLLXyuxcTEfxdV
qpsDJDXjw/8wdKc+amcHComkfvj/2YGJib0fWa4fbKAXkAWW88GUWw5kHZYE
MnKR5SpBUgLA0LoFkkJ1Cx9ILuD//6+ZTOjaQHK2+XL3nmaApFiXoshN52ZS
zYvxlwBLGaP6bgYzExzooodKClwy+jq63H9FiKRc1xwMqf//J4sCpVLmYpGh
FwAAZqBdRg==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+c4L0FI6M3g/Q1LFLThZnAIGMhhtQLHSYoYL+BJvXKiQkO6v7/v3wB
SW4eUIxFJWFthxwTc///hwbaSHI3pJiYosFmG3F8zOdnQpb7X8jExLkfSJ+D
mFuELHdFhomJtffzbjaQjNqdvyiuaZIHCkqKgnWFovuiEmKavrxK/X10uUMg
GX6j7TfuYHj+jBxIzh1DHAjOg9zChl1OC+iHAxOwyi1mYWKa9B+7HDDMFD7+
T8Elx2lfxYxVbh0HxHex2NzSyg6Scn2LTe5/B0juCVYpKgIAoaB47A==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8E4OFclm1YhFdH1D+ZKsg49TeGzN8eUUZGIVbezJ+YulIZwaAYi4Et
LBA5aUypncwQKUY7DKnvPoyMLmHcQLmpGHJvgCbu+v89n5FxB7rUTzdGxtKv
//+XMjJmoMutYWQUfw6kpzMy1qFJvTZkZNwApL/6Msq9RZX6u4WDxf0XkHGa
kbEATds5RuZWEP3Ak1HhC5pcDaM82KRGRpZGNKkbUozlIPq2FqMeuiMPMDKe
BDkkkVHyAbpcNSNj9ftDUzQYGVrRpUByjBygkM7+hSH3eh04kPnbMGSA4M9e
I0bF0rvYpOgHAM0jndk=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8wcCEGBhjCzqHJbWMCAkYIMQVNroaJo3RWAxAsvH37F4rM325GqcU4
bFvNxDgTh9QXD8ZkXI5sY2JqnJIHBIe+Y8jVw50YjSG5TUNEL7/m5Mk+caao
n7gMv8PPtB2X3P94xlqccleYNHHK3WJiwik3GVPu+pLFS5YsOfL/vz2TM5rU
WlFGBkYgABMx/V+Q5XSkqiZNnuxjCQwAXUuL+j/Icsb2z/9/v7XZnpFrIUa4
tDGJmesAw0wPPcaB4MuEWCex2Ni5OJ1PDwAAjMin1w==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9Q8MiSIRSXXBEDgyUuuVAGBlk8cjh9BZTrxSUH1LYSj9wxHFIr8VuH
0wugiMEh9QiPU1bikesFyj3C7RR8zsQZC0C5IjxyOM2UJVPOEk8s0AMAAKWM
1TY=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8g8GnVumBz8ZxLnzClLnozQoDHBwy5dEZmtqhrJ4p5GF1+YMpVgOlv
Jowe6HLTRdUhjCpG9vnokifqIPRhRkbl1zjcuw7onis45MIZGY2/Ypfays7I
dxabxN2YGF1GxkpsUpNkwL6vwCZnDZRgMlBiKvuNKTedlZFx2f852N156fz5
P7jkwACP3Ht3RgZ0uY2zIXQmZri8MWaUKlp2bxs3EyNL+z80fYfVoJErsx3T
orfTci0YNXK3vsDlSNoDABU7sH8=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cHWMnIcBO7zIlOHiYm7HJXtZmYcMnxMTFxai36g0Xm5BxGg9RabHo+
JesxqZ7G7ow7TExCj7BL/ddg0r2OXeZkmYjuKRy65jAJ4dD1/2slowiUdeTI
N1S560xMhRBWLYbfr0NErvr7c+CQ8+RjwhJmYLmTqozY5D4kM4VMOqXGgE0O
6AcmPg1uoD42MbE7mHJAAJTTwvQgTC5pLqbci2PbmJhmHT32FlNqUAAAXdWr
mQ==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+yYLaw0C0Mwf2rHoOoMGbF9+hSNziYVwOptZzMphjadjFzHABS4syy
d9ClLtkzzwFSO9iYc9ClvtQyCrz7//+7GRPTSnS5OcxMy4DUFWZmicfocmHM
mr/+//92iJl5FoZLwpgFwuIrjZmA+sJOYsgBhZkhhA6a3BMpRiYgYGCa9P/S
MnRDT005cGACM5PTLwzrICCemXUvDimgpehWESnHZItH31SccvHMhj9xyb2y
ZErFKflWj/kVTlOJBgCterza
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJzFkT0OwjAMhS0mRg7Awi0YzchaxAFaNVQsQUqRENM7mo8GTUnBDs0KlhLJ
+vzz8rJpLtVpQUT9criq+rYLob4fVkNy9P25867d+6vrXNg2sWydzuOfASKe
J0IxACkg8HjPDBw7gK+nMfE0TLK1YmqZxCBdCr0yF6/YpOMzRjPbxoploqFy
ZEzLZMtMao0QI8wwWD/1Ps6tfrPojxiUjBYU/ucVeVOaVSA/jCeDdKeH
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9q4HtrK5h+LP0MQ24toz6YnsK4GV3qKy+jE5hRzpiFLreJkbEfKncQ
TeqJHqPMB6hcBprcCkbGrv/Y5b6ZMDLOA7rv101MuXpGIJC1tjbjs5ZBl0tn
RALTUOXa+ZDk0N2yJRYERBjFYlkw5CDg0/vP/wtxyGH3H3FytnjkuBjwyOHT
h0dOk7EVp9xSxis45YgEAOb/t4c=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+S4OP5XFEGmWvYpLbrMYGA118MmV/GvEwQ8Atd6rwkUFSiVA6L3BUp
Jibhqvvr+ZiY/NHMvCLNxMR3+PdmLiYmltNo2pyYmISOfgkD2eaMJnVXgElo
//8ysEumokr9y2JiijspzwmSUvyBKveTCQE60Iz8GwQSZV/UACTvoXvucbOS
TvPz/zOZmEwwPA4Bt0WYmJKxS/0vBBrZg13qbzDQlS+wy71jYhI4iMPITMww
gYHPQJfsxyG3AqgNhweAcu4XcEiRBgCWyZo3
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+M4NQJCN3IcBtd6rFiKYSRzHgHTepXvN8/XHJ7GMP+45LrZ5yDW471
HJSVgCEXpAFjcWLImaXglHslgZDje4Iqd5sRJveBwxzNyDdSFl///393/83/
K6zhaHL/Gxk1ra1lGKWsy9li0eU+xCuxsbEFSLGpME5Al4ODYjxyYYNIrlTy
Gk45agAAOBbTyA==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9q4O/LJZOC2WRCH2HIvKt2YmIV1khNZUxFl/qpKh217hSQ8R1T7v8b
KL2WMR+nrWsZt+GUm8t2G6ecZyBOqdccMTjltjL1gqgPW7du/YMul8a0am1B
jAmHV+aNf8jif7896WdjZGASTNuFpuOstz0TECg1oEsAwe1cIKhjqsfplESe
HzjlpHxwSp1jwy13lGkyTrmpTHk45bqZcJt5Q6UBpxwpAACm69la
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6c1+BnKwLgAh1wqEyMT91msUi1cQDmmGmxSD8WYQHJlWKSeqDOB5Pjv
YJFTZAQCBsYqLFKngMYxMake+IMp9dUYJMd/EZtD3oCcwbISq/vPgORMsUr9
jwA6g/EkkHFg6jY0qbtsQH0qv7fnWbEyMek+RJG7BfIauxoP2LGMaZhyTDDC
FMUjXzyR5Zhuo7oT5BZGKBGE6pjv9gh99h/RXPrJjRUsJ+q38BOmF2cKAeUc
t2P3/xYxprAH2KUGHAAATxB+Mw==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}]}], "}"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {2., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 19, 24810950533563454663, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{61., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 19, 24810950533563454663, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 19, 24810950533563454663, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{76., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{57., {24., 12.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[24810950533563454663 === $SessionID, 
   Out[19], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{
  3.739793256928838*^9, {3.739793320292508*^9, 3.739793336128813*^9}, 
   3.7397969532318215`*^9, 3.7397974330724916`*^9, 3.7397975758969884`*^9, 
   3.739800019616311*^9, 3.7399155444386406`*^9, 3.7399155826318817`*^9, 
   3.7472650405664663`*^9, 3.747265085726466*^9, 3.7472651305344667`*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"a518501a-693e-48db-9fe4-034078e83f1c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "here", " ", "we", " ", "need", " ", "to", " ", "adding", " ", "scaled", 
     " ", "784"}], ",", " ", 
    RowBox[{
    "as", " ", "in", " ", "python", " ", "implementation", " ", "that", " ", 
     "array", " ", "has", " ", "been", " ", "flatten"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.7399169597412405`*^9, 3.7399169897612233`*^9}, {
  3.7399180939266267`*^9, 
  3.7399181061945915`*^9}},ExpressionUUID->"428efe7e-29c3-462a-8c93-\
0313a0eddbc5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "trainedVae", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"trainedVae", " ", "=", " ", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"vaeNet", ",", " ", "trainingData", ",", " ", 
    RowBox[{"LossFunction", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<latentLoss\>\"", "\[Rule]", 
        RowBox[{"Scaled", "[", "1", "]"}]}], ",", " ", 
       RowBox[{"\"\<imageLoss\>\"", "\[Rule]", 
        RowBox[{"Scaled", "[", "784", "]"}]}]}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"MaxTrainingRounds", "\[Rule]", "1000"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"TrainingProgressReporting", "\[Rule]", "\"\<Panel\>\""}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Method", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<ADAM\>\"", ",", " ", 
       RowBox[{"\"\<LearningRate\>\"", "\[Rule]", "0.0005"}]}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"TargetDevice", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<GPU\>\"", ",", "1"}], "}"}]}], ",", " ", 
    RowBox[{"BatchSize", "\[Rule]", "64"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<MNISTnet.wlnet\>\"", ",", " ", "trainedVae"}], "]"}]}], "Input",
 CellChangeTimes->{{3.739640917406395*^9, 3.7396409365306387`*^9}, {
   3.739641234230517*^9, 3.739641267372436*^9}, 3.739641484990506*^9, {
   3.739641598182274*^9, 3.739641602211731*^9}, {3.739641826613477*^9, 
   3.739641842161272*^9}, {3.7396419344073505`*^9, 3.7396419543255787`*^9}, {
   3.7396421349665666`*^9, 3.7396421387829113`*^9}, {3.739643564377947*^9, 
   3.7396435646719217`*^9}, 3.7396465019788446`*^9, {3.7396594070129886`*^9, 
   3.739659422753173*^9}, {3.7396630845636253`*^9, 3.7396630850627346`*^9}, {
   3.7396642974209285`*^9, 3.739664299792666*^9}, 3.739665092777877*^9, 
   3.739668632595425*^9, {3.739706542575757*^9, 3.739706543416222*^9}, {
   3.739706643936159*^9, 3.739706644262807*^9}, {3.7397160374637423`*^9, 
   3.7397160410045133`*^9}, {3.739716266336693*^9, 3.739716266843546*^9}, {
   3.7397163290405035`*^9, 3.7397163291394672`*^9}, {3.739716679089787*^9, 
   3.7397166798979435`*^9}, {3.739720714284532*^9, 3.7397207153305655`*^9}, 
   3.739721476889398*^9, {3.7397383492058954`*^9, 3.739738384863912*^9}, {
   3.739757249279292*^9, 3.739757267130204*^9}, {3.73975741031142*^9, 
   3.7397574174190454`*^9}, {3.739797532594019*^9, 3.73979753273199*^9}, {
   3.7397987690635576`*^9, 3.739798769268255*^9}, {3.739799836384035*^9, 
   3.7397998375504875`*^9}, {3.7398108032932243`*^9, 3.739810805684041*^9}, {
   3.739812358284381*^9, 3.739812375087082*^9}, {3.7398124328150425`*^9, 
   3.739812432987008*^9}, {3.739812554844903*^9, 3.739812555405939*^9}, {
   3.739812650425634*^9, 3.739812651136638*^9}, 3.7398167404695654`*^9, {
   3.7399155057860126`*^9, 3.739915536538898*^9}, {3.739917888759632*^9, 
   3.739917889336051*^9}, {3.739917990162097*^9, 3.739917993343772*^9}, {
   3.7472653453194685`*^9, 3.7472653478484707`*^9}, {3.7472658125425873`*^9, 
   3.7472658274012527`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"8fceabf9-ec10-47c1-a295-9b3b7892aa3b"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of outputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["3", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["9", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], {
                    
                    LineBox[{{-8., 4.898587196589413*^-16}, {-7., 
                    4.286263797015736*^-16}}], 
                    
                    LineBox[{{-2., -0.9999999999999999}, {-1., \
-0.9999999999999999}}], 
                    
                    LineBox[{{-7., 4.286263797015736*^-16}, {-6., 
                    3.6739403974420594`*^-16}}], 
                    
                    LineBox[{{-7., 
                    4.286263797015736*^-16}, {-6., -0.9999999999999997}}], 
                    
                    LineBox[{{-6., 
                    3.6739403974420594`*^-16}, {-5., -0.9999999999999997}}], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQDQESB7i65vlYVu6yWZn+5tHX8+IHylZJbbJ22WUT
uYTH5u4s8QNvu1yVVnHusuHZlsC9LUH8QKG2/NyWkzttDs95EdCgKH7gb/dy
pdPNO23qI0AaxA7MWHNvU63FThv7l5PtXk4WO2Dbe8R3zvMdNiz+25+1u4od
eKsb+Vlt4g6bs518rBKfRA+s7JuzWNZ0h82smSAgeqBgfV9cw+XtNmDtdqIH
bAxuyEnmb7ex7Hts0fdY5ADXRsX7G7m223R2gIDIgWuG2fO9lm2zudmke6NJ
V+TA4k1b4h87brPRqL2kXntJ+EC+8T/5mrtbbSrKQUD4gM0W9wcilVttjhfK
AJHwAU7TiQvWimy1Ec85KJZzUOjAta23Etw2bIG6R/BA3oyTF79lbrZ5BXaP
4AErSeFJ/ayboe4ROMAxKyZIY+Emmy6wewQOXJVaJnTQZpPNDbB7BA4smP3+
UuSNjTYBv5b4/1rCfyBPxnLyp+KNNh/egQDfAau5TcHd/BttwMZZ8B1glzsj
rLJ6g40e2ADeA1fmiV7Z47bB5uwZEOA54GC/T2P1kfU24OiS5jlwpmHRvALG
9Ta/EicafSjhPuDmpPk/1nOdTQvI+htcB5Y1B3kVz1kLDX+uA+9c5Bo2/Fpj
U31ML+7/Hs4DSm09C0RT1kD9x3nAzn3u6kU3VtuAlZ/iOODSEbAwPGK1zRoD
dSuRBI4DRp7LGk0er7KBpB8OaPpZZQMA47MdMg==
                    "]], 
                    
                    LineBox[{{-6., -0.9999999999999997}, {-5., \
-2.9999999999999996`}}], 
                    
                    LineBox[{{-6., -0.9999999999999997}, {-5., \
-0.9999999999999997}}], 
                    
                    LineBox[{{-5., -2.9999999999999996`}, {-4., \
-1.9999999999999998`}}], 
                    
                    LineBox[{{-5., -1.9999999999999998`}, {-4., \
-1.9999999999999998`}}], 
                    
                    LineBox[{{-4., -1.9999999999999998`}, {-3., 
                    1.8369701987210297`*^-16}}], 
                    
                    LineBox[{{-3., 1.8369701987210297`*^-16}, {-2., 
                    1.2246467991473532`*^-16}}], 
                    
                    LineBox[{{-2., 1.2246467991473532`*^-16}, {-1., 
                    6.123233995736766*^-17}}], 
                    
                    LineBox[{{-2., 
                    1.2246467991473532`*^-16}, {-1., -0.9999999999999999}}], 
                    
                    LineBox[{{-1., -0.9999999999999999}, \
{-6.123233995736766*^-17, -1.}}], 
                    
                    LineBox[{{-5., -0.9999999999999997}, {-4., \
-0.9999999999999998}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-7.4, 
                    4.531193156845207*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-1.4, -0.9999999999999998}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-6.4, 
                    3.9188697572715305`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-6.4, -0.5999999999999995}, {-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-5.4, -0.5999999999999996}, {-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-4.355555555555556, 
                    2.667008584809791*^-16}, {-0.25, 0}, 
                    Offset[8], {
                    0.08888888888888857, -5.442874662877157*^-18}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-5.417705098312485, -2.164589803375031}, {-0.25,
                     0}, 
                    Offset[8], {1., -2.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-5.4, -0.9999999999999997}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-4.4, -2.3999999999999995`}, {-0.25, 0}, 
                    Offset[8], {1., 0.9999999999999998}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-4.4, -1.9999999999999996`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-3.417705098312484, -0.8354101966249685}, \
{-0.25, 0}, 
                    Offset[8], {1., 2.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, 1.4695761589768238`*^-16},
                     {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736765*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    8.572527594031473*^-17}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736766*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-1.4, -0.5999999999999999}, {-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-0.4000000000000001, -1.}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999999, -1.1102230246251565`*^-16}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-4.4, -0.9999999999999998}, {-0.25, 0}, 
                    Offset[8], {1., -1.1102230246251565`*^-16}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-8., 4.898587196589413*^-16}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-7., 4.286263797015736*^-16}], 
                    Offset[{12, 12}, {-7., 4.286263797015736*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-7., 4.286263797015736*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"enc\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "10", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["enc", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[10]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-1., -0.9999999999999999}], 
                    Offset[{12, 12}, {-1., -0.9999999999999999}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 0.,
                     BaseStyle -> GrayLevel[
                    0.4]], {-1., -0.9999999999999999}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"imageLoss\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "5", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["imageLoss", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[5], 
                    Skeleton[7]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-6., 3.6739403974420594`*^-16}], 
                    Offset[{10, 10}, {-6., 3.6739403974420594`*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[
                    
                    GraphicsComplexBox[{{0.1, 0}, {-0.3, 1}, {0.5, 1}, {
                    1.3, 1}, {0.9, 0}}, {{
                    Opacity[0.2], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[3.5], 
                    RGBColor[0.33, 0.33, 0.33], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 18], {-6., 
                    3.6739403974420594`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"mn\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"LinearLayer", "[", 
                    RowBox[{
                    RowBox[{"{", "8", "}"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "5184"}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["mn", Bold], 
                    Style[
                    HoldForm[
                    LinearLayer[{8}, "Input" -> 5184]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-6., -0.9999999999999997}], 
                    Offset[{12, 12}, {-6., -0.9999999999999997}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-6., -0.9999999999999997}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"sd\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["sd", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[2]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-5., -0.9999999999999997}], 
                    Offset[{12, 12}, {-5., -0.9999999999999997}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 0.,
                     BaseStyle -> GrayLevel[
                    0.4]], {-5., -0.9999999999999997}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"latentLoss\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "6", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["latentLoss", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[6], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-3., 1.8369701987210297`*^-16}], 
                    Offset[{10, 10}, {-3., 1.8369701987210297`*^-16}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"+\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-3., 1.8369701987210297`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"z\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"TotalLayer", "[", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"8", ",", "8"}], "}"}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["z", Bold], 
                    Style[
                    HoldForm[
                    TotalLayer["Inputs" -> {8, 8}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-5., -2.9999999999999996`}], 
                    Offset[{10, 10}, {-5., -2.9999999999999996`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], 
                    TraditionalForm]], {-5., -2.9999999999999996`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"expSd\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"Slot", "[", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "]"}], "]"}], "&"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "8"}]}], "]"}], HoldForm],
                     FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["expSd", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[Exp[#]& , {4, 3}], "Input" -> 8]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-4., -1.9999999999999998`}], 
                    Offset[{10, 10}, {-4., -1.9999999999999998`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[Times]\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-4., -1.9999999999999998`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"sdEpsilon\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{"Times", ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"8", ",", "8"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["sdEpsilon", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[Times, "Inputs" -> {8, 8}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-5., -1.9999999999999998`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"random\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["random", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 10), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-2., 1.2246467991473532`*^-16}], 
                    Offset[{12, 12}, {-2., 1.2246467991473532`*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-2., 
                    1.2246467991473532`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"dec\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "17", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["dec", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[17]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 11), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1., 6.123233995736766*^-17}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 12), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-6.123233995736766*^-17, -1.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"imageLoss\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["imageLoss", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 13), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-4., -0.9999999999999998}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"latentLoss\"", Bold, StripOnInput -> False]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["latentLoss", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 14), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-2., -0.9999999999999999}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    StyleBox[{{
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    Offset[{0, -7}, {-8., 4.898587196589413*^-16}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"enc\"", TraditionalForm], 
                    Offset[{0, -15}, {-7., 4.286263797015736*^-16}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"imageLoss\"", TraditionalForm], 
                    Offset[{0, -15}, {-1., -0.9999999999999999}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"mn\"", TraditionalForm], 
                    Offset[{0, -13}, {-6., 3.6739403974420594`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"sd\"", TraditionalForm], 
                    Offset[{0, -15}, {-6., -0.9999999999999997}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"latentLoss\"", TraditionalForm], 
                    Offset[{0, -15}, {-5., -0.9999999999999997}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"z\"", TraditionalForm], 
                    Offset[{0, -13}, {-3., 1.8369701987210297`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"expSd\"", TraditionalForm], 
                    Offset[{0, -13}, {-5., -2.9999999999999996`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"sdEpsilon\"", TraditionalForm], 
                    Offset[{0, -13}, {-4., -1.9999999999999998`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"random\"", TraditionalForm], 
                    Offset[{0, -7}, {-5., -1.9999999999999998`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"dec\"", TraditionalForm], 
                    Offset[{0, -15}, {-2., 1.2246467991473532`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    Offset[{0, -7}, {-1., 6.123233995736766*^-17}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"imageLoss\"", TraditionalForm], 
                    Offset[{0, -7}, {-6.123233995736766*^-17, -1.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"latentLoss\"", TraditionalForm], 
                    Offset[{0, -7}, {-4., -0.9999999999999998}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    Offset[{0, -7}, {-2., -0.9999999999999999}], {0, 1.}, 
                    Automatic, {1, 0}]}}, FontColor -> GrayLevel[0.5], 
                    StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-7.4, 
                    4.531193156845207*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{0., 5.5}, {-1.4, -0.9999999999999998}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"5184\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-6.4, 
                    3.9188697572715305`*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"5184\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.889087296526011, 
                    3.889087296526011}, {-6.4, -0.5999999999999995}], {
                    0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.889087296526011, 
                    3.889087296526011}, {-5.4, -0.5999999999999996}], {
                    0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.367778697655253*^-16, 5.5}, {-4.355555555555556,
                     2.667008584809791*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736824*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{4.919349550499537, 
                    2.4596747752497685`}, {-5.417705098312485, \
-2.164589803375031}], {0., -0.17}, Automatic, {
                    0.4472135954999579, -0.8944271909999159}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{0., 5.5}, {-5.4, -0.9999999999999997}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{-3.889087296526011, 
                    3.8890872965260117`}, {-4.4, -2.3999999999999995`}], {
                    0., -0.17}, Automatic, {0.7071067811865476, 
                    0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{0., 5.5}, {-4.4, -1.9999999999999996`}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-4.919349550499537, 
                    2.4596747752497685`}, {-3.417705098312484, \
-0.8354101966249685}], {0., -0.17}, Automatic, {0.4472135954999579, 
                    0.8944271909999159}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.3677786976552205`*^-16, 
                    5.5}, {-2.4000000000000004`, 1.4695761589768238`*^-16}], {
                    0., -0.17}, Automatic, {1., -6.123233995736765*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.3677786976552215`*^-16, 5.5}, {-1.4, 
                    8.572527594031473*^-17}], {0., -0.17}, Automatic, {
                    1., -6.123233995736766*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.889087296526011, 
                    3.889087296526011}, {-1.4, -0.5999999999999999}], {
                    0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    
                    Offset[{6.106226635438362*^-16, 
                    5.5}, {-0.4000000000000001, -1.}], {0., -0.17}, 
                    Automatic, {1., -1.1102230246251568`*^-16}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    
                    Offset[{6.106226635438361*^-16, 
                    5.5}, {-4.4, -0.9999999999999998}], {0., -0.17}, 
                    Automatic, {1., -1.1102230246251565`*^-16}]}, FontColor -> 
                    GrayLevel[0.7], FontSize -> 8, FontWeight -> "Thin", 
                    StripOnInput -> False]}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    Part[{{-8., 4.898587196589413*^-16}, {-7., 
                    4.286263797015736*^-16}, {-1., -0.9999999999999999}, {-6.,
                     3.6739403974420594`*^-16}, {-6., -0.9999999999999997}, \
{-5., -0.9999999999999997}, {-3., 
                    1.8369701987210297`*^-16}, {-5., -2.9999999999999996`}, \
{-4., -1.9999999999999998`}, {-5., -1.9999999999999998`}, {-2., 
                    1.2246467991473532`*^-16}, {-1., 
                    6.123233995736766*^-17}, {-6.123233995736766*^-17, -1.}, \
{-4., -0.9999999999999998}, {-2., -0.9999999999999999}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 24, 24, 20, 24, 24, 20, 20, 20, 8, 24, 8, 8, 8, 
                    8}, NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, ImageSize -> {503.5, 211.}, AspectRatio -> 
                    Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{28., 35.5}, {28., 18.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "enc"], 
                    NeuralNetworks`NetPath["Nodes", "imageLoss"], 
                    NeuralNetworks`NetPath["Nodes", "mn"], 
                    NeuralNetworks`NetPath["Nodes", "sd"], 
                    NeuralNetworks`NetPath["Nodes", "latentLoss"], 
                    NeuralNetworks`NetPath["Nodes", "z"], 
                    NeuralNetworks`NetPath["Nodes", "expSd"], 
                    NeuralNetworks`NetPath["Nodes", "sdEpsilon"], 
                    NeuralNetworks`NetPath["Inputs", "random"], 
                    NeuralNetworks`NetPath["Nodes", "dec"], 
                    NeuralNetworks`NetPath["Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "imageLoss"], 
                    NeuralNetworks`NetPath["Outputs", "latentLoss"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association["Input" -> NetEncoder["Image", 
                    Association[
                    "ImageSize" -> {28, 28}, "ColorSpace" -> "Grayscale", 
                    "ColorChannels" -> 1, "MeanImage" -> None, 
                    "VarianceImage" -> None], 
                    
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "random" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    Association["Output" -> NetDecoder["Image", 
                    Association[
                    "ColorSpace" -> "Grayscale", "MeanImage" -> None, 
                    "VarianceImage" -> None, "$Dimensions" -> {28, 28}, 
                    "$Channels" -> 1], 
                    
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "latentLoss" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT], 
                    "imageLoss" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    Association[
                    "enc" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{64, 1, 
                    4, 4}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {4, 4}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {2, 2}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 1, 
                    "$GroupNumber" -> 1, "$InputSize" -> {28, 28}, 
                    "$OutputSize" -> {15, 15}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Max, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {64, 15, 15}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{64, 64,
                     4, 4}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {4, 4}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {2, 2}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 64, 
                    "$GroupNumber" -> 1, "$InputSize" -> {15, 15}, 
                    "$OutputSize" -> {8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Max, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {64, 8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{64, 64,
                     4, 4}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {4, 4}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {2, 2}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 64, 
                    "$GroupNumber" -> 1, "$InputSize" -> {8, 8}, 
                    "$OutputSize" -> {9, 9}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]]], "8" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Max, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {64, 9, 9}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]]], "9" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]]], "10" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{5184}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{5184}, NeuralNetworks`RealT]]], 
                    "mn" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{8, 5184}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{8}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {8}, "$OutputSize" -> 8, 
                    "$InputSize" -> 5184, "$InputDimensions" -> {5184}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{5184}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], "sd" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{8, 
                    5184}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{8}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {8}, "$OutputSize" -> 8, 
                    "$InputSize" -> 5184, "$InputDimensions" -> {5184}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{5184}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 0.5, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{5184}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], 
                    "expSd" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], 
                    "sdEpsilon" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], "z" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], 
                    "dec" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{25, 
                    8}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{25}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {25}, "$OutputSize" -> 25, 
                    "$InputSize" -> 8, "$InputDimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{25}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Max, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {25}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{25}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{25}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{49, 
                    25}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{49}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {49}, "$OutputSize" -> 49, 
                    "$InputSize" -> 25, "$InputDimensions" -> {25}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{25}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{49}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Max, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {49}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{49}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{49}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Reshape", "Arrays" -> Association[], 
                    "Parameters" -> Association["Dimensions" -> {1, 7, 7}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{49}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1, 7, 7}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Deconvolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{1, 64, 
                    4, 4}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {4, 4}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {2, 2}, 
                    "Interleaving" -> False, "$InputChannels" -> 1, 
                    "$GroupNumber" -> 1, "$InputSize" -> {7, 7}, 
                    "$OutputSize" -> {12, 12}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 12, 12}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]]], "8" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]]], "9" -> 
                    Association[
                    "Type" -> "Deconvolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{64, 64,
                     4, 4}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {4, 4}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {2, 2}, 
                    "Interleaving" -> False, "$InputChannels" -> 64, 
                    "$GroupNumber" -> 1, "$InputSize" -> {12, 12}, 
                    "$OutputSize" -> {11, 11}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]]], "10" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 11, 11}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]]], "11" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]]], "12" -> 
                    Association[
                    "Type" -> "Deconvolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{64, 64,
                     4, 4}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {4, 4}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {2, 2}, 
                    "Interleaving" -> False, "$InputChannels" -> 64, 
                    "$GroupNumber" -> 1, "$InputSize" -> {11, 11}, 
                    "$OutputSize" -> {10, 10}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 10, 10}, 
                    NeuralNetworks`RealT]]], "13" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 10, 10}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 10, 10}, 
                    NeuralNetworks`RealT]]], "14" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{6400}, 
                    NeuralNetworks`RealT]]], "15" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{784, 
                    6400}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{784}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {784}, "$OutputSize" -> 784, 
                    "$InputSize" -> 6400, "$InputDimensions" -> {6400}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{6400}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "16" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid], "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "17" -> 
                    Association[
                    "Type" -> "Reshape", "Arrays" -> Association[], 
                    "Parameters" -> Association["Dimensions" -> {1, 28, 28}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "13", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "12", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "14", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "13", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "15", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "14", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "16", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "15", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "17", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "16", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "17", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], "imageLoss" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "inDec" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT], "inInput" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[NeuralNetworks`Private`ScalarSymbol[2] -> {
                    Power, 
                    NeuralNetworks`Private`ScalarSymbol[1], 2.}]]], 
                    "$Dimensions" -> {1, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Reshape", "Arrays" -> Association[], 
                    "Parameters" -> Association["Dimensions" -> {28, 28}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{28, 28}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Summation", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "inDec"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "inInput"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5", "Outputs", "Output"]}], "latentLoss" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "mn" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT],
                     "sd" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    "Nodes" -> 
                    Association[
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Power, 
                    NeuralNetworks`Private`ScalarSymbol[1], 2.}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 2., 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[2]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 2., 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Plus, 1., 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "3" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Summation", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]], "1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[NeuralNetworks`Private`ScalarSymbol[2] -> {
                    Times, -0.5, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "mn"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "sd"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "sd"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "3"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}]]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"image\"", "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"image\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{"\"random\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"latentLoss\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}, {"", "", "", "", 
                    StyleBox[
                    TemplateBox[{"\"imageLoss\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.739646682588168*^9, 3.739653218721143*^9, 3.7396544802948956`*^9, 
   3.7396631255092697`*^9, 3.739663208575527*^9, 3.739664672414815*^9, 
   3.7396649997745004`*^9, {3.7396650324443064`*^9, 3.7396650564777107`*^9}, 
   3.7396651112532177`*^9, 3.7396664473901024`*^9, 3.739668628390171*^9, 
   3.739668832601359*^9, 3.739669758293934*^9, 3.739670033644859*^9, 
   3.739670080394909*^9, 3.7397060126009517`*^9, 3.739706063707841*^9, 
   3.7397065270819745`*^9, 3.73970662067078*^9, 3.739706880041914*^9, 
   3.739715106992441*^9, 3.739715971945228*^9, 3.739716054000627*^9, 
   3.7397162830809145`*^9, 3.739716858013192*^9, 3.739718763403093*^9, 
   3.7397192981641493`*^9, 3.7397193793857794`*^9, 3.7397205851395326`*^9, 
   3.7397214514779797`*^9, 3.7397215819675007`*^9, 3.7397387880186477`*^9, {
   3.73975723821235*^9, 3.739757262901472*^9}, 3.739757378366915*^9, 
   3.7397575105213594`*^9, 3.73975764269414*^9, 3.739792881479125*^9, 
   3.739792928123745*^9, 3.7397930085605187`*^9, 3.7397932472143197`*^9, 
   3.7397933958948455`*^9, 3.739797012996257*^9, 3.739797497451494*^9, 
   3.739797832595845*^9, 3.7397996153812313`*^9, 3.7397998451872416`*^9, 
   3.739801216931805*^9, 3.739801349220798*^9, 3.7398112317456536`*^9, 
   3.7398123435613813`*^9, 3.739812385032113*^9, 3.739812429040013*^9, 
   3.739812640132635*^9, 3.7398158453111067`*^9, 3.739824798996208*^9, 
   3.73991573393049*^9, 3.7399169282212067`*^9, 3.7399183596565466`*^9, {
   3.747265325720467*^9, 3.7472653327184687`*^9}, 3.7472657899284735`*^9, 
   3.7472765118392134`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"58b0a1a9-4bbd-499a-ba61-2b9627843f77"],

Cell[BoxData["\<\"MNISTnet.wlnet\"\>"], "Output",
 CellChangeTimes->{
  3.739646682588168*^9, 3.739653218721143*^9, 3.7396544802948956`*^9, 
   3.7396631255092697`*^9, 3.739663208575527*^9, 3.739664672414815*^9, 
   3.7396649997745004`*^9, {3.7396650324443064`*^9, 3.7396650564777107`*^9}, 
   3.7396651112532177`*^9, 3.7396664473901024`*^9, 3.739668628390171*^9, 
   3.739668832601359*^9, 3.739669758293934*^9, 3.739670033644859*^9, 
   3.739670080394909*^9, 3.7397060126009517`*^9, 3.739706063707841*^9, 
   3.7397065270819745`*^9, 3.73970662067078*^9, 3.739706880041914*^9, 
   3.739715106992441*^9, 3.739715971945228*^9, 3.739716054000627*^9, 
   3.7397162830809145`*^9, 3.739716858013192*^9, 3.739718763403093*^9, 
   3.7397192981641493`*^9, 3.7397193793857794`*^9, 3.7397205851395326`*^9, 
   3.7397214514779797`*^9, 3.7397215819675007`*^9, 3.7397387880186477`*^9, {
   3.73975723821235*^9, 3.739757262901472*^9}, 3.739757378366915*^9, 
   3.7397575105213594`*^9, 3.73975764269414*^9, 3.739792881479125*^9, 
   3.739792928123745*^9, 3.7397930085605187`*^9, 3.7397932472143197`*^9, 
   3.7397933958948455`*^9, 3.739797012996257*^9, 3.739797497451494*^9, 
   3.739797832595845*^9, 3.7397996153812313`*^9, 3.7397998451872416`*^9, 
   3.739801216931805*^9, 3.739801349220798*^9, 3.7398112317456536`*^9, 
   3.7398123435613813`*^9, 3.739812385032113*^9, 3.739812429040013*^9, 
   3.739812640132635*^9, 3.7398158453111067`*^9, 3.739824798996208*^9, 
   3.73991573393049*^9, 3.7399169282212067`*^9, 3.7399183596565466`*^9, {
   3.747265325720467*^9, 3.7472653327184687`*^9}, 3.7472657899284735`*^9, 
   3.7472765124402018`*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"762b27d5-2b97-441d-9345-1e6e2fe57049"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"SystemOpen", "[", 
  RowBox[{"DirectoryName", "[", 
   RowBox[{"AbsoluteFileName", "[", "\"\<MNISTnet.wlnet\>\"", "]"}], "]"}], 
  "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[36]:=",ExpressionUUID->"827c0a2d-1b62-4823-a667-f5e5b7f9f8d9"],

Cell[BoxData[" "], "Input",
 CellChangeTimes->{
  3.747279306178152*^9},ExpressionUUID->"163e927a-77f8-4777-abc2-\
b7e7889116d4"],

Cell[BoxData[" "], "Input",
 CellChangeTimes->{
  3.747268507471246*^9},ExpressionUUID->"6e35fbec-1ccd-4afc-be12-\
9b66b55a58de"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generating", "Subsection",
 CellChangeTimes->{{3.739646118558402*^9, 
  3.739646127619317*^9}},ExpressionUUID->"2a188410-2540-4cfd-b762-\
b5b3e6ba0374"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "newImage", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearAll", "[", "initial", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initial", " ", "=", " ", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "nlatent"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"decc", " ", "=", " ", 
   RowBox[{"NetExtract", "[", 
    RowBox[{"trainedVae", ",", " ", "\"\<dec\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"newImage", " ", "=", " ", 
   RowBox[{"decc", "[", "initial", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", " ", "=", " ", 
   RowBox[{"NetDecoder", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<Image\>\"", ",", " ", "\"\<Grayscale\>\""}], "}"}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"Magnify", "[", 
  RowBox[{
   RowBox[{"a", "[", "newImage", "]"}], ",", "4"}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7396457684933586`*^9, 3.739645778227761*^9}, {
   3.7396458241028724`*^9, 3.7396458796974587`*^9}, {3.739646045256716*^9, 
   3.739646090525081*^9}, {3.739646131275936*^9, 3.739646144087335*^9}, {
   3.7396462320989513`*^9, 3.739646256418172*^9}, {3.7396463003376403`*^9, 
   3.7396463216834593`*^9}, {3.7396464449774623`*^9, 3.7396464524496183`*^9}, 
   3.7396465119526854`*^9, {3.739650975049708*^9, 3.7396509789702554`*^9}, {
   3.739663243587756*^9, 3.739663248978575*^9}, {3.739664925660292*^9, 
   3.7396649575294285`*^9}, {3.739706113203579*^9, 3.73970614661347*^9}, 
   3.7397068904832497`*^9, {3.739706951361699*^9, 3.739706958591832*^9}, {
   3.7397069979669313`*^9, 3.73970701256983*^9}, {3.7397128445409555`*^9, 
   3.7397128447093997`*^9}, 3.7397128868143215`*^9, {3.7397158805128565`*^9, 
   3.7397158970904713`*^9}, {3.739716050159375*^9, 3.739716176521705*^9}, {
   3.7397162066325617`*^9, 3.739716256790491*^9}, {3.73971688064563*^9, 
   3.7397168857913694`*^9}, {3.739716932101802*^9, 3.7397169640094924`*^9}, {
   3.7397193934390154`*^9, 3.7397194692175612`*^9}, {3.739719572325448*^9, 
   3.739719572819581*^9}, {3.73971963989671*^9, 3.7397197260123224`*^9}, {
   3.739720600586546*^9, 3.739720605026532*^9}, {3.739720700904532*^9, 
   3.7397207036425333`*^9}, {3.73975739059271*^9, 3.7397573965718684`*^9}, {
   3.739793414885888*^9, 3.739793424960888*^9}, {3.739793656814999*^9, 
   3.7397936955678744`*^9}, {3.7397938262079773`*^9, 
   3.7397938821451683`*^9}, {3.739793950744464*^9, 3.739793958360307*^9}, {
   3.7397942141883173`*^9, 3.739794219743436*^9}, {3.739794278931448*^9, 
   3.7397943073979473`*^9}, {3.739794454473952*^9, 3.7397944546302004`*^9}, {
   3.7397945365135117`*^9, 3.739794539019004*^9}, {3.739796442970791*^9, 
   3.7397964506809855`*^9}, {3.739797055856947*^9, 3.7397970806651216`*^9}, {
   3.7397996551261187`*^9, 3.739799656415143*^9}, {3.7398125264236803`*^9, 
   3.7398125279207134`*^9}, {3.7399157494944944`*^9, 3.739915760742523*^9}, {
   3.739916950773209*^9, 3.7399169513892093`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"b9810408-eec2-4e6e-bc82-b51ac6a95600"],

Cell[BoxData[
 StyleBox[
  RowBox[{"{", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzNWAtMVlUcv2milpnZa6bW1Sy20kxXajjymE0oNZ24TJfzasMYoTYcFk3x
6nRZq0mmYjXjtqmlzkQsUSm8CWI+wBc+UMGbCCIvH6D4xav8/c791r297of2
YPv475x7zv/8f//3Od0mTx89pYWiKDPa/Ppv9KS3BsfGToqPCLo+iJwU0++p
yOsfu8jfr39medOFQb+hSoWT6nJeVMr5Kjl2rbPHNh/dXt8kqaJcxLp8OS6W
6yqc/P18XFR3UdN1nk2FSx694q/xmVfkuMEpr+6S+9+ipjxXNLnwVDpx+/Vf
6cSpNMpxjaSN/w2OG8brtm/F/xuHVyrqXP5s20/6oXmDfmdKexsvN5Lf3jXk
vyClEvTNHWX4npBQAXo8pArzDyVzX/Y5np92GVSbRz7CF5hcusQp3HHXXP2F
Sf1MJB5j5pPnr1PLN/005Cw9cxjzE5P24fyE+r343v99zJtPBJ+7TtVXpgCv
On4f+KgTykmH11PeUG9ymsXO+BOlzcOnS70ag2uo76xNsJOVkfoT+CZWZuJ7
6W0mxlknMdaTRRbmPww9gPmXDxZiXwcdOM1+i4DT2HCQ/GNpR6U6wLyQ1zxc
wq4TcxpIvzpFPjF9SyFPU80hyBGdBBwi/dwpfA/JhPxKp9YlwJPeG7j0Cx+f
wL4di7DOigqGH4sxA8l/WzX9I136ic+ZV/5U/7XN9Muj0m63M070szNotzty
T9HP5u8AzRh6EOsXbi3HePFlxmHPPYg/83QV9KHePusk6C0vYb04Fgz7W/ce
w3rxaQbxFJTSX/s749Ifny685sVm+uWX3KcmbiGN90Hf2o/FkM/YfDkXdGd3
2EsrGAV/s1ZF0Y/jVOqlLJz5RXu6iHo5AH817kxF3OqjI6EHa9sIxmW3/rSf
WEk+6+ud/YJdn8skriuB4bPzq14k82PxHO4PW0l8mV2RP9SuzBtqUR7wiaFH
iUN8S33sLqR8+xeTT9gK5qP4hqMY37/XAs42kzFvflNC2rs97fn1dvIZxLjX
UySOWlcdsALEVy/9siXxqY/M4Dgn4jzj8L4jWPdseh6+p9afBX3jPPzTmjKb
523YJeWZSpxL+kIPxqpUxK3VdXY++FydUEw/SUa8mpWhjINLccRx52HKoc+l
HEdkvCj0Y1te4TEf6XK9Uibtt/kF7h8XxHzwfjDyhXnk1WOgny1DXJnBC5hX
EkdCPuXRDNhTCW0P/xMzl0IfytYo5FktTwUfEV13Bvuje0JPemM88FrDvgZe
ZUky/aNoAXHeyzhVU9ZTvhIpb41HO57hOi2Xfm8FvU59tboL9jE7Popz9dTt
kNcoLEE8aWmfY2xFd6Y9StpT3hnTYS9hzd+C/c+1g39rsxMod2MI8o9V1wnr
jRbXSG879Jd9sH7B6admnce6afNbJ+1e+JOM78E8740XmRcLNyF+1CGxOZDv
sRY/4Hvv3Vsxjlr1Pf1rfDb2pwwBTvNiAf20Jo55NmY76T2byV/qV6/6m7pg
54mGwOqlH1+anY/p79YTS2jXVWuZR0YkltI/0yn/8gEbsa7TsE8wb30Be1m5
YxBnImY442ttW9b1Hp9Rrsd3Uo/hDQ55Pct5yVud/J1+7L5nnY/4Wm+ScfwB
46vLNNjPGu3bA3mT+qRzf/s1oLcU74Z99VD2A31GYZ/Zbj/jclSmjJ9U8jdO
UL4THvH5mndvsPVgynOsxypl3U2DXOKZNQWw48lE9JfK1HhQrXM46oV4vuZH
xlPkTnxfU0W7zWOfrfTNYZ1bSrtp9+VRvo7VAeUJf9wFeF/178tl/tQG0S/N
qhjW8R55+zF+rXgX9r2SwDw4/TXGVYQP/Y1Y1Os7nLvwA9hZnzSZ+I4vor4W
5pPv8rPMh1PKKOd5b3KKq857rFf72fiMt+u4v88cyKXtyITc5siJsI+6ei3v
BeOHIK/qcw/zPvRuZ/QpyoDsbZBj1jjgU747AD5mUBbxvE17GWmMO+Mjnic8
xp8oct3bvfrnz7I+hLM+aH23Md72XWIdmLcCfqcWhwCHuKcWuPThURX004dZ
H+d3gn2tuIGob8aZR4gjyyK+DOJRO8h7Q5O8H10OLP7s+5FXfHY/rk3jeWp5
HPW+sQb9pj61Gn218U4O60PSXPZdF8qJ9+B77E8HXUTeESseAD5RNZZ8T1wl
zgUSV7lTTs/370uu95dzHvUi64gIkf5ZF8nxW/m8/0R020Q7d4R91FvvPo59
2oPsm7ssQ74xWiaivxGt2rJ/GXpI9nuyL3LVN9EUGD5R68yfnvOo9H9Tl3pJ
Z/40xixlf2m8Szse8qVRbylbqc+xsJsaVse+bc9O9icPyftAcC3PTyY+u/9v
7jud7nrf9L8Peq2bMj+ZQfKeNC6bOFcvZx+6OJv9f/8c5FOtVxFwaSMz2Z+N
09iXdB/Pe9OEshvC47dbjfO9UL/B9zP/u5y0p7CofyNR0mqZ/yIYr3qsPPea
8z56s95T/e+1rnfc372DXr055/3T1P9O7nP6oenC5X6/9r93X7u5+m0utd81
lbOSFjjl1f/o3foX6yk1ww==
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
4y5k/wWiJRXE
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzNWAtQVVUUvVbjb0QzE0OTruUfMa0U0sTjZ9TRwUFswh92MT9ggGg66KB2
8RPOICKDmgpjb7LUUfyMYuGgefGDZElggkggF+Ur7yGGyh/Svc57M9x4vIfg
lDO6Pe+eu89ee629z7mn36IV7ktfEQThq47P/nH3CpywapXXutntnw+WePmO
/mjJ84dv87/P/siVDQ/HP/9PVdOW8edKZeOx6bmZ90xWEMqaskp183606ylm
4mSaOLXztZZp/MsNzcf5n1ttvBbwGN+Ta//nuFqI15KerLVKHPcvc38/1GNs
l4t8VtRgXMTnPW3bPMr1Gt22EpfC9ct4nMpWWLGwCn5rGfK4x6OUrMdvNJYG
JZFVHYvx/rBazHuMfBjjbG1cshl9Wp0v3id0BXXwdy0Tds0U+HMOL6bnjl4l
ZBPiDfR8pjvhVXooZMWIILzXrRDxxPO4XrT+GxrrUq5omR9Ww3nLRb5F33sY
N/Sn+HUzDAXEz5rLmWRV23v0+6obhTR270LPhUvJecTnzGlF9HxKAeFVi8E/
e9g6nKyFOlD4fPkXWOnKI+hMzoT+ZvhT/LoBUwmXGN1dpecuY/Lp99howiMu
nEiW9eirgs/rmeA/lfgWrxwCrn5ctxc4zlbq1iwuo54jOG/+0KG43gXjS4F6
wnGgvgB8hFLc7Mw2jO9GkD7V9zc/IL9OX8MOc6J8sMSDd8hG9MqldW6thb8b
N7Guz99YJ7W+SXxm+a2zLh/GfZANR50JPQORz/ZziTcWEII6m7WfcIm5K6G/
hI8pTiGqlPAJv98mq6QdJh2rixJpnrgy/k/ykzbgKvlR6oAzI5T8C6/7Qid+
p7F+Pe/LFvYxa/lmHJ86ugI4036EHg3ZRajDT8HDtBgaK1c7gN+DOdDxuYtY
Jzwd/Uhcg74SP5N0K61fkEa/e45IonnB9oRPyEmnebqwhcCzuo7G0mfgU+n2
uNn4re3Dxj6rHi0Dvr670Ud8XZHnnt+iPx4JQtyJycBV8wTznVOwTuhY6E3J
I32yy97Ud5TopXngyfsuWZ93UZ/VZ8HzLgfgub8e/eegJ+JhGfCvT2yEg+Vo
zisW+pOxXwqd0hD32u6wp3dSnPLJSMShv4P8LgZ/SgfEJWXYQ6dBQdBnWBXx
LV31Av/zdpG+5eqYdJrX0Jnyxoak65GnSlpHV12Cut17CzrYnd/4fKLFYW0/
4nWq88zCfI9R0F/ZH7Se1GUi4RP098lKGweSZW/ZQX8/uaJ/OkSgvw5WwHdW
H7KiRwz2DyUhhXAWbvmLfs86BL1n7CN/Snf0G/FwBceHOmT5TeMw8maRv1x+
Lpmswm9yJXSifom+2GcreLiwB3gnO6HfTJpD/UPWpdyn+Gxssc95BdM8dbEr
9sm93ZCH2BOEj92yp3pUzxQQf3IR+ovk9BC6PA98QmDTcSucD2Zl/xQ2om+K
32Vj/nE36Kb0BPqk4SL2tT6OFL+wq4DiFZzvoI5iJxFv8tkavOewANZnL+rw
QxvCz67ofqV5h4cQf8z1BvTwWhTwZaJfiXGpyHN9XvPx11t3PlA36sHzSJyT
VfuT0OPwZcB37AuKT0wORp2VnEY9OvfmOnVE3xm8Cbyf6Qjecy5SHphjPvEl
f3KE8CnLtyIftnZYZw/2WakcOIWSavBzxAx/mvOnJf7USOhcWo2+IX9QjT6x
KYryL04IQH2MfBX56joB+Y3jcQmbkZfAqch/r1Oou+QhtK9LI9bdpvml12n/
lCY1QL+LOmP/s43F+8HoK9Ky2jY5h5ve96+E3w0q9JQUTucp3amd0OM+f+Q5
zQ/xR/Fz9uwE5DklDnhTpyHOznOJZ/aA0X6gJM65Se85TCd/4qlE9GGXOL6v
4ByoG1YO/15Nn2O0/Jn6vjmcYfx5sA1s7zjob2Uh5V30DiBd6nztSads1FH0
A6dByHsazjlC2TjgDa/ivG+g/q+2+4ZwqbvnY39fcRJ9VboGPD34OSWA11Ex
j0dvIe46K7+LsnjftLuEfHw+H3G/YYM8ly/Pobhvvkd9RDbMQPzjr5OV3PTQ
WdJ+7AtjvydcOpcnGeTnfDntC4JbLPa3THvkIewp1hvHeXjE66ncynsTY91Z
OL8Z9ak7XgpdbXqA/pDYiXjS9UWfFJdKFJ8Sg7oUtvfk5+fteB7aDnhGVOJ7
aUsIzgVDJeTZB9+9aiT6hlzH97UdL/bdYOqXtdb1T6N/5U3Op99QxBP3Dnjq
n031J3pG4Pv1WBnxpfhNx769Igj8hfDzVngk1uvI+7I/cCnlvK4KOW+aOjLd
k1n5PShbeZ9nms/9Ksm8Ltzn4b3oQpxHywaCXzkT/cNwALhddiCuez/DjjEg
TyGcJ2+uu5qm42/p963Ze0xr+6pxPf6dy2ZBv0pRDPTc9Rzid8R3vRSF8wEb
wHFkv5zvVFnTV/5lW7mfGPOuGLhN4taN19XRl3vvaDyXme5dNPegsvae+iXF
0VbWVJd1jePX3ptp779N94dGPtrofrTNbVVjPI3i/wd3ix+V
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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

       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzNWAtQVFUYviWupmippCMjzlXJfD/QLEDtpDIE46hhUKNOXkh7gAhCIyKZ
VyLFR4aiQzk+rjiWOA0lhkOj5VUxE/MVIgSoFxUQUWFRHvJY0/87ywwL2+4C
ozmD/5y7/znn//7vf907ICDE56PnBUEI7/z4Px//iLfCwvwjZ+ueLBb6L5ow
fuGTH/vxv8f/1LpHZW8+lrKJFOohVTNrS88b5SOuJwjlTaSh5XMsnWdOz/S5
JT0jTrUBkj1qaq9szu6nLM3ZbZYPQ8t4njWO1uJthu8p2WH0XzM/HuZrQ+vs
aTzHNE7b248Puf1XDCTFN+5hfeAUSS1pN+59PeAeyanDSkm+uuAuySAf6NX8
hX3GuCqzzl5j/jTLzzbikoMbcO5iDfYMyiH71c5dYP8SuYSe77hKa9m3+DbJ
S3ZFJF88SL9Lf+Rj34RC2BWBcyVvg034jPnIGtqGj13DfsXlPs57bw5k0WfF
JJPirhOPUR8UA5cn4dI89hAeJfbyTcLzzpzrwBlKPIoOmbBz7ENImdtbYBLH
Rr5quTzL8bWRN+N+eSr8K39TAj/fWkn2aSXON+h5ZphG+zy6Ek/a0jTiT9vn
dIdwLH9A+KRegf8Q3uoowi2M+Bx46i4gXlfBf2ogx2Fiv2kdaW19NNYFmd8j
rCnH/cHvQi6KJlxqz/rL9Ps8hyu079PpZLe2yZ3ij9kvIqk46Qm3cGxjNskj
2bRWKxyQv0kncd/ufMSJXsFzrwLg19e12Lda28dYPvZpfWpx365XIKvdwEti
SQ7xkbSGcAnn7pK90q+riFfVdyvuzXPDvgpXild1xXbyhxIzBnx2cSJ9aUsW
+UHW+cEv8vZbpP92KXgsbrmftZY/uRT7RKkGfnvOD3ZHrqF407rOQj4lHiC8
0rZY+p2xm9AbNxP29piNOA5ViG+p2/5cuudMKflD+XAn5asqHIXe2nLsn4W6
Kuf/Ny5mI75GfXsen4mx8OeXQ1AfU6qBZ9ZWkuqI71AfB8ZiXVKJvCofSnYr
Vb8X0POZKSS1Q99eI79p1bRPGBwBv1zfS/do3b6HXytQb1h5PfD1v9+kzjB9
63hUa3hcdrgB/aWVZLeoTAQ+gz3yK9wPdT5fKiQcDb2pvshLfkZefrLiKq3H
ulI9kSMjKI7VQZvAl+do9AfnSPTHkcuBsxvql/yTlbzYyJ96jPeBIPRrcXoM
7r+5nvApdh3IPuGWA+LthQVZtL6Rc57WAf3OkZ3RGZRn0vFl4Gsk+oOo2wcc
dzqBh/VBkEpN07nLWj5szb/N0JeKUFeEIn/4uUc6+lyCM/rc/N/Al0c85ZMc
HJNJel+5k5TXnabf2Zg87HP1RZ+YHk/niS5XcX5HHodZtuVT4/xi5ZzHeN9U
MoBLTkW9FiNWk11s8lzwVbWZ6prYIwxxNioV8Zg5k3ArR7MJl3pqHMWtulJH
vLNTu1BvvFPhvy4ZuM8D+ISeDS32O0u8MSvfd8Q4nK+l8T5ToIe+y2TU7/cD
gWNhAurmjDiyX5uxl9bs4jXwmTDkAq1dkik+2XAF/vBi8NfcP3FufhGkJ+4V
d+NetdzGeLN2fgnlcXmR97t7J7D2cSb+FF0W+nO2H+FkoRcwh01JRb3sm0Jr
sbI+n3CXDb1Ea6Ev+rjdNuSx9zLYU5EO6Y7+Jg1+gPVpbm97v+9onO+4Kpzr
jflQ8SpEP49UYaejI+bmxKGItx+8kE+TLkM/+SXildVH/w3/oI+zhvOkJ+1d
Bzw/oj6r6/JwXzH8qh7i8WYhr1STedScnnHu1nQ873qvgv6AwahznY5TfGmL
o8huSVbQ34+XoF/ZByO+sqfAPxNj0T/Wd6e+IAbFE99ibTL8MHst7NoAP2qj
8b4gu9Y2mVMs8cFM3wMt+aGK15eQHNhbMB78+EZR3GlKJfVnUb+R+JB37sf8
4ZYHnIsNiGP3I5R34q406htaSi/q49KKavAXjXlavo/3K9U5FzjLMXfKZ2yr
L1bPnxt5/umATw2pAr7+aajrfY8RPjZAzaPncTsRdydjML/sCaff5Y+7Z9D+
lwMIp1YVSHEg250Fv5k4X+6D+sU82zj/G/FZwKlmcx4dK4HTG/O0mlwKnMMH
Ek41dxDeh+p6oa+9tgU4j8Ri3tbbnSW9tRcJrzJsGuJi9Qkeh2WwI7WN7202
vr8b/SHmIm6kPSthz/ZtWB9G/2JhyD8hPAdz6PxozPlOXwBn5g7Cr6UnYJ7r
eBA8TUP9Z+30HYGZ+75oKa7duN4kzLXShkPw/4PbqKOr9ZijR20Avs7p+O4Q
GYI5YN4o6DvGY38h5i52p53qvUldafY9zVKc8ros87oq/8L7ho7vzzbwOaOG
13PMH9LX4EeaU9+Ep/b+jtqYd+a+Nxu/x1joG/8baeTF0BSX8Tlr7ff1ZyxN
v4+1+D3+X3HaIf4=
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
059Mfa12c/T+bn93et7edS3vs//5f4V/AUz+Jos=
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
fvi75X+Np6bvqno8Dsi/AMYX8pA=
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
eVi+L/l/8dr84v6eXuXIO9vuM7/3/w2CKCMY
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}]}], "}"}],
  StripOnInput->False,
  Magnification->4 Inherited]], "Output",
 CellChangeTimes->{{3.739811234693652*^9, 3.739811238471654*^9}, {
   3.7398113057066545`*^9, 3.7398113113066587`*^9}, 3.7398114035416527`*^9, {
   3.7398123458803415`*^9, 3.7398123537693424`*^9}, {3.739812387172079*^9, 
   3.73981240415008*^9}, {3.7398125162916813`*^9, 3.7398125284106874`*^9}, 
   3.739812645727603*^9, {3.7398167233396544`*^9, 3.739816735836159*^9}, 
   3.7398248010308933`*^9, {3.7399157358104873`*^9, 3.7399157706464877`*^9}, {
   3.7399158216105194`*^9, 3.7399158292864914`*^9}, {3.7399169315092096`*^9, 
   3.739916952125207*^9}, {3.739918361683551*^9, 3.7399183674163733`*^9}, {
   3.739918412466813*^9, 3.7399184165299644`*^9}, {3.739918682540408*^9, 
   3.739918685523666*^9}, {3.739918725729963*^9, 3.7399187355024767`*^9}, 
   3.7472791485091734`*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"ff0f9dea-c6a4-4f58-a463-55ca0dabb731"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 997},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>0.9 Inherited,
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[583, 22, 163, 3, 48, "Subsection",ExpressionUUID->"a97b6548-7444-4f52-8385-55f7e3aac111"],
Cell[749, 27, 441, 8, 45, "Input",ExpressionUUID->"d8eb4aa3-ea91-4560-a5e4-89e2aa5ad890"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1227, 40, 230, 4, 48, "Subsection",ExpressionUUID->"8fef335a-119a-4684-9c73-4161c696fc69"],
Cell[CellGroupData[{
Cell[1482, 48, 468, 10, 26, "Input",ExpressionUUID->"37b3c95e-cf6e-4345-8213-2834e7838772"],
Cell[1953, 60, 14633, 292, 67, "Output",ExpressionUUID->"0ef30924-681b-4dfa-b0ef-ddb0540f5918"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16623, 357, 14630, 292, 63, InheritFromParent,ExpressionUUID->"0a228ccc-e6a7-4500-9cef-cda9e51dda38"],
Cell[31256, 651, 503, 11, 24, "Message",ExpressionUUID->"bf892dda-0356-42d0-8b67-d1effba743d4"]
}, Open  ]],
Cell[31774, 665, 2697, 44, 225, "Input",ExpressionUUID->"b61fd62d-6249-4276-95f6-4e6f7dbc912f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34508, 714, 170, 3, 48, "Subsection",ExpressionUUID->"1d510bfb-5494-494c-a291-1cda52559c0d"],
Cell[34681, 719, 2091, 41, 99, "Input",ExpressionUUID->"5ffd5e94-746f-4af8-ba2d-32f494356219"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36809, 765, 159, 3, 48, "Subsection",ExpressionUUID->"b8773a27-cd1e-48ec-8d51-81bf6ff63b4b"],
Cell[36971, 770, 3312, 56, 351, "Input",ExpressionUUID->"edbf0ee2-cf30-4d82-9dab-f9b0c346225e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40320, 831, 159, 3, 48, "Subsection",ExpressionUUID->"1510df37-b6e3-4059-8d8a-68933a55834f"],
Cell[CellGroupData[{
Cell[40504, 838, 3851, 72, 189, "Input",ExpressionUUID->"f0396d21-c023-4886-859b-4555aa089e09"],
Cell[44358, 912, 42736, 865, 112, "Output",ExpressionUUID->"e737983f-a04d-40ee-b50f-76f478fd20b0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87131, 1782, 179, 3, 26, "Input",ExpressionUUID->"cd8471b6-4cdc-45fd-b167-bbeeefcad251"],
Cell[87313, 1787, 204, 4, 30, "Output",ExpressionUUID->"c279ac73-f6f2-4001-a6ae-ff3a34cb8a18"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[87566, 1797, 262, 4, 48, "Subsection",ExpressionUUID->"1de5c636-2c07-4bc9-98bb-1e273b057422"],
Cell[CellGroupData[{
Cell[87853, 1805, 3184, 66, 261, "Input",ExpressionUUID->"a483c109-1890-41a9-a395-427c3de3b8fa"],
Cell[91040, 1873, 53191, 1065, 80, "Output",ExpressionUUID->"478b2d1c-b30d-4fba-82a8-6f4ac1106b3d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[144280, 2944, 156, 3, 48, "Subsection",ExpressionUUID->"ad5e5560-d72d-44fd-87ec-5a9600863698"],
Cell[CellGroupData[{
Cell[144461, 2951, 1818, 35, 153, "Input",ExpressionUUID->"7d2529f9-03da-4c54-9557-09b8b5cee6ea"],
Cell[146282, 2988, 37718, 765, 80, "Output",ExpressionUUID->"8095b382-c677-428c-9036-f45bcb67b046"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[184049, 3759, 333, 5, 51, "Section",ExpressionUUID->"1625ce47-7e38-4ccf-93bd-d49aa95d21db"],
Cell[CellGroupData[{
Cell[184407, 3768, 170, 3, 48, "Subsection",ExpressionUUID->"0cd985cc-3af6-4533-854e-e0be71215472"],
Cell[CellGroupData[{
Cell[184602, 3775, 7497, 132, 585, "Input",ExpressionUUID->"31419281-fdd4-4dbc-8105-f2287a04b63a"],
Cell[192102, 3909, 130534, 2538, 80, "Output",ExpressionUUID->"8552dbda-630f-497f-bde9-c90b16d44991"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[322685, 6453, 308, 5, 48, "Subsection",ExpressionUUID->"4d8708ae-94a3-460d-b70f-ce3a512d387e"],
Cell[CellGroupData[{
Cell[323018, 6462, 1751, 28, 26, "Input",ExpressionUUID->"a7c64f03-a37b-4ff4-8fa9-4bfc6c4beb84"],
Cell[324772, 6492, 364, 10, 24, "Message",ExpressionUUID->"c36531be-5601-446f-9f0f-050cc1bccf00"],
Cell[325139, 6504, 364, 10, 24, "Message",ExpressionUUID->"eb1f5604-556a-43ae-a3a1-8c452e087439"],
Cell[325506, 6516, 364, 10, 24, "Message",ExpressionUUID->"56b49c04-2995-4702-a276-4dcf21c35b8d"],
Cell[325873, 6528, 362, 10, 24, "Message",ExpressionUUID->"e1f86be1-765d-49cd-8221-ba66ca4c7dbc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[326272, 6543, 1496, 27, 63, "Input",ExpressionUUID->"bc184bf2-cdcb-4b06-8822-87c061f3da92"],
Cell[327771, 6572, 67383, 1407, 176, "Output",ExpressionUUID->"a518501a-693e-48db-9fe4-034078e83f1c"]
}, Open  ]],
Cell[395169, 7982, 549, 13, 45, "Input",ExpressionUUID->"428efe7e-29c3-462a-8c93-0313a0eddbc5"],
Cell[CellGroupData[{
Cell[395743, 7999, 3146, 54, 135, "Input",ExpressionUUID->"8fceabf9-ec10-47c1-a295-9b3b7892aa3b"],
Cell[398892, 8055, 129742, 2528, 80, "Output",ExpressionUUID->"58b0a1a9-4bbd-499a-ba61-2b9627843f77"],
Cell[528637, 10585, 1705, 24, 30, "Output",ExpressionUUID->"762b27d5-2b97-441d-9345-1e6e2fe57049"]
}, Open  ]],
Cell[530357, 10612, 271, 6, 26, "Input",ExpressionUUID->"827c0a2d-1b62-4823-a667-f5e5b7f9f8d9"],
Cell[530631, 10620, 129, 3, 26, "Input",ExpressionUUID->"163e927a-77f8-4777-abc2-b7e7889116d4"],
Cell[530763, 10625, 129, 3, 26, "Input",ExpressionUUID->"6e35fbec-1ccd-4afc-be12-9b66b55a58de"]
}, Open  ]],
Cell[CellGroupData[{
Cell[530929, 10633, 158, 3, 48, "Subsection",ExpressionUUID->"2a188410-2540-4cfd-b762-b5b3e6ba0374"],
Cell[CellGroupData[{
Cell[531112, 10640, 3215, 59, 153, "Input",ExpressionUUID->"b9810408-eec2-4e6e-bc82-b51ac6a95600"],
Cell[534330, 10701, 35655, 640, 119, "Output",ExpressionUUID->"ff0f9dea-c6a4-4f58-a463-55ca0dabb731"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

