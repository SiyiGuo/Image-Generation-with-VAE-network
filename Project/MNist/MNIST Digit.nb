(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='WolframDesktop 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       161,          7]
NotebookDataLength[    651392,      13000]
NotebookOptionsPosition[    642281,      12836]
NotebookOutlinePosition[    642876,      12858]
CellTagsIndexPosition[    642786,      12853]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Hyper Parameter", "Subsection",
 CellChangeTimes->{{3.739551732245135*^9, 
  3.739551736385481*^9}},ExpressionUUID->"a97b6548-7444-4f52-8385-\
55f7e3aac111"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nlatent", " ", "=", " ", "8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sampleSize", "=", " ", "60000"}], ";"}]}], "Input",
 CellChangeTimes->{{3.739551316690058*^9, 3.739551333600608*^9}, {
   3.7396686423057833`*^9, 3.7396686465900373`*^9}, 3.739670092731775*^9, {
   3.739717174778987*^9, 3.739717181629671*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"d8eb4aa3-ea91-4560-a5e4-89e2aa5ad890"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Encoder", "Subsection",
 CellChangeTimes->{{3.739551680305462*^9, 3.739551682201329*^9}, 
   3.739797298066251*^9, {3.739797342840246*^9, 
   3.7397973460662866`*^9}},ExpressionUUID->"8fef335a-119a-4684-9c73-\
4161c696fc69"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lrelu", " ", "=", " ", 
  RowBox[{"ElementwiseLayer", "[", 
   RowBox[{
    RowBox[{"Max", "[", 
     RowBox[{
      RowBox[{"Ramp", "[", "#", "]"}], ",", " ", 
      RowBox[{"#", "*", "0.3"}]}], "]"}], "&"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.739551680305462*^9, 3.739551682201329*^9}, 
   3.739797298066251*^9, {3.739797342840246*^9, 3.739797397032279*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"37b3c95e-cf6e-4345-8213-2834e7838772"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ElementwiseLayer", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014705882352941176`], {
                 RGBColor[0.557, 0.557, 0.557], 
                 RGBColor[0.33, 0.33, 0.33], 
                 Thickness[0.015029411764705883`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 18.5}, {14., 18.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.557, 0.557, 0.557], 
                 Thickness[0.015029411764705883`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{52.5, 18.5}, {44., 18.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.85, 0.85, 0.85], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{22.23,
                   18.5}, {33.5, 29.77}, {44.77, 18.5}, {33.5, 7.23}}}]}, {
                 FaceForm[{
                   RGBColor[0.56, 0.56, 0.56], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{33.5, 30.29}, {21.71, 
                  18.5}, {33.5, 6.71}, {45.29, 18.5}}, {{33.5, 29.25}, {44.25,
                   18.5}, {33.5, 7.75}, {22.75, 18.5}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{53.56, 15.4}, {51.88, 15.4}, {50.52, 16.76}, {
                  50.52, 18.44}, {50.52, 20.12}, {51.88, 21.48}, {53.56, 
                  21.48}, {55.24, 21.48}, {56.6, 20.12}, {56.6, 18.44}, {56.6,
                   16.76}, {55.24, 15.4}, {53.56, 15.4}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {0, 1, 0}}}, {{{53.56, 21.83}, {51.69, 21.83}, {50.17, 
                   20.31}, {50.17, 18.44}, {50.17, 16.57}, {51.69, 15.05}, {
                   53.56, 15.05}, {55.43, 15.05}, {56.95, 16.57}, {56.95, 
                   18.44}, {56.95, 20.31}, {55.43, 21.83}, {53.56, 21.83}}, {{
                   53.56, 21.83}, {53.56, 21.13}, {55.04, 21.13}, {56.25, 
                   19.92}, {56.25, 18.44}, {56.25, 16.96}, {55.04, 15.75}, {
                   53.56, 15.75}, {52.08, 15.75}, {50.87, 16.96}, {50.87, 
                   18.44}, {50.87, 19.92}, {52.08, 21.13}, {53.56, 21.13}, {
                   53.56, 21.83}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{13.56, 15.5}, {11.94, 15.5}, {10.62, 16.82}, {
                  10.62, 18.44}, {10.62, 20.06}, {11.94, 21.38}, {13.56, 
                  21.38}, {15.18, 21.38}, {16.5, 20.06}, {16.5, 18.44}, {16.5,
                   16.82}, {15.18, 15.5}, {13.56, 15.5}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}}}, {{{13.56, 21.73}, {11.74, 21.73}, {10.27, 
                   20.26}, {10.27, 18.44}, {10.27, 16.62}, {11.74, 15.15}, {
                   13.56, 15.15}, {15.38, 15.15}, {16.85, 16.62}, {16.85, 
                   18.44}, {16.85, 20.26}, {15.38, 21.73}, {13.56, 
                   21.73}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQLd/6OnCHnLaDx8MqkXXspg4MINCgA+efPQMCug6H
v2rE9B8ygYgf13MAa3M1gYrrQ8WNHdJAQM3AAcR1V0TwC225ri8uMILzwfqY
DB2qgcoe/tJ1MAaBzfoOMPfA+GBtezXhfIg5GlB1Bg7fQNaXqjsAya8acwwg
5lWpOcyaCQSShhD1H1Qh/jqA4MPcA+ODzbtnDHGXkwbc/+jhAwASgHiO
                   "]}]}}, ImageSize -> {40, Automatic}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{"\"Function\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TagBox[
                   FormBox[
                    RowBox[{"max", "(", 
                    RowBox[{
                    RowBox[{"0.3`", " ", "\"x\""}], ",", 
                    RowBox[{"Ramp", "[", "\"x\"", "]"}]}], ")"}], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"tensor\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014705882352941176`], {
                 RGBColor[0.557, 0.557, 0.557], 
                 RGBColor[0.33, 0.33, 0.33], 
                 Thickness[0.015029411764705883`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 18.5}, {14., 18.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.557, 0.557, 0.557], 
                 Thickness[0.015029411764705883`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{52.5, 18.5}, {44., 18.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.85, 0.85, 0.85], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{22.23,
                   18.5}, {33.5, 29.77}, {44.77, 18.5}, {33.5, 7.23}}}]}, {
                 FaceForm[{
                   RGBColor[0.56, 0.56, 0.56], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{33.5, 30.29}, {21.71, 
                  18.5}, {33.5, 6.71}, {45.29, 18.5}}, {{33.5, 29.25}, {44.25,
                   18.5}, {33.5, 7.75}, {22.75, 18.5}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{53.56, 15.4}, {51.88, 15.4}, {50.52, 16.76}, {
                  50.52, 18.44}, {50.52, 20.12}, {51.88, 21.48}, {53.56, 
                  21.48}, {55.24, 21.48}, {56.6, 20.12}, {56.6, 18.44}, {56.6,
                   16.76}, {55.24, 15.4}, {53.56, 15.4}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {0, 1, 0}}}, {{{53.56, 21.83}, {51.69, 21.83}, {50.17, 
                   20.31}, {50.17, 18.44}, {50.17, 16.57}, {51.69, 15.05}, {
                   53.56, 15.05}, {55.43, 15.05}, {56.95, 16.57}, {56.95, 
                   18.44}, {56.95, 20.31}, {55.43, 21.83}, {53.56, 21.83}}, {{
                   53.56, 21.83}, {53.56, 21.13}, {55.04, 21.13}, {56.25, 
                   19.92}, {56.25, 18.44}, {56.25, 16.96}, {55.04, 15.75}, {
                   53.56, 15.75}, {52.08, 15.75}, {50.87, 16.96}, {50.87, 
                   18.44}, {50.87, 19.92}, {52.08, 21.13}, {53.56, 21.13}, {
                   53.56, 21.83}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{13.56, 15.5}, {11.94, 15.5}, {10.62, 16.82}, {
                  10.62, 18.44}, {10.62, 20.06}, {11.94, 21.38}, {13.56, 
                  21.38}, {15.18, 21.38}, {16.5, 20.06}, {16.5, 18.44}, {16.5,
                   16.82}, {15.18, 15.5}, {13.56, 15.5}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}}}, {{{13.56, 21.73}, {11.74, 21.73}, {10.27, 
                   20.26}, {10.27, 18.44}, {10.27, 16.62}, {11.74, 15.15}, {
                   13.56, 15.15}, {15.38, 15.15}, {16.85, 16.62}, {16.85, 
                   18.44}, {16.85, 20.26}, {15.38, 21.73}, {13.56, 
                   21.73}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQLd/6OnCHnLaDx8MqkXXspg4MINCgA+efPQMCug6H
v2rE9B8ygYgf13MAa3M1gYrrQ8WNHdJAQM3AAcR1V0TwC225ri8uMILzwfqY
DB2qgcoe/tJ1MAaBzfoOMPfA+GBtezXhfIg5GlB1Bg7fQNaXqjsAya8acwwg
5lWpOcyaCQSShhD1H1Qh/jqA4MPcA+ODzbtnDHGXkwbc/+jhAwASgHiO
                   "]}]}}, ImageSize -> {40, Automatic}], 
              GridBox[{{
                 ItemBox[
                  StyleBox["Parameters", Bold]], 
                 ItemBox[""]}, {
                 StyleBox[
                  TemplateBox[{"\"Function\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TagBox[
                   FormBox[
                    RowBox[{"max", "(", 
                    RowBox[{
                    RowBox[{"0.3`", " ", "\"x\""}], ",", 
                    RowBox[{"Ramp", "[", "\"x\"", "]"}]}], ")"}], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                  "SummaryItem"]}, {
                 ItemBox[
                  StyleBox["Ports", Bold], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]], 
                 ItemBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                   "CacheGraphics" -> False], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]]}, {
                 StyleBox[
                  TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"tensor\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"tensor\"", "SummaryItem"]}}, 
               BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 3}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ElementwiseLayer[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.739797397490271*^9, 3.739797417003497*^9}, 
   3.7398008378793354`*^9, 3.7398114105536523`*^9, 3.73991542454438*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"0a228ccc-e6a7-4500-9cef-cda9e51dda38"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"encoder", " ", "=", " ", 
   RowBox[{"NetChain", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ConvolutionLayer", "[", 
       RowBox[{"64", ",", " ", "4", ",", " ", 
        RowBox[{"\"\<Stride\>\"", "\[Rule]", "2"}], ",", " ", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", "2"}]}], "]"}], ",", 
      "\[IndentingNewLine]", "lrelu", ",", "\[IndentingNewLine]", 
      RowBox[{"DropoutLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ConvolutionLayer", "[", 
       RowBox[{"64", ",", " ", "4", ",", " ", 
        RowBox[{"\"\<Stride\>\"", "\[Rule]", "2"}], ",", " ", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", "2"}]}], "]"}], ",", 
      "\[IndentingNewLine]", "lrelu", ",", "\[IndentingNewLine]", 
      RowBox[{"DropoutLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ConvolutionLayer", "[", 
       RowBox[{"64", ",", " ", "4", ",", " ", 
        RowBox[{"\"\<Stride\>\"", "\[Rule]", "1"}], ",", " ", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", "2"}]}], "]"}], ",", 
      "\[IndentingNewLine]", "lrelu", ",", "\[IndentingNewLine]", 
      RowBox[{"DropoutLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"FlattenLayer", "[", "]"}]}], "\[IndentingNewLine]", "}"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7395491087158737`*^9, 3.73954917811176*^9}, {
   3.739549218210209*^9, 3.7395492956660833`*^9}, {3.7395493546752667`*^9, 
   3.7395493694767766`*^9}, {3.739550100213616*^9, 3.7395501005517516`*^9}, 
   3.7395506987487946`*^9, {3.739550763158961*^9, 3.7395507829405527`*^9}, {
   3.7395513101844034`*^9, 3.7395513112562037`*^9}, {3.739553041169927*^9, 
   3.7395530814694223`*^9}, {3.7396427053090143`*^9, 
   3.7396427062149363`*^9}, {3.7397064531160984`*^9, 3.7397064556743484`*^9}, 
   3.739716288881195*^9, {3.7397197436824937`*^9, 3.73971974511782*^9}, {
   3.7397382200078974`*^9, 3.739738237032915*^9}, {3.7397386776756477`*^9, 
   3.7397387248926487`*^9}, {3.739738764458597*^9, 3.7397388295626097`*^9}, {
   3.739738946903629*^9, 3.7397389531816115`*^9}, {3.739739030868601*^9, 
   3.7397390745136156`*^9}, {3.73973918457199*^9, 3.739739184768979*^9}, {
   3.739739235728995*^9, 3.7397392421189823`*^9}, {3.7397393644694333`*^9, 
   3.7397393798952384`*^9}, {3.739756551760101*^9, 3.739756555321489*^9}, {
   3.7397569889289956`*^9, 3.739756995272276*^9}, {3.7397573111038747`*^9, 
   3.739757319776167*^9}, {3.739796901869957*^9, 3.7397969077870407`*^9}, {
   3.73979740163824*^9, 3.739797405355241*^9}, {3.7398000923253517`*^9, 
   3.7398001425868797`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"b61fd62d-6249-4276-95f6-4e6f7dbc912f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Middle Trick Z layer", "Subsection",
 CellChangeTimes->{{3.739551687254616*^9, 
  3.7395516940382557`*^9}},ExpressionUUID->"1d510bfb-5494-494c-a291-\
1cda52559c0d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mn", " ", "=", " ", 
   RowBox[{"LinearLayer", "[", "nlatent", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sd", "=", " ", 
   RowBox[{"NetChain", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"LinearLayer", "[", "nlatent", "]"}], ",", 
      RowBox[{"ElementwiseLayer", "[", 
       RowBox[{
        RowBox[{"#", "*", "0.5"}], "&"}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"expSd", " ", "=", " ", 
   RowBox[{"ElementwiseLayer", "[", 
    RowBox[{
     RowBox[{"Exp", "[", "#", "]"}], "&"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z", " ", "=", 
   RowBox[{"TotalLayer", "[", "]"}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7395491087158737`*^9, 3.73954917811176*^9}, {
   3.739549218210209*^9, 3.7395492956660833`*^9}, {3.7395493546752667`*^9, 
   3.7395493694767766`*^9}, {3.739550100213616*^9, 3.7395501005517516`*^9}, {
   3.7395506987487946`*^9, 3.739550715179901*^9}, {3.7395512449249754`*^9, 
   3.739551276851375*^9}, 3.7395513375830107`*^9, {3.7395515781816907`*^9, 
   3.7395515847436523`*^9}, {3.7395529647125893`*^9, 
   3.7395529676392713`*^9}, {3.739553158868684*^9, 3.7395532248187704`*^9}, {
   3.739553457330779*^9, 3.739553521142729*^9}, {3.739553908178919*^9, 
   3.739553930029264*^9}, {3.739554079763504*^9, 3.7395540897121577`*^9}, {
   3.739554133563135*^9, 3.7395542311423635`*^9}, {3.7395546155509634`*^9, 
   3.7395546362187023`*^9}, {3.7395546795450125`*^9, 3.739554687174427*^9}, {
   3.739554745978673*^9, 3.7395547579545517`*^9}, {3.7395550832738695`*^9, 
   3.7395550911013155`*^9}, {3.739563601684586*^9, 3.739563634298044*^9}, {
   3.7395779331005144`*^9, 3.7395779348582907`*^9}, {3.7395801891391616`*^9, 
   3.739580189373973*^9}, {3.739653171873227*^9, 3.739653173339471*^9}, {
   3.739653666217244*^9, 3.7396536862047267`*^9}, {3.739658054893764*^9, 
   3.7396580554502954`*^9}, {3.739800365648552*^9, 3.739800368103361*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"5ffd5e94-746f-4af8-ba2d-32f494356219"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Decoder", "Subsection",
 CellChangeTimes->{{3.7395516987804565`*^9, 
  3.7395517004113936`*^9}},ExpressionUUID->"b8773a27-cd1e-48ec-8d51-\
81bf6ff63b4b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"decoder", " ", "=", " ", 
   RowBox[{"NetChain", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
     "25", ",", "\[IndentingNewLine]", "lrelu", ",", "\[IndentingNewLine]", 
      "49", ",", " ", "\[IndentingNewLine]", "lrelu", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ReshapeLayer", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "7", ",", "7"}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"DeconvolutionLayer", "[", 
       RowBox[{"64", ",", " ", "4", ",", " ", 
        RowBox[{"\"\<Stride\>\"", "\[Rule]", "2"}], ",", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", "2"}]}], "]"}], ",", 
      "\[IndentingNewLine]", "Ramp", ",", "\[IndentingNewLine]", 
      RowBox[{"DropoutLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"DeconvolutionLayer", "[", 
       RowBox[{"64", ",", " ", "4", ",", " ", 
        RowBox[{"\"\<Stride\>\"", "\[Rule]", "1"}], ",", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", "2"}]}], "]"}], ",", 
      "\[IndentingNewLine]", "Ramp", ",", "\[IndentingNewLine]", 
      RowBox[{"DropoutLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"DeconvolutionLayer", "[", 
       RowBox[{"64", ",", " ", "4", ",", " ", 
        RowBox[{"\"\<Stride\>\"", "\[Rule]", "1"}], ",", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", "2"}]}], "]"}], ",", 
      "\[IndentingNewLine]", "Ramp", ",", "\[IndentingNewLine]", 
      RowBox[{"FlattenLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"28", "*", "28"}], ",", "\[IndentingNewLine]", 
      "LogisticSigmoid", ",", "\[IndentingNewLine]", 
      RowBox[{"ReshapeLayer", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "28", ",", "28"}], "}"}], "]"}]}], 
     "\[IndentingNewLine]", "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7395494974551506`*^9, 3.7395495046283197`*^9}, {
   3.7395510248368125`*^9, 3.7395510310459833`*^9}, {3.7395530865320435`*^9, 
   3.7395530890187006`*^9}, {3.739574426986454*^9, 3.7395744331238127`*^9}, {
   3.739574497367547*^9, 3.7395744993428903`*^9}, 3.7396531773926125`*^9, {
   3.739706461019185*^9, 3.7397064632360244`*^9}, {3.7397162948216295`*^9, 
   3.73971630056956*^9}, {3.739719747686528*^9, 3.739719749966364*^9}, {
   3.739738264288909*^9, 3.7397382739389133`*^9}, {3.739738853730604*^9, 
   3.7397389720616074`*^9}, {3.73973938318534*^9, 3.739739384977476*^9}, {
   3.739739420803893*^9, 3.739739443681853*^9}, {3.7397396218078933`*^9, 
   3.7397396313349075`*^9}, {3.7397396799720216`*^9, 3.739739681793908*^9}, {
   3.7397397124359007`*^9, 3.739739730399901*^9}, {3.739739814692984*^9, 
   3.73973981614898*^9}, {3.739739865804993*^9, 3.7397398829687643`*^9}, {
   3.7397566218803396`*^9, 3.739756681167693*^9}, {3.739756759474098*^9, 
   3.739756837663678*^9}, {3.73975693884508*^9, 3.7397569632685223`*^9}, {
   3.7397573254543333`*^9, 3.7397573339639964`*^9}, {3.739793536041973*^9, 
   3.739793542061054*^9}, {3.7397944858854265`*^9, 3.739794489394738*^9}, {
   3.7397969140676365`*^9, 3.7397969186518593`*^9}, {3.739800489331607*^9, 
   3.7398005375078735`*^9}, {3.7398006155175943`*^9, 
   3.7398006279111056`*^9}, {3.7398008319336505`*^9, 3.73980083207866*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"edbf0ee2-cf30-4d82-9dab-f9b0c346225e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["ImageLoss", "Subsection",
 CellChangeTimes->{{3.7396580504733496`*^9, 
  3.739658066790998*^9}},ExpressionUUID->"1510df37-b6e3-4059-8d8a-\
68933a55834f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Assume", " ", "input", " ", "is", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", "28", ",", "28"}], "}"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "output", " ", "the", " ", "real", " ", "number", " ", "as", " ", "wll"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"imageLoss", " ", "=", " ", 
   RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ElementwiseLayer", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "*", "#"}], " ", "&"}], "]"}], ",", " ", 
       RowBox[{"TotalLayer", "[", "]"}], ",", " ", 
       RowBox[{"ElementwiseLayer", "[", 
        RowBox[{
         RowBox[{"#", "^", "2"}], "&"}], "]"}], ",", " ", 
       RowBox[{"ReshapeLayer", "[", 
        RowBox[{"{", 
         RowBox[{"28", ",", "28"}], "}"}], "]"}], ",", " ", 
       RowBox[{"SummationLayer", "[", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<inDec\>\"", "]"}], "\[Rule]", 
        RowBox[{"1", "->", "2"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<inInput\>\"", "]"}], "\[Rule]", "2"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"2", "\[Rule]", 
        RowBox[{"3", "\[Rule]", 
         RowBox[{"4", "\[Rule]", "5"}]}]}]}], "\[IndentingNewLine]", "}"}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7396580504733496`*^9, 3.7396580704733276`*^9}, {
   3.739658183848325*^9, 3.739658231838282*^9}, {3.7396582697827425`*^9, 
   3.7396582776903963`*^9}, {3.739658334942755*^9, 3.739658339791144*^9}, {
   3.7396589960878963`*^9, 3.739658999169059*^9}, {3.7396598749534454`*^9, 
   3.7396598778682594`*^9}, {3.739659999094411*^9, 3.739659999297686*^9}, {
   3.739660029523304*^9, 3.73966003873488*^9}, {3.739660095430449*^9, 
   3.7396601408837013`*^9}, {3.73966033166679*^9, 3.739660332402121*^9}, {
   3.739660371402605*^9, 3.739660372759054*^9}, {3.739801871719342*^9, 
   3.7398018874229064`*^9}, {3.7398027411215754`*^9, 
   3.7398027730066285`*^9}, {3.739803124346739*^9, 3.739803152802951*^9}, 
   3.739803211448743*^9, {3.739803623768796*^9, 3.739803641118581*^9}, 
   3.739803682781166*^9, {3.739803715240907*^9, 3.739803716062747*^9}, {
   3.7398038647194386`*^9, 3.739803865080753*^9}, {3.739804183405492*^9, 
   3.739804183776039*^9}, {3.7398042395820026`*^9, 3.739804250000084*^9}, {
   3.7398044941909447`*^9, 3.7398045212432337`*^9}, {3.739804905798359*^9, 
   3.739804958637001*^9}, {3.739805080714749*^9, 3.7398050831231155`*^9}, {
   3.7398075943133726`*^9, 3.739807629214981*^9}, {3.739807748553124*^9, 
   3.7398077671812134`*^9}, {3.739807829325135*^9, 3.7398078337119646`*^9}, {
   3.739808060318533*^9, 3.739808060482891*^9}, {3.739808111369532*^9, 
   3.73980811410174*^9}, {3.739808196752138*^9, 3.739808196923518*^9}, {
   3.739808436809472*^9, 3.73980844868378*^9}, {3.7398085609394836`*^9, 
   3.7398085610534115`*^9}, {3.739808666071518*^9, 3.739808670784358*^9}, 
   3.7398090468229074`*^9, {3.739809202091514*^9, 3.7398092193793154`*^9}, {
   3.7398093821562147`*^9, 3.739809382282889*^9}, {3.739809414304573*^9, 
   3.739809421663409*^9}, {3.7398094899230976`*^9, 3.739809607759758*^9}, {
   3.7398096408717833`*^9, 3.739809694435369*^9}, {3.7398099356477766`*^9, 
   3.7398099479985595`*^9}, {3.739810026899426*^9, 3.7398100296190786`*^9}, {
   3.7398100999142323`*^9, 3.7398101076445475`*^9}, {3.739810145297225*^9, 
   3.73981016437331*^9}, {3.739915434894289*^9, 3.73991547693605*^9}, {
   3.739917009501216*^9, 3.739917016333226*^9}, {3.739918398086446*^9, 
   3.7399184090230455`*^9}},ExpressionUUID->"f0396d21-c023-4886-859b-\
4555aa089e09"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = True}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {11., {0., 11.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["5", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}, "RowsIndexed" -> {}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {11., {0., 11.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], 
                    
                    LineBox[{{-6., 3.6739403974420594`*^-16}, {-5., 
                    3.061616997868383*^-16}}], 
                    
                    LineBox[{{-5., 3.061616997868383*^-16}, {-4., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-5., 1.0000000000000002`}, {-4., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-4., 1.0000000000000002`}, {-3., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-3., 1.0000000000000002`}, {-2., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-2., 1.0000000000000002`}, {-0.9999999999999999,
                     1.}}], 
                    
                    LineBox[{{-0.9999999999999999, 1.}, {
                    6.123233995736766*^-17, 1.}}]}, {
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-5.4, 
                    3.3065463576978537`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736762*^-17}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-4.4, 
                    0.6000000000000002}, {-0.25, 0}, 
                    Offset[8], {1., 0.9999999999999999}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-4.4, 
                    1.0000000000000002`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-3.4, 
                    1.0000000000000002`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-2.4000000000000004`,
                     1.0000000000000002`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-1.4, 
                    1.}, {-0.25, 0}, 
                    Offset[8], {1., -2.220446049250313*^-16}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-0.3999999999999999, 
                    1.}, {-0.25, 0}, 
                    Offset[8], {1., 0.}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], 
                    StyleBox[{
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-6., 3.6739403974420594`*^-16}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"inDec\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["inDec", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-5., 3.061616997868383*^-16}], 
                    Offset[{10, 10}, {-5., 3.061616997868383*^-16}]]}, 
                    InsetBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    StripOnInput -> False, FontFamily -> "Source Code Pro", 
                    FontSize -> 14, FontWeight -> Bold, FontSlant -> Italic, 
                    FontColor -> RGBColor[
                    0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`]], {-5., 3.061616997868383*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Slot", "[", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "]"}]}], "&"}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["1", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[Minus[#]& , {4, 3}]]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-4., 1.0000000000000002`}], 
                    Offset[{10, 10}, {-4., 1.0000000000000002`}]]}, 
                    InsetBox[
                    StyleBox[
                    "\"+\"", StripOnInput -> False, FontSize -> 14], {-4., 
                    1.0000000000000002`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"TotalLayer", "[", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["2", Bold], 
                    Style[
                    HoldForm[
                    TotalLayer["Inputs" -> {Automatic, Automatic}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-5., 1.0000000000000002`}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"inInput\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["inInput", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-3., 1.0000000000000002`}], 
                    Offset[{10, 10}, {-3., 1.0000000000000002`}]]}, 
                    InsetBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    StripOnInput -> False, FontFamily -> "Source Code Pro", 
                    FontSize -> 14, FontWeight -> Bold, FontSlant -> Italic, 
                    FontColor -> RGBColor[
                    0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`]], {-3., 1.0000000000000002`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"3\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"Slot", "[", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "]"}], "2"], "&"}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["3", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[#^2& , {4, 3}]]], FontFamily -> "Source Code Pro",
                     ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-2., 1.0000000000000002`}], 
                    Offset[{10, 10}, {-2., 1.0000000000000002`}]]}, 
                    InsetBox["\"R\"", 
                    Offset[{0, -1}, {-2., 1.0000000000000002`}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"4\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ReshapeLayer", "[", 
                    RowBox[{"{", 
                    RowBox[{"28", ",", "28"}], "}"}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["4", Bold], 
                    Style[
                    HoldForm[
                    ReshapeLayer[{28, 28}]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-0.9999999999999999, 1.}], 
                    Offset[{10, 10}, {-0.9999999999999999, 1.}]]}, 
                    InsetBox["\"S\"", 
                    Offset[{0, -1}, {-0.9999999999999999, 1.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"5\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"SummationLayer", "[", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"28", ",", "28"}], "}"}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["5", Bold], 
                    Style[
                    HoldForm[
                    SummationLayer["Input" -> {28, 28}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{6.123233995736766*^-17, 1.}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, FontSize -> 10]}, {
                    StyleBox[{
                    InsetBox["\"inDec\"", 
                    Offset[{0, -7}, {-6., 3.6739403974420594`*^-16}], {0, 1.},
                     Automatic, {1, 0}], 
                    InsetBox["\"1\"", 
                    Offset[{0, -13}, {-5., 3.061616997868383*^-16}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"2\"", 
                    Offset[{0, -13}, {-4., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"inInput\"", 
                    Offset[{0, -7}, {-5., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"3\"", 
                    Offset[{0, -13}, {-3., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"4\"", 
                    Offset[{0, -13}, {-2., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"5\"", 
                    Offset[{0, -13}, {-0.9999999999999999, 1.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"Output\"", 
                    Offset[{0, -7}, {6.123233995736766*^-17, 1.}], {0, 1.}, 
                    Automatic, {1, 0}]}, StripOnInput -> False, FontColor -> 
                    GrayLevel[0.5]], 
                    StyleBox[{
                    InsetBox["\"\"", 
                    
                    Offset[{3.3677786976552195`*^-16, 5.5}, {-5.4, 
                    3.3065463576978537`*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736762*^-17}], 
                    InsetBox["\"\"", 
                    
                    Offset[{-3.889087296526011, 3.8890872965260117`}, {-4.4, 
                    0.6000000000000002}], {0., -0.17}, Automatic, {
                    0.7071067811865476, 0.7071067811865475}], 
                    InsetBox["\"\"", 
                    Offset[{0., 5.5}, {-4.4, 1.0000000000000002`}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox["\"\"", 
                    Offset[{0., 5.5}, {-3.4, 1.0000000000000002`}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox["\"\"", 
                    
                    Offset[{0., 5.5}, {-2.4000000000000004`, 
                    1.0000000000000002`}], {0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], 
                    Offset[{1.2212453270876722`*^-15, 5.5}, {-1.4, 1.}], {
                    0., -0.17}, Automatic, {1., -2.220446049250313*^-16}], 
                    InsetBox["\"\[DoubleStruckCapitalR]\"", 
                    Offset[{0., 5.5}, {-0.3999999999999999, 1.}], {0., -0.17},
                     Automatic, {1., 0.}]}, StripOnInput -> False, FontSize -> 
                    8, FontWeight -> "Thin", FontColor -> GrayLevel[0.7]]}, {
                    EdgeForm[{
                    GrayLevel[0.5], 
                    Thickness[Large], 
                    Dashing[{0, Small}]}], 
                    FaceForm[None], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    Part[{{-6., 3.6739403974420594`*^-16}, {-5., 
                    3.061616997868383*^-16}, {-4., 1.0000000000000002`}, {-5.,
                     1.0000000000000002`}, {-3., 1.0000000000000002`}, {-2., 
                    1.0000000000000002`}, {-0.9999999999999999, 1.}, {
                    6.123233995736766*^-17, 1.}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 20, 20, 8, 20, 20, 20, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, AspectRatio -> Full, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    ImagePadding -> {{24., 26.5}, {27., 14.}}, 
                    ImageSize -> {380.5, 96.}, PlotRangePadding -> 0], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "inDec"], 
                    NeuralNetworks`NetPath["Nodes", "1"], 
                    NeuralNetworks`NetPath["Nodes", "2"], 
                    NeuralNetworks`NetPath["Inputs", "inInput"], 
                    NeuralNetworks`NetPath["Nodes", "3"], 
                    NeuralNetworks`NetPath["Nodes", "4"], 
                    NeuralNetworks`NetPath["Nodes", "5"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association["inDec" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT], "inInput" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    Association[
                    "1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Power, 
                    NeuralNetworks`Private`ScalarSymbol[1], 2.}]]], 
                    "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Reshape", "Arrays" -> Association[], 
                    "Parameters" -> Association["Dimensions" -> {28, 28}], 
                    "Inputs" -> Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{28, 28}, NeuralNetworks`RealT]]], 
                    "5" -> Association[
                    "Type" -> "Summation", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]]]]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"inDec\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"tensor\"", "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{"\"inInput\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"tensor\"", "SummaryItem"], "", "", "", ""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    ImageSizeCache -> {183., {18.75, 24.75}}, 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}, "RowsIndexed" -> {}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.7399154623567705`*^9, 3.7399154841591644`*^9}, 
   3.7399181767859435`*^9},
 CellLabel->
  "Out[215]=",ExpressionUUID->"bd3e7c34-0594-4b7e-a274-fd7c83955078"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7398079772824926`*^9, 3.739808011739949*^9}, 
   3.7398080585236807`*^9},ExpressionUUID->"cd8471b6-4cdc-45fd-b167-\
bbeeefcad251"],

Cell[BoxData[
 RowBox[{"{", "0.`", "}"}]], "Output",
 CellChangeTimes->{{3.7398080073826513`*^9, 3.739808012300243*^9}},
 CellLabel->
  "Out[1312]=",ExpressionUUID->"c279ac73-f6f2-4001-a6ae-ff3a34cb8a18"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Latent Loss", "Subsection",
 CellChangeTimes->{{3.7396580504733496`*^9, 3.7396580704733276`*^9}, {
  3.739658183848325*^9, 3.7396581867788134`*^9}, {3.7396607866514063`*^9, 
  3.739660791490347*^9}},ExpressionUUID->"1de5c636-2c07-4bc9-98bb-\
1e273b057422"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Assume", " ", "input", " ", "is", " ", 
     RowBox[{"{", "8", "}"}]}], ",", " ", 
    RowBox[{"{", "8", "}"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"latentLoss", " ", "=", " ", 
   RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ElementwiseLayer", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "0.5"}], "*", "#"}], "&"}], "]"}], ",", " ", 
       RowBox[{"TotalLayer", "[", "]"}], ",", " ", 
       RowBox[{"ElementwiseLayer", "[", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"#", "^", "2"}], ")"}]}], "&"}], "]"}], ",", " ", 
       RowBox[{"ElementwiseLayer", "[", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Exp", "[", 
           RowBox[{"2", "*", "#"}], "]"}]}], "&"}], "]"}], ",", " ", 
       RowBox[{"ElementwiseLayer", "[", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"2", "*", "#"}]}], "&"}], "]"}], ",", 
       RowBox[{"SummationLayer", "[", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<mn\>\"", "]"}], "\[Rule]", "3"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<sd\>\"", "]"}], "\[Rule]", "4"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<sd\>\"", "]"}], "\[Rule]", "5"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"3", "\[Rule]", "2"}], ",", "\[IndentingNewLine]", 
       RowBox[{"4", "\[Rule]", "2"}], ",", "\[IndentingNewLine]", 
       RowBox[{"5", "\[Rule]", "2"}], ",", "\[IndentingNewLine]", 
       RowBox[{"2", "\[Rule]", "6"}], ",", "\[IndentingNewLine]", 
       RowBox[{"6", "\[Rule]", "1"}]}], "\[IndentingNewLine]", "}"}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7396580504733496`*^9, 3.7396580704733276`*^9}, {
   3.739658183848325*^9, 3.7396581867788134`*^9}, {3.7396607866514063`*^9, 
   3.7396608011688447`*^9}, {3.739661785555604*^9, 3.73966179277761*^9}, {
   3.739661875765953*^9, 3.739662019573432*^9}, {3.739662169718382*^9, 
   3.7396623039581375`*^9}, {3.739662471213227*^9, 3.739662489242158*^9}, {
   3.739662676125009*^9, 3.7396626768218703`*^9}, {3.739662716331247*^9, 
   3.739662765525912*^9}, {3.7396629501185417`*^9, 3.7396629508067074`*^9}, {
   3.739738308445907*^9, 3.739738311391897*^9}, {3.739801684337245*^9, 
   3.7398016966389213`*^9}, {3.739801777185547*^9, 3.739801783970646*^9}, {
   3.7398029610184975`*^9, 3.7398029663454523`*^9}, {3.7398032169269686`*^9, 
   3.739803227170117*^9}, {3.739808120429064*^9, 3.739808122342973*^9}, 
   3.739808194907878*^9, {3.7398083916319027`*^9, 3.739808397133438*^9}, {
   3.739808431454223*^9, 3.739808451609259*^9}, {3.7398085573416867`*^9, 
   3.7398085717260637`*^9}, {3.7398086417986193`*^9, 3.739808659401613*^9}, {
   3.739808986907992*^9, 3.7398089922877884`*^9}, {3.7398092276350017`*^9, 
   3.739809254920138*^9}},
 CellLabel->
  "In[216]:=",ExpressionUUID->"a483c109-1890-41a9-a395-427c3de3b8fa"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["6", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], {
                    
                    LineBox[{{-5., 3.061616997868383*^-16}, {-4., 
                    2.4492935982947064`*^-16}}], 
                    
                    LineBox[{{-4., 2.4492935982947064`*^-16}, {-3., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-5., 1.0000000000000002`}, {-4., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-5., 2.0000000000000004`}, {-4., 
                    2.0000000000000004`}}], 
                    
                    LineBox[{{-4., 1.0000000000000002`}, {-3., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-4., 2.0000000000000004`}, {-3., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-3., 1.0000000000000002`}, {-2., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-2., 1.0000000000000002`}, {-0.9999999999999999,
                     1.}}], 
                    
                    LineBox[{{-0.9999999999999999, 1.}, {
                    6.123233995736766*^-17, 1.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-4.4, 
                    2.694222958124177*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-3.4, 
                    0.6000000000000002}, {-0.25, 0}, 
                    Offset[8], {1., 1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-4.4, 
                    1.0000000000000002`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-4.4, 
                    2.0000000000000004`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-3.4, 
                    1.0000000000000002`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-3.4, 
                    1.4000000000000004`}, {-0.25, 0}, 
                    Offset[8], {1., -1.0000000000000002`}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, 
                    1.0000000000000002`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    1.}, {-0.25, 0}, 
                    Offset[8], {1., -2.220446049250313*^-16}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-0.3999999999999999, 1.}, {-0.25, 0}, 
                    Offset[8], {1., 0.}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-5., 3.061616997868383*^-16}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"mn\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["mn", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-4., 2.4492935982947064`*^-16}], 
                    Offset[{10, 10}, {-4., 2.4492935982947064`*^-16}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], TraditionalForm]], {-4., 
                    2.4492935982947064`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"3\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Power", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}]}], "&"}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["3", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[Minus[#^2]& , {4, 3}]]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-3., 1.0000000000000002`}], 
                    Offset[{10, 10}, {-3., 1.0000000000000002`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"+\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-3., 1.0000000000000002`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"TotalLayer", "[", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", "Automatic", ",", "Automatic"}],
                     "}"}]}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["2", Bold], 
                    Style[
                    HoldForm[
                    TotalLayer[
                    "Inputs" -> {Automatic, Automatic, Automatic}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-5., 1.0000000000000002`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"sd\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["sd", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-4., 1.0000000000000002`}], 
                    Offset[{10, 10}, {-4., 1.0000000000000002`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], TraditionalForm]], {-4., 
                    1.0000000000000002`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"4\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "]"}]}], "&"}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["4", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[Minus[
                    Exp[2 #]]& , {4, 3}]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-4., 2.0000000000000004`}], 
                    Offset[{10, 10}, {-4., 2.0000000000000004`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], TraditionalForm]], {-4., 
                    2.0000000000000004`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"5\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    RowBox[{"1", "+", 
                    RowBox[{"Times", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}]}], "&"}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["5", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[1 + 2 #& , {4, 3}]]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-2., 1.0000000000000002`}], 
                    Offset[{10, 10}, {-2., 1.0000000000000002`}]]}, 
                    InsetBox[
                    FormBox["\"S\"", TraditionalForm], 
                    Offset[{0, -1}, {-2., 1.0000000000000002`}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"6\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"SummationLayer", "[", "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["6", Bold], 
                    Style[
                    HoldForm[
                    SummationLayer[]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-0.9999999999999999, 1.}], 
                    Offset[{10, 10}, {-0.9999999999999999, 1.}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], 
                    TraditionalForm]], {-0.9999999999999999, 1.}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "0.5`"}], " ", 
                    RowBox[{"Slot", "[", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "]"}]}], "&"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "\"Real\""}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["1", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[(-0.5) #& , {4, 3}], "Input" -> "Real"]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{6.123233995736766*^-17, 1.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-5., 2.0000000000000004`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"sd\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["sd", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    StyleBox[{{
                    InsetBox[
                    FormBox["\"mn\"", TraditionalForm], 
                    Offset[{0, -7}, {-5., 3.061616997868383*^-16}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{0, -13}, {-4., 2.4492935982947064`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    Offset[{0, -13}, {-3., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"sd\"", TraditionalForm], 
                    Offset[{0, -7}, {-5., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    Offset[{0, -13}, {-4., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    Offset[{0, -13}, {-4., 2.0000000000000004`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"6\"", TraditionalForm], 
                    Offset[{0, -13}, {-2., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    Offset[{0, -13}, {-0.9999999999999999, 1.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    Offset[{0, -7}, {6.123233995736766*^-17, 1.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"sd\"", TraditionalForm], 
                    Offset[{0, -7}, {-5., 2.0000000000000004`}], {0, 1.}, 
                    Automatic, {1, 0}]}}, FontColor -> GrayLevel[0.5], 
                    StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-4.4, 
                    2.694222958124177*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{-3.889087296526011, 3.889087296526011}, {-3.4, 
                    0.6000000000000002}], {0., -0.17}, Automatic, {
                    0.7071067811865475, 0.7071067811865475}], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-4.4, 1.0000000000000002`}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-4.4, 2.0000000000000004`}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-3.4, 1.0000000000000002`}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{3.8890872965260117`, 3.889087296526011}, {-3.4, 
                    1.4000000000000004`}], {0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865476}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"\[DottedSquare]\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{0., 5.5}, {-2.4000000000000004`, 
                    1.0000000000000002`}], {0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    Offset[{1.2212453270876722`*^-15, 5.5}, {-1.4, 1.}], {
                    0., -0.17}, Automatic, {1., -2.220446049250313*^-16}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-0.3999999999999999, 1.}], {0., -0.17},
                     Automatic, {1., 0.}]}, FontColor -> GrayLevel[0.7], 
                    FontSize -> 8, FontWeight -> "Thin", StripOnInput -> 
                    False]}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    Part[{{-5., 3.061616997868383*^-16}, {-4., 
                    2.4492935982947064`*^-16}, {-3., 
                    1.0000000000000002`}, {-5., 1.0000000000000002`}, {-4., 
                    1.0000000000000002`}, {-4., 2.0000000000000004`}, {-2., 
                    1.0000000000000002`}, {-0.9999999999999999, 1.}, {
                    6.123233995736766*^-17, 1.}, {-5., 2.0000000000000004`}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 20, 20, 8, 20, 20, 20, 20, 8, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, ImageSize -> {325.5, 151.}, AspectRatio -> 
                    Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{24., 26.5}, {27., 14.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "mn"], 
                    NeuralNetworks`NetPath["Nodes", "3"], 
                    NeuralNetworks`NetPath["Nodes", "2"], 
                    NeuralNetworks`NetPath["Inputs", "sd"], 
                    NeuralNetworks`NetPath["Nodes", "4"], 
                    NeuralNetworks`NetPath["Nodes", "5"], 
                    NeuralNetworks`NetPath["Nodes", "6"], 
                    NeuralNetworks`NetPath["Nodes", "1"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association["mn" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT], "sd" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    Association[
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Power, 
                    NeuralNetworks`Private`ScalarSymbol[1], 2.}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 2., 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[2]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 2., 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Plus, 1., 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT], "3" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{NeuralNetworks`SizeT}, 
                    NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]]], "6" -> 
                    Association[
                    "Type" -> "Summation", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{NeuralNetworks`SizeT}, 
                    NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]]], "1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[NeuralNetworks`Private`ScalarSymbol[2] -> {
                    Times, -0.5, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]]]]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"mn\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"tensor\"", "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{"\"sd\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"tensor\"", "SummaryItem"], "", "", "", ""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7396622608373156`*^9, 3.7396623048376093`*^9, 3.739662490138748*^9, 
   3.739662677868455*^9, {3.7396627190934453`*^9, 3.739662766685849*^9}, 
   3.739662951665894*^9, 3.7396688808984756`*^9, 3.7397059847251883`*^9, 
   3.739715928031291*^9, 3.7397163059861856`*^9, 3.73971819227499*^9, 
   3.739719258063177*^9, 3.7397197586233573`*^9, 3.7397379954984074`*^9, {
   3.7397382835968947`*^9, 3.739738311949894*^9}, 3.7397390042925987`*^9, 
   3.739739343693228*^9, 3.739757006512022*^9, 3.739792669931624*^9, 
   3.7397969432157946`*^9, 3.7397974238974595`*^9, 3.7398008508822117`*^9, {
   3.7398017857464714`*^9, 3.739801814774091*^9}, 3.7398025810910163`*^9, {
   3.7398027829341545`*^9, 3.7398028054091625`*^9}, {3.739802941170739*^9, 
   3.7398029671645093`*^9}, 3.7398031317302675`*^9, {3.7398032242020454`*^9, 
   3.739803227678946*^9}, 3.7398036281841745`*^9, 3.7398042540998487`*^9, 
   3.7398049448813276`*^9, 3.7398078603269715`*^9, {3.739807928556408*^9, 
   3.739807937586903*^9}, 3.7398080723619013`*^9, 3.7398081227473497`*^9, 
   3.7398081990217247`*^9, {3.7398084195206194`*^9, 3.7398084521997447`*^9}, {
   3.7398085639273005`*^9, 3.7398085722241597`*^9}, {3.739808653565483*^9, 
   3.7398086600603933`*^9}, 3.7398089937459397`*^9, {3.7398092395429955`*^9, 
   3.739809264205038*^9}, 3.7398093573145304`*^9, 3.7398094245657187`*^9, 
   3.739809614962909*^9, 3.739809647076957*^9, 3.739810072267169*^9, 
   3.73981021302682*^9, 3.7398114198866787`*^9, 3.739915487456744*^9, {
   3.7399181577939234`*^9, 3.7399181837330804`*^9}},
 CellLabel->
  "Out[216]=",ExpressionUUID->"063a23f6-6bee-4155-b9e9-5f67b86e54cf"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Loss", "Subsection",
 CellChangeTimes->{{3.7398013789742985`*^9, 
  3.7398013902722845`*^9}},ExpressionUUID->"ad5e5560-d72d-44fd-87ec-\
5a9600863698"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"loss", " ", "=", " ", 
  RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"ReplicateLayer", "[", "28", "]"}], ",", " ", 
      RowBox[{"TotalLayer", "[", "]"}], " ", ",", " ", 
      RowBox[{"ReshapeLayer", "[", 
       RowBox[{"{", "28", "}"}], "]"}], ",", " ", 
      RowBox[{"AggregationLayer", "[", 
       RowBox[{"Mean", ",", " ", "All"}], "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"NetPort", "[", "\"\<latentReal\>\"", "]"}], "\[Rule]", 
       RowBox[{"1", "\[Rule]", "2"}]}], ",", " ", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"NetPort", "[", "\"\<imageVector\>\"", "]"}], "\[Rule]", "2"}],
       ",", "\[IndentingNewLine]", 
      RowBox[{"2", "\[Rule]", 
       RowBox[{"3", "\[Rule]", "4"}]}]}], "\[IndentingNewLine]", "}"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7398013789742985`*^9, 3.7398014089810576`*^9}, {
   3.7398014472325907`*^9, 3.7398014544359026`*^9}, {3.739801502096683*^9, 
   3.7398015059698453`*^9}, {3.7398015947256336`*^9, 
   3.7398015948416057`*^9}, {3.739802786636153*^9, 3.7398027883371468`*^9}, {
   3.7398078755079536`*^9, 3.7398079036247773`*^9}, {3.7398079418822684`*^9, 
   3.739807942665143*^9}, {3.739808134814577*^9, 3.7398081355421376`*^9}, {
   3.7398081786517525`*^9, 3.7398081810198183`*^9}, {3.7398102907862372`*^9, 
   3.739810311839627*^9}, 3.739810379373747*^9, {3.7398104790237556`*^9, 
   3.739810550371975*^9}, {3.739810691196947*^9, 3.739810692833015*^9}, {
   3.739810748270138*^9, 3.7398107973240585`*^9}, {3.739811042899146*^9, 
   3.739811056034383*^9}},
 CellLabel->
  "In[1492]:=",ExpressionUUID->"7d2529f9-03da-4c54-9557-09b8b5cee6ea"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["4", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], {
                    
                    LineBox[{{-5., 3.061616997868383*^-16}, {-4., 
                    2.4492935982947064`*^-16}}], 
                    
                    LineBox[{{-4., 2.4492935982947064`*^-16}, {-3., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-4., 1.0000000000000002`}, {-3., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-3., 1.0000000000000002`}, {-2., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-2., 1.0000000000000002`}, {-0.9999999999999999,
                     1.}}], 
                    
                    LineBox[{{-0.9999999999999999, 1.}, {
                    6.123233995736766*^-17, 1.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-4.4, 
                    2.694222958124177*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-3.4, 
                    0.6000000000000002}, {-0.25, 0}, 
                    Offset[8], {1., 1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-3.4, 
                    1.0000000000000002`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, 
                    1.0000000000000002`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    1.}, {-0.25, 0}, 
                    Offset[8], {1., -2.220446049250313*^-16}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-0.3999999999999999, 1.}, {-0.25, 0}, 
                    Offset[8], {1., 0.}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-5., 3.061616997868383*^-16}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"latentReal\"", Bold, StripOnInput -> False]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["latentReal", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-4., 2.4492935982947064`*^-16}], 
                    Offset[{10, 10}, {-4., 2.4492935982947064`*^-16}]]}, 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\[VerticalEllipsis]\"", 10, StripOnInput -> False], 
                    TraditionalForm], 
                    Offset[{0, -1}, {-4., 2.4492935982947064`*^-16}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ReplicateLayer", "[", "28", "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["1", Bold], 
                    Style[
                    HoldForm[
                    ReplicateLayer[28]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-3., 1.0000000000000002`}], 
                    Offset[{10, 10}, {-3., 1.0000000000000002`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"+\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-3., 1.0000000000000002`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"TotalLayer", "[", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["2", Bold], 
                    Style[
                    HoldForm[
                    TotalLayer["Inputs" -> {Automatic, Automatic}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-4., 1.0000000000000002`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"imageVector\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["imageVector", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-2., 1.0000000000000002`}], 
                    Offset[{10, 10}, {-2., 1.0000000000000002`}]]}, 
                    InsetBox[
                    FormBox["\"R\"", TraditionalForm], 
                    Offset[{0, -1}, {-2., 1.0000000000000002`}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"3\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ReshapeLayer", "[", 
                    RowBox[{"{", "28", "}"}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["3", Bold], 
                    Style[
                    HoldForm[
                    ReshapeLayer[{28}]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-0.9999999999999999, 1.}], 
                    Offset[{10, 10}, {-0.9999999999999999, 1.}]]}, 
                    InsetBox[
                    FormBox["\"A\"", TraditionalForm], 
                    Offset[{0, -1}, {-0.9999999999999999, 1.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"4\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"AggregationLayer", "[", 
                    RowBox[{"Mean", ",", "All", ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "28"}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["4", Bold], 
                    Style[
                    HoldForm[
                    AggregationLayer[Mean, All, "Input" -> 28]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{6.123233995736766*^-17, 1.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    StyleBox[{{
                    InsetBox[
                    FormBox["\"latentReal\"", TraditionalForm], 
                    Offset[{0, -7}, {-5., 3.061616997868383*^-16}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    Offset[{0, -13}, {-4., 2.4492935982947064`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    Offset[{0, -13}, {-3., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"imageVect..\"", "\"imageVector\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "imageVector", "Tooltip"]& ], 
                    TraditionalForm], 
                    Offset[{0, -7}, {-4., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{0, -13}, {-2., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    Offset[{0, -13}, {-0.9999999999999999, 1.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    Offset[{0, -7}, {6.123233995736766*^-17, 1.}], {0, 1.}, 
                    Automatic, {1, 0}]}}, FontColor -> GrayLevel[0.5], 
                    StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-4.4, 
                    2.694222958124177*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{-3.889087296526011, 3.889087296526011}, {-3.4, 
                    0.6000000000000002}], {0., -0.17}, Automatic, {
                    0.7071067811865475, 0.7071067811865475}], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-3.4, 1.0000000000000002`}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0., 5.5}, {-2.4000000000000004`, 
                    1.0000000000000002`}], {0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"28\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{1.2212453270876722`*^-15, 5.5}, {-1.4, 1.}], {
                    0., -0.17}, Automatic, {1., -2.220446049250313*^-16}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-0.3999999999999999, 1.}], {0., -0.17},
                     Automatic, {1., 0.}]}, FontColor -> GrayLevel[0.7], 
                    FontSize -> 8, FontWeight -> "Thin", StripOnInput -> 
                    False]}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    Part[{{-5., 3.061616997868383*^-16}, {-4., 
                    2.4492935982947064`*^-16}, {-3., 
                    1.0000000000000002`}, {-4., 1.0000000000000002`}, {-2., 
                    1.0000000000000002`}, {-0.9999999999999999, 1.}, {
                    6.123233995736766*^-17, 1.}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 20, 20, 8, 20, 20, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, ImageSize -> {340., 96.}, AspectRatio -> Full,
                     PlotRangePadding -> 0, 
                    ImagePadding -> {{38.499999999999986`, 26.5}, {27., 14.}},
                     ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "latentReal"], 
                    NeuralNetworks`NetPath["Nodes", "1"], 
                    NeuralNetworks`NetPath["Nodes", "2"], 
                    NeuralNetworks`NetPath["Inputs", "imageVector"], 
                    NeuralNetworks`NetPath["Nodes", "3"], 
                    NeuralNetworks`NetPath["Nodes", "4"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association["latentReal" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT], "imageVector" -> 
                    NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    Association[
                    "1" -> Association[
                    "Type" -> "Replicate", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[28], 
                    "Level" -> 1], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Reshape", "Arrays" -> Association[], 
                    "Parameters" -> Association["Dimensions" -> {28}], 
                    "Inputs" -> Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{28}, NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Aggregation", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> Mean, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[All]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]]]]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"latentReal\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"tensor\"", "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{"\"imageVector\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"tensor\"", "SummaryItem"], "", "", "", ""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7398015066310177`*^9, 3.7398015954316654`*^9, 3.7398027889380555`*^9, 
   3.7398032319508896`*^9, 3.7398079043414307`*^9, {3.7398079396560135`*^9, 
   3.7398079435324974`*^9}, 3.7398081360533247`*^9, 3.739808181587595*^9, 
   3.739810381543517*^9, 3.7398105552332664`*^9, 3.739810693417615*^9, {
   3.73981074901476*^9, 3.7398108278640184`*^9}, {3.739811048543202*^9, 
   3.739811056667161*^9}, 3.739811359004665*^9, 3.739811422278698*^9},
 CellLabel->
  "Out[1492]=",ExpressionUUID->"843a3843-6db3-43d6-8635-0c39ee35bab8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["", "Subsection"]], "Section",
 CellChangeTimes->{{3.7396580504733496`*^9, 3.7396580704733276`*^9}, {
  3.739658183848325*^9, 3.7396581867788134`*^9}, {3.7396607866514063`*^9, 
  3.7396607908372393`*^9}, {3.739801371376523*^9, 
  3.739801373024659*^9}},ExpressionUUID->"1625ce47-7e38-4ccf-93bd-\
d49aa95d21db"],

Cell[CellGroupData[{

Cell["Further AssemBling", "Subsection",
 CellChangeTimes->{{3.7395517151356115`*^9, 
  3.7395517185883427`*^9}},ExpressionUUID->"0cd985cc-3af6-4533-854e-\
e0be71215472"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vaeNet", " ", "=", " ", 
  RowBox[{"NetInitialize", "[", 
   RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<enc\>\"", "->", "encoder"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<mn\>\"", "->", "mn"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<sd\>\"", "->", " ", "sd"}], ",", 
       RowBox[{"\"\<expSd\>\"", "\[Rule]", "expSd"}], ",", 
       RowBox[{"\"\<sdEpsilon\>\"", "\[Rule]", 
        RowBox[{"ThreadingLayer", "[", "Times", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<z\>\"", "->", 
        RowBox[{"TotalLayer", "[", "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<dec\>\"", "->", "decoder"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<imageLoss\>\"", "\[Rule]", "imageLoss"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<latentLoss\>\"", "\[Rule]", "latentLoss"}]}], 
      "\[IndentingNewLine]", "|>"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
        "\"\<enc\>\""}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<enc\>\"", "\[Rule]", "\"\<mn\>\""}], ",", 
       "\[IndentingNewLine]", " ", 
       RowBox[{"\"\<enc\>\"", "\[Rule]", "\"\<sd\>\""}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<sd\>\"", "\[Rule]", "\"\<expSd\>\""}], ",", 
       RowBox[{"\"\<expSd\>\"", "\[Rule]", "\"\<sdEpsilon\>\""}], ",", " ", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<random\>\"", "]"}], " ", "\[Rule]", 
        "\"\<sdEpsilon\>\""}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<mn\>\"", "\[Rule]", "\"\<z\>\""}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<sdEpsilon\>\"", "\[Rule]", "\"\<z\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<z\>\"", "\[Rule]", "\"\<dec\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<dec\>\"", "\[Rule]", 
        RowBox[{"NetPort", "[", "\"\<Output\>\"", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"latent", " ", "loss"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\"\<sd\>\"", "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<latentLoss\>\"", ",", "\"\<sd\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<mn\>\"", "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<latentLoss\>\"", ",", "\"\<mn\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"image", " ", "loss"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\"\<dec\>\"", "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<imageLoss\>\"", ",", " ", "\"\<inDec\>\""}], "]"}]}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<imageLoss\>\"", ",", " ", "\"\<inInput\>\""}], "]"}]}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"image", " ", "loss8"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\"\<latentLoss\>\"", "\[Rule]", 
        RowBox[{"NetPort", "[", "\"\<latentLoss\>\"", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<imageLoss\>\"", "\[Rule]", 
        RowBox[{"NetPort", "[", "\"\<imageLoss\>\"", "]"}]}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Output\>\"", "->", 
      RowBox[{"NetDecoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Image\>\"", ",", " ", "\"\<Grayscale\>\""}], "}"}], 
       "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", 
      RowBox[{"NetEncoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Image\>\"", ",", " ", 
         RowBox[{"{", 
          RowBox[{"28", ",", "28"}], "}"}], ",", " ", "\"\<Grayscale\>\""}], 
        "}"}], "]"}]}]}], "\[IndentingNewLine]", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7395667951751738`*^9, 3.739566823119445*^9}, {
   3.739574834995954*^9, 3.7395748652310114`*^9}, {3.73957491718008*^9, 
   3.739574917426771*^9}, {3.739575282194539*^9, 3.7395753031761303`*^9}, {
   3.7395753720648174`*^9, 3.7395754054285545`*^9}, {3.739575753558014*^9, 
   3.739575818615221*^9}, {3.739575923773177*^9, 3.739576032295744*^9}, {
   3.73957615725283*^9, 3.739576173140894*^9}, {3.7395779455852795`*^9, 
   3.7395780210064535`*^9}, {3.739578073895379*^9, 3.739578083263719*^9}, {
   3.739578120244849*^9, 3.7395781445247774`*^9}, {3.7395798772539005`*^9, 
   3.739579955987113*^9}, {3.7395799869009967`*^9, 3.7395800066441164`*^9}, {
   3.739580051114643*^9, 3.739580061781546*^9}, {3.7395800954997687`*^9, 
   3.739580113756624*^9}, {3.7395801730651765`*^9, 3.7395801734785357`*^9}, {
   3.73958040387289*^9, 3.739580415517378*^9}, {3.739642073118585*^9, 
   3.739642075307708*^9}, {3.7396422885419416`*^9, 3.7396423085812283`*^9}, {
   3.739653107913578*^9, 3.739653156395689*^9}, {3.7396536936749983`*^9, 
   3.739653721150965*^9}, {3.739653832160608*^9, 3.7396538531965933`*^9}, {
   3.739654031706568*^9, 3.7396540386932983`*^9}, {3.739654494399378*^9, 
   3.739654507330639*^9}, {3.7396556160251646`*^9, 3.739655622666688*^9}, {
   3.739655676499963*^9, 3.739655695158108*^9}, {3.739659126358765*^9, 
   3.7396592334493318`*^9}, {3.739659496978977*^9, 3.7396595181507273`*^9}, {
   3.7396603267595463`*^9, 3.739660327091504*^9}, {3.7396603759149466`*^9, 
   3.7396603902156286`*^9}, {3.7396604372275276`*^9, 3.739660485491572*^9}, {
   3.73966051816661*^9, 3.739660533257409*^9}, {3.739660566399602*^9, 
   3.739660592820536*^9}, {3.7396606785559244`*^9, 3.7396607348536077`*^9}, {
   3.739660770010747*^9, 3.7396607786615324`*^9}, {3.7396612178446693`*^9, 
   3.7396612550095005`*^9}, {3.739662334945963*^9, 3.7396623706221595`*^9}, {
   3.7396624291338043`*^9, 3.7396624649212823`*^9}, {3.7396625144474583`*^9, 
   3.739662523829752*^9}, {3.739662608901328*^9, 3.73966270439748*^9}, {
   3.7396627454343853`*^9, 3.7396627463531523`*^9}, {3.7396629139929028`*^9, 
   3.7396629310823264`*^9}, {3.739662961278787*^9, 3.739663026674754*^9}, 
   3.7397188827808523`*^9, {3.739718970465977*^9, 3.7397189767068577`*^9}, {
   3.7397191806097207`*^9, 3.7397192406211147`*^9}, 3.7398014597348666`*^9, {
   3.7398034656582584`*^9, 3.739803490613632*^9}, {3.7398035244403687`*^9, 
   3.7398035402987995`*^9}, {3.7398036929205694`*^9, 
   3.7398037088200207`*^9}, {3.739803945479252*^9, 3.7398039707659965`*^9}, {
   3.7398040228689985`*^9, 3.7398040257403917`*^9}, {3.739804370291984*^9, 
   3.739804370764393*^9}, 3.7398049621003094`*^9, {3.7398060601874127`*^9, 
   3.739806113406682*^9}, {3.7398071373402176`*^9, 3.7398071524626684`*^9}, {
   3.7398072721425514`*^9, 3.7398072788674555`*^9}, {3.7398076612231283`*^9, 
   3.7398076776800346`*^9}, {3.7398077150159154`*^9, 
   3.7398077215323224`*^9}, {3.7398077789631224`*^9, 
   3.7398077900835953`*^9}, {3.7398082170684934`*^9, 
   3.7398082243783016`*^9}, {3.7398082778213615`*^9, 
   3.7398083143248377`*^9}, {3.7398083516687603`*^9, 3.739808358203776*^9}, {
   3.7398094608180203`*^9, 3.73980947990317*^9}, {3.7398102237285357`*^9, 
   3.7398102555987115`*^9}, {3.7399153818513737`*^9, 
   3.7399154159782753`*^9}, {3.739917022557266*^9, 3.739917025949258*^9}},
 CellLabel->
  "In[217]:=",ExpressionUUID->"31419281-fdd4-4dbc-8105-f2287a04b63a"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of outputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["3", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["9", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], {
                    
                    LineBox[{{-8., 4.898587196589413*^-16}, {-7., 
                    4.286263797015736*^-16}}], 
                    
                    LineBox[{{-2., -0.9999999999999999}, {-1., \
-0.9999999999999999}}], 
                    
                    LineBox[{{-7., 4.286263797015736*^-16}, {-6., 
                    3.6739403974420594`*^-16}}], 
                    
                    LineBox[{{-7., 
                    4.286263797015736*^-16}, {-6., -0.9999999999999997}}], 
                    
                    LineBox[{{-6., 
                    3.6739403974420594`*^-16}, {-5., -0.9999999999999997}}], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQDQESB7i65vlYVu6yWZn+5tHX8+IHylZJbbJ22WUT
uYTH5u4s8QNvu1yVVnHusuHZlsC9LUH8QKG2/NyWkzttDs95EdCgKH7gb/dy
pdPNO23qI0AaxA7MWHNvU63FThv7l5PtXk4WO2Dbe8R3zvMdNiz+25+1u4od
eKsb+Vlt4g6bs518rBKfRA+s7JuzWNZ0h82smSAgeqBgfV9cw+XtNmDtdqIH
bAxuyEnmb7ex7Hts0fdY5ADXRsX7G7m223R2gIDIgWuG2fO9lm2zudmke6NJ
V+TA4k1b4h87brPRqL2kXntJ+EC+8T/5mrtbbSrKQUD4gM0W9wcilVttjhfK
AJHwAU7TiQvWimy1Ec85KJZzUOjAta23Etw2bIG6R/BA3oyTF79lbrZ5BXaP
4AErSeFJ/ayboe4ROMAxKyZIY+Emmy6wewQOXJVaJnTQZpPNDbB7BA4smP3+
UuSNjTYBv5b4/1rCfyBPxnLyp+KNNh/egQDfAau5TcHd/BttwMZZ8B1glzsj
rLJ6g40e2ADeA1fmiV7Z47bB5uwZEOA54GC/T2P1kfU24OiS5jlwpmHRvALG
9Ta/EicafSjhPuDmpPk/1nOdTQvI+htcB5Y1B3kVz1kLDX+uA+9c5Bo2/Fpj
U31ML+7/Hs4DSm09C0RT1kD9x3nAzn3u6kU3VtuAlZ/iOODSEbAwPGK1zRoD
dSuRBI4DRp7LGk0er7KBpB8OaPpZZQMA47MdMg==
                    "]], 
                    
                    LineBox[{{-6., -0.9999999999999997}, {-5., \
-2.9999999999999996`}}], 
                    
                    LineBox[{{-6., -0.9999999999999997}, {-5., \
-0.9999999999999997}}], 
                    
                    LineBox[{{-5., -2.9999999999999996`}, {-4., \
-1.9999999999999998`}}], 
                    
                    LineBox[{{-5., -1.9999999999999998`}, {-4., \
-1.9999999999999998`}}], 
                    
                    LineBox[{{-4., -1.9999999999999998`}, {-3., 
                    1.8369701987210297`*^-16}}], 
                    
                    LineBox[{{-3., 1.8369701987210297`*^-16}, {-2., 
                    1.2246467991473532`*^-16}}], 
                    
                    LineBox[{{-2., 1.2246467991473532`*^-16}, {-1., 
                    6.123233995736766*^-17}}], 
                    
                    LineBox[{{-2., 
                    1.2246467991473532`*^-16}, {-1., -0.9999999999999999}}], 
                    
                    LineBox[{{-1., -0.9999999999999999}, \
{-6.123233995736766*^-17, -1.}}], 
                    
                    LineBox[{{-5., -0.9999999999999997}, {-4., \
-0.9999999999999998}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-7.4, 
                    4.531193156845207*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-1.4, -0.9999999999999998}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-6.4, 
                    3.9188697572715305`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-6.4, -0.5999999999999995}, {-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-5.4, -0.5999999999999996}, {-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-4.355555555555556, 
                    2.667008584809791*^-16}, {-0.25, 0}, 
                    Offset[8], {
                    0.08888888888888857, -5.442874662877157*^-18}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-5.417705098312485, -2.164589803375031}, {-0.25,
                     0}, 
                    Offset[8], {1., -2.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-5.4, -0.9999999999999997}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-4.4, -2.3999999999999995`}, {-0.25, 0}, 
                    Offset[8], {1., 0.9999999999999998}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-4.4, -1.9999999999999996`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-3.417705098312484, -0.8354101966249685}, \
{-0.25, 0}, 
                    Offset[8], {1., 2.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, 1.4695761589768238`*^-16},
                     {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736765*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    8.572527594031473*^-17}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736766*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-1.4, -0.5999999999999999}, {-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-0.4000000000000001, -1.}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999999, -1.1102230246251565`*^-16}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-4.4, -0.9999999999999998}, {-0.25, 0}, 
                    Offset[8], {1., -1.1102230246251565`*^-16}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-8., 4.898587196589413*^-16}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-7., 4.286263797015736*^-16}], 
                    Offset[{12, 12}, {-7., 4.286263797015736*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-7., 4.286263797015736*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"enc\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "10", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["enc", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[10]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-1., -0.9999999999999999}], 
                    Offset[{12, 12}, {-1., -0.9999999999999999}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 0.,
                     BaseStyle -> GrayLevel[
                    0.4]], {-1., -0.9999999999999999}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"imageLoss\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "5", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["imageLoss", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[5], 
                    Skeleton[7]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-6., 3.6739403974420594`*^-16}], 
                    Offset[{10, 10}, {-6., 3.6739403974420594`*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[
                    
                    GraphicsComplexBox[{{0.1, 0}, {-0.3, 1}, {0.5, 1}, {
                    1.3, 1}, {0.9, 0}}, {{
                    Opacity[0.2], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[3.5], 
                    RGBColor[0.33, 0.33, 0.33], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 18], {-6., 
                    3.6739403974420594`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"mn\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"LinearLayer", "[", 
                    RowBox[{
                    RowBox[{"{", "8", "}"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "5184"}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["mn", Bold], 
                    Style[
                    HoldForm[
                    LinearLayer[{8}, "Input" -> 5184]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-6., -0.9999999999999997}], 
                    Offset[{12, 12}, {-6., -0.9999999999999997}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-6., -0.9999999999999997}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"sd\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["sd", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[2]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-5., -0.9999999999999997}], 
                    Offset[{12, 12}, {-5., -0.9999999999999997}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 0.,
                     BaseStyle -> GrayLevel[
                    0.4]], {-5., -0.9999999999999997}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"latentLoss\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "6", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["latentLoss", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[6], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-3., 1.8369701987210297`*^-16}], 
                    Offset[{10, 10}, {-3., 1.8369701987210297`*^-16}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"+\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-3., 1.8369701987210297`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"z\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"TotalLayer", "[", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"8", ",", "8"}], "}"}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["z", Bold], 
                    Style[
                    HoldForm[
                    TotalLayer["Inputs" -> {8, 8}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-5., -2.9999999999999996`}], 
                    Offset[{10, 10}, {-5., -2.9999999999999996`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], 
                    TraditionalForm]], {-5., -2.9999999999999996`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"expSd\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"Slot", "[", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "]"}], "]"}], "&"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "8"}]}], "]"}], HoldForm],
                     FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["expSd", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[Exp[#]& , {4, 3}], "Input" -> 8]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-4., -1.9999999999999998`}], 
                    Offset[{10, 10}, {-4., -1.9999999999999998`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[Times]\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-4., -1.9999999999999998`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"sdEpsilon\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{"Times", ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"8", ",", "8"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["sdEpsilon", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[Times, "Inputs" -> {8, 8}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-5., -1.9999999999999998`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"random\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["random", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 10), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-2., 1.2246467991473532`*^-16}], 
                    Offset[{12, 12}, {-2., 1.2246467991473532`*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-2., 
                    1.2246467991473532`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"dec\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "17", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["dec", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[17]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 11), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1., 6.123233995736766*^-17}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 12), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-6.123233995736766*^-17, -1.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"imageLoss\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["imageLoss", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 13), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-4., -0.9999999999999998}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"latentLoss\"", Bold, StripOnInput -> False]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["latentLoss", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 14), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-2., -0.9999999999999999}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    StyleBox[{{
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    Offset[{0, -7}, {-8., 4.898587196589413*^-16}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"enc\"", TraditionalForm], 
                    Offset[{0, -15}, {-7., 4.286263797015736*^-16}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"imageLoss\"", TraditionalForm], 
                    Offset[{0, -15}, {-1., -0.9999999999999999}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"mn\"", TraditionalForm], 
                    Offset[{0, -13}, {-6., 3.6739403974420594`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"sd\"", TraditionalForm], 
                    Offset[{0, -15}, {-6., -0.9999999999999997}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"latentLoss\"", TraditionalForm], 
                    Offset[{0, -15}, {-5., -0.9999999999999997}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"z\"", TraditionalForm], 
                    Offset[{0, -13}, {-3., 1.8369701987210297`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"expSd\"", TraditionalForm], 
                    Offset[{0, -13}, {-5., -2.9999999999999996`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"sdEpsilon\"", TraditionalForm], 
                    Offset[{0, -13}, {-4., -1.9999999999999998`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"random\"", TraditionalForm], 
                    Offset[{0, -7}, {-5., -1.9999999999999998`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"dec\"", TraditionalForm], 
                    Offset[{0, -15}, {-2., 1.2246467991473532`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    Offset[{0, -7}, {-1., 6.123233995736766*^-17}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"imageLoss\"", TraditionalForm], 
                    Offset[{0, -7}, {-6.123233995736766*^-17, -1.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"latentLoss\"", TraditionalForm], 
                    Offset[{0, -7}, {-4., -0.9999999999999998}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    Offset[{0, -7}, {-2., -0.9999999999999999}], {0, 1.}, 
                    Automatic, {1, 0}]}}, FontColor -> GrayLevel[0.5], 
                    StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-7.4, 
                    4.531193156845207*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{0., 5.5}, {-1.4, -0.9999999999999998}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"5184\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-6.4, 
                    3.9188697572715305`*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"5184\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.889087296526011, 
                    3.889087296526011}, {-6.4, -0.5999999999999995}], {
                    0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.889087296526011, 
                    3.889087296526011}, {-5.4, -0.5999999999999996}], {
                    0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.367778697655253*^-16, 5.5}, {-4.355555555555556,
                     2.667008584809791*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736824*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{4.919349550499537, 
                    2.4596747752497685`}, {-5.417705098312485, \
-2.164589803375031}], {0., -0.17}, Automatic, {
                    0.4472135954999579, -0.8944271909999159}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{0., 5.5}, {-5.4, -0.9999999999999997}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{-3.889087296526011, 
                    3.8890872965260117`}, {-4.4, -2.3999999999999995`}], {
                    0., -0.17}, Automatic, {0.7071067811865476, 
                    0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{0., 5.5}, {-4.4, -1.9999999999999996`}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-4.919349550499537, 
                    2.4596747752497685`}, {-3.417705098312484, \
-0.8354101966249685}], {0., -0.17}, Automatic, {0.4472135954999579, 
                    0.8944271909999159}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.3677786976552205`*^-16, 
                    5.5}, {-2.4000000000000004`, 1.4695761589768238`*^-16}], {
                    0., -0.17}, Automatic, {1., -6.123233995736765*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.3677786976552215`*^-16, 5.5}, {-1.4, 
                    8.572527594031473*^-17}], {0., -0.17}, Automatic, {
                    1., -6.123233995736766*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.889087296526011, 
                    3.889087296526011}, {-1.4, -0.5999999999999999}], {
                    0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    
                    Offset[{6.106226635438362*^-16, 
                    5.5}, {-0.4000000000000001, -1.}], {0., -0.17}, 
                    Automatic, {1., -1.1102230246251568`*^-16}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    
                    Offset[{6.106226635438361*^-16, 
                    5.5}, {-4.4, -0.9999999999999998}], {0., -0.17}, 
                    Automatic, {1., -1.1102230246251565`*^-16}]}, FontColor -> 
                    GrayLevel[0.7], FontSize -> 8, FontWeight -> "Thin", 
                    StripOnInput -> False]}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    Part[{{-8., 4.898587196589413*^-16}, {-7., 
                    4.286263797015736*^-16}, {-1., -0.9999999999999999}, {-6.,
                     3.6739403974420594`*^-16}, {-6., -0.9999999999999997}, \
{-5., -0.9999999999999997}, {-3., 
                    1.8369701987210297`*^-16}, {-5., -2.9999999999999996`}, \
{-4., -1.9999999999999998`}, {-5., -1.9999999999999998`}, {-2., 
                    1.2246467991473532`*^-16}, {-1., 
                    6.123233995736766*^-17}, {-6.123233995736766*^-17, -1.}, \
{-4., -0.9999999999999998}, {-2., -0.9999999999999999}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 24, 24, 20, 24, 24, 20, 20, 20, 8, 24, 8, 8, 8, 
                    8}, NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, ImageSize -> {503.5, 211.}, AspectRatio -> 
                    Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{28., 35.5}, {28., 18.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "enc"], 
                    NeuralNetworks`NetPath["Nodes", "imageLoss"], 
                    NeuralNetworks`NetPath["Nodes", "mn"], 
                    NeuralNetworks`NetPath["Nodes", "sd"], 
                    NeuralNetworks`NetPath["Nodes", "latentLoss"], 
                    NeuralNetworks`NetPath["Nodes", "z"], 
                    NeuralNetworks`NetPath["Nodes", "expSd"], 
                    NeuralNetworks`NetPath["Nodes", "sdEpsilon"], 
                    NeuralNetworks`NetPath["Inputs", "random"], 
                    NeuralNetworks`NetPath["Nodes", "dec"], 
                    NeuralNetworks`NetPath["Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "imageLoss"], 
                    NeuralNetworks`NetPath["Outputs", "latentLoss"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association["Input" -> NetEncoder["Image", 
                    Association[
                    "ImageSize" -> {28, 28}, "ColorSpace" -> "Grayscale", 
                    "ColorChannels" -> 1, "MeanImage" -> None, 
                    "VarianceImage" -> None], 
                    
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "random" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    Association["Output" -> NetDecoder["Image", 
                    Association[
                    "ColorSpace" -> "Grayscale", "MeanImage" -> None, 
                    "VarianceImage" -> None, "$Dimensions" -> {28, 28}, 
                    "$Channels" -> 1], 
                    
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "latentLoss" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT], 
                    "imageLoss" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    Association[
                    "enc" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{64, 1, 
                    4, 4}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {4, 4}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {2, 2}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 1, 
                    "$GroupNumber" -> 1, "$InputSize" -> {28, 28}, 
                    "$OutputSize" -> {15, 15}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Max, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {64, 15, 15}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{64, 64,
                     4, 4}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {4, 4}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {2, 2}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 64, 
                    "$GroupNumber" -> 1, "$InputSize" -> {15, 15}, 
                    "$OutputSize" -> {8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Max, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {64, 8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{64, 64,
                     4, 4}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {4, 4}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {2, 2}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 64, 
                    "$GroupNumber" -> 1, "$InputSize" -> {8, 8}, 
                    "$OutputSize" -> {9, 9}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]]], "8" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Max, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {64, 9, 9}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]]], "9" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]]], "10" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{5184}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{5184}, NeuralNetworks`RealT]]], 
                    "mn" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{8, 5184}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{8}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {8}, "$OutputSize" -> 8, 
                    "$InputSize" -> 5184, "$InputDimensions" -> {5184}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{5184}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], "sd" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{8, 
                    5184}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{8}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {8}, "$OutputSize" -> 8, 
                    "$InputSize" -> 5184, "$InputDimensions" -> {5184}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{5184}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 0.5, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{5184}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], 
                    "expSd" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], 
                    "sdEpsilon" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], "z" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], 
                    "dec" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{25, 
                    8}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{25}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {25}, "$OutputSize" -> 25, 
                    "$InputSize" -> 8, "$InputDimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{25}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Max, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {25}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{25}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{25}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{49, 
                    25}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{49}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {49}, "$OutputSize" -> 49, 
                    "$InputSize" -> 25, "$InputDimensions" -> {25}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{25}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{49}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Max, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {49}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{49}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{49}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Reshape", "Arrays" -> Association[], 
                    "Parameters" -> Association["Dimensions" -> {1, 7, 7}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{49}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1, 7, 7}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Deconvolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{1, 64, 
                    4, 4}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {4, 4}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {2, 2}, 
                    "Interleaving" -> False, "$InputChannels" -> 1, 
                    "$GroupNumber" -> 1, "$InputSize" -> {7, 7}, 
                    "$OutputSize" -> {12, 12}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 12, 12}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]]], "8" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]]], "9" -> 
                    Association[
                    "Type" -> "Deconvolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{64, 64,
                     4, 4}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {4, 4}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {2, 2}, 
                    "Interleaving" -> False, "$InputChannels" -> 64, 
                    "$GroupNumber" -> 1, "$InputSize" -> {12, 12}, 
                    "$OutputSize" -> {11, 11}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]]], "10" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 11, 11}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]]], "11" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]]], "12" -> 
                    Association[
                    "Type" -> "Deconvolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{64, 64,
                     4, 4}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {4, 4}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {2, 2}, 
                    "Interleaving" -> False, "$InputChannels" -> 64, 
                    "$GroupNumber" -> 1, "$InputSize" -> {11, 11}, 
                    "$OutputSize" -> {10, 10}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 10, 10}, 
                    NeuralNetworks`RealT]]], "13" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 10, 10}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 10, 10}, 
                    NeuralNetworks`RealT]]], "14" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{6400}, 
                    NeuralNetworks`RealT]]], "15" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{784, 
                    6400}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{784}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {784}, "$OutputSize" -> 784, 
                    "$InputSize" -> 6400, "$InputDimensions" -> {6400}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{6400}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "16" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid], "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "17" -> 
                    Association[
                    "Type" -> "Reshape", "Arrays" -> Association[], 
                    "Parameters" -> Association["Dimensions" -> {1, 28, 28}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "13", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "12", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "14", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "13", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "15", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "14", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "16", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "15", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "17", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "16", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "17", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], "imageLoss" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "inDec" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT], "inInput" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[NeuralNetworks`Private`ScalarSymbol[2] -> {
                    Power, 
                    NeuralNetworks`Private`ScalarSymbol[1], 2.}]]], 
                    "$Dimensions" -> {1, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Reshape", "Arrays" -> Association[], 
                    "Parameters" -> Association["Dimensions" -> {28, 28}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{28, 28}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Summation", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "inDec"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "inInput"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5", "Outputs", "Output"]}], "latentLoss" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "mn" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT],
                     "sd" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    "Nodes" -> 
                    Association[
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Power, 
                    NeuralNetworks`Private`ScalarSymbol[1], 2.}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 2., 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[2]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 2., 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Plus, 1., 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "3" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Summation", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]], "1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[NeuralNetworks`Private`ScalarSymbol[2] -> {
                    Times, -0.5, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "mn"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "sd"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "sd"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "3"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}]]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"image\"", "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"image\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{"\"random\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"latentLoss\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}, {"", "", "", "", 
                    StyleBox[
                    TemplateBox[{"\"imageLoss\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7397059898827744`*^9, {3.7397060243717384`*^9, 3.7397060325200596`*^9}, 
   3.7397064717663097`*^9, 3.739715932985835*^9, 3.739716309028764*^9, 
   3.7397182007031107`*^9, 3.7397189027664604`*^9, 3.739718978364338*^9, 
   3.7397192226596165`*^9, 3.7397192604948125`*^9, 3.739719760995125*^9, 
   3.739738001307364*^9, {3.739738288255085*^9, 3.7397383141818953`*^9}, {
   3.739738995760598*^9, 3.739739013670602*^9}, 3.7397390820806007`*^9, 
   3.7397392467749796`*^9, 3.7397393467802362`*^9, 3.739739394182849*^9, 
   3.7397570103611116`*^9, 3.7397573401157465`*^9, 3.7397927577513638`*^9, 
   3.739794496775937*^9, 3.7397969460912013`*^9, 3.739797426127496*^9, 
   3.7398008529359493`*^9, 3.7398027906709976`*^9, {3.73980294509167*^9, 
   3.739802969303913*^9}, {3.7398031333063283`*^9, 3.739803155511769*^9}, 
   3.7398032330853415`*^9, {3.7398034872109966`*^9, 3.7398034912801237`*^9}, 
   3.739803541457939*^9, {3.7398036304990053`*^9, 3.7398036441836843`*^9}, {
   3.739803687951827*^9, 3.7398037094103765`*^9}, {3.7398039735637393`*^9, 
   3.7398039776353655`*^9}, 3.739804026334425*^9, {3.7398042555291214`*^9, 
   3.7398042571874003`*^9}, 3.7398043714886045`*^9, {3.7398045398386097`*^9, 
   3.7398045410411763`*^9}, 3.739804661603113*^9, 3.7398047694674644`*^9, {
   3.7398049461771836`*^9, 3.7398049642554445`*^9}, 3.739805332268571*^9, {
   3.739806103664843*^9, 3.739806114631145*^9}, 3.7398075288293934`*^9, {
   3.73980777484153*^9, 3.7398077906449237`*^9}, 3.7398079067250957`*^9, 
   3.7398079454826117`*^9, 3.739808074065237*^9, {3.7398081259709644`*^9, 
   3.739808137365765*^9}, {3.7398081840965247`*^9, 3.739808200864462*^9}, 
   3.7398082860685167`*^9, {3.739808360036936*^9, 3.739808379010332*^9}, {
   3.739808441394072*^9, 3.7398084563777204`*^9}, {3.739808565907055*^9, 
   3.7398085743385754`*^9}, 3.739808685666136*^9, {3.739809368903793*^9, 
   3.739809385543846*^9}, {3.739809416823183*^9, 3.739809426158105*^9}, 
   3.739809617449951*^9, {3.7398096485251923`*^9, 3.7398096981050415`*^9}, 
   3.739810075819624*^9, 3.7398101161104517`*^9, 3.7398101736964674`*^9, 
   3.7398102108652825`*^9, 3.7398110745736246`*^9, 3.7398113933406563`*^9, 
   3.739811424949652*^9, {3.739915410994813*^9, 3.739915417136042*^9}, 
   3.7399154948845973`*^9, 3.739918186593193*^9},
 CellLabel->
  "Out[217]=",ExpressionUUID->"9636357c-e964-4ee0-add3-eaec9c3cdf86"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Training", "Subsection",
 CellChangeTimes->{{3.7395663013480153`*^9, 3.739566307299842*^9}, {
  3.739566381757985*^9, 3.739566386357066*^9}, {3.739580286905179*^9, 
  3.7395802885074787`*^9}, {3.7396461037904787`*^9, 
  3.7396461048373337`*^9}},ExpressionUUID->"4d8708ae-94a3-460d-b70f-\
ce3a512d387e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mnistDigits", " ", "=", " ", 
   RowBox[{"Parallelize", "[", 
    RowBox[{"First", "/@", 
     RowBox[{"(", 
      RowBox[{"RandomSample", "[", 
       RowBox[{"ResourceData", "[", "\"\<MNIST\>\"", "]"}], "]"}], ")"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.739642590626321*^9, 3.739642610253044*^9}, 
   3.7396427252545133`*^9, 3.7396436122988987`*^9, {3.739663190903102*^9, 
   3.739663215293248*^9}, {3.739664960933978*^9, 3.739664979468237*^9}, {
   3.739665017215391*^9, 3.739665046251326*^9}, {3.739665167789925*^9, 
   3.7396651916921415`*^9}, {3.7396664762716713`*^9, 3.739666476925453*^9}, {
   3.739670020116852*^9, 3.7396700467427545`*^9}, {3.7397061599148703`*^9, 
   3.7397061648762484`*^9}, {3.7397064793461494`*^9, 3.739706482907383*^9}, {
   3.7397148403478346`*^9, 3.7397148626315994`*^9}, {3.739716315324668*^9, 
   3.739716316004016*^9}, {3.7397166637162633`*^9, 3.7397166640941877`*^9}, 
   3.739717186538661*^9, {3.7397185402413063`*^9, 3.7397185645914183`*^9}, {
   3.739718686586492*^9, 3.739718737952986*^9}, {3.7397187815150456`*^9, 
   3.7397187829606915`*^9}, {3.739718871908619*^9, 3.7397188766390915`*^9}, {
   3.7397575240459805`*^9, 3.739757527538845*^9}, {3.7397577796114044`*^9, 
   3.7397578129131603`*^9}, {3.739792841010005*^9, 3.7397928444728394`*^9}, {
   3.739792893798551*^9, 3.7397928967030106`*^9}, {3.7397929335461316`*^9, 
   3.739792935138728*^9}, {3.739793216078777*^9, 3.739793223269508*^9}, 
   3.7397932795072117`*^9, {3.7397933234179935`*^9, 3.739793325644786*^9}, {
   3.7397975243209834`*^9, 3.739797525464043*^9}, {3.7397998687980537`*^9, 
   3.7397998818072977`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"a7c64f03-a37b-4ff4-8fa9-4bfc6c4beb84"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"trainingData", " ", "=", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<random\>\"", "\[Rule]", 
      RowBox[{"RandomVariate", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Length", "@", "mnistDigits"}], ",", "nlatent"}], "}"}]}], 
       "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", "mnistDigits"}]}], 
    "|>"}]}]}]], "Input",
 CellChangeTimes->{{3.7395663013480153`*^9, 3.739566307299842*^9}, {
   3.739566381757985*^9, 3.739566386357066*^9}, {3.739580286905179*^9, 
   3.7395803539419622`*^9}, 3.7395804634373894`*^9, 3.739580557204153*^9, {
   3.7396423400539384`*^9, 3.7396423438215675`*^9}, {3.739643233598317*^9, 
   3.7396432490887737`*^9}, {3.739643349560803*^9, 3.7396433755308723`*^9}, {
   3.739643475800774*^9, 3.7396434841699104`*^9}, {3.739714865813456*^9, 
   3.73971486901542*^9}, {3.7397159371170444`*^9, 3.7397159893040023`*^9}, {
   3.7397160224638925`*^9, 3.7397160306296997`*^9}, {3.7397171892988234`*^9, 
   3.739717191015141*^9}, {3.7397184579718*^9, 3.7397184863056498`*^9}, {
   3.739718530047224*^9, 3.739718538937173*^9}, 3.7397185701808057`*^9, {
   3.7397193149761944`*^9, 3.7397193231060047`*^9}, 3.7397380099403787`*^9, {
   3.7397575305396905`*^9, 3.739757533510538*^9}, 3.7397932542311463`*^9},
 CellLabel->"In[20]:=",ExpressionUUID->"bc184bf2-cdcb-4b06-8822-87c061f3da92"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"random\"\>", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "0.07096456401473338`"}], ",", 
                "0.3621468225686809`", ",", "0.22759831902885977`", ",", 
                RowBox[{"-", "0.41745144752538593`"}], ",", 
                RowBox[{"-", "0.8501783787119082`"}], ",", 
                RowBox[{"-", "0.07637662262887755`"}], ",", 
                "1.4152493214059874`", ",", 
                RowBox[{"-", "1.3665921220734287`"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0.34730140521134545`", ",", 
                RowBox[{"-", "0.6828793729407899`"}], ",", 
                "1.219823092498376`", ",", "0.6837113343219844`", ",", 
                RowBox[{"-", "0.3789619132606921`"}], ",", 
                "0.3102772665146207`", ",", "0.20114332758997963`", ",", 
                "0.1894851582370345`"}], "}"}], ",", 
              TemplateBox[{"59996"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "0.224436939962069`"}], ",", 
                RowBox[{"-", "0.8862241984782574`"}], ",", 
                "0.28418874417528867`", ",", 
                RowBox[{"-", "0.35672087236152444`"}], ",", 
                "0.25923399866164754`", ",", 
                RowBox[{"-", "0.35264814231582525`"}], ",", 
                "0.8338195773762056`", ",", 
                RowBox[{"-", "0.44142348260484504`"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
               "0.22902160440585606`", ",", "0.5757510291745106`", ",", 
                "0.15521818535177898`", ",", "0.7780710111485308`", ",", 
                RowBox[{"-", "0.13972624824190252`"}], ",", 
                RowBox[{"-", "0.1487323366816095`"}], ",", 
                "0.23657417032356481`", ",", 
                RowBox[{"-", "1.1404320411713178`"}]}], "}"}]}], "}"}]}], ",", 
           RowBox[{"\<\"Input\"\>", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cK+MnDEPwLh9wkZibmNBxyDcxMbGuxSy3nZmbKwaFNjZmZFYe22dzM
zD04pHiYmUOwSz1XZ2bW/YFV6rIIMzPzXezanqoC5dZhlXqtxcTEtBC7tvNA
XfYfsEq9BzrE4C2M9+XWTzRt3lD21wo7Zu8bcKlviszMemcg7D5boDrmo3C5
T0BeEpj1u0gSJCX/DqEPaJ3TayCjVB8kw1zwEMm+OUABOTU1NRYmIMNjP0rw
/OllhgAmZvcD6AH3pkYVIheCK00MXgAAnrujXw==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+K4DtW0Qd7u6KiooSBeM4RFIm7bW7CjCAgIsLByMjidAxJTh4k7urj
U/j377n1UzgZnZHkVq599uzZHwj7fi0/Vyo2W1cvd+Nm5OxCE31SLMHPzw+2
NPUxmlwbWDguISGKkVG4DlXua6VxyLRpf/////frpAOjxiXs/v///30XC+dF
XJL/77KpIfEm575D4l1j1UPiKTPqXEBYHsDYgCS3hpHRfMfP10DWj6f1Uoys
55Dkfk4HhqSVgLe3txnQL7LTUO3fZcwIAQrZUz+hO+7lvqK9+4AAeyQONAAA
WuGp/A==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9Q8OVYym7sMn9XqDExsezEJnU+iAkEIr9jSq3lZoKAFT/RpU4LMcFA
5G0Ume8rOZmYhLIuq4ElZY7/RZKbAxJa9///A0WI1isIqelsTExKV/8BWd8+
fszgZWLS/QaTemUCVHoeoRLIWwzj9DAxsU79h/CnBhNTGoxjzcQkhuyyciYm
cRibEVXuDNDNtTBOKBOTyC+41DFLYMidgfFSgZbnwThbdIC8HrjK6+JMjFwt
74Csf+f0uBmZWDuQ/F4C8q+UT+FsL7DPu5AddtqeERqWQFq4CznE/v+/GoII
6Xv/0cC/GxZ8QE0ak579QZcCu+jkyZNfsEnQCwAA0UJ12Q==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+U4Pf7lBBNBr2N/zClzggzMjIyczAy9mBIfhBmZM5deui+LyPjBHS5
k4y8G0D0PT1GF3S5UkYrMP3CmTEdXa6LUeg6kHpoy8ixF13usxqjyK7/PwMY
GfMx3blHnpEzoYiRMfEnFv89TAS6EbvU/59fFwHltmKTAoJTQDnNo9jlohhD
Kxk9sEqd5+C6coZR8zsWqR/+jHb/X4joYXUnI/fV//+VGE9jkTvNqP7//y4W
q69Y5JYCjTxtwNiHzSlflPWvKTEKPsfqzmxGNkbBE1il/v+bIOCOQ4p6AAAd
WLX8
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+KoN4B6HKGeiwyYAmskvUgUYf6eiySDnChevQQAUrV74cw96PJAfkO
SIY7IMvVo0ih2IekFOxQNCMh/P1YPAjUuB+ihAHhKCSNcPAfDYC9zOCw/z+a
I2HS++GGYwX7sYc0zAe4tDlgtw3mWlwmOuC2DSNyUI3EZRtpAAAnDpsU
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cxuHYGCK5hiq/9f22mEjMrK6spmsSDjAyJdAdWVpCc+BJUuTNAMeaw
ULAccxaqHCMzszaElc7MKL4eRY6Z1ekRhJWBoW/27Ov/cckhXCvBqv0Iu9SX
amZmExzaqoHubMMhB/IDDqkYoNxyrDKvgpkZmWdjl4oDhonuYQj7EIpUSzAr
Qi4YxY8tfOCwZFUyNTE1vc4sYQoLDLC/gGEKxwxADJN74AiJH2QMN3ImK6vi
bAjAkHt97hzMgnNQgCMMBgoAAL5ihCs=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9yYCcD4yYwI1L+EbpcE5POQxD9RoXpFJrUeQP2rWDGQya9d2hyckzW
/6Fys9GktrEbvIKwtjPtRJV6qMVUB2H9skeT+1vLZPkFwqxnMvqDIneSiQnm
bjahG6hGvtZiOg9hLWE2/v/gG4pkLJNS++HDb///l2AqXiuO6r+z/lxMTExa
NjbsQErsFponbqdpM4EBb/nD/xjg04sXi5iY1rzGlAGDjUzsv3BI/c9l2o5L
6r8N0wtcUu913X7gkpvD1IbTSD+Xn7jl/HFKkQIALjfHKg==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+s4BZXB065WsYIXFLftDn+4JIrZazHJfXblO/5/1/vsMqtZWz+/382
62psctFMF/7/LxP9hUXqpYDn//8/zcWxaVvBOPP//4eMztjkHESAzrjGqI1F
6hJLLpCMZHTEIjedcdXXgy6MHCexyDWwxMszMjI6YLNuO7+g88JVjBXY5P6/
/fT/f7zAS6xyIKAqh1Pqu1w4TrmbjKvwyN3FKffL7DhOOSoBAM2/4PY=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8wMKcplLPoHDaZW+bMTEAg+xaLXAUTBPRj0abMFPvjxw8XJpZaDDlV
pqIbQCqOiUkSQ45RGuyKj65Y5DaXQegaLHIwgEfunS1uuQ1MTB645NyYmDbj
kLqqyqRxA4ecEhNTFcTenTuzUWT+zGJnYrr9/n16WJgjE5P4IWS5iUzIwAJJ
5nYHN1xczsGh8SFc5vdtDZAgBxeXxOLFi8+i2BUJVp+B1ZGMTExiFj1/sLqe
QW7OARweox8AAGZKpEI=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x964Pb//88OHz48XV9ff8FhZImPbdHq0dFmzDCALKcAFmGCSXkhSe1Q
dQXLOXqBpQS3Ieu7/G0rCHy6B5LiW4DNPf26QCnvzZgS7/342ZiZg4/9wJTa
ZQx0C8+M05deYUitd4O5sxNd6gETEDCACKYOdLkX8urq6tJ8WPX9v3D79u1T
myyYmRWuIomeXbwDxqxlZla/gawjm0tiy4OXYEuVmJmrUEyr4GRm1jf3bXzY
ocvMmvEN1ao6WBAzMSehO+P3BGOInHr9Lww3/n/saAAE7XcwZegIAO47g00=

                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6c1OMhYcw2XnAcTswkuORNGpkIcUtd4mJgP4ZALYmLMwGUkE7PYWewy
X6px23aGGbdtfUyM9rhsS2dm2olLTpOJEYdL/l9jYtb6ikNuJiOTyTVGJkat
M5gqZjIxt/4PBrqVSRsjvIH6ZgKpgzNNeBj70eReMzFDfP5KgckeXWMak+hD
EF3NxMCELnfGnil47dqZHiAbMZ0ao8DABILy2ILudb+9lnbGhOvY/DjAAACg
EL4a
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9YsG1+Req851il7AWZmJgYDedjkVrHAJRiYmByfI8uc8+Yl4Fr4oMH
PUxMO9Ck2gyBWlqBjPlMTE6oUrc0GBhtobYyat5GlnqlwSS0FurAHUxMC5Dt
MmQQOgDj3EeRu6fDxLgWztuOIlfPxGSL8LEDqhwDwyw4Zx4joyNC6pIiUxWC
183EtBPOOaeIZMi9ekYmJ0S4AD1r9RnGmc7EyIVkG3JArONlYmxF8tw8Rgao
5be6GRkZZyFJgfQJLb53Hwg0mJjcDiBL/T+vCIo1JjDhhB49V5Sgco47MWLu
//kFtkC53gUYEnQFAHgukoQ=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+04KaunN4qHHL5zEBgaWU1D1PqPRNIDkjwLkGXWmACk2NmRpNqZ2Ji
YGLyLWZgkj5QjCq1mZOZWaPtybf/S3k4t6Dp0mBmVn4AZsoxr0aW+T0FaEvp
LQhHD1VuCjOTcT9U6n8MstzNfCYm44Uw3hlBJiS5Vcy8ER/gvARmseNwzlNz
5l6EwglMzNEIXh8z11YI69Oj0jANJps3yHI2EMaGPlCQOG5FcqQ9E5NQX68g
Ezhc+FGD5LM0LBQ1IiJ2/EcFcmA5Ae8TD/5jgFaFutWxq/dhSgweAACE2JP6

                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9Q8ErqAk65UsYdOOXseG/glGtlFLyKS86eUectDqm7PIzxuLRNYWSs
xSVXyYjbnZWMgr9wyXkyOuGS+i7NmINLbh4j40ZcctmMku9xy1Xhkvovgltu
FRPXFVxycYzRuKS+ijJOwCW3hFH2DS65AMbNuKToBACuKeq9
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/M4IpBwHps4kfTbCr+1zHxYZHawMtkcuyULNMSDJlngczsDd+eqTJl
/kWXmibM1vvs/6NQBuvP6FLnGJlW3PpdIctkfQ7TRGEmcVZVJiYdDF1A8PHN
mzcrmUTsMq9g88H/HgaB888WhX3DInWdRwzo+l/xXZhSX7WZtgOpL2F7MeX6
maRA1OVITKnvqoy7QfRZLHJdTCG/QHSiI6ZcABPYDW94fTF9yM60C0RtYN+M
qY+B8QaQ/BUtgin1n5fpwP//P+KYLLHIJTFxF0YoMYmcxyL3fXGAguq8DZ+w
SFETAADBg8Jg
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+S4M2F1ZmZCYyMznvRZf4utGSCARSJL/X63GBRGWUg4YUid06PiUk4
dMKePW8CmZjCPqGauK/y9XsgtT6WmanoJDbHLKtkY9Lb+AVT4t/6eCYmgcqn
WPTsCWdi4knZhCnxcWKiANB9Wn8xZL6fgvnM5xu6XCfcz0zF6HLXmdi029b8
+vWKlSkOXe7bweMg6o0NE9MabF77//+9KRNT0j+sUq/TmJj0rmCT+fbMgolt
IpYQ+f9/qxE3kyJGrP3/39MTrMrCxJb1CoseBqC32CPPYXVEZlZW91XsTicL
AADUXqKL
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8+4O2FC38eYZV5nOPKyJimlZNzCUNqoRojFBQt/IImJ86IAGaeqHIX
u7vNux1aqsGSHJvRjf32//u/vwtsgHJcJ7A46Mun+7NBGtPv37//DFVqW5A3
zE4GRunTyFJruBiRAR+ynD83shSrBIqZ22uVIOKW8YyMMufQHPPyoQhIy6zv
TQ8ffsZwqhhQTgCLF4iRM8Mtx7wWh1yVIqMbDqn//+9fvIdTjjoAAImvkpY=

                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+E4FHtFFxS78WZLV6B1ax6jC73motZPBXEKGPWfoUuGcb8/w6Ibmdm
Ln2CKQcGq5g9RaaiyzFB5ZhmYjgGoc8Ji9xcnHKFzFNxyu1ntoXKabzFkNRm
DDxzpZaBiYnpKobcKVVmIBAI52TGlPv/ucK3sfHgf3FsclAQh0euAY/cS6Yc
3HLMsjjlgLGFUw4Yeo19uOROiDA149ZJKQAAyKjPDQ==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9Y4MmEU+qVGfNVXHLbmJnzyZFTwy23kIOZ+TUOuUnMzMy4jMQnx8DE
NBmXHBMzMy65V3jk8pmYJS7ikMtjYFLDIfUlgIl5CQ65W8xMzDvIkWNiYNpO
npl8h3DL+eCQog8AAJz+2tA=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/E4KuxxpLHOOTeyzIzC1xEErg+eyOMuZcZCPYipC75MLNOhLK3oMn5
A7kevyDsBVjklD5C2CpY5LqgbEFUuZ9OQO48EOv1/7dmILlVcLm7IK7Zinku
LuouWiA2cwCqHBgwQWkkOSYYYIBQ7FMRwWQBVqwtYusysZ0VyPJBCpYHK9LS
9lx+d/8nkM0LlDN4ihmW/6Fyun9wy+ljl6JIzgmHXDwzMzcOZ/5/Eslsh0OK
KgAAhv98JA==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+S4PH6CDYGRsaJmDK/dtgyM4KAHIbUMjWgsJB9YC1jKrpUAjsjc+iK
N///v575E1XmaxQ7W8RdMPP7dzRdjYxC0yCsp4ZdaHK6olchjFtBjOZoctLS
B96+/fn27VUFRkZVNLlokNsNwT5g9ESTO8jLCAMKHzG8t3U5EBQzMgqewJCC
AGdGoVXYZf6kMzK249B1lJGh8C92qRP6jIzJ2KWeGTAycp/CKvUpgZFRcw9W
qd+xQF3Ypf5vBErtxuFGe0bGDhxSpAIAu3ew6A==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9wcFWewQqH1N8mJiY3HHILmJis3mCX2iTAxD4Vu9SvQCYmbRwmfmNi
ktyHXepiARNTKQ5tQDfikpvHysQkeAqr1D6glNJ57Nq2A03MwmGbJBOTF3aZ
W04cTFzbsMudBZoYgl3qlRNQLh+r1FtHoBTTD6xyO4Ayggv+YZWzAsotxm7b
fS0mQZ932OWmMDEZY5ehIwAA5cvOQw==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9QUMfIyCB6CavUAkUmIFiCVc6UiUmyY/0vbFINrExSZ7BbtomNSfoU
DodYMDE545DayM7ElI9DroaJSeI6Djmg+zfikALJAR35MTngOXa59U5AL7Zh
SO3gZmLaq8/kvMOOeye63DqgM1uYeI7+Xy98AYuZZhu5A///v840D4tcwP+y
F///H8Mqp3AfSD1SYl2BzZ2Vr3/9OsikhOmHAhZg3IVEMjHlYsr9L/RhA0Wt
1FUscv//30lmYoq9hlWKHgAAv4eyCg==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8I8Ml2O065NxxduDUGWL/FKbeSKQbGPF2OJreBiQnGFGVCl2NkhDFF
GNHkPgsh6fuOJokwyZhpLppcAVyulakPTa6caTOUdZ3JBk1uE2Pi2SP9yckC
jIyMDIdQ5a4zcXEwMTGJiokJMzFWoMsxcgS2bAQ5WRtd7m1a130o0xtdDgnM
xSN3k8Eap9x/Rta9OOVcmSbjlCtiCsQp91Edtz6aAgB8NM/R
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+cYLl3cHDokT9Y5SwZQSDqHhap7VyMyfv2zhCQ/4QpZ8PI+B5IXWYM
x5B6LQaR+zVT7DW63FFGRkuwO55wT0SXC2dknAthGUWgyxkxKn+Fsowx5XL/
45B7KcR4EMbyRZP7a8AI9fRdhhY0uXuMjCEfwKx9jPsx5NikwOr/eAk/x5CD
uuA2oxa6Mx9zQuT+uDMmoMv9d+K8AqI2MwqhG/n//xUutfvAyOBmX4wh9f//
Bi5+n0AORn0sUv//13IAo1b5AVa5/48iLQ/9wi5FNQAAdIjAYw==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9IkObazsiQ/gmb1DtGppLzQWx12OQqGZOf/f+fq/EDi5w7Yw+QvMBU
gSk1mdHtG0iO4yyG1Dd1pqtA6lOGJKa2eUwVH5YYGCgx+WDKSTJVSJnGSzMy
5WJIXeJiZJz5KY1Rt5VrF7rcTiamjKl2TG7vbkpzocvd5GFiYmTPAwbKdaYr
aHJPBZiYbPaDWM+ZEtDkGBn7oKxzjA2oUjMZ439DDXAE+xMBvmgw3oCwflSj
h9lzJsYXEFYok+kbNDlGNzA9W4rB4t1/dH2KJy483O7EJtz8Bd13v3IZmZiE
Gdl9HqHLgEB9vDBT3H5sMnQDAKGsr/g=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9m4NeV2iAGhuWogt8/fVqwubxcjgkEslHlspiQAJpcGUxczFUcXe6r
LxO7oqL9nDlv/quhy/3/vGgThPFJEUMODpZj2Ee0XBsuOV8mpuc4pA7yMPn+
xCHXycSUistIIyamHjxyD3FIPVbALbeFiSnkNw65Biam87iss2AK/oNLrohJ
7y0uuRtSkbik0AEAX83ByQ==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8u4BYjI0NMZmbdheuYct9imCCA26rwCbrk71erZ/b2JlsrMDFprMBh
+Jc90ZLsC3DafUGS/R5OySam22TJZeKWuyuAW242k/ZHHFKfdLm247ZNDJfU
dFamThxSL+SYIv7ikHNkSn6FXeZpFJPZW+xSf7OZeC/iMLCIiW0zDqnrAsrH
cEj9vyVkhksKCwAA+AzbZw==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+c4HZoAg8D08pf3fvRZV5OVGFmZmZiZvYzMTmCJmcBFJbx2LUrPZKX
aTGanDOTZt1ZEGMRM9dRNLkvTOw9IPq+KvM2DKeUMCk++///lwOTN6Yze4WZ
9/z/Vc5s9x2LH+qYZc4/ZxbD8AEIXGBm9olnXoZN6v+vMqD/kn5ilfv/X59J
7A0Oqb3CzEzCl7FK3RVldlJkTscqV8y89vdlZv13WKS2cis9+7+ZGUhggP0M
bD3/v5gytWLR5sTk9mmZCZMpFm1PhXl6TJiZjbBIAWMGGH+qk19hc+QZXp6u
lx+xup+qAAAst7Fg
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x904IRv2XoIawJDKppcCBOT8VsQ4zQzE9MCVDk+JiammyDGKSBjHqrc
Fk4mwzcgxoMIJibpK6iSIlB9/x8pMTGl4ZD7H8bEJEqO3AF0uWWsILmj27dv
P7IJXa4f6PSFU3mBJI8oulwREzJAkVvFChHUMjMzE2ZiYl+PJNcJlgnYCAq2
7UJMTBOR5IyAMirTP0A4MahyEkxMQZ9hHDS5qTJBX+GcLCam5v84wD0mJr5v
OOTuszMxdeHSmIxHbikeOYoBAJheij8=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              TemplateBox[{"59941"},
               "OutputSizeLimit`Skeleton"], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6c98GachUPmqR0DYwQOOSNGRrWTWGV+lzEL2h/ArquKUfAoDgNv8TMe
wyH13YW54g8OuXpGYxwy/2/JKDzDJVfG2IZL6g2/LYx54shFVLkNjClg+kqK
GwsjZ+htTLlPqYwcAS6MjIyTkeVqQHKfFASr3/7/86aEPQBZbhZQ7rs7NFxe
SKLIPeBhXH0FEi7356myHkZxjBMjpw3jrdfr1rsJc2qfQXXoAmFGCJBqOY/h
w1Ml4oyMbp3bP2H1/50U/SqsEoMBAACEir+j
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9q4N9PBPtQ7U9kqe/nxabD2Pu5mByR5VKYmNbDlEkwMR1GkvozjYmp
GML82sPExLsXSaqXCabvSxCQ2Yak7bEpExPHbjBzKlBK6Ctc5u8EdaCA2uW7
QPZJAVRt3UwQIBx49QPQMqZkJB8wMMGAlRmQkHiDZFsME5sDEIhCFTQj++3+
oWMg6mqWKUjK8/t/bOC+Aro2BDgAlJJ9hl1uGm5t57iBclewSr22ZWKS7/mF
Ve4sUJfGc+xGguSasEv9/9PIpPQQh9z/v79+45IiCQAA7eKc2g==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+04OPbHWVlZVN+Y8q8aBdnBIOAyX/QpK7KM8LBVVSphbJgUXcPDxFG
RnkUqZtgKa19//7/Xw5koMhpAQWkjr8HWbQXTe4yP1BgPYTdxMjIjCR1zRPI
t4Ny3BkZKxBSj2YCdXFugHDOSjEy6iDkgsFOVHgL5kQCmQWockzKvCfBnC2M
jMW/UeXOvbgLZj9VZFR4iZC6x8HIOO0flLOGkTEEyZX/AhkZH0HZu00YGSOR
fRcMl1tnwsDIcQFNruHP/wfnz+cATeec8x9NjtHFXQrsEw4UqRv/qxCxY4hi
4P/t/7+nQ2XCZr37jw5+HakAgknv0OOb6gAAVPBx+Q==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9a4BQDo35M7bZfWKTesatWWfIxMaotxpT74/v0///Ht9OF2H3PYUie
XgKmHvSxmf3AkHwKpWcwpeB2lacnTqnf1l445SYyteCQ+VLEX4ZD6og6Ey6p
Jwz2F3HZFcB4HKc7vBjf4pSrYKz5g1NSiSnvNS65I+qMfTg1vpTJxylXzYEl
AiFghmQpLqm5jF5fcBpJAgAANRjm3w==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9y4DVDVRuG4PdHJ7be+v/uhhwHp5Lxua8ocgekGTvXucgyQoDnN2S5
VYyMzOo+5eU1RUVaQMlOZLkdUjZzT38BMz+flGKMxukiU0YNXFJPxRltsEr8
fr1Kh5GxHZvUk0ywQzOxya2FeIJFcAoWORZRfQEBAS5WvruYZu4FUw9qGHmu
4nLrVxfsdoLBbsYknHIL8MiVCs7FIfNnvZgqulj5OSDx7vWl9FbhE+hyOaVp
aTVn6oM2T32FadhaNWCohFz7idMdxAIAz0e5Rw==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+S4E1XEQMTE5PPVwyZp+1yzMyK1tZKTKvRpaYrMjHLhz/7//8ZUyua
VAYnM9PMN2AWkzWaLiYmaQhrLhOjFapdTMyh30CMH2tFmZnaUOT6mMRugeib
xszMzIbH0eQ4y/oa5eSEmJiZTT+hOUUK6C8WOQ4mRg4XdKn/X1evXr3lgCgz
xwwMf0PkrZiZM7FL/a8H2oVDlw8jky2GXRAwkZnJ6Q12qbX8zBI4pDbzMDM/
wy71iZGJewt2qWOGTMyF2KX+tzAzheJw4v95zPXfcEiRDgC4KrFp
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/MYFLbM1xSM1mYDR6jCq2SlfUFM6YwMzPvRZVbyMxsiUvOAib3QhxD
TpaZORTOQpWL4oaLAOWSUOT4mZn1nsPlLNHlJkNYP6WZmc1+IUnt52RmPgVh
eQDdyRxaVVUFk2NgYmLKaWtrs2ICsSAAJsfEDAMQlkhe3haYnDFUxipx3tOJ
QHoRkn1vooKDgwtu3HgHCSGDT/+xA6Ac3wEccluBwbABh9x/LTxywGCPwSW3
mZdZG5fc//sds3HKUQwAqnGRIg==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+c4J0FI+Pej9ilgpiYmBi5LmKR+mDBxORlxMgk9RRTrp2RyfB5IiMT
03wMqYnMjIkv/oPkitGl7nEz+gCpBAZGxpXocueZmF4DKaA+8YPocs+FmOoX
ne+UYMQ08v//xWxAq4B+YLLG4odlgfrSTL5STEZY5EDg2f8ljAK1GMKPV3wF
Ud/kmIQuoMvtZ3IAi61gYpqILvc9k1Eg4vH//7/tmXgwDP21nomJu/f//1NM
TM8wXXLJjJFRbupjccZoLM78nM7CyMTHxcT/HZsnOgTAAdCJTe7/y1l8QDkl
rHL//39aFSY1F4ccFQAANOOjAw==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cD+PN8culdrDLvLoQyAwEWmU+z9JiZ+Gc7M5/CkDoTyMwcPvfWfxfm
K+hSpxyYla78BTJmMB9A18XD7AxhXXHajyYXyawHZR3mRtN3hp95NZTpD2dB
wU7mJBjTAN0PP7peQln72bH5DwLcmMrQRO5eeLosbuOFX/+/WYkcRjWxUJR5
6hRgaDkGzmCOR9UVz8zs//HXnnhhZiZmZuEZoHBZBZNjYi7/DaLf1DOBwppP
UlLSEibHwLQLSP464c3ErHf/SneDr8XW/wh9qRcuxPoyM0tUYLjbEWQS0Dib
85h++tUhw8xssuLSN6w+fvfy5ResEoMEAAAQv6po
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+s4FQT09yrWGVe5SsxsbAYXcOUuXXLioUFKMci+wRdagNIGCzH4o0u
JYFbbiITAxMQgAlPNLlJEC06Tlj0fXCEGJePRe7/DLDcDKxy/8Fy/7HLmYKc
cWoaDxOT6QN0uW0gfYoH1YAemYIud1AY5D8JTmxyYKsgAYApd00Wt9z/SGi4
MEzGlLuFRx9MLvoDptwrJ7BcEKYMEDwwB8ntwCpHLQAAdlJpbg==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9a4O+3daUKjEsKnmKRu8oIAQrTsMoJgiVFXmHIfW3c/erYsQPcjIxZ
uKyNYGTUwiU3B49cKG65Xwq45b4BHVqBQ+4gIyPPbRxySxgZlXA5xRu33Heg
dbY45C4B5dxxyJ1kZGTdj0MumpFRCofUO0EGxj4ccg/YGBn34ZD7b83o+BuX
3BG5s7ikSAIAWGPKtQ==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9Q8MKAwaWz8xlWuVlMIDAFq5wrWE73BRapNUJgOaZpmFKftIDiwolM
TNoYUntdgFK8p66KYcrtdgdKCZz6/18ZQ+4jK1BKHCiFRa4MKOV9FMi4JY4u
t1eUiUnqDoilwcQ0G0XqC9Ad4kfBTD4mpi3IUt8ygCaeBDPXsTFZPkWW2wyU
CvgDYn23YmI59R9NTgDCymdimo7qEkMmJg8Q/bqDnUnnNaocMLBmgLzvyMSk
9eQ/hpzu/zYLHiamksf/MeXYfJiBDmJbjC713xQSN0xs1RhS/zdn64HljDCl
6AgAKWaHoQ==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8wsCciwoaBIaD1I6bUWWZGRklROUZGjjkYcu+KXN99+fT13WQe5mO4
jL6own4Ou8yXRUKMU7DKPG/TYNRf9g2LzIt8IU6Z2u/YNH0UYmTwnLr8A1ar
HLk4mRgZeWf/xe6UzRuSeBk9X2GX/P//fQhjLi65/39N+F7jlDRl3IlL6rsW
brkzjPpfEbw7zc8QnLvqfPeRVO7nMbgLY19VY+xAMWYSs/SBt2+/fHr7tpWd
JeMTqh3rRBkZGWXEQQSmOz5mREaG2UUWbcAa1HQCAAghxAY=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6c5+FpvzMSU9gmLzP0aK2YmZmZmZyxyUkBxkJzIYwypMyDx4n37+Jnc
MeRkGZgMQVadYWA6jiY1mYejDSy2mUnzDZrcm+OzIYxnTPyXcfqEiRndTDj4
xMhxFpdcDFMeTiMzmSbhkmpkY1qNKvJ+epGDMZN60eJIJr5ZKDJvpqhDwwuI
HVF1rYKJg3AJitRTXWa+khkbseoLZWIqKpJiYmRi4pNiYmLajCwXBjNPbNLX
SRrM5shyayFy3IW3QO5KfoYs98MEKBd9HUVskAEAeZOPuw==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9G4NjOnUvc3d3d3N2X/kCR6DUw4GZmYgYCEKGDIucAEi4DglVlZeHM
zChy+xcg2OuYHHHZO12aeT8OqXXSzDLvsUtdYWKWOYtDSpIpCbuuX5PFmJSu
YpW67csskobdvPuKzGJdOFzYzSSyH8Z+t8jFAFlOmWkm1EHdPqLMzDnIchIM
TExM2SCCiVmv+xWKmRXikLDmNzRcjWHhzV27Jnjs2oXD6wMNACkNvc8=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9i4LM0QxAuuTdMM79Dma+vY8hdhLL++HhhyMFYR5mmY8jthbKKlNHt
+2HgCWEcYCzHcIwXxJb7KrwPMOQqeLb+//9xgYNIMqYnXuuLWESoJl0QK8OU
+/9q79yU7U/bmU5ikYOAvAScUv+lGnDLieCWO8p2AqfcVM0vOOViLHBbF9OD
R24yHrnM/cdxydUy2b7HrZNIAAAPlOoA
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+M4JIIA6PSfOxyKkzJFZHMSvOwSC1k7v7z//fnKV2YUpelNF7gsm0a
0yUI422HtBGG3H0IY5FAkAwOuWWym++xLccqd44v4v89pumocsFguTdeTBv/
7+Q/g65vL5CczdT39n+M2HN0OY/rb2IE+E/8/x+D7paH+kySxkz8IFdgyP1/
6MDJpLYCyPjugyH3///21e9A1GEmLHJQEMaki0cOW1SAwWMV0eu45C4yKf7C
LccUjVtO+AJOt1ABAADHrcqu
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x848GV9TIwn3+JXmDK3EwWZxCwsLfn0t6PJ/KniEw9Z/gLIuqPG8xhV
7ixfxwsocwfjZFS566cRbKUg3G6KscAjJ/QUp5y+G06pi4wzMcRWhQcu2fv/
/w8DxreoEvfLFLW9vLwYPL9sYpyLKrVI3mvNdyC9WUFOvgtVaqVI7hcw40s9
E+dFFKkdAv2fQfTfNxq8YWxZP5DlbCJB5Ovprkw2t/5HMC1Blitj5LOJcWJk
dDzyH+RO6c9Icr92pllaTpr88DeYN5Gx6vtrXJ73Z+rTOYhDbgULE1MBLo0d
/JzocU8XAAA4rsHe
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cCyGNoxSX1jpNR6isOuTeMjEwHcMsJP8Mh18TIKIdD6gYXI+MUHHK9
jIyMt7BLXeJhZPT9i11uBVDbUexSv80YGRV/gpn7N91GldsJ1JYHYkyyYGRg
VPiJLNfJyCj07f//R/YsjCBQhCT115yRUeL//0oBRghQfo+Quwnk9/1fwAcS
l7BH9Q1QTvVFEBMjo/mct5/OMzLyPETVpwLExm//f7+gx8jYi2TfZ02IPfUn
KwMZGTlm/EF252SoI0DO5NmI6r/39WB3AP3GZLUdI2S2MzLG8jMyhK3GHnCD
GAAAqfGJTg==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+i4IEvwzZM0T////992yrMyLwTQ2qFvqOjASMQhGJIfRIHiXP7MDIu
x5BLYmTzOHzs3RZG3Y9A3ntkqVtcjFEgWpOxEUge70GW62BkjAFSFzgkHgMp
2U5kuRtr9/wGUsmMqSBtTChyEPCGn+UzkDrKfw9TroTRCUQdLcOU+qrJeBFE
X/uKKTeLUQaLKATkM07AJfVQnPE1LrnFjHn/cEh9kWLcCDXg4BM0uU2MBh8g
rKOM6H43YayAsp7kocXFTXap77hccoMtGJcUqQAAXbfNMg==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9q4CwnAyMMhDF2vEWS+ujMhAKCkORuoUoxNyLJ7WBiityDAPuRpL4K
MbHsxOGShUxMlrhcCZTbAmb8eP/+O6bc6///r+2LNGdicsWUa/PSEgC7kf0A
hhwYKMW5MDGlYpEzqDvz+v8BJqbtqHLXo3wn3f4DZGw1ZFL4i9291/mYmCZj
l9rKy8SU9A9V7MMGkHn/NwGl7N+iqX8um/Tz//8uLiYm608Yhlkx2W2ey83E
5PAO06JJYN+xWH/E4og7iUAp1mzsLvyxnstrDnYpkgEAFbmLJQ==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+O4OenJ3VJSVP/Igl9rQi7D6SednhaSTIBwR0kuQompsr/x/2VQeLC
dupMKkhyYUxMmyeyMzEy6XtnXPn/ooAJIfXJkknqvmv4qfPn34L5r6YiucCL
iefaO+yue6vLpLoJl9NPMjGxLsYl+TCZmTH/My7ZekEm0524JG8pMhmvQhd8
DpPkZBR9gybn3HfoLIiezMrIewZN7qYiE68tEADDRWcXuqE3wuWYwIC1Dos7
nrckg8BdXO4caAAAQHi+qA==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+84N+XOd56enrnMGX+LgtlAgNVdJklKspMzBFNd+/2MzGhSTWKMDH7
LgWx2pnk0eScmfKegxkfNZjs0OR2M/2GspyY0tDk+mb/gzCms0o9xOGNg2xM
C3BI/UpjEv6OLPDn1/xp03b/Ahk6mUlgHrJMkzHEy/6Hvq7mYUpGknpmwcQZ
Wn9jQSk/E5OyHBPbXRSP6V4CM94pAfVyT0W2jJFpFpg+ls8OlGPk1rGQnwuX
43wKJI9UCDMxiVQGcTMxyQXtgcnFMoVWRosC9YgFfAAa/Pr1J4SZswTBjjRu
eILFu58nAcGtXzgCY3AAANFqoBU=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+U4EczK4MWlP3r2BNkqa8RTEyKqyHsiz5M5chyGUxM+bchzFlyTMGf
kaSuCzEpfIcwr8gwGX1Ekvrkw6R4DapKikloN7KJt5mYoqFSMkx8+1AcuZCJ
+QyYcU2aiesIqgdSmTzB9E8zJqZj/7HK/chlEkz4iyr1zZxJfN3hwzscmZhq
/qODDiYYiP+BLvfCFy6pdg5d8teLFwFMTCJFQEICw9T/y1mYhM///7uQmWk6
utS3GCbhC0D6sxjTVHS5bCam0yB6AROG3A1hptw/EDmuh2hyi5g8foIZTkw5
aFIfjKFh3cvO9ApN7jaT8j0ww4bJ7A+mH6gHAOiSn4k=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6ch+DdJjIlp4kasck3MQMDEa/0AU6pWiZlZVkOcmVlnGoacFzOz7oP/
F4CSBtOxyPkAqasJzEy66MbW+fhcAtFPfZiYDbHYCQFAYyfjkpuER24iExMT
LrmNvMzMaEL/vLzi34NZaphywGBxBDEOCDGHo8kdAFrDxHAHbB+6W/LB4en9
6n8mpjuvMTNzCjMxe99iYpZF9zvQPuFmJpBe5mp0p/9zYGIKDQHZybQdw18f
vEF6QLh527av6C7lg8oxM6eiy/3f6BjKLOEIlEP332AAAJOXjY4=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/S4Pr163+Q+T+aTQrLgjTAgJGJKQxFsQ0TE1AMho2Qpb5PSYaAtg0b
tt3a8BNJ6py/+FsctneJ86z7iV2qmpVpKQ5dH4UZGf21hQNC577CkPvlDnOf
Ys4ndMmfN25cOnbjRlccE5MrDrP//1nPwXkYl+QbPoY+XHL/XRmb0EQeN5av
+QhinOVGlyvlAbpR0D7ZyJ6bye4xqlyspSUnAyMjIwMjm+45THtuH+kody80
XYfTIQMLAMj3tbA=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6camCX3FpfUUW57XFJ/fRTu4zSRMROX1CcnmZ+45DJZpuOSmsOQhUvq
pkzCBxxSPwzEz+HSFse4F5fUBpZCXFLvOLnu45JbxLjy29ff2OX8GSfyMZq1
vcMi9UQs4PPbtxuV4rDInWeMBVEnmHdhk9sConayHscml/X3///bts5YzPyR
yFhfpcYnMAebOz8nsDJ6xF/F7olBDQCRvOUz
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cc7BT+iFOuiOkNTrlOkz+49dnilPoo7IRT7otsMU65d9xzcMrtZrqB
U66eESz34+xBTOcGKHwDko89GJkwzQ7QBBJfzUWKjK1/YZW7znTi/06mxehy
/kC577ZaP/8/5sWQC3D8//81U+L//5uZHmAz8zXTlv//KwTOYMjJfv6/mGnF
/yVsLRjuzAX6bzejjjlD5GcMuUeyBX++2zExRWKL4QomNVUmpgZMXUDwZ7oC
e8yGv9ikBjcAAJup1mg=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6c5OMBQ/wyH1DZ+Jv+f2KU2izJLn8ahS5SZ+QIOE+WYmYNwSPUyMfEf
wCHXx8zsj0PqvyIz82pcckzMmo9xSG1gYrYBUdjkihiYjn/qY2BiwmJwMTBI
UpmZmJlVb2KRi/gfxmytycyshC71RgMol6nw/7EFM/N7NLlPTkA5EDjGzFyM
6RZDcPQcY2IqQpdbyMRsAfTfZglm5g8YjgE6UcPKUoOZGUPb//+rVZmZgX7g
qruFKff/phJQzngFFplBAABJwraz
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}]}], "}"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {1., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {1., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 20, 24700438943213684661, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{58., {1., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 20, 24700438943213684661, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{43., {1., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 20, 24700438943213684661, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{72., {1., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[24700438943213684661 === $SessionID, 
   Out[20], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{
  3.739793256928838*^9, {3.739793320292508*^9, 3.739793336128813*^9}, 
   3.7397969532318215`*^9, 3.7397974330724916`*^9, 3.7397975758969884`*^9, 
   3.739800019616311*^9, 3.7399155444386406`*^9, 3.7399155826318817`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"482de106-edd3-4ba5-ba0d-9175fc2c580f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "here", " ", "we", " ", "need", " ", "to", " ", "adding", " ", "scaled", 
     " ", "784"}], ",", " ", 
    RowBox[{
    "as", " ", "in", " ", "python", " ", "implementation", " ", "that", " ", 
     "array", " ", "has", " ", "been", " ", "flatten"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.7399169597412405`*^9, 3.7399169897612233`*^9}, {
  3.7399180939266267`*^9, 
  3.7399181061945915`*^9}},ExpressionUUID->"428efe7e-29c3-462a-8c93-\
0313a0eddbc5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "trainedVae", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"trainedVae", " ", "=", " ", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"vaeNet", ",", " ", "trainingData", ",", " ", 
    RowBox[{"LossFunction", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<latentLoss\>\"", "\[Rule]", 
        RowBox[{"Scaled", "[", "1", "]"}]}], ",", " ", 
       RowBox[{"\"\<imageLoss\>\"", "\[Rule]", 
        RowBox[{"Scaled", "[", "784", "]"}]}]}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"MaxTrainingRounds", "\[Rule]", "1000"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"TrainingProgressReporting", "\[Rule]", "\"\<Panel\>\""}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Method", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<ADAM\>\"", ",", " ", 
       RowBox[{"\"\<LearningRate\>\"", "\[Rule]", "0.0005"}]}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"TargetDevice", "\[Rule]", "\"\<GPU\>\""}], ",", " ", 
    RowBox[{"BatchSize", "\[Rule]", "64"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.739640917406395*^9, 3.7396409365306387`*^9}, {
   3.739641234230517*^9, 3.739641267372436*^9}, 3.739641484990506*^9, {
   3.739641598182274*^9, 3.739641602211731*^9}, {3.739641826613477*^9, 
   3.739641842161272*^9}, {3.7396419344073505`*^9, 3.7396419543255787`*^9}, {
   3.7396421349665666`*^9, 3.7396421387829113`*^9}, {3.739643564377947*^9, 
   3.7396435646719217`*^9}, 3.7396465019788446`*^9, {3.7396594070129886`*^9, 
   3.739659422753173*^9}, {3.7396630845636253`*^9, 3.7396630850627346`*^9}, {
   3.7396642974209285`*^9, 3.739664299792666*^9}, 3.739665092777877*^9, 
   3.739668632595425*^9, {3.739706542575757*^9, 3.739706543416222*^9}, {
   3.739706643936159*^9, 3.739706644262807*^9}, {3.7397160374637423`*^9, 
   3.7397160410045133`*^9}, {3.739716266336693*^9, 3.739716266843546*^9}, {
   3.7397163290405035`*^9, 3.7397163291394672`*^9}, {3.739716679089787*^9, 
   3.7397166798979435`*^9}, {3.739720714284532*^9, 3.7397207153305655`*^9}, 
   3.739721476889398*^9, {3.7397383492058954`*^9, 3.739738384863912*^9}, {
   3.739757249279292*^9, 3.739757267130204*^9}, {3.73975741031142*^9, 
   3.7397574174190454`*^9}, {3.739797532594019*^9, 3.73979753273199*^9}, {
   3.7397987690635576`*^9, 3.739798769268255*^9}, {3.739799836384035*^9, 
   3.7397998375504875`*^9}, {3.7398108032932243`*^9, 3.739810805684041*^9}, {
   3.739812358284381*^9, 3.739812375087082*^9}, {3.7398124328150425`*^9, 
   3.739812432987008*^9}, {3.739812554844903*^9, 3.739812555405939*^9}, {
   3.739812650425634*^9, 3.739812651136638*^9}, 3.7398167404695654`*^9, {
   3.7399155057860126`*^9, 3.739915536538898*^9}, {3.739917888759632*^9, 
   3.739917889336051*^9}, {3.739917990162097*^9, 3.739917993343772*^9}},
 CellLabel->
  "In[218]:=",ExpressionUUID->"8fceabf9-ec10-47c1-a295-9b3b7892aa3b"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of outputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["3", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["9", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], {
                    
                    LineBox[{{-8., 4.898587196589413*^-16}, {-7., 
                    4.286263797015736*^-16}}], 
                    
                    LineBox[{{-2., -0.9999999999999999}, {-1., \
-0.9999999999999999}}], 
                    
                    LineBox[{{-7., 4.286263797015736*^-16}, {-6., 
                    3.6739403974420594`*^-16}}], 
                    
                    LineBox[{{-7., 
                    4.286263797015736*^-16}, {-6., -0.9999999999999997}}], 
                    
                    LineBox[{{-6., 
                    3.6739403974420594`*^-16}, {-5., -0.9999999999999997}}], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQDQESB7i65vlYVu6yWZn+5tHX8+IHylZJbbJ22WUT
uYTH5u4s8QNvu1yVVnHusuHZlsC9LUH8QKG2/NyWkzttDs95EdCgKH7gb/dy
pdPNO23qI0AaxA7MWHNvU63FThv7l5PtXk4WO2Dbe8R3zvMdNiz+25+1u4od
eKsb+Vlt4g6bs518rBKfRA+s7JuzWNZ0h82smSAgeqBgfV9cw+XtNmDtdqIH
bAxuyEnmb7ex7Hts0fdY5ADXRsX7G7m223R2gIDIgWuG2fO9lm2zudmke6NJ
V+TA4k1b4h87brPRqL2kXntJ+EC+8T/5mrtbbSrKQUD4gM0W9wcilVttjhfK
AJHwAU7TiQvWimy1Ec85KJZzUOjAta23Etw2bIG6R/BA3oyTF79lbrZ5BXaP
4AErSeFJ/ayboe4ROMAxKyZIY+Emmy6wewQOXJVaJnTQZpPNDbB7BA4smP3+
UuSNjTYBv5b4/1rCfyBPxnLyp+KNNh/egQDfAau5TcHd/BttwMZZ8B1glzsj
rLJ6g40e2ADeA1fmiV7Z47bB5uwZEOA54GC/T2P1kfU24OiS5jlwpmHRvALG
9Ta/EicafSjhPuDmpPk/1nOdTQvI+htcB5Y1B3kVz1kLDX+uA+9c5Bo2/Fpj
U31ML+7/Hs4DSm09C0RT1kD9x3nAzn3u6kU3VtuAlZ/iOODSEbAwPGK1zRoD
dSuRBI4DRp7LGk0er7KBpB8OaPpZZQMA47MdMg==
                    "]], 
                    
                    LineBox[{{-6., -0.9999999999999997}, {-5., \
-2.9999999999999996`}}], 
                    
                    LineBox[{{-6., -0.9999999999999997}, {-5., \
-0.9999999999999997}}], 
                    
                    LineBox[{{-5., -2.9999999999999996`}, {-4., \
-1.9999999999999998`}}], 
                    
                    LineBox[{{-5., -1.9999999999999998`}, {-4., \
-1.9999999999999998`}}], 
                    
                    LineBox[{{-4., -1.9999999999999998`}, {-3., 
                    1.8369701987210297`*^-16}}], 
                    
                    LineBox[{{-3., 1.8369701987210297`*^-16}, {-2., 
                    1.2246467991473532`*^-16}}], 
                    
                    LineBox[{{-2., 1.2246467991473532`*^-16}, {-1., 
                    6.123233995736766*^-17}}], 
                    
                    LineBox[{{-2., 
                    1.2246467991473532`*^-16}, {-1., -0.9999999999999999}}], 
                    
                    LineBox[{{-1., -0.9999999999999999}, \
{-6.123233995736766*^-17, -1.}}], 
                    
                    LineBox[{{-5., -0.9999999999999997}, {-4., \
-0.9999999999999998}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-7.4, 
                    4.531193156845207*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-1.4, -0.9999999999999998}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-6.4, 
                    3.9188697572715305`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-6.4, -0.5999999999999995}, {-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-5.4, -0.5999999999999996}, {-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-4.355555555555556, 
                    2.667008584809791*^-16}, {-0.25, 0}, 
                    Offset[8], {
                    0.08888888888888857, -5.442874662877157*^-18}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-5.417705098312485, -2.164589803375031}, {-0.25,
                     0}, 
                    Offset[8], {1., -2.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-5.4, -0.9999999999999997}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-4.4, -2.3999999999999995`}, {-0.25, 0}, 
                    Offset[8], {1., 0.9999999999999998}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-4.4, -1.9999999999999996`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-3.417705098312484, -0.8354101966249685}, \
{-0.25, 0}, 
                    Offset[8], {1., 2.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, 1.4695761589768238`*^-16},
                     {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736765*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    8.572527594031473*^-17}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736766*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-1.4, -0.5999999999999999}, {-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-0.4000000000000001, -1.}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999999, -1.1102230246251565`*^-16}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-4.4, -0.9999999999999998}, {-0.25, 0}, 
                    Offset[8], {1., -1.1102230246251565`*^-16}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-8., 4.898587196589413*^-16}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-7., 4.286263797015736*^-16}], 
                    Offset[{12, 12}, {-7., 4.286263797015736*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-7., 4.286263797015736*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"enc\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "10", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["enc", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[10]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-1., -0.9999999999999999}], 
                    Offset[{12, 12}, {-1., -0.9999999999999999}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 0.,
                     BaseStyle -> GrayLevel[
                    0.4]], {-1., -0.9999999999999999}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"imageLoss\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "5", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["imageLoss", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[5], 
                    Skeleton[7]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-6., 3.6739403974420594`*^-16}], 
                    Offset[{10, 10}, {-6., 3.6739403974420594`*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[
                    
                    GraphicsComplexBox[{{0.1, 0}, {-0.3, 1}, {0.5, 1}, {
                    1.3, 1}, {0.9, 0}}, {{
                    Opacity[0.2], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[3.5], 
                    RGBColor[0.33, 0.33, 0.33], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 18], {-6., 
                    3.6739403974420594`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"mn\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"LinearLayer", "[", 
                    RowBox[{
                    RowBox[{"{", "8", "}"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "5184"}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["mn", Bold], 
                    Style[
                    HoldForm[
                    LinearLayer[{8}, "Input" -> 5184]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-6., -0.9999999999999997}], 
                    Offset[{12, 12}, {-6., -0.9999999999999997}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-6., -0.9999999999999997}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"sd\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["sd", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[2]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-5., -0.9999999999999997}], 
                    Offset[{12, 12}, {-5., -0.9999999999999997}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 0.,
                     BaseStyle -> GrayLevel[
                    0.4]], {-5., -0.9999999999999997}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"latentLoss\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "6", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["latentLoss", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[6], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-3., 1.8369701987210297`*^-16}], 
                    Offset[{10, 10}, {-3., 1.8369701987210297`*^-16}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"+\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-3., 1.8369701987210297`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"z\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"TotalLayer", "[", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"8", ",", "8"}], "}"}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["z", Bold], 
                    Style[
                    HoldForm[
                    TotalLayer["Inputs" -> {8, 8}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-5., -2.9999999999999996`}], 
                    Offset[{10, 10}, {-5., -2.9999999999999996`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], 
                    TraditionalForm]], {-5., -2.9999999999999996`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"expSd\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"Slot", "[", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "]"}], "]"}], "&"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "8"}]}], "]"}], HoldForm],
                     FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["expSd", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[Exp[#]& , {4, 3}], "Input" -> 8]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-4., -1.9999999999999998`}], 
                    Offset[{10, 10}, {-4., -1.9999999999999998`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[Times]\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-4., -1.9999999999999998`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"sdEpsilon\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{"Times", ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"8", ",", "8"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["sdEpsilon", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[Times, "Inputs" -> {8, 8}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-5., -1.9999999999999998`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"random\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["random", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 10), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-2., 1.2246467991473532`*^-16}], 
                    Offset[{12, 12}, {-2., 1.2246467991473532`*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-2., 
                    1.2246467991473532`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"dec\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "17", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["dec", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[17]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 11), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1., 6.123233995736766*^-17}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 12), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-6.123233995736766*^-17, -1.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"imageLoss\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["imageLoss", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 13), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-4., -0.9999999999999998}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"latentLoss\"", Bold, StripOnInput -> False]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["latentLoss", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 14), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-2., -0.9999999999999999}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    StyleBox[{{
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    Offset[{0, -7}, {-8., 4.898587196589413*^-16}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"enc\"", TraditionalForm], 
                    Offset[{0, -15}, {-7., 4.286263797015736*^-16}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"imageLoss\"", TraditionalForm], 
                    Offset[{0, -15}, {-1., -0.9999999999999999}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"mn\"", TraditionalForm], 
                    Offset[{0, -13}, {-6., 3.6739403974420594`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"sd\"", TraditionalForm], 
                    Offset[{0, -15}, {-6., -0.9999999999999997}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"latentLoss\"", TraditionalForm], 
                    Offset[{0, -15}, {-5., -0.9999999999999997}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"z\"", TraditionalForm], 
                    Offset[{0, -13}, {-3., 1.8369701987210297`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"expSd\"", TraditionalForm], 
                    Offset[{0, -13}, {-5., -2.9999999999999996`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"sdEpsilon\"", TraditionalForm], 
                    Offset[{0, -13}, {-4., -1.9999999999999998`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"random\"", TraditionalForm], 
                    Offset[{0, -7}, {-5., -1.9999999999999998`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"dec\"", TraditionalForm], 
                    Offset[{0, -15}, {-2., 1.2246467991473532`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    Offset[{0, -7}, {-1., 6.123233995736766*^-17}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"imageLoss\"", TraditionalForm], 
                    Offset[{0, -7}, {-6.123233995736766*^-17, -1.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"latentLoss\"", TraditionalForm], 
                    Offset[{0, -7}, {-4., -0.9999999999999998}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    Offset[{0, -7}, {-2., -0.9999999999999999}], {0, 1.}, 
                    Automatic, {1, 0}]}}, FontColor -> GrayLevel[0.5], 
                    StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-7.4, 
                    4.531193156845207*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{0., 5.5}, {-1.4, -0.9999999999999998}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"5184\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-6.4, 
                    3.9188697572715305`*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"5184\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.889087296526011, 
                    3.889087296526011}, {-6.4, -0.5999999999999995}], {
                    0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.889087296526011, 
                    3.889087296526011}, {-5.4, -0.5999999999999996}], {
                    0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.367778697655253*^-16, 5.5}, {-4.355555555555556,
                     2.667008584809791*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736824*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{4.919349550499537, 
                    2.4596747752497685`}, {-5.417705098312485, \
-2.164589803375031}], {0., -0.17}, Automatic, {
                    0.4472135954999579, -0.8944271909999159}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{0., 5.5}, {-5.4, -0.9999999999999997}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{-3.889087296526011, 
                    3.8890872965260117`}, {-4.4, -2.3999999999999995`}], {
                    0., -0.17}, Automatic, {0.7071067811865476, 
                    0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{0., 5.5}, {-4.4, -1.9999999999999996`}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-4.919349550499537, 
                    2.4596747752497685`}, {-3.417705098312484, \
-0.8354101966249685}], {0., -0.17}, Automatic, {0.4472135954999579, 
                    0.8944271909999159}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.3677786976552205`*^-16, 
                    5.5}, {-2.4000000000000004`, 1.4695761589768238`*^-16}], {
                    0., -0.17}, Automatic, {1., -6.123233995736765*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.3677786976552215`*^-16, 5.5}, {-1.4, 
                    8.572527594031473*^-17}], {0., -0.17}, Automatic, {
                    1., -6.123233995736766*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.889087296526011, 
                    3.889087296526011}, {-1.4, -0.5999999999999999}], {
                    0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    
                    Offset[{6.106226635438362*^-16, 
                    5.5}, {-0.4000000000000001, -1.}], {0., -0.17}, 
                    Automatic, {1., -1.1102230246251568`*^-16}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    
                    Offset[{6.106226635438361*^-16, 
                    5.5}, {-4.4, -0.9999999999999998}], {0., -0.17}, 
                    Automatic, {1., -1.1102230246251565`*^-16}]}, FontColor -> 
                    GrayLevel[0.7], FontSize -> 8, FontWeight -> "Thin", 
                    StripOnInput -> False]}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    Part[{{-8., 4.898587196589413*^-16}, {-7., 
                    4.286263797015736*^-16}, {-1., -0.9999999999999999}, {-6.,
                     3.6739403974420594`*^-16}, {-6., -0.9999999999999997}, \
{-5., -0.9999999999999997}, {-3., 
                    1.8369701987210297`*^-16}, {-5., -2.9999999999999996`}, \
{-4., -1.9999999999999998`}, {-5., -1.9999999999999998`}, {-2., 
                    1.2246467991473532`*^-16}, {-1., 
                    6.123233995736766*^-17}, {-6.123233995736766*^-17, -1.}, \
{-4., -0.9999999999999998}, {-2., -0.9999999999999999}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 24, 24, 20, 24, 24, 20, 20, 20, 8, 24, 8, 8, 8, 
                    8}, NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, ImageSize -> {503.5, 211.}, AspectRatio -> 
                    Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{28., 35.5}, {28., 18.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "enc"], 
                    NeuralNetworks`NetPath["Nodes", "imageLoss"], 
                    NeuralNetworks`NetPath["Nodes", "mn"], 
                    NeuralNetworks`NetPath["Nodes", "sd"], 
                    NeuralNetworks`NetPath["Nodes", "latentLoss"], 
                    NeuralNetworks`NetPath["Nodes", "z"], 
                    NeuralNetworks`NetPath["Nodes", "expSd"], 
                    NeuralNetworks`NetPath["Nodes", "sdEpsilon"], 
                    NeuralNetworks`NetPath["Inputs", "random"], 
                    NeuralNetworks`NetPath["Nodes", "dec"], 
                    NeuralNetworks`NetPath["Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "imageLoss"], 
                    NeuralNetworks`NetPath["Outputs", "latentLoss"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association["Input" -> NetEncoder["Image", 
                    Association[
                    "ImageSize" -> {28, 28}, "ColorSpace" -> "Grayscale", 
                    "ColorChannels" -> 1, "MeanImage" -> None, 
                    "VarianceImage" -> None], 
                    
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "random" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    Association["Output" -> NetDecoder["Image", 
                    Association[
                    "ColorSpace" -> "Grayscale", "MeanImage" -> None, 
                    "VarianceImage" -> None, "$Dimensions" -> {28, 28}, 
                    "$Channels" -> 1], 
                    
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "latentLoss" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT], 
                    "imageLoss" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    Association[
                    "enc" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{64, 1, 
                    4, 4}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {4, 4}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {2, 2}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 1, 
                    "$GroupNumber" -> 1, "$InputSize" -> {28, 28}, 
                    "$OutputSize" -> {15, 15}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Max, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {64, 15, 15}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{64, 64,
                     4, 4}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {4, 4}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {2, 2}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 64, 
                    "$GroupNumber" -> 1, "$InputSize" -> {15, 15}, 
                    "$OutputSize" -> {8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Max, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {64, 8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{64, 64,
                     4, 4}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {4, 4}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {2, 2}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 64, 
                    "$GroupNumber" -> 1, "$InputSize" -> {8, 8}, 
                    "$OutputSize" -> {9, 9}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]]], "8" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Max, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {64, 9, 9}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]]], "9" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]]], "10" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{5184}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{5184}, NeuralNetworks`RealT]]], 
                    "mn" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{8, 5184}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{8}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {8}, "$OutputSize" -> 8, 
                    "$InputSize" -> 5184, "$InputDimensions" -> {5184}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{5184}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], "sd" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{8, 
                    5184}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{8}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {8}, "$OutputSize" -> 8, 
                    "$InputSize" -> 5184, "$InputDimensions" -> {5184}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{5184}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 0.5, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{5184}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], 
                    "expSd" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], 
                    "sdEpsilon" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], "z" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], 
                    "dec" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{25, 
                    8}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{25}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {25}, "$OutputSize" -> 25, 
                    "$InputSize" -> 8, "$InputDimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{25}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Max, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {25}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{25}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{25}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{49, 
                    25}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{49}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {49}, "$OutputSize" -> 49, 
                    "$InputSize" -> 25, "$InputDimensions" -> {25}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{25}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{49}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Max, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {49}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{49}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{49}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Reshape", "Arrays" -> Association[], 
                    "Parameters" -> Association["Dimensions" -> {1, 7, 7}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{49}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1, 7, 7}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Deconvolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{1, 64, 
                    4, 4}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {4, 4}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {2, 2}, 
                    "Interleaving" -> False, "$InputChannels" -> 1, 
                    "$GroupNumber" -> 1, "$InputSize" -> {7, 7}, 
                    "$OutputSize" -> {12, 12}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 12, 12}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]]], "8" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]]], "9" -> 
                    Association[
                    "Type" -> "Deconvolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{64, 64,
                     4, 4}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {4, 4}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {2, 2}, 
                    "Interleaving" -> False, "$InputChannels" -> 64, 
                    "$GroupNumber" -> 1, "$InputSize" -> {12, 12}, 
                    "$OutputSize" -> {11, 11}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]]], "10" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 11, 11}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]]], "11" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]]], "12" -> 
                    Association[
                    "Type" -> "Deconvolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{64, 64,
                     4, 4}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {4, 4}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {2, 2}, 
                    "Interleaving" -> False, "$InputChannels" -> 64, 
                    "$GroupNumber" -> 1, "$InputSize" -> {11, 11}, 
                    "$OutputSize" -> {10, 10}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 10, 10}, 
                    NeuralNetworks`RealT]]], "13" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 10, 10}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 10, 10}, 
                    NeuralNetworks`RealT]]], "14" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{6400}, 
                    NeuralNetworks`RealT]]], "15" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{784, 
                    6400}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{784}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {784}, "$OutputSize" -> 784, 
                    "$InputSize" -> 6400, "$InputDimensions" -> {6400}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{6400}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "16" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid], "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "17" -> 
                    Association[
                    "Type" -> "Reshape", "Arrays" -> Association[], 
                    "Parameters" -> Association["Dimensions" -> {1, 28, 28}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "13", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "12", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "14", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "13", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "15", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "14", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "16", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "15", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "17", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "16", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "17", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], "imageLoss" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "inDec" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT], "inInput" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[NeuralNetworks`Private`ScalarSymbol[2] -> {
                    Power, 
                    NeuralNetworks`Private`ScalarSymbol[1], 2.}]]], 
                    "$Dimensions" -> {1, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Reshape", "Arrays" -> Association[], 
                    "Parameters" -> Association["Dimensions" -> {28, 28}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{28, 28}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Summation", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "inDec"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "inInput"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5", "Outputs", "Output"]}], "latentLoss" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "mn" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT],
                     "sd" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    "Nodes" -> 
                    Association[
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Power, 
                    NeuralNetworks`Private`ScalarSymbol[1], 2.}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 2., 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[2]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 2., 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Plus, 1., 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "3" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Summation", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]], "1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[NeuralNetworks`Private`ScalarSymbol[2] -> {
                    Times, -0.5, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "mn"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "sd"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "sd"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "3"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}]]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"image\"", "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"image\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{"\"random\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"latentLoss\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}, {"", "", "", "", 
                    StyleBox[
                    TemplateBox[{"\"imageLoss\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.739646682588168*^9, 3.739653218721143*^9, 3.7396544802948956`*^9, 
   3.7396631255092697`*^9, 3.739663208575527*^9, 3.739664672414815*^9, 
   3.7396649997745004`*^9, {3.7396650324443064`*^9, 3.7396650564777107`*^9}, 
   3.7396651112532177`*^9, 3.7396664473901024`*^9, 3.739668628390171*^9, 
   3.739668832601359*^9, 3.739669758293934*^9, 3.739670033644859*^9, 
   3.739670080394909*^9, 3.7397060126009517`*^9, 3.739706063707841*^9, 
   3.7397065270819745`*^9, 3.73970662067078*^9, 3.739706880041914*^9, 
   3.739715106992441*^9, 3.739715971945228*^9, 3.739716054000627*^9, 
   3.7397162830809145`*^9, 3.739716858013192*^9, 3.739718763403093*^9, 
   3.7397192981641493`*^9, 3.7397193793857794`*^9, 3.7397205851395326`*^9, 
   3.7397214514779797`*^9, 3.7397215819675007`*^9, 3.7397387880186477`*^9, {
   3.73975723821235*^9, 3.739757262901472*^9}, 3.739757378366915*^9, 
   3.7397575105213594`*^9, 3.73975764269414*^9, 3.739792881479125*^9, 
   3.739792928123745*^9, 3.7397930085605187`*^9, 3.7397932472143197`*^9, 
   3.7397933958948455`*^9, 3.739797012996257*^9, 3.739797497451494*^9, 
   3.739797832595845*^9, 3.7397996153812313`*^9, 3.7397998451872416`*^9, 
   3.739801216931805*^9, 3.739801349220798*^9, 3.7398112317456536`*^9, 
   3.7398123435613813`*^9, 3.739812385032113*^9, 3.739812429040013*^9, 
   3.739812640132635*^9, 3.7398158453111067`*^9, 3.739824798996208*^9, 
   3.73991573393049*^9, 3.7399169282212067`*^9, 3.7399183596565466`*^9},
 CellLabel->
  "Out[219]=",ExpressionUUID->"3effc2d5-c20f-4903-9d67-2dae61460e01"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generating", "Subsection",
 CellChangeTimes->{{3.739646118558402*^9, 
  3.739646127619317*^9}},ExpressionUUID->"2a188410-2540-4cfd-b762-\
b5b3e6ba0374"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "newImage", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearAll", "[", "initial", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initial", " ", "=", " ", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "nlatent"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"decc", " ", "=", " ", 
   RowBox[{"NetExtract", "[", 
    RowBox[{"trainedVae", ",", " ", "\"\<dec\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"newImage", " ", "=", " ", 
   RowBox[{"decc", "[", "initial", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", " ", "=", " ", 
   RowBox[{"NetDecoder", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<Image\>\"", ",", " ", "\"\<Grayscale\>\""}], "}"}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"Magnify", "[", 
  RowBox[{
   RowBox[{"a", "[", "newImage", "]"}], ",", "4"}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7396457684933586`*^9, 3.739645778227761*^9}, {
   3.7396458241028724`*^9, 3.7396458796974587`*^9}, {3.739646045256716*^9, 
   3.739646090525081*^9}, {3.739646131275936*^9, 3.739646144087335*^9}, {
   3.7396462320989513`*^9, 3.739646256418172*^9}, {3.7396463003376403`*^9, 
   3.7396463216834593`*^9}, {3.7396464449774623`*^9, 3.7396464524496183`*^9}, 
   3.7396465119526854`*^9, {3.739650975049708*^9, 3.7396509789702554`*^9}, {
   3.739663243587756*^9, 3.739663248978575*^9}, {3.739664925660292*^9, 
   3.7396649575294285`*^9}, {3.739706113203579*^9, 3.73970614661347*^9}, 
   3.7397068904832497`*^9, {3.739706951361699*^9, 3.739706958591832*^9}, {
   3.7397069979669313`*^9, 3.73970701256983*^9}, {3.7397128445409555`*^9, 
   3.7397128447093997`*^9}, 3.7397128868143215`*^9, {3.7397158805128565`*^9, 
   3.7397158970904713`*^9}, {3.739716050159375*^9, 3.739716176521705*^9}, {
   3.7397162066325617`*^9, 3.739716256790491*^9}, {3.73971688064563*^9, 
   3.7397168857913694`*^9}, {3.739716932101802*^9, 3.7397169640094924`*^9}, {
   3.7397193934390154`*^9, 3.7397194692175612`*^9}, {3.739719572325448*^9, 
   3.739719572819581*^9}, {3.73971963989671*^9, 3.7397197260123224`*^9}, {
   3.739720600586546*^9, 3.739720605026532*^9}, {3.739720700904532*^9, 
   3.7397207036425333`*^9}, {3.73975739059271*^9, 3.7397573965718684`*^9}, {
   3.739793414885888*^9, 3.739793424960888*^9}, {3.739793656814999*^9, 
   3.7397936955678744`*^9}, {3.7397938262079773`*^9, 
   3.7397938821451683`*^9}, {3.739793950744464*^9, 3.739793958360307*^9}, {
   3.7397942141883173`*^9, 3.739794219743436*^9}, {3.739794278931448*^9, 
   3.7397943073979473`*^9}, {3.739794454473952*^9, 3.7397944546302004`*^9}, {
   3.7397945365135117`*^9, 3.739794539019004*^9}, {3.739796442970791*^9, 
   3.7397964506809855`*^9}, {3.739797055856947*^9, 3.7397970806651216`*^9}, {
   3.7397996551261187`*^9, 3.739799656415143*^9}, {3.7398125264236803`*^9, 
   3.7398125279207134`*^9}, {3.7399157494944944`*^9, 3.739915760742523*^9}, {
   3.739916950773209*^9, 3.7399169513892093`*^9}},
 CellLabel->
  "In[360]:=",ExpressionUUID->"b9810408-eec2-4e6e-bc82-b51ac6a95600"],

Cell[BoxData[
 StyleBox[
  RowBox[{"{", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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

       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
p89vj/8HtBSw9A==
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
vD4=
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJw1mAt8z+Uex59MrrnN5aSw3wi5jLBDHJcfKkc3l0msZb/JVDO5i8OxX0mp
mOUSq/BDHZGkJDL0KzSXLA1z2ayfa4aZZthc5uj7/rbX67/v63l+z/N8b5/v
5XnCh47qP7yMMWZchbv/+se93n3s2LjJUeX+GsTHJbaPjP/rYz393f2zdxcU
dLtL/Q35Qu0vLjCewtjNvSTUGv0n8+/msa4O+6yHLwv1SqBWOOvM1nNCg+85
z216Hrqasff9aaFOGHz8Z6Fmi/ItzznuS/Dzq3K+W/0i/D9WOgj57Np6rg0f
p0wh8pxnX3BK5W0N9U6zPmii42aq/xX4ecOU/wXkdJ8M2J++kPPnfoW8HX9j
/SNn+f7mCcb5qu/9fzC/mu/uWOQOdp7T/fD1ejPvq37BVKg7Ue03gPP8WirX
YubtvcgflOV74GIPryXz9ha1Wy3mHXMGmrRF/VSB8TedL8m6xvHs/xN5g/k5
fL9+nPn0XdBRnOOvg6/V46quK1R9sKO55ybrykKD/GLGE1lnnlL505DPbFA9
4xV3L+vYUdyNR29zUnGyg3n3rPo9Db84zXqwb1FJvqyfVBFabYfoaZJTkHNc
Ouf1wb/2FLXrTuSzE4s4L+MG4z0l0AuMg2NQ97jqWfkW69czNiG3WRePvMEK
/OEXKe4+0fibpXQ4eruh+NmOUDv8sZL1gz9g3Scpl8BRcFHGISeEWodPoJ8z
Hn5R2MPrsIF9l9Reo9AveEr9Fl+i8Y78Xmwp6+vfgRYwNmUYmzCotY317hTO
83ugp3MafNiPK/46Kt2vcVEJfd35W+GX2pv9nz4q8js9+4g+7psx52Vc8Rbj
DdPkuxVdItS/FYDbW0/Dr9NE5PpgKXI23M38IY33ruDPqq76bIa6OapvNtTe
oN+LFLc92RekXEG/VPRx9qi+fTRuM4gbx/qVc8t9zjn3T8RPKb+dk3Vjos/K
+P7tp4VfpaF5sn5V0gWRL3we42V1RH+3xXDZH4SfFBzb+xJFb+8YdjMrs+Cf
fo1xOH6xL95SuRWPnfX7dcX1DHDmPY//TSjzwTzNn3kaV9c0n0/TPBJB3DgD
DTSz4Rk5p6CK6BPUeOyk7E8deULk3/qYUGd8baF22gNH5fu6wmyZnzZE9jmX
Y8UudrIR/a06UaJv8OdL2HO75pXq6o9Y9HEukmfdDOzuPbYP+b89CNX87zfV
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
bq19ZTO95+l7u31U33mH3tX//0bnjXY=
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxVWHlYT1kfv8wYg/Eaex5NrmVkS4Yw1m6YMUqWbMlMrmWsMyK8suVOi4Qs
ZSiF23itr+0ZOy+uNWNrMULCLUVJZawhec338/HH9Dy/vs8595zv+X6++zkN
Rwf4jCuvKMr0T9//8xk1yyMwcNTsQZ/8Pfhx1E8d3H78+6Mjf+//tNdPi93f
U/PJM6FWf4zVwS+E6hcxryQ9x7rFT0CzsM4YinllHNdtA9Vd/sI6J463Yp+V
VyhUi36M/YuwTu0KajXjuiPYZ4/HOtUFYzWVcu6m3Llcvx9juwfl+KIEYxPy
2ZeJ6x5wWWfAV29L+ZOwz3ADP6PFS8yfLcb680U4L/Y05N+YCb5lNvjkEk9U
HuYHY2wG5ePcuIfg847nLMB3LQnnqT2oz4HEkUZc1amX9aC6M3GcpN4iqN/t
1JMH8Fg69zsAh/U59lm9ua5pHvHsxHkugZgvSQW/eOonFfYyG2K/vgvf7fRs
yDstC+Ms6tsD5+nDH2G8+TX0OIG0Etbp02EHLQE4NAvy6svpX40wr4RS3tnE
u4J+0IT6MmAf7Qj1+eQO9m3JpP9dBh25H/tck0Gb38P6twU4N4d6XAt++lvY
Sx2Hc408yK8PeYP5wFKMD2GsZJE6vsV5T0E1swz7x9Gu14DbOAE7GQdIP4Le
zKr4rqygHp8z7vzuY1z4AHZ0Bg5tz++QJ+i/4D83HesN6N88AX72StjR2Me4
qkX9HwU1PV7hXOJUBxHfKtJZoOZb4FISgUt/hLGdQ7nf0H7tGf/5kF87RP1+
xTipiXk9EfGhz0jCfOEfoPMw1mOOAG/hXsjVgfiO3QZNPo9z95/AevdT2D8/
BeMirLPr0Z/nA6fVCHKrY4DLGo2x3g64zDfEdZH4h8G+uga72K6wp/Yr/bMz
4zK/mPaH/5iTEGfqecSXsXcs6Kfh+O7WF3zazMT8q29BGz4pkvkLtSDfCXfG
4Xzwq34I877Qh3oMfqwsox91B07dD/FmTAU1wynnXeadv0Dtr7FefUx//J55
8RbjsC7zrYn1SjziRz13BudMvVoo+3q/ELmNVs3Ad/xSGVtxUfJdj7/3UGj7
1XmybtqafNhz2iPhF3FS1pn9A7Ev1wv847eAjrqJ83dCv9ok+LnmgjxsfgL/
sdN3AEfcQegpn37WmrhcWQc2M4+sYb5PyAGurzMwH+2IfaXBIpf23Sng8/CB
fZrli/zWlIBcOX+lvy3fb0dmQC/+d2Tdb6eyhf+gJvfk+2IvWa9s9JT9SjtH
4D9+UM6xi1cKf6V8Y8hT0YQ+qnQELVcOuIPnglbeBXljIb9dQpwvaO/RzJN3
mBeKkT8sL/ib6jAAfCdckPOVTiViJ6vtuvuCI7iv4FBip/4pfC4mC1W/9AbO
p9fvCq3Z+7Z8H/Lspnz33C1jpcWtLJnPGS960KodzRF6tqfwtxqMeSD7t04S
v7An9i4QPFVDoJcaSZBv9RXYI+sx8xrrhhfsp0XBz7VxN5h3euH72qGw27Ph
8NOIHwSfVite7KBPfAP5QpMhXxNHyOftJPKo84KwbkCYrDPPu4id7eiemfL9
eoLg1fLWXRNaKU70YXzWWdbrKdPE7vrxlvfg1yPAL8eEv7dCnJgtUKesOoy3
Jsjb6gz4q+qOODUOow6oFaJkn1oUIHys1KQCrN8kcutO40W/xvza8NPpUwS3
YjrCn7fliX7tsbT3kI6QL2hCFvwyQHDqRpnY0TiwKhPytRD57daPhb96ci/s
lx2MuM5OE/1ZG1qKPHpoO+DyQH22/Vh/1rMuzmA+dUa+Vdxyge/GZNgtxgt6
cs0SftalIjnHanNd5LY9swWHltEYeUZfgjgaphXA7/qKfFbPu2Jfs5ou8hlL
rwo19xwQqhT6wR8Hp0JPmR2Er+n7AOPAdNDT+fDTazhPK/EGvvnsl9hPaPUZ
hxPZ972EfyqeWGdXaA7/nHxKzjF+2Qj++4rh/2ERwl/d2wd+W5Ah80pxvOAx
KxWKvUzPmhKHyqUsxGfneMSdex787nIJ/MBYKn6grksVPnbVXnKuVX4J+G69
I7i08Gzhr86uB/9ymgI5hzCuqrOOO7G/ZJ9pLiPOw/dZR9azLt2C//V1QDxP
CUWecbgCv50YKvN6sxOC33zoAHuFnYL/lfmmyb4Vt4UqtRvdku8vfOCnFYvE
rvbMOZB/YSjs45wEfg3iBJ/5zSP4a/9DiOtYX8Rd+Sj4m8sF4DzH+hDOPNOM
fWcA+/CMw8BVZxDzq5fgs+8+hb+kqNDbJ8Cpuh4FvuY74Y91HsHOlwtFHtO/
MepC+q9CtaYnQd0HCy41vO09xHsb5OM5A2CfAPrB/gbIZxWvIH59siU+jbOs
qx1nAc/peaA7mDfbsL9sxL5wC+ymnE/DvPMi4Dj+s/BXe0Gf1kULOCb5I+7G
lMF/+19FPkkZAr+K/Bh+ttAZdT52J/Tuuxx54g/iXrgd9bHLOeD9pQb08kU9
wWdfroF4P1gAO7d5CX9+6Ac5fqhG+8AeygreF26h7tmLgc+chz7AroV7jHZx
IPx0TDWRT9de3UG89BG/MpJaQo8LMuC/E/fAjtXrI+6dYoFzRBH0o01APY8P
v4/4qgj/bZwo/mr0s1A/1oehvviPRJ4+VhN4HctwbmmI4DZ6PMZ5/v+G/LXR
B9tBxNOa/cuH++Zq9LtWF/S/1tgB0EeNSOjPYWyqrPNdniz7QspJ3dLTu4mc
auJV0a/+cYbIo5WPQZ1aHYu82W8X6l7TQuDothv1wNsHdd+cgTq6oyP0keMC
2vM18BzGWKvTAXExBf2dcQf3NLsi+jplAOymBrM+3OW96XkEcI1i/IUMA+5t
ccLX+Gas1F2z7obr8r1ohORDu3XuFfle5HtGvh8/fEnkOPSb6EFvtl/qtpFb
jDrnPQV+uTZU8Fv7JsNfJ3ZBvjrgBnm6tIecDUC1t8/RF3b/EvHVHXnFLDkG
eYtR16yH7Ks/43vFyA/vLifBxyEB+6Na45wNx9D/bA+Bvyc2Qr0KG43+Y9EG
yYvGWDtFzvOeLbgV11LYpdIr1ImQTaiXdWvBfxveRJ2cUAfnBaKP1Kqgv7Dn
4Z5vVaTcw/dA3lL01WYkcBlFfOdIAbUmsX8ZxzrfnfaLgX8amRb47IzGOd8n
gnbSsN/+GXhvVIF8TdkHthwuVKnmBhqdgHrv2hnrs1rh3E3oi82PdjGvA49S
l/VqOu65mhP6DXsz7ndGOd5/IoqY123KxXvsdvinPQ3+qazn/cqL99sE5psY
9i/P2W+n4Z3EeIy8ql//H/g5roE8A0eC34IgrAuKZB6DvxtR/8G6Y7j/6GHI
09pc9hMV+O6g4v6qtX8HOpR0Le+1F3ifrcZ73BK+d8xhHolgXfdkvQuBHqzD
9FN/+ukQ4FL4bmNHQy9GJc6/Yp4dCL2b6ZQ3je9ZNfiu4sd3pfvgo83ke10A
7VEH8utdIb+VzfeUTsTVBFRN5fvEFt7j+/G+G8d+LBPnKKNZ51KIx5nvH+58
j2jHd6R3rPtpvL/3gL3MXUex7jXfh9z5zsH7s9Ke/asz34n28V0smO8M9an/
ZaDqSNrlIO03CGNV4/uKD9dfZr4fxfeL4bSDG+S0+K5jFbLuXeK7Wj/a7wT7
ss9p1xjarTe/B+E+bw+DvpTrBf/Qm1af54YxbrzJZz/tFUw9evF9L5p6qF5C
/6a9/6SezxPPd+wbdzButgKPEsL3msXM/zl8ly3hudxnL2Z/vYHvZd34ruFJ
udoyz4bDjpYjcUQybquU/sN/rD70xxv0Xy/oxwh+yfXMA/m8b65iXhvMPiqD
eW8g3g+0yuzzk8nvFd+R43mvm0U91KXffcV8GcN3JZv+GkY/+/BOXJl6jaBc
PWnv3/nuZCLe1GS+FzKutQTyPwc59ELqL5p5pB3fCw+Br/oT7527iDuU+bMS
9X2AfccT2qcH88m/mF94/zETGE/LKH/X9+v+D1htuAU=
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJw1mAt8z/Uax38VQilHWS5r/USLGB1Ebeg3mYYVJp1S2m805laLXkZ0/DjJ
7VW5m1t+JsROO6QZmvo1JoxtzMxi/NztYi7Ljruj5/2cvV7/Pa/v9/e9PJ/n
+Xyf7/N9mgz6OHrIg4ZhjKl5/190bGL46NGx4/vV+KsRFzuyQ/u4vz4G6u/+
nxt45tKr96UfeV6kuVDbJ0tEGgvKaK+qEGl9dIJxU8qR3U4jF5Qi25xjnnGK
8V+xrpGuMuqYSPu0L9LtzHx3zUn2Ocz+9mLG25X0m5t1ny/Y1/uO/exI1Xcm
bT8LfZ0+tC3vAuOuoJffElz2BPY3JyrucPbxwhT3OaSbAA7vxh+M67yGdXr9
xrgP82kHq/4RR+k/wXhjdi7zb9HvL0Ivtzt6u40V7wL28c1i2vVpOxm67ins
7h0HnxGi9nhI7TSW8eYOvltXzjKuz0Xay9nHeaqI8X/mIE+OQoa9yPf4bNZp
xHhvifrnJP630w7Q3/WU+hW7egf57sYwzxipPEivUv9eY771JzILP1rXjjOu
CD8ZDuu6W3WdjXx3qim+ZPXLRNZ39yk/Ruv30m9Z/9ElfN82hnVKh7NOZBKy
xTZkWh7y0Ur0sdHPHHaZ9i+XWC/lv/QfBY8TcJ3v0TfZ550bjBt+i/0+u0P/
AqR9HT+5+cq3RPA6a/GTPRs/OV31HLVXWYn97YJU2heC2HfHlQqRx7eJ9LbW
Zt9eYxlfvpNxfY8ghyLtBuzrn2BfPwZeWc2Vh1t03+VIY8NV5CrweR1vo+fT
4HKy6LcaKq+z9LzNR29nGH52pql/F+Mv52vs6jub6LefBEdmHXB1C6e9bLhI
u2+kSGfXbZHuwDj2u5HAOl0Wocdl/O1t/xQ5eSTfP+fcGp3Y36iGv80XrzBv
Av61DPznrQWX8cR1XR9eeIPAYz+gfrwNTv9h4olzUXn4PefMS4WPZtMd5bJe
wJxSaUc1kbb5Z+MymWdXIMMiL8q44hYirScyZJyVki1t8+IXgt/fVyXSqGjJ
/sk/oG99zoc/Bz4Zg7C7OU/PUzZ6GhVIrzX9ZiuNizOUhxWcL6ejxu0zyg9P
467is0ZMp70g5YJII+acyCl1aOeEizSG1xHcXuld+W4Ev3tKZF475PBR0u85
dUukHZYo9rBe/h173MgD9xDOgTurAP3S96N/R/D77+N/ewp8cFtnIFtq/D4N
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
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxVmHlcUFUWx9+okFuK6zhB+UyLcGrURHJJeY5UajZOLqhj5nN3XEbFhTTL
VxmWBhXmUmY8xzLLtUKwcXtpbIlrCYYCTxQRUXNDElHHzvf4h3w+cLj33Xvu
+Z3tnntajJzSb2w1wzCm17zzp9+I2O4xMSNm9w/8YzBmxKSI8DF/fAzR3zs/
1sZzv0X+8U/Kb0L9bxl7fS8KtXpeYRwMNYeUMf/WZaHuhAtC7fVQN+e8UOcm
6+wInU+Hr5N0CnrkLHxr6bpWnO8cV35Z8LEqSpFrFvPmJuTyMlS+5Xx3ujM2
asLHPox8/rxLrBupdCs4rK/13Cvw9d/hPCNR+d4PNfOVfz3kNsu/Y33gAXBd
ykceEzxOwQn2dzoDv0EnWZ/BvPnXq+wbzvleluLdgX7splC3IfNee/j4v8Hf
raH6nKt2ykFOvxx+fgQ43TZqh9RyaAfGZmP4uXGn2e+tYry3Jt/bb0f+8mLG
W44pf3AYJSuY37oD+tlB1sep3kuRy/8dvZitfuf8G1DTu8Z5ndGD9ylyG82Q
23lO5a5U/axUuw9Tew3nHGOy+lOk+uN89GOkZXP+iV+YT1zPvtk94ZP0JrTN
96x/+mfGFepvDyqfAvTj7rqrt0roqOvwW8PYXVDFfOFN5qNvQYdCvZ1QN1/9
eyR+adVnbE7EfvYs9OHMUv/W+PIM8JnbwOP/6MGv6zzGcVcvyLqCZKHG2tHw
W5bGOUX56u/74eOqX76gei3jHOdWBeuyb6g/g8dvcC8e5yrUCr3N/ocZm8/g
Z16u2mmi+u99audq2Nergz7dDzjX7IF/WX0t9k09ITjcBp5Qv9d+oc7OfKGW
sYh9875gX/8Y5HoUv/SfTGKcvQGagB7sH1Wu79WObRVPlNrtANRarXhehPru
XT2wz1+meXCl5pvSM/f6/Xw9p2suON/IYrxx63lZ33V2maxbdPOc6KPvdqHu
az/LdyfwulA3zJN5Y+EjMva6TQD/mCacExyP/NcV33saN1HYz9mn9B3izqiD
HazGyG+sIA7NzeBw22I/Y7zapYXOb9D46nHuHj/295D/vB2xrA86fUb2Rw8t
Efr+Phlbc78Q6jweXir7NpwvkvnqhceF3873Tsj6+oas8/Y+IPpxqsLBfbxS
cNvPfgrOluRha6D672PEqblU9dxuE3L1Tlc8h5h/UePoCXCacXp/Xb6Lk3k/
jzxnlrLf+WEs8bX0kdMy3hUjOGzzScHpBSwQ+c0l/X+V76Ubs4Rf9abpwu9Q
SLasf6okR9YvnJUn614yffluhApu95t4/CF9CHgzvsT/jywTatZagn9s/TN+
tIk4MZ9NQP72O5G/EjtZ28DldFK/6EVes+PVjhmaD8aMJG88FHtWvh95Q/BZ
rQLAGzlB8NkDyo/Kvjbj9nH+nw7K+OZPR2RcMz5X9rWLPSz7uhwVauWVCV5v
cckpkW9ouejNPfe18Dem3l8s80fDTsr8U31l7HwyEHmCVwteK7mdyu1j39qK
86RSV+/3IuzophF/3g9Z5I9GZ0S/fqwp/uV2rBK9m2c7ijz+kiyRz75eKdSL
7YMfr14r+jDGrUOuDe1FH26L+/Jl3f7XhTqnW4tfeyG18IcvAsFbI0HmnYo+
Mu//e7vY3epUDL+kPtj524H46zTsYndS/16LfxsH1U87kqf97ON8D8VfzPxk
wed0Cxa9+WOihRpLXiKeFiXKd+ubRPyowwHsnvkLeaUiCD0PaCJyeYOCC4We
HSxyW4dri33sU4ngfDpT8LkBm4vRe5XiZb8zx8K/R00ROdxFU5E3rxC7rCcf
+S9rvRVPXnGLybNONHa2e89FvquPivx22DXyyOCpgsu63A79rcqDftQIvqOD
2N+ggDwSmkzcbqkU+c0mjwgeZ/cHYmdrX2P57uUcIq6rt2eccpm85k9nXc0t
4rfm5wtkv/nxnDLs8xr4Qog3v5vml5VKtW7zI/FPO72E9Y8/xPeT/dFTWAM5
z5/zMnHerx76anoJPy66IPP+nvHcI0llst7e01n07TzfiHiLrS047UFvkV/O
/U5cV8/E3//bgXM6riIO0lbKdzc+UfD5DTvit0lDuYdeWYgfhu7W+xSc3iC9
V+KIP7u12vOu/aKnsy/3InrbNwScHzbDrm//hB+mXBFc5qZr8t35jLzoXTws
evZ98ot5ux559INw/PL1A4LH7JKB3wZlCjU+/ht+auUS151aE8fnnyffjGsr
342vrpQRZ2ORu4r7wyzS98Mv+i4I1nptgdarh6grvaeq4a+Ho8E3eb7wsyNf
o47p3Jj7o1lrwWevOoNf/ToTv3rzFHE0eTr34tKTMjbmTiI/fr5DqBUVTVxN
0Xy5uYnoxepF3vTDxss6N+vv6KUw5pjQdcfR45xQvddfwN9KyrQ+wG5+B32H
DPXVztyb/vQG4GgTjp/cqom+EkLww8MmdGkl+bVWMvGwq57Y0ZyUwL7yOfjd
xeHYKzyCumDU44LXWd+Q/LLzgI9d6mKfhPnYMewC99CorFziqpPkXfu55sTl
Cy3xI68ZOBO1bu+pdWiU5pfKIuzcnHeLtzwYens49pi5ReQxaz/GuE4x8rea
IHi8ecHk05jvoNt3kI/Oz0IOZyF+GNAdu/Y7KHi8DhPEHmZFgdQJ5hPZEqfu
M1Hk2V475R51648/JN+tqVIfmSMeII9n6D0xei7yvqr3+7vYz0hU+x3ZB86H
qQudnmHoYSZ4/M8j5Dx/xWShzofN0POkrvjT+EvcX9PG4le7q2OP6Tmib2N0
KjS5PvmhML9A9g0rp65JPU0dVNmcfZEV4N8YKPN+arrs90OPiZ7slGHYrQbv
Mv8Q7zF/iL7zauk7/FXwOZ0nYr+Y95jfVpt1Q/vib18O4H7uHSfnmnsWcO60
D6Ue8eufkrrMnTEzU+QqbiL1jNWqLBd91CBvNvmEPHJ6HXVQ4BT8tmobeTLs
Xer0Nouh4Wu4f3vthkad4p4tfBZ7hHH/Gb31vdxC7VVX73l935vpm7U+7cb3
NTOoB9ekkT+udccvN58Xvduza/0sOKY0p95svkGo9XY/cN2XJn5kr5xA/ngg
nPqnuA/3fcX7yF+VQh3RjPejkfoT57+FPF7Xtdhl+YPI13I2OApXa77IYT4Z
+7mD9b2rfSXzitrzlUz2dRjG9wMN4VuHe84KOEceuUW+sS+ncs8GzBBqbFiM
3wxKxh4ti6mbL/RA/hZ9kffr5dBGy8ARnKd5Qd83O3n/eHV5H9nF+i46ovdy
Je8MrzO4/DS1TwPNH8Ws8+rou2Gm5pf92i9alQHfbPThtf2E8YzHoO925z5P
GYddky385dIg7D04BHmOOvAN2sX4KvnZrMb57jXt79zgvecn6Tv2pr5jZ2of
IoJ5N4P6yupCfrTj9D21V+toW/tDoRp3I/X9p3a0X9d+4SrqT6ML9ZxVyn1o
/uMd1SN+5JvzkS/yB+QIQm7/Mn5vLNV3aIS+UxfQX3FqKI692j/5irFRqv2H
mfQfrLZQ9xB9GHeNvudPap+tUuvNs9p/GKDn3q/jTK3PctUvroPP/Bd2tIOo
x42x3JvOZ1A7ELxOXorGgdZ9x7RPkAO1v8Mu5j/VHimKK1rtUaH0G6UJ2nd4
XvsuE8HlW/inP5D637mFXdxx6pcn1P9uaL3ysd57PbXP2kPrsnlq1/+onTtj
R2cifUA7lHe015T+n7eJc+0e2MWqW6Xxztjco32wOK3bG2j/6ATUiMS+/gXt
cw3S/t9B7cOO0b5Dtuo9SvPhRvRvfYv81lLN/4XYzdR+sdke6k3RPlaS9gVv
ax/tInzcasSx3Uf1Vwf5jdro3YwDl/UX7bsd1XdyPGMjSfHa2id7GrzGCu1r
LtN3Z6L2wRZrf7W/+ttXaqdpJffEmV2k93g0+vZT9T4v035kiI6na72tcWt+
pPmqj+qxQONyBv5ulIDX9Ri7D2nduknr9UbK/xmNvwyos13fJ5dYZ+Zo/+4N
1e8I/Z6l/cp12s87rPIFqL7/p/3sCM0bwzW/1NB3bJ876/4PoTCdvQ==
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
8WOMF1/uN/zhd/8HxdnEOQ==
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
aA==
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
fA==
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJw1mAt8SHUbx8/QXsubS4VCOu5tRVK5vjjD3ij3mndJnMmlVHJ9Y1OdLGYL
r0sU+eRoucUml5lbOW4NY2FzGTZn2Jbd3Bkmbz3fp30+27Pn/G/P77n//w2G
ftR/RAXDMMZX/vNP/8iPQ8eNi5z8euBfzPDID1q/NPyvwXr6++eP/cq1y53/
+ifgqlC7WYlQ6xWomc+42+gK9F2oncV384fLzPd0fKXSeqy3ZxQz3pN53ofw
5sVLQv1xzPdi2M97BDm8AN239e/M/+Q6ciYUwpepHH9wjt+D9VYP1hu/MN9a
Du/00/XRrDOWIYexS+XaCnVj9PyzpaxLY56zBHndkAzoonPMO6DjnZDDeAP5
rM3sZ5xXvT7Kfm575DB3wlvhKu8W1XsTcPhZur4B87zeqo99Km+o6vHSDfYv
gXcnsb8fDk4rgnFjOuvMqUXwESrP4L3IP38W423P8z3xNrTsJue9fAt+Bvv5
E+HtKHirI7x5Wb9fVrvm3OP7t1Br2F3G997SdcxzaiC3/Zj6WwP1m52Mm88i
t7cQarcBj98BHH6s6sM9zbryM/DR61j3aJzi9tm/i9qhCfL4bjl0C9S+dx9+
03214x/wmcrvh3fHQL1kqNlJ+anMc9Og3j+xs7VCcb6ldj6nfCeVp4363Sp4
547GyZhTqpdszt+4ne9xK+B/msB41EHWtdd1E9nPzld/6oYdvK4q38eKe47i
av6A9RugxgXls6DeKf1+RL9XVb5aGfsUqX9W0PgPAbeZpHYO0viqrzh3pDM+
ez007EPWbUsvFX35OSXCL58H//kAzkmPYf77+K379U6+Zx9hvXGCcwbhz94Q
9OkNVJxjVf7limuZ4lih37crba00U/23tebLmZpHuoDHX6Px9gJ+aDc9AN9u
CfO6pwgOa1F4oYwHby0QuZ9dkSfnz514SfBUf6UYf0+Sed68L4tkftA81gfn
ix7MHs+Duw74/SG5Gif4s3UVu3pXoEaW+nWc2jtR/XI/uJwDUL8V8e7/7Z8d
NU9N1fx2VP0pcD786nYil9nzifOyj/2vU7Lvte5HhX8zPF3mD4jNlH3yUvge
Ny5N1m86/pvQoOZnZDzZPyfzs2rKfnb9T0Uv1iBTcBv5iZz7VQHyV8TPHR/8
fthZ5Ot2Af1EY3+zq9YXW+tBvMbDPM2/LchH/ogc5m2oAh+RekHO77EiVfh7
jx8hLjrtk/2dSVtkfyNzm6wbfWqDzJteulHkmFZLvptvNtwh+3x1T3i7yUhP
5qcNOCbyTEjKEf7Vs+IX1pbx+EHSLMHtZ80RPRtlK4R3EnohZx0HOffuAGdH
6o9xX+1UQv20apA3ndqa/14kX1i/lor/2Q3+IfYxkhufkO99n8AuWb0Py/iW
kcK7V8tED9bYFtivZrHY0+7XU9Z7dVcfEjlCh+0WuY42gZ6sKevN8VNOihxV
wsS+RvBFwevHRIufW3EB4DQCkDNJ/f3tZcg/GDx+VfXLZM039bGvPZ165Lb6
gfndb0kcOWPrC06jcOtFofacfFl3y/xd1oV0gr636RJ+Xhd53hsldnBPpgjv
HX49n/HffPkelCZ4vNRGQt0T1fD/E2/IOWZKPOe3bya43Kwg/PjBY8hd733k
njJP6w59hTVA60XVi9gzVnnNm9a1bcyPH0ZeaPpSMf7flHNWv4ke4+ejv8aN
0Ev/p1i/cQrnT0NP1mNtoK9WIs/OzSvAbxvlyr45ByU+3d6f+sRPUxm3c5aR
n+KHynne2x74vluO327Ig97fzP4t87DfOs2b2udY1bRfmHsHvNU1j688jDy7
XhDqTYkqRV9xfO/Yn/mjYpkfNg27f/E1+59uB19UDbkCXPJv2l6Ja/PMZ0K9
hBuSd/yZjcg7jduJP1hNqhdi/9H4QWpD9B2fRl3KfQj5h+3nPF/7l3HgctK1
LvTX/tNT/2xGHXc/Q17vUE1o5h/gc9to/urDvoX4iVuvCD0sDiPvjsqmTjTO
FX+zL97PlnMeCRd7+cM7CC6vQX3yc493ZZ6Vboofu00KBafzZEERcVELP98z
UvAa1Zoh163dyL8lHzwXNW+O1P7lC8X3svbj+8nHdi5+agaNYvzf3dHL2SuC
w00rBm/HGPwkLQpcSyqi93hb5HUSb0pcWQlvSb70az+UIeM1DoP3uVnUj0hf
cHpNjxOflU+Bu1uCxLXbNgaa8Insb2zkfO/8bHBOIP/b47RvaUu8GbPUntmK
L/wk81tuZbw9edg53ZV1FQPhVzXE7wZQJ90jHdDv8T7k+U5rRD43s4rIb04u
PS38okSR34ooIU+GvUUdqnSP+fOXyLj/eAL0mTX0EfsGyTxjTA3hnZAq+Gud
xsi5dhPyl2tdOKJ1MUXz6Gjs606if7bSwefOGQ9t0xxcuQ3hR4Ww/8I95IF6
DvptfEj8y0+5i/wvB2KPM8jnnFgq49bMRdSfVguJw+/m4LfPJWPPncvF7vbp
1UKN8sHUqdjHJS+ZkePlXP96S+SPXI39ErXOh+k9L5W4c1bSDzhr6ZPNJ7kv
GP/5iPXX1pNXho7CbkuTsVfvXvhLJZt4uUt+8CdvF/n9EZvBefMccZhWHfwx
1+S7NbV7NnqbKP5rWX2lj7DGdJP+yG89dL/oJ7k1dbeuI3FrtZpCX5jakjjp
vgf79VW76X3CSyXP+G9wnzOb/op9AsHp98sm3ta2IG9FD8BucX0lzu19VQWf
Wetn6uJv0eTHRQvOyvr/PkycfdAXHL0WCHWrzaZfKK0peHz7R6n35sBKB2T+
M7kHZd7B16RvcAoL6P/G1pT97QuJcr41Wut7L/KGFaf9WW29bw7X+/GwidAF
P2HnojngjQjGXht/EHuZ28Koh9cqkEcSK5L3ykMkvvzZpzI4b2YG8fmd4DB+
r3dc5j2/SvzMXVyLfm/nGMHj9G8m9nJ3v3aGuPyGepERyv7fdKWPSA0lj83N
RO+r6c+MT8DnHdB4K9B3loHw9ibi0609hO8v9oQe6Ydf1umMv/cJFDs5TwXj
X1dPirz+OyUin7m9UPowJ2oCOCtcF737J47Rz01+WHjX3UP/9vy7ohcvu5x8
u+4Z+s+fDfzkf6mcH3AcPTcJwQ5dqLNO/Dn1O63vbTT+9L7uRilfTN40Cr5l
/oNJjJvUUc/ZzbnX7yLHkE7SF7snA7Nk39eWCk574nPkf3OC9F12v8MSV2be
TzLP/SZH/NNeFkC/N7429a36WvL9tzORJ4Z7op/JvcFqn4kc7cgL3mnqgRus
7w4P0V+72Xr/S9L3lfn6zpPBvcNrTj9gdlF/vrsSmnoA/SXGgHNwOf1I1lWh
Vp9o+MkWfeP55VInPHs4fXLxdO5DZW2Jm8Vr6O8+TOG8z+nvjUP6bpOs72AX
4M2oOyqX5o31+l6Vrv44HX90h+o9vYf6Z7a+r/39znVY+5ebWkea0t95xyZD
u7+OPg48wbynxvI9Z772YwugV4Zqv9QXO1QezvcZx/jeH73733PPs77nnuZN
5X3KUf27J9QOL3G/tfbpPfbMJa0L2p/kKr48resROi9N37FCNc+s03vSNL1H
HuUdyam7EH7pDPbtfJu4eBocTosk9PUOceGmr+KcatjH6n1c9aZ9fTvFNVX7
xGjkcQervp/Vd9YOzPeC9B1vh9axzsSb1VPzf7LWuwR95zsI78Xqe9lyfZ/1
sLudyvuLOz5R84++Bw7aBb9mKfyLG9gnnD7QHP0z47/g137MYsYj9jF+m/cq
v24qfAXOsYL0HjoZPNZQ/MfZTJwZmZo/Gul9vn6B6k3x/ah6eVrvQRl6f9D3
Xj9a3wHjVY+X9B68CX3ZvXT9DdVjgfr9QH1HHEEec4KRzz6UBV2PH1i7oMbb
7G///Y4bqnlO38/9xfo+8UDjPxKcboS+a36p+f6Ovm+q3axQtc9seL9E7xNB
imO93pvmqd+20v57ndbLYfRv9liNy61qh7uat86pPw1Sf7Dwe6+MeDJnaTyd
1u8b9R0yXc8N0Xe+G1qXU1XOYn0v2q04K6vcsfquqe+C9iC14+0/9fR/w1Sg
FA==
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}]}], "}"}],
  StripOnInput->False,
  Magnification->4 Inherited]], "Output",
 CellChangeTimes->{{3.739811234693652*^9, 3.739811238471654*^9}, {
   3.7398113057066545`*^9, 3.7398113113066587`*^9}, 3.7398114035416527`*^9, {
   3.7398123458803415`*^9, 3.7398123537693424`*^9}, {3.739812387172079*^9, 
   3.73981240415008*^9}, {3.7398125162916813`*^9, 3.7398125284106874`*^9}, 
   3.739812645727603*^9, {3.7398167233396544`*^9, 3.739816735836159*^9}, 
   3.7398248010308933`*^9, {3.7399157358104873`*^9, 3.7399157706464877`*^9}, {
   3.7399158216105194`*^9, 3.7399158292864914`*^9}, {3.7399169315092096`*^9, 
   3.739916952125207*^9}, {3.739918361683551*^9, 3.7399183674163733`*^9}, {
   3.739918412466813*^9, 3.7399184165299644`*^9}, {3.739918682540408*^9, 
   3.739918685523666*^9}, {3.739918725729963*^9, 3.7399187355024767`*^9}},
 CellLabel->
  "Out[366]=",ExpressionUUID->"7099f93e-7842-4863-929e-3c09761413c1"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test Ground", "Section",
 CellChangeTimes->{{3.7395514835995884`*^9, 
  3.739551487936183*^9}},ExpressionUUID->"8cb255c6-e198-432c-bcb4-\
a09c4f1145ee"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetDecoder", "[", "\"\<Vector\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.739805960524727*^9, 3.7398059669183073`*^9}},
 CellLabel->
  "In[1260]:=",ExpressionUUID->"02ae2d9c-4198-41b0-abc8-3fe2a4951c59"],

Cell[BoxData[
 TemplateBox[{
  "NetDecoder","badtype",
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"Vector\\\\\\\"\\\"}]\\) is not a valid \
NetDecoder type.\"",2,1260,94,24699694172489704377,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739805967380761*^9},
 CellLabel->
  "During evaluation of \
In[1260]:=",ExpressionUUID->"d4766890-aa89-44bf-aceb-61395bb7cd09"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.739805967380761*^9},
 CellLabel->
  "Out[1260]=",ExpressionUUID->"3d6184f6-f3c1-45c1-98a6-e7bec394037f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Dimensions", "@", 
  RowBox[{"ImageData", "[", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/E4CBjBk45DyZ7XFJ9TIw1uOT6mZnO4pLTZCrEJbWWifk1DqkvQYxM
uLRVMzNp45JLZ2JcgkvOjlnrKy45RiYPXFItTMyHcEh90WK0x6VtMTMTznAO
YuK+jkuOidkEl9R/BtxhCdQ3E4++GTjldojj8h0VAQD9peZT
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "@", 
  RowBox[{"(", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "5"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "4"}], "}"}]}], "}"}], ")"}]}]}], "Input",
 CellChangeTimes->{{3.73964627061879*^9, 3.7396462864776597`*^9}, {
  3.739646370780693*^9, 3.739646383493784*^9}, {3.7398030104134445`*^9, 
  3.739803102142319*^9}},
 CellLabel->
  "In[1050]:=",ExpressionUUID->"216453e6-ca3d-4ef4-bff5-4e2813f0fc08"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"28", ",", "28"}], "}"}]], "Output",
 CellChangeTimes->{{3.7398030839272833`*^9, 3.7398031025657363`*^9}},
 CellLabel->
  "Out[1050]=",ExpressionUUID->"0fa5af2a-8ec3-4434-b08b-47a96874a4f1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{{3.7398030839272833`*^9, 3.7398031025810924`*^9}},
 CellLabel->
  "Out[1051]=",ExpressionUUID->"7878fb20-1921-42ce-a7b9-2a8cdaf93e1e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"m", "=", 
  RowBox[{"Partition", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Range", "[", "25", "]"}], "^", "2"}], ",", "5"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Head", "@", "m"}]}], "Input",
 CellChangeTimes->{{3.7398052619701886`*^9, 3.7398052768164454`*^9}},
 CellLabel->
  "In[1252]:=",ExpressionUUID->"8d392152-0404-41b5-be45-9b5b294fcae0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "9", ",", "16", ",", "25"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"36", ",", "49", ",", "64", ",", "81", ",", "100"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"121", ",", "144", ",", "169", ",", "196", ",", "225"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"256", ",", "289", ",", "324", ",", "361", ",", "400"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"441", ",", "484", ",", "529", ",", "576", ",", "625"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.739805269765497*^9, 3.739805277622357*^9}},
 CellLabel->
  "Out[1252]=",ExpressionUUID->"288abf6d-57ce-46b0-a8a9-9b3cb803c788"],

Cell[BoxData["List"], "Output",
 CellChangeTimes->{{3.739805269765497*^9, 3.739805277624425*^9}},
 CellLabel->
  "Out[1253]=",ExpressionUUID->"d3994e05-9de3-4558-bec9-cc0b56e094ed"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Dimensions", " ", "@", 
  RowBox[{"b", "[", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/E4CBjBk45DyZ7XFJ9TIw1uOT6mZnO4pLTZCrEJbWWifk1DqkvQYxM
uLRVMzNp45JLZ2JcgkvOjlnrKy45RiYPXFItTMyHcEh90WK0x6VtMTMTznAO
YuK+jkuOidkEl9R/BtxhCdQ3E4++GTjldojj8h0VAQD9peZT
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Head", "@", 
  RowBox[{"ArrayReshape", "[", 
   RowBox[{
    RowBox[{"b", "[", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/E4CBjBk45DyZ7XFJ9TIw1uOT6mZnO4pLTZCrEJbWWifk1DqkvQYxM
uLRVMzNp45JLZ2JcgkvOjlnrKy45RiYPXFItTMyHcEh90WK0x6VtMTMTznAO
YuK+jkuOidkEl9R/BtxhCdQ3E4++GTjldojj8h0VAQD9peZT
        "], {{0, 28}, {28, 0}}, {0, 255},
        ColorFunction->GrayLevel],
       BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{28, 28},
      PlotRange->{{0, 28}, {0, 28}}], "]"}], ",", " ", 
    RowBox[{"{", "2828", "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"loss", "=", 
  RowBox[{"MeanSquaredLossLayer", "[", 
   RowBox[{"\"\<Input\>\"", "\[Rule]", "\"\<Varying\>\""}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"loss", "[", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<Input\>\"", "\[Rule]", 
     RowBox[{"First", "@", 
      RowBox[{"b", "[", 
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/E4CBjBk45DyZ7XFJ9TIw1uOT6mZnO4pLTZCrEJbWWifk1DqkvQYxM
uLRVMzNp45JLZ2JcgkvOjlnrKy45RiYPXFItTMyHcEh90WK0x6VtMTMTznAO
YuK+jkuOidkEl9R/BtxhCdQ3E4++GTjldojj8h0VAQD9peZT
          "], {{0, 28}, {28, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{28, 28},
        PlotRange->{{0, 28}, {0, 28}}], "]"}]}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"28", ",", "28"}], "}"}], ",", " ", 
    RowBox[{"\"\<Target\>\"", "\[Rule]", 
     RowBox[{"ArrayReshape", "[", 
      RowBox[{
       RowBox[{"b", "[", 
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/E4CBjBk45DyZ7XFJ9TIw1uOT6mZnO4pLTZCrEJbWWifk1DqkvQYxM
uLRVMzNp45JLZ2JcgkvOjlnrKy45RiYPXFItTMyHcEh90WK0x6VtMTMTznAO
YuK+jkuOidkEl9R/BtxhCdQ3E4++GTjldojj8h0VAQD9peZT
           "], {{0, 28}, {28, 0}}, {0, 255},
           ColorFunction->GrayLevel],
          BoxForm`ImageTag[
          "Byte", ColorSpace -> Automatic, Interleaving -> None],
          Selectable->False],
         DefaultBaseStyle->"ImageGraphics",
         ImageSizeRaw->{28, 28},
         PlotRange->{{0, 28}, {0, 28}}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"28", ",", "28"}], "}"}]}], "]"}]}]}], "|>"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "@", "%"}]}], "Input",
 CellChangeTimes->{{3.7398031645987444`*^9, 3.739803198390415*^9}, {
   3.7398036077179565`*^9, 3.7398036105937023`*^9}, {3.7398036648099613`*^9, 
   3.7398036690257964`*^9}, 3.7398041973048763`*^9, {3.739804314657527*^9, 
   3.7398043587840233`*^9}, {3.7398044205160737`*^9, 
   3.7398044839135604`*^9}, {3.739804549795489*^9, 3.739804583934817*^9}, {
   3.7398049736350303`*^9, 3.7398049740076256`*^9}, 3.7398050395042744`*^9, {
   3.7398050993954926`*^9, 3.739805125329423*^9}, {3.7398052062373877`*^9, 
   3.7398052115498447`*^9}, {3.7398071913320556`*^9, 3.739807233284705*^9}},
 CellLabel->
  "In[1209]:=",ExpressionUUID->"1818bb40-bce0-4eec-a21f-dd904e6f070a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "28", ",", "28"}], "}"}]], "Output",
 CellChangeTimes->{3.7398072237886634`*^9},
 CellLabel->
  "Out[1282]=",ExpressionUUID->"78bea722-04ab-4bf9-895e-f9fc311b0fb2"],

Cell[BoxData["List"], "Output",
 CellChangeTimes->{3.7398072237911067`*^9},
 CellLabel->
  "Out[1283]=",ExpressionUUID->"76392810-6e9f-41e0-9453-d0cc9ffc2fb6"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["MeanSquaredLossLayer", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014705882352941176`], {
                 RGBColor[0.557, 0.557, 0.557], 
                 RGBColor[0.33, 0.33, 0.33], 
                 Thickness[0.015029411764705883`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 18.5}, {14., 18.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.557, 0.557, 0.557], 
                 Thickness[0.015029411764705883`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{52.5, 18.5}, {44., 18.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.85, 0.85, 0.85], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{22.23,
                   18.5}, {33.5, 29.77}, {44.77, 18.5}, {33.5, 7.23}}}]}, {
                 FaceForm[{
                   RGBColor[0.56, 0.56, 0.56], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{33.5, 30.29}, {21.71, 
                  18.5}, {33.5, 6.71}, {45.29, 18.5}}, {{33.5, 29.25}, {44.25,
                   18.5}, {33.5, 7.75}, {22.75, 18.5}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{53.56, 15.4}, {51.88, 15.4}, {50.52, 16.76}, {
                  50.52, 18.44}, {50.52, 20.12}, {51.88, 21.48}, {53.56, 
                  21.48}, {55.24, 21.48}, {56.6, 20.12}, {56.6, 18.44}, {56.6,
                   16.76}, {55.24, 15.4}, {53.56, 15.4}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {0, 1, 0}}}, {{{53.56, 21.83}, {51.69, 21.83}, {50.17, 
                   20.31}, {50.17, 18.44}, {50.17, 16.57}, {51.69, 15.05}, {
                   53.56, 15.05}, {55.43, 15.05}, {56.95, 16.57}, {56.95, 
                   18.44}, {56.95, 20.31}, {55.43, 21.83}, {53.56, 21.83}}, {{
                   53.56, 21.83}, {53.56, 21.13}, {55.04, 21.13}, {56.25, 
                   19.92}, {56.25, 18.44}, {56.25, 16.96}, {55.04, 15.75}, {
                   53.56, 15.75}, {52.08, 15.75}, {50.87, 16.96}, {50.87, 
                   18.44}, {50.87, 19.92}, {52.08, 21.13}, {53.56, 21.13}, {
                   53.56, 21.83}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{13.56, 15.5}, {11.94, 15.5}, {10.62, 16.82}, {
                  10.62, 18.44}, {10.62, 20.06}, {11.94, 21.38}, {13.56, 
                  21.38}, {15.18, 21.38}, {16.5, 20.06}, {16.5, 18.44}, {16.5,
                   16.82}, {15.18, 15.5}, {13.56, 15.5}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}}}, {{{13.56, 21.73}, {11.74, 21.73}, {10.27, 
                   20.26}, {10.27, 18.44}, {10.27, 16.62}, {11.74, 15.15}, {
                   13.56, 15.15}, {15.38, 15.15}, {16.85, 16.62}, {16.85, 
                   18.44}, {16.85, 20.26}, {15.38, 21.73}, {13.56, 
                   21.73}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQLd/6OnCHnLaDx8MqkXXspg4MINCgA+efPQMCug6H
v2rE9B8ygYgf13MAa3M1gYrrQ8WNHdJAQM3AAcR1V0TwC225ri8uMILzwfqY
DB2qgcoe/tJ1MAaBzfoOMPfA+GBtezXhfIg5GlB1Bg7fQNaXqjsAya8acwwg
5lWpOcyaCQSShhD1H1Qh/jqA4MPcA+ODzbtnDHGXkwbc/+jhAwASgHiO
                   "]}]}}, ImageSize -> {40, Automatic}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"seq. of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], "\" \"",
                     "\"reals\""}, "RowDefault"], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Target\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"seq. of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], "\" \"",
                     "\"reals\""}, "RowDefault"], "SummaryItem"]}}, 
               BaselinePosition -> Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014705882352941176`], {
                 RGBColor[0.557, 0.557, 0.557], 
                 RGBColor[0.33, 0.33, 0.33], 
                 Thickness[0.015029411764705883`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 18.5}, {14., 18.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.557, 0.557, 0.557], 
                 Thickness[0.015029411764705883`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{52.5, 18.5}, {44., 18.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.85, 0.85, 0.85], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{22.23,
                   18.5}, {33.5, 29.77}, {44.77, 18.5}, {33.5, 7.23}}}]}, {
                 FaceForm[{
                   RGBColor[0.56, 0.56, 0.56], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{33.5, 30.29}, {21.71, 
                  18.5}, {33.5, 6.71}, {45.29, 18.5}}, {{33.5, 29.25}, {44.25,
                   18.5}, {33.5, 7.75}, {22.75, 18.5}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{53.56, 15.4}, {51.88, 15.4}, {50.52, 16.76}, {
                  50.52, 18.44}, {50.52, 20.12}, {51.88, 21.48}, {53.56, 
                  21.48}, {55.24, 21.48}, {56.6, 20.12}, {56.6, 18.44}, {56.6,
                   16.76}, {55.24, 15.4}, {53.56, 15.4}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {0, 1, 0}}}, {{{53.56, 21.83}, {51.69, 21.83}, {50.17, 
                   20.31}, {50.17, 18.44}, {50.17, 16.57}, {51.69, 15.05}, {
                   53.56, 15.05}, {55.43, 15.05}, {56.95, 16.57}, {56.95, 
                   18.44}, {56.95, 20.31}, {55.43, 21.83}, {53.56, 21.83}}, {{
                   53.56, 21.83}, {53.56, 21.13}, {55.04, 21.13}, {56.25, 
                   19.92}, {56.25, 18.44}, {56.25, 16.96}, {55.04, 15.75}, {
                   53.56, 15.75}, {52.08, 15.75}, {50.87, 16.96}, {50.87, 
                   18.44}, {50.87, 19.92}, {52.08, 21.13}, {53.56, 21.13}, {
                   53.56, 21.83}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{13.56, 15.5}, {11.94, 15.5}, {10.62, 16.82}, {
                  10.62, 18.44}, {10.62, 20.06}, {11.94, 21.38}, {13.56, 
                  21.38}, {15.18, 21.38}, {16.5, 20.06}, {16.5, 18.44}, {16.5,
                   16.82}, {15.18, 15.5}, {13.56, 15.5}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}}}, {{{13.56, 21.73}, {11.74, 21.73}, {10.27, 
                   20.26}, {10.27, 18.44}, {10.27, 16.62}, {11.74, 15.15}, {
                   13.56, 15.15}, {15.38, 15.15}, {16.85, 16.62}, {16.85, 
                   18.44}, {16.85, 20.26}, {15.38, 21.73}, {13.56, 
                   21.73}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQLd/6OnCHnLaDx8MqkXXspg4MINCgA+efPQMCug6H
v2rE9B8ygYgf13MAa3M1gYrrQ8WNHdJAQM3AAcR1V0TwC225ri8uMILzwfqY
DB2qgcoe/tJ1MAaBzfoOMPfA+GBtezXhfIg5GlB1Bg7fQNaXqjsAya8acwwg
5lWpOcyaCQSShhD1H1Qh/jqA4MPcA+ODzbtnDHGXkwbc/+jhAwASgHiO
                   "]}]}}, ImageSize -> {40, Automatic}], 
              GridBox[{{
                 ItemBox[
                  StyleBox["Ports", Bold]], 
                 ItemBox[""]}, {
                 StyleBox[
                  TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"seq. of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], "\" \"",
                     "\"reals\""}, "RowDefault"], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Target\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"seq. of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], "\" \"",
                     "\"reals\""}, "RowDefault"], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Loss\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}}, 
               BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 3}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("MeanSquaredLossLayer[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7398072238165464`*^9},
 CellLabel->
  "Out[1284]=",ExpressionUUID->"67aca7a1-c163-4a91-9f8d-e01953df2b5b"],

Cell[BoxData[
 TemplateBox[{
  "MeanSquaredLossLayer","invargc",
   "\"\\!\\(\\*RowBox[{\\\"1\\\"}]\\) inputs provided, \\!\\(\\*RowBox[{\\\"2\
\\\"}]\\) were expected.\"",2,1285,113,24699694172489704377,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739807223838518*^9},
 CellLabel->
  "During evaluation of \
In[1282]:=",ExpressionUUID->"10dc1839-e7c7-4e29-ac38-73a669586da4"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.7398072238571033`*^9},
 CellLabel->
  "Out[1285]=",ExpressionUUID->"ba6ce336-1426-4cb4-9d88-d783314351af"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.739807223859064*^9},
 CellLabel->
  "Out[1286]=",ExpressionUUID->"22571734-5f03-4daf-97da-4cecb5e640f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"28", ",", "28"}], "}"}]], "Input",
 CellChangeTimes->{3.739803075764016*^9},
 CellLabel->
  "In[1043]:=",ExpressionUUID->"babf0536-5d41-47b8-9a89-787eacd04a58"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"28", ",", "28"}], "}"}]], "Output",
 CellChangeTimes->{{3.7398030184307985`*^9, 3.739803025866808*^9}, {
  3.7398030609760685`*^9, 3.739803075866352*^9}},
 CellLabel->
  "Out[1043]=",ExpressionUUID->"79a31074-9cc4-4ec1-8d80-c7e5fef8dedb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"a", " ", "=", " ", 
  RowBox[{"NetDecoder", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<Image\>\"", ",", " ", "\"\<Grayscale\>\""}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"b", " ", "=", " ", 
  RowBox[{"NetEncoder", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<Image\>\"", ",", " ", 
     RowBox[{"{", 
      RowBox[{"28", ",", "28"}], "}"}], ",", " ", "\"\<Grayscale\>\""}], 
    "}"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.73964627061879*^9, 3.7396462864776597`*^9}, {
  3.739646370780693*^9, 3.739646383493784*^9}, {3.7398030104134445`*^9, 
  3.73980301344127*^9}},
 CellLabel->
  "In[1108]:=",ExpressionUUID->"fa010b29-8bc5-4b3a-937d-69d188f16a56"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetDecoder", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      PanelBox[
       GridBox[{{
          GridBox[{{
             StyleBox[
              TemplateBox[{"\"Type\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox["\"Image\"", "SummaryItem"]}, {
             StyleBox[
              TemplateBox[{"\"Color space\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox["\"Grayscale\"", "SummaryItem"]}, {
             StyleBox[
              TemplateBox[{"\"Mean image\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox["None", "SummaryItem"]}, {
             StyleBox[
              TemplateBox[{"\"Variance image\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox["None", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
           GridBoxAlignment -> {
            "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
        GridBoxAlignment -> {"Rows" -> {{Top}}}, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}], 
       BaselinePosition -> Baseline, 
       BaseStyle -> {
        ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
         3, ShowSyntaxStyles -> False}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetDecoder[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7396462867432675`*^9, 3.739646383885127*^9, 
  3.739804329574935*^9},
 CellLabel->
  "Out[1108]=",ExpressionUUID->"d164ac55-0091-4ced-b4bc-48542245da97"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetEncoder", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      PanelBox[
       GridBox[{{
          GridBox[{{
             StyleBox[
              TemplateBox[{"\"Type\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox["\"Image\"", "SummaryItem"]}, {
             StyleBox[
              TemplateBox[{"\"Image size\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox[
              RowBox[{"{", 
                RowBox[{"28", ",", "28"}], "}"}], "SummaryItem"]}, {
             StyleBox[
              TemplateBox[{"\"Color space\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox["\"Grayscale\"", "SummaryItem"]}, {
             StyleBox[
              TemplateBox[{"\"Color channels\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox["1", "SummaryItem"]}, {
             StyleBox[
              TemplateBox[{"\"Mean image\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox["None", "SummaryItem"]}, {
             StyleBox[
              TemplateBox[{"\"Variance image\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox["None", "SummaryItem"]}, {
             StyleBox[
              TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox[
              TemplateBox[{"\"3-tensor\"", "\" \"", 
                StyleBox[
                 
                 TemplateBox[{
                  "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                   "\" \"", 
                   
                   TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                  "RowDefault"], 
                 GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
              "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
           GridBoxAlignment -> {
            "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
        GridBoxAlignment -> {"Rows" -> {{Top}}}, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}], 
       BaselinePosition -> Baseline, 
       BaseStyle -> {
        ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
         3, ShowSyntaxStyles -> False}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetEncoder[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7396462867432675`*^9, 3.739646383885127*^9, 
  3.739804329602499*^9},
 CellLabel->
  "Out[1109]=",ExpressionUUID->"2a409afa-9a74-4e29-ad94-572492011b1c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "[", 
  RowBox[{"ArrayReshape", "[", 
   RowBox[{
    RowBox[{"ConstantArray", "[", 
     RowBox[{"0.5", ",", 
      RowBox[{"28", "*", "28"}]}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", "28", ",", "28"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7396459677435527`*^9, 3.739645978571994*^9}, {
  3.7396460679306936`*^9, 3.739646072385008*^9}, {3.7396461562435613`*^9, 
  3.739646170150709*^9}, {3.739646217674387*^9, 3.739646252478238*^9}, {
  3.739646289836887*^9, 3.7396462935395536`*^9}, {3.739646431071356*^9, 
  3.7396464324476624`*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"77a3d246-4ba2-4719-8c73-74f4892462b6"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztyUEKQFAUBdCfgSzCxB5kKltgBV8xUuobyG4tBbEEw/Pq3tPtVePaz1kI
YSvu6uPepRSPIX/GFJemnp5n+eW9syVJkiRJkiRJkvzLCwbOd1Q=
    "], {{0, 28}, {28, 0}}, {0., 1.},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag["Real", ColorSpace -> "Grayscale", Interleaving -> None],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{28, 28},
  PlotRange->{{0, 28}, {0, 28}}]], "Output",
 CellChangeTimes->{{3.7396459718696184`*^9, 3.739645978899598*^9}, 
   3.7396460727546277`*^9, {3.7396461580090246`*^9, 3.739646170572424*^9}, {
   3.7396462142122064`*^9, 3.7396462529615793`*^9}, {3.739646290262314*^9, 
   3.7396462939285192`*^9}, {3.739646425384534*^9, 3.7396464328848705`*^9}},
 CellLabel->"Out[95]=",ExpressionUUID->"c9cc56fb-dfbe-45e2-aa40-96b58c53c4ba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"b", "[", 
  RowBox[{"First", " ", "@", " ", "mnistDigits"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"a", "[", "%", "]"}]}], "Input",
 CellChangeTimes->{{3.7396459334309883`*^9, 3.739645961385113*^9}, {
  3.7396461819817514`*^9, 3.739646201774161*^9}, {3.739646329765486*^9, 
  3.739646416102643*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"67c62aa0-7153-4db5-a1c4-690aab0bd398"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "0.800000011920929`", ",", 
      "0.3764705955982208`", ",", "0.007843137718737125`", ",", 
      "0.3764705955982208`", ",", "0.8039215803146362`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "0.8117647171020508`", ",", 
      "0.06666667014360428`", ",", "0.0117647061124444`", ",", 
      "0.0117647061124444`", ",", "0.0117647061124444`", ",", 
      "0.07058823853731155`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "0.7882353067398071`", ",", "0.10980392247438431`", ",", 
      "0.007843137718737125`", ",", "0.0117647061124444`", ",", 
      "0.062745101749897`", ",", "0.08627451211214066`", ",", 
      "0.0117647061124444`", ",", "0.7764706015586853`", ",", 
      "0.9764705896377563`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "0.9607843160629272`", ",", "0.7647058963775635`", ",", 
      "0.12156862765550613`", ",", "0.0117647061124444`", ",", 
      "0.007843137718737125`", ",", "0.0117647061124444`", ",", 
      "0.2078431397676468`", ",", "0.6705882549285889`", ",", 
      "0.0117647061124444`", ",", "0.007843137718737125`", ",", 
      "0.5215686559677124`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "0.3607843220233917`", ",", "0.0117647061124444`", ",", 
      "0.0117647061124444`", ",", "0.0117647061124444`", ",", 
      "0.007843137718737125`", ",", "0.0117647061124444`", ",", 
      "0.0117647061124444`", ",", "0.6235294342041016`", ",", 
      "0.25882354378700256`", ",", "0.007843137718737125`", ",", 
      "0.3450980484485626`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "0.800000011920929`", 
      ",", "0.06666667014360428`", ",", "0.007843137718737125`", ",", 
      "0.007843137718737125`", ",", "0.2549019753932953`", ",", 
      "0.5529412031173706`", ",", "0.007843137718737125`", ",", 
      "0.10588235408067703`", ",", "0.8156862854957581`", ",", 
      "0.6901960968971252`", ",", "0.`", ",", "0.34117648005485535`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "0.8117647171020508`", ",", 
      "0.06666667014360428`", ",", "0.0117647061124444`", ",", 
      "0.0117647061124444`", ",", "0.2980392277240753`", ",", 
      "0.9529411792755127`", ",", "0.7058823704719543`", ",", 
      "0.5254902243614197`", ",", "0.9176470637321472`", ",", "1.`", ",", 
      "1.`", ",", "0.007843137718737125`", ",", "0.0470588244497776`", ",", 
      "0.8039215803146362`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "0.8509804010391235`", ",", 
      "0.3529411852359772`", ",", "0.007843137718737125`", ",", 
      "0.08627451211214066`", ",", "0.18431372940540314`", ",", 
      "0.6705882549285889`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "0.007843137718737125`", ",", 
      "0.0117647061124444`", ",", "0.3529411852359772`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "0.9725490212440491`", ",", "0.3019607961177826`", ",", 
      "0.0117647061124444`", ",", "0.05882352963089943`", ",", 
      "0.7215686440467834`", ",", "0.9254902005195618`", ",", 
      "0.8901960849761963`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "0.007843137718737125`", ",", 
      "0.0117647061124444`", ",", "0.23529411852359772`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "0.7764706015586853`", ",", "0.0117647061124444`", ",", 
      "0.0117647061124444`", ",", "0.7529411911964417`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "0.007843137718737125`", ",", 
      "0.0117647061124444`", ",", "0.23529411852359772`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "0.2235294133424759`", ",", "0.007843137718737125`", ",", 
      "0.2549019753932953`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "0.`", ",", "0.007843137718737125`", ",", "0.23137255012989044`", 
      ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "0.7019608020782471`", ",", "0.03529411926865578`", ",", 
      "0.0117647061124444`", ",", "0.5607843399047852`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "0.007843137718737125`", ",", 
      "0.0117647061124444`", ",", "0.41960784792900085`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "0.6666666865348816`", ",", "0.0117647061124444`", ",", 
      "0.09803921729326248`", ",", "0.9019607901573181`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "0.9725490212440491`", ",", "0.47058823704719543`", ",", 
      "0.007843137718737125`", ",", "0.2705882489681244`", ",", 
      "0.9529411792755127`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "0.6666666865348816`", ",", "0.0117647061124444`", ",", 
      "0.125490203499794`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "0.9725490212440491`", ",", "0.48627451062202454`", ",", 
      "0.0117647061124444`", ",", "0.11764705926179886`", ",", 
      "0.7215686440467834`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "0.6666666865348816`", ",", "0.0117647061124444`", ",", 
      "0.4313725531101227`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "1.`", ",", "0.8117647171020508`", ",", 
      "0.3529411852359772`", ",", "0.0117647061124444`", ",", 
      "0.32156863808631897`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "0.6627451181411743`", ",", "0.007843137718737125`", ",", 
      "0.11764705926179886`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "0.5529412031173706`", ",", 
      "0.06666667014360428`", ",", "0.007843137718737125`", ",", 
      "0.364705890417099`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "0.6666666865348816`", ",", "0.0117647061124444`", ",", 
      "0.0235294122248888`", ",", "0.4274509847164154`", ",", 
      "0.8117647171020508`", ",", "0.886274516582489`", ",", 
      "0.6666666865348816`", ",", "0.3019607961177826`", ",", 
      "0.11764705926179886`", ",", "0.007843137718737125`", ",", 
      "0.125490203499794`", ",", "0.3450980484485626`", ",", 
      "0.7803921699523926`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "0.6666666865348816`", ",", "0.0117647061124444`", ",", 
      "0.0117647061124444`", ",", "0.0117647061124444`", ",", 
      "0.10196078568696976`", ",", "0.1568627506494522`", ",", 
      "0.0117647061124444`", ",", "0.0117647061124444`", ",", 
      "0.0117647061124444`", ",", "0.23137255012989044`", ",", 
      "0.4901960790157318`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "0.8901960849761963`", ",", "0.21960784494876862`", ",", 
      "0.0117647061124444`", ",", "0.0117647061124444`", ",", 
      "0.007843137718737125`", ",", "0.0117647061124444`", ",", 
      "0.0117647061124444`", ",", "0.08627451211214066`", ",", 
      "0.4313725531101227`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "0.9019607901573181`", ",", "0.49803921580314636`", ",", 
      "0.0117647061124444`", ",", "0.007843137718737125`", ",", 
      "0.0117647061124444`", ",", "0.4470588266849518`", ",", 
      "0.8549019694328308`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.739646188899716*^9, 3.739646202118474*^9}, 
   3.739646244180478*^9, {3.739646331071579*^9, 3.7396464164464245`*^9}},
 CellLabel->"Out[91]=",ExpressionUUID->"5fe2eb57-2300-4a03-9a82-09618d20217d"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOmUkqSFIGiiHgg/0oPUqP
0iOKXjBz5ksQrSAhcQNMCwg0IPMP7Nz5cjC4k2T610+IvwQFN0L904GVFhLa
NCjcSyTtYGkJ8ZeMzB60+OqA8jeAaTGxbcjiD27ceAHWb2//fjD4A0Yf2Lfv
HYhuqKgAu09BXn4/mn9Q/Ldg1qxTYPWlpU+xqTuwYcODweAvGK0gLn4db/pD
jz8ozfDl82OwfydMuICiTkzs2mDwF7zcgOUvmPugdEJAANjdBzZufIgiLy29
G0xLSb2C+ucZ1FwweHD16tUB9R+hckNY+DI4/dXVgdPtgmnTwO5/cOECON0l
xMa+xZoOEPG8AhwudC5XHaytX0Pdew0tPYHLiQXTpx9Hzlekmo+RT6H20Npf
wPICXJ4lBAdfRoknObl10Pz3HOyeuXPB8dJQU/OGGv4Dmn+OHv6DldtYyo8X
VA3HAfLfgjlzziDbDys3aGAfGMDsAaaHs7T0V0NZGbhcALYvFiGHK8Onjw9p
kg/Q4u/BrVu3aOm/hNBQ1PpXUnIn2N47d8jKXxj+geZrYDq8h5I+AgMvgsMX
Wv7SzX8CAgeo6i95+fto+W0fmIaWV7TyFy7/LZg9+zZF5kLrTXj9AjN3ypQr
9PAPOu1gavoUJV9Aw5dUc+DtF7R2TkJ4+PWB8BeMxkifEhIzwOLR0beR4yMh
JuYNsnp4PQlLb4h2Gzh9w9uXP39QtX6hgv9QaSmpXWBaROQIPnWwcj4hPv7+
QPoHnYa1Q4D9uDNY3Y+jXwBvr1GaX+lEw+qDB/fv38fnP2A74A40/b4eDO4e
pUfpUZpONACIeg7J
    "], {{0, 28}, {28, 0}}, {0., 1.},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag["Real", ColorSpace -> "Grayscale", Interleaving -> None],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{283., Automatic},
  ImageSizeRaw->{28, 28},
  PlotRange->{{0, 28}, {0, 28}}]], "Output",
 CellChangeTimes->{{3.739646188899716*^9, 3.739646202118474*^9}, 
   3.739646244180478*^9, {3.739646331071579*^9, 3.7396464164464245`*^9}},
 CellLabel->"Out[92]=",ExpressionUUID->"bdd57797-6397-412b-92ae-4e5717c64fd7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomVariate", "[", 
  RowBox[{
   RowBox[{"NormalDistribution", "[", "]"}], ",", "nlatent"}], "]"}]], "Input",
 CellChangeTimes->{{3.7395514835995884`*^9, 3.7395515761183033`*^9}, {
  3.7395553679723654`*^9, 3.739555372051862*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"ce1618ae-157d-4bbc-956c-d07e5a884f1a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1.1500749388821876`"}], ",", 
   RowBox[{"-", "1.0895390325304017`"}], ",", "0.611584971678216`", ",", 
   RowBox[{"-", "0.4643912233589231`"}], ",", 
   RowBox[{"-", "0.35339602460989245`"}], ",", 
   RowBox[{"-", "0.8399505035812386`"}], ",", "1.1450024092869175`", ",", 
   RowBox[{"-", "1.7747706063630981`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.739555372451578*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"a34444bf-85ce-4679-b810-1bf8e6d4d9d5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetChain", "[", 
  RowBox[{"{", 
   RowBox[{"8", ",", " ", 
    RowBox[{"ElementwiseLayer", "[", 
     RowBox[{
      RowBox[{"#", "*", "0.5"}], "&"}], "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7395503880041895`*^9, 3.739550398609557*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"0de0b708-e4c7-4aae-ba9c-6fc372259861"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, BaseStyle -> GrayLevel[0.6], 
                 ImageMargins -> 0, ImageSize -> {36, Automatic}, 
                 PlotRangePadding -> 0], 
                StyleBox[
                "uninitialized", LineColor -> RGBColor[0.66, 0, 0], 
                 FrontFaceColor -> RGBColor[0.66, 0, 0], BackFaceColor -> 
                 RGBColor[0.66, 0, 0], GraphicsColor -> RGBColor[0.66, 0, 0], 
                 FontFamily -> "Roboto", FontSize -> 8, FontColor -> 
                 RGBColor[0.66, 0, 0], Background -> GrayLevel[1, 0.65]]}, 
               Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"tensor\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}, "RowsIndexed" -> {}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, BaseStyle -> GrayLevel[0.6], 
                 ImageMargins -> 0, ImageSize -> {36, Automatic}, 
                 PlotRangePadding -> 0], 
                StyleBox[
                "uninitialized", LineColor -> RGBColor[0.66, 0, 0], 
                 FrontFaceColor -> RGBColor[0.66, 0, 0], BackFaceColor -> 
                 RGBColor[0.66, 0, 0], GraphicsColor -> RGBColor[0.66, 0, 0], 
                 FontFamily -> "Roboto", FontSize -> 8, FontColor -> 
                 RGBColor[0.66, 0, 0], Background -> GrayLevel[1, 0.65]]}, 
               Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{8, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {8}, "$OutputSize" -> 8, 
                    "$InputSize" -> NeuralNetworks`SizeT, "$InputDimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 0.5, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"tensor\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"0.5`", " ", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False]}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   ImageSizeCache -> {169., {29., 35.}}, 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}, "RowsIndexed" -> {}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7395504005961494`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"ccb29947-de04-493e-8fe6-5f6a6b9d806b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "NetGraph"}]], "Input",
 CellChangeTimes->{{3.7395526841539993`*^9, 3.7395526992318234`*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"2cf0169d-bd9c-48b5-884f-0b62076b158e"],

Cell[BoxData[
 RowBox[{"\<\"\\!\\(\\*RowBox[{\\\"NetGraph\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"layer\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"layer\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{SubscriptBox[StyleBox[\\\"m\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\"\[Rule]\\\", \
SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]]}], \\\",\\\", RowBox[{SubscriptBox[StyleBox[\\\"m\\\", \
\\\"TI\\\"], \\\"2\\\"], \\\"\[Rule]\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\
\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) specifies a \
neural net defined by a graph in which the output of layer \
\\!\\(\\*SubscriptBox[StyleBox[\\\"m\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \\\
\"TI\\\"]]\\) is given as input to layer \\!\\(\\*SubscriptBox[StyleBox[\\\"n\
\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\
\"NetGraph\\\", \\\"[\\\", RowBox[{RowBox[{\\\"\[LeftAssociation]\\\", \
RowBox[{RowBox[{SubscriptBox[StyleBox[\\\"name\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\"\[Rule]\\\", \
SubscriptBox[StyleBox[\\\"layer\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]]}], \\\",\\\", RowBox[{SubscriptBox[StyleBox[\\\"name\\\", \\\"TI\
\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\"\[Rule]\\\", \
SubscriptBox[StyleBox[\\\"layer\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]]}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"\
\[RightAssociation]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{SubscriptBox[StyleBox[\\\"name\\\", \\\"TI\\\"], \
StyleBox[\\\"m1\\\", \\\"TI\\\"]], \\\"\[Rule]\\\", \
SubscriptBox[StyleBox[\\\"name\\\", \\\"TI\\\"], StyleBox[\\\"n1\\\", \
\\\"TI\\\"]]}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\
\\\"}]}], \\\"]\\\"}]\\) specifies a net with explicitly named layers.\"\>", 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/NetGraph"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.739552699899799*^9},
 CellTags->
  "Info633739538299-1323769",ExpressionUUID->"646dcfd2-b7c5-4ed0-ada0-\
4ae05019658e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"LinearLayer", "[", "8", "]"}]], "Input",
 CellChangeTimes->{{3.739552948161874*^9, 3.7395529511883698`*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"e48b707b-c47e-4d16-8acb-7fad2f20b1ee"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"scale", "=", 
  RowBox[{"ConstantTimesLayer", "[", 
   RowBox[{
    RowBox[{"\"\<Scaling\>\"", "\[Rule]", 
     RowBox[{"{", "0.5", "}"}]}], ",", 
    RowBox[{"\"\<Input\>\"", "\[Rule]", 
     RowBox[{"NetEncoder", "[", "\"\<Scalar\>\"", "]"}]}], ",", 
    RowBox[{"\"\<Output\>\"", "\[Rule]", 
     RowBox[{"NetDecoder", "[", "\"\<Scalar\>\"", "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"scale", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7395535354947248`*^9, 3.739553542220421*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"1a1466f4-0e1e-4065-b012-91a2d8a6af48"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ConstantTimesLayer", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[
               
               GraphicsComplexBox[{{0, 0}, {-0.5, 1}, {0.5, 1}, {1.5, 1}, {1, 
                 0}}, {{
                  Opacity[0.3], 
                  LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 4}}]}, {
                  AbsolutePointSize[5], 
                  RGBColor[0.33, 0.33, 0.33], 
                  PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 37], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{"\"Dimensions\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  
                  TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                   "RowWithSeparators"], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"scalar\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[
               
               GraphicsComplexBox[{{0, 0}, {-0.5, 1}, {0.5, 1}, {1.5, 1}, {1, 
                 0}}, {{
                  Opacity[0.3], 
                  LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 4}}]}, {
                  AbsolutePointSize[5], 
                  RGBColor[0.33, 0.33, 0.33], 
                  PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 37], 
              GridBox[{{
                 ItemBox[
                  StyleBox["Parameters", Bold]], 
                 ItemBox[""]}, {
                 StyleBox[
                  TemplateBox[{"\"Dimensions\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  
                  TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                   "RowWithSeparators"], "SummaryItem"]}, {
                 ItemBox[
                  StyleBox["Arrays", Bold], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]], 
                 ItemBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                   "CacheGraphics" -> False], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]]}, {
                 StyleBox[
                  TemplateBox[{"\"Scaling\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 ItemBox[
                  StyleBox["Ports", Bold], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]], 
                 ItemBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                   "CacheGraphics" -> False], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]]}, {
                 StyleBox[
                  TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"scalar\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"scalar\"", "SummaryItem"]}}, 
               BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 3}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ConstantTimesLayer[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.739553536963663*^9, 3.739553542560365*^9}},
 CellLabel->"Out[68]=",ExpressionUUID->"c0dca769-0cf8-465a-8442-8bf2243a7064"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.5`", ",", "1.`", ",", "1.5`"}], "}"}]], "Output",
 CellChangeTimes->{{3.739553536963663*^9, 3.7395535428073683`*^9}},
 CellLabel->"Out[69]=",ExpressionUUID->"aaefcfd2-7d0f-471f-839c-f2558687df55"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"elem", "=", 
  RowBox[{"ElementwiseLayer", "[", 
   RowBox[{
    RowBox[{"#", "*", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "&"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7395551901539154`*^9, 3.739555195664076*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"13a9a81f-ae02-4ad8-876b-99cf6015df85"],

Cell[BoxData[
 TemplateBox[{
  "ElementwiseLayer","invscf",
   "\"\\!\\(\\*RowBox[{RowBox[{\\\"#1\\\", \\\" \\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \\\"3\\\"}], \
\\\"}\\\"}]}], \\\"&\\\"}]\\) could not be symbolically evaluated as a \\!\\(\
\\*RowBox[{\\\"\\\\\\\"unary\\\\\\\"\\\"}]\\) scalar function.\"",2,110,30,
   24697668008397269180,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7395551968783965`*^9},
 CellLabel->
  "During evaluation of \
In[110]:=",ExpressionUUID->"5fd3dd66-724b-4a86-9a8f-0e231285c7e9"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.7395551968949056`*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"d2681ea3-20ae-4ee5-b218-fc0e33d7474a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "*", "{"}]], "Input",
 CellChangeTimes->{{3.7395555758141074`*^9, 
  3.739555578436471*^9}},ExpressionUUID->"fed3c233-4f38-479a-b72d-\
5f5d14bfe5f4"]
}, Open  ]]
},
WindowSize->{1500, 917},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>0.9 Inherited,
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 7, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info633739538299-1323769"->{
  Cell[630217, 12564, 2465, 41, 38, "Print",ExpressionUUID->"646dcfd2-b7c5-4ed0-ada0-4ae05019658e",
   CellTags->"Info633739538299-1323769"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info633739538299-1323769", 642620, 12847}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[583, 22, 163, 3, 48, "Subsection",ExpressionUUID->"a97b6548-7444-4f52-8385-55f7e3aac111"],
Cell[749, 27, 441, 8, 45, "Input",ExpressionUUID->"d8eb4aa3-ea91-4560-a5e4-89e2aa5ad890"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1227, 40, 230, 4, 48, "Subsection",ExpressionUUID->"8fef335a-119a-4684-9c73-4161c696fc69"],
Cell[CellGroupData[{
Cell[1482, 48, 468, 10, 26, "Input",ExpressionUUID->"37b3c95e-cf6e-4345-8213-2834e7838772"],
Cell[1953, 60, 14728, 293, 65, "Output",ExpressionUUID->"0a228ccc-e6a7-4500-9cef-cda9e51dda38"]
}, Open  ]],
Cell[16696, 356, 2697, 44, 225, "Input",ExpressionUUID->"b61fd62d-6249-4276-95f6-4e6f7dbc912f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19430, 405, 170, 3, 48, "Subsection",ExpressionUUID->"1d510bfb-5494-494c-a291-1cda52559c0d"],
Cell[19603, 410, 2091, 41, 99, "Input",ExpressionUUID->"5ffd5e94-746f-4af8-ba2d-32f494356219"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21731, 456, 159, 3, 48, "Subsection",ExpressionUUID->"b8773a27-cd1e-48ec-8d51-81bf6ff63b4b"],
Cell[21893, 461, 3313, 56, 351, "Input",ExpressionUUID->"edbf0ee2-cf30-4d82-9dab-f9b0c346225e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25243, 522, 159, 3, 48, "Subsection",ExpressionUUID->"1510df37-b6e3-4059-8d8a-68933a55834f"],
Cell[CellGroupData[{
Cell[25427, 529, 3829, 72, 189, "Input",ExpressionUUID->"f0396d21-c023-4886-859b-4555aa089e09"],
Cell[29259, 603, 42061, 847, 173, "Output",ExpressionUUID->"bd3e7c34-0594-4b7e-a274-fd7c83955078"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71357, 1455, 179, 3, 26, "Input",ExpressionUUID->"cd8471b6-4cdc-45fd-b167-bbeeefcad251"],
Cell[71539, 1460, 204, 4, 30, "Output",ExpressionUUID->"c279ac73-f6f2-4001-a6ae-ff3a34cb8a18"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[71792, 1470, 262, 4, 48, "Subsection",ExpressionUUID->"1de5c636-2c07-4bc9-98bb-1e273b057422"],
Cell[CellGroupData[{
Cell[72079, 1478, 3188, 67, 261, "Input",ExpressionUUID->"a483c109-1890-41a9-a395-427c3de3b8fa"],
Cell[75270, 1547, 53143, 1065, 77, "Output",ExpressionUUID->"063a23f6-6bee-4155-b9e9-5f67b86e54cf"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[128462, 2618, 156, 3, 48, "Subsection",ExpressionUUID->"ad5e5560-d72d-44fd-87ec-5a9600863698"],
Cell[CellGroupData[{
Cell[128643, 2625, 1823, 36, 153, "Input",ExpressionUUID->"7d2529f9-03da-4c54-9557-09b8b5cee6ea"],
Cell[130469, 2663, 37695, 765, 77, "Output",ExpressionUUID->"843a3843-6db3-43d6-8635-0c39ee35bab8"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[168213, 3434, 333, 5, 51, "Section",ExpressionUUID->"1625ce47-7e38-4ccf-93bd-d49aa95d21db"],
Cell[CellGroupData[{
Cell[168571, 3443, 170, 3, 48, "Subsection",ExpressionUUID->"0cd985cc-3af6-4533-854e-e0be71215472"],
Cell[CellGroupData[{
Cell[168766, 3450, 7501, 133, 585, "Input",ExpressionUUID->"31419281-fdd4-4dbc-8105-f2287a04b63a"],
Cell[176270, 3585, 130484, 2538, 77, "Output",ExpressionUUID->"9636357c-e964-4ee0-add3-eaec9c3cdf86"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[306803, 6129, 308, 5, 48, "Subsection",ExpressionUUID->"4d8708ae-94a3-460d-b70f-ce3a512d387e"],
Cell[307114, 6136, 1751, 28, 26, "Input",ExpressionUUID->"a7c64f03-a37b-4ff4-8fa9-4bfc6c4beb84"],
Cell[CellGroupData[{
Cell[308890, 6168, 1496, 27, 63, "Input",ExpressionUUID->"bc184bf2-cdcb-4b06-8822-87c061f3da92"],
Cell[310389, 6197, 56760, 1191, 176, "Output",ExpressionUUID->"482de106-edd3-4ba5-ba0d-9175fc2c580f"]
}, Open  ]],
Cell[367164, 7391, 549, 13, 45, "Input",ExpressionUUID->"428efe7e-29c3-462a-8c93-0313a0eddbc5"],
Cell[CellGroupData[{
Cell[367738, 7408, 2871, 49, 117, "Input",ExpressionUUID->"8fceabf9-ec10-47c1-a295-9b3b7892aa3b"],
Cell[370612, 7459, 129642, 2527, 110, "Output",ExpressionUUID->"3effc2d5-c20f-4903-9d67-2dae61460e01"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[500303, 9992, 158, 3, 48, "Subsection",ExpressionUUID->"2a188410-2540-4cfd-b762-b5b3e6ba0374"],
Cell[CellGroupData[{
Cell[500486, 9999, 3219, 60, 153, "Input",ExpressionUUID->"b9810408-eec2-4e6e-bc82-b51ac6a95600"],
Cell[503708, 10061, 54055, 944, 246, "Output",ExpressionUUID->"7099f93e-7842-4863-929e-3c09761413c1"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[557824, 11012, 158, 3, 60, "Section",ExpressionUUID->"8cb255c6-e198-432c-bcb4-a09c4f1145ee"],
Cell[CellGroupData[{
Cell[558007, 11019, 228, 4, 26, "Input",ExpressionUUID->"02ae2d9c-4198-41b0-abc8-3fe2a4951c59"],
Cell[558238, 11025, 381, 9, 20, "Message",ExpressionUUID->"d4766890-aa89-44bf-aceb-61395bb7cd09"],
Cell[558622, 11036, 160, 3, 30, "Output",ExpressionUUID->"3d6184f6-f3c1-45c1-98a6-e7bec394037f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[558819, 11044, 1172, 28, 58, "Input",ExpressionUUID->"216453e6-ca3d-4ef4-bff5-4e2813f0fc08"],
Cell[559994, 11074, 229, 5, 30, "Output",ExpressionUUID->"0fa5af2a-8ec3-4434-b08b-47a96874a4f1"],
Cell[560226, 11081, 227, 5, 30, "Output",ExpressionUUID->"7878fb20-1921-42ce-a7b9-2a8cdaf93e1e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[560490, 11091, 383, 10, 45, "Input",ExpressionUUID->"8d392152-0404-41b5-be45-9b5b294fcae0"],
Cell[560876, 11103, 697, 18, 30, "Output",ExpressionUUID->"288abf6d-57ce-46b0-a8a9-9b3cb803c788"],
Cell[561576, 11123, 181, 3, 30, "Output",ExpressionUUID->"d3994e05-9de3-4558-bec9-cc0b56e094ed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[561794, 11131, 4029, 91, 139, "Input",ExpressionUUID->"1818bb40-bce0-4eec-a21f-dd904e6f070a"],
Cell[565826, 11224, 213, 5, 30, "Output",ExpressionUUID->"78bea722-04ab-4bf9-895e-f9fc311b0fb2"],
Cell[566042, 11231, 159, 3, 30, "Output",ExpressionUUID->"76392810-6e9f-41e0-9453-d0cc9ffc2fb6"],
Cell[566204, 11236, 14096, 278, 63, "Output",ExpressionUUID->"67aca7a1-c163-4a91-9f8d-e01953df2b5b"],
Cell[580303, 11516, 403, 9, 20, "Message",ExpressionUUID->"10dc1839-e7c7-4e29-ac38-73a669586da4"],
Cell[580709, 11527, 162, 3, 30, "Output",ExpressionUUID->"ba6ce336-1426-4cb4-9d88-d783314351af"],
Cell[580874, 11532, 171, 4, 30, "Output",ExpressionUUID->"22571734-5f03-4daf-97da-4cecb5e640f0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[581082, 11541, 200, 5, 26, "Input",ExpressionUUID->"babf0536-5d41-47b8-9a89-787eacd04a58"],
Cell[581285, 11548, 278, 6, 30, "Output",ExpressionUUID->"79a31074-9cc4-4ec1-8d80-c7e5fef8dedb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[581600, 11559, 688, 17, 45, "Input",ExpressionUUID->"fa010b29-8bc5-4b3a-937d-69d188f16a56"],
Cell[582291, 11578, 2111, 50, 91, "Output",ExpressionUUID->"d164ac55-0091-4ced-b4bc-48542245da97"],
Cell[584405, 11630, 3285, 77, 137, "Output",ExpressionUUID->"2a409afa-9a74-4e29-ad94-572492011b1c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[587727, 11712, 681, 14, 15, "Input",ExpressionUUID->"77a3d246-4ba2-4719-8c73-74f4892462b6"],
Cell[588411, 11728, 834, 16, 25, "Output",ExpressionUUID->"c9cc56fb-dfbe-45e2-aa40-96b58c53c4ba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[589282, 11749, 408, 8, 27, "Input",ExpressionUUID->"67c62aa0-7153-4db5-a1c4-690aab0bd398"],
Cell[589693, 11759, 15074, 263, 257, "Output",ExpressionUUID->"5fe2eb57-2300-4a03-9a82-09618d20217d"],
Cell[604770, 12024, 1465, 28, 172, "Output",ExpressionUUID->"bdd57797-6397-412b-92ae-4e5717c64fd7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[606272, 12057, 340, 7, 15, "Input",ExpressionUUID->"ce1618ae-157d-4bbc-956c-d07e5a884f1a"],
Cell[606615, 12066, 516, 11, 18, "Output",ExpressionUUID->"a34444bf-85ce-4679-b810-1bf8e6d4d9d5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[607168, 12082, 355, 8, 15, "Input",ExpressionUUID->"0de0b708-e4c7-4aae-ba9c-6fc372259861"],
Cell[607526, 12092, 22451, 462, 51, "Output",ExpressionUUID->"ccb29947-de04-493e-8fe6-5f6a6b9d806b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[630014, 12559, 200, 3, 15, "Input",ExpressionUUID->"2cf0169d-bd9c-48b5-884f-0b62076b158e"],
Cell[630217, 12564, 2465, 41, 38, "Print",ExpressionUUID->"646dcfd2-b7c5-4ed0-ada0-4ae05019658e",
 CellTags->"Info633739538299-1323769"]
}, Open  ]],
Cell[632697, 12608, 211, 3, 15, "Input",ExpressionUUID->"e48b707b-c47e-4d16-8acb-7fad2f20b1ee"],
Cell[CellGroupData[{
Cell[632933, 12615, 667, 15, 27, "Input",ExpressionUUID->"1a1466f4-0e1e-4065-b012-91a2d8a6af48"],
Cell[633603, 12632, 7034, 153, 42, "Output",ExpressionUUID->"c0dca769-0cf8-465a-8442-8bf2243a7064"],
Cell[640640, 12787, 238, 4, 18, "Output",ExpressionUUID->"aaefcfd2-7d0f-471f-839c-f2558687df55"]
}, Open  ]],
Cell[CellGroupData[{
Cell[640915, 12796, 353, 9, 15, "Input",ExpressionUUID->"13a9a81f-ae02-4ad8-876b-99cf6015df85"],
Cell[641271, 12807, 581, 12, 12, "Message",ExpressionUUID->"5fd3dd66-724b-4a86-9a8f-0e231285c7e9"],
Cell[641855, 12821, 161, 3, 18, "Output",ExpressionUUID->"d2681ea3-20ae-4ee5-b218-fc0e33d7474a"]
}, Open  ]],
Cell[642031, 12827, 234, 6, 15, "Input",ExpressionUUID->"fed3c233-4f38-479a-b72d-5f5d14bfe5f4"]
}, Open  ]]
}
]
*)

