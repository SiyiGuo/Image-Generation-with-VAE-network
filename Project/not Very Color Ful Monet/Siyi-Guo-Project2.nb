(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='WolframDesktop 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       161,          7]
NotebookDataLength[    654368,      13060]
NotebookOptionsPosition[    645259,      12896]
NotebookOutlinePosition[    645854,      12918]
CellTagsIndexPosition[    645764,      12913]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Hyper Parameter", "Subsection",
 CellChangeTimes->{{3.739551732245135*^9, 
  3.739551736385481*^9}},ExpressionUUID->"a97b6548-7444-4f52-8385-\
55f7e3aac111"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nlatent", " ", "=", " ", "8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sampleSize", "=", " ", "60000"}], ";"}]}], "Input",
 CellChangeTimes->{{3.739551316690058*^9, 3.739551333600608*^9}, {
   3.7396686423057833`*^9, 3.7396686465900373`*^9}, 3.739670092731775*^9, {
   3.739717174778987*^9, 3.739717181629671*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"d8eb4aa3-ea91-4560-a5e4-89e2aa5ad890"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Encoder", "Subsection",
 CellChangeTimes->{{3.739551680305462*^9, 3.739551682201329*^9}, 
   3.739797298066251*^9, {3.739797342840246*^9, 
   3.7397973460662866`*^9}},ExpressionUUID->"8fef335a-119a-4684-9c73-\
4161c696fc69"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lrelu", " ", "=", " ", 
  RowBox[{"ElementwiseLayer", "[", 
   RowBox[{
    RowBox[{"Max", "[", 
     RowBox[{
      RowBox[{"Ramp", "[", "#", "]"}], ",", " ", 
      RowBox[{"#", "*", "0.3"}]}], "]"}], "&"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.739551680305462*^9, 3.739551682201329*^9}, 
   3.739797298066251*^9, {3.739797342840246*^9, 3.739797397032279*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"37b3c95e-cf6e-4345-8213-2834e7838772"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ElementwiseLayer", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014705882352941176`], {
                 RGBColor[0.557, 0.557, 0.557], 
                 RGBColor[0.33, 0.33, 0.33], 
                 Thickness[0.015029411764705883`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 18.5}, {14., 18.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.557, 0.557, 0.557], 
                 Thickness[0.015029411764705883`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{52.5, 18.5}, {44., 18.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.85, 0.85, 0.85], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{22.23,
                   18.5}, {33.5, 29.77}, {44.77, 18.5}, {33.5, 7.23}}}]}, {
                 FaceForm[{
                   RGBColor[0.56, 0.56, 0.56], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{33.5, 30.29}, {21.71, 
                  18.5}, {33.5, 6.71}, {45.29, 18.5}}, {{33.5, 29.25}, {44.25,
                   18.5}, {33.5, 7.75}, {22.75, 18.5}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{53.56, 15.4}, {51.88, 15.4}, {50.52, 16.76}, {
                  50.52, 18.44}, {50.52, 20.12}, {51.88, 21.48}, {53.56, 
                  21.48}, {55.24, 21.48}, {56.6, 20.12}, {56.6, 18.44}, {56.6,
                   16.76}, {55.24, 15.4}, {53.56, 15.4}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {0, 1, 0}}}, {{{53.56, 21.83}, {51.69, 21.83}, {50.17, 
                   20.31}, {50.17, 18.44}, {50.17, 16.57}, {51.69, 15.05}, {
                   53.56, 15.05}, {55.43, 15.05}, {56.95, 16.57}, {56.95, 
                   18.44}, {56.95, 20.31}, {55.43, 21.83}, {53.56, 21.83}}, {{
                   53.56, 21.83}, {53.56, 21.13}, {55.04, 21.13}, {56.25, 
                   19.92}, {56.25, 18.44}, {56.25, 16.96}, {55.04, 15.75}, {
                   53.56, 15.75}, {52.08, 15.75}, {50.87, 16.96}, {50.87, 
                   18.44}, {50.87, 19.92}, {52.08, 21.13}, {53.56, 21.13}, {
                   53.56, 21.83}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{13.56, 15.5}, {11.94, 15.5}, {10.62, 16.82}, {
                  10.62, 18.44}, {10.62, 20.06}, {11.94, 21.38}, {13.56, 
                  21.38}, {15.18, 21.38}, {16.5, 20.06}, {16.5, 18.44}, {16.5,
                   16.82}, {15.18, 15.5}, {13.56, 15.5}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}}}, {{{13.56, 21.73}, {11.74, 21.73}, {10.27, 
                   20.26}, {10.27, 18.44}, {10.27, 16.62}, {11.74, 15.15}, {
                   13.56, 15.15}, {15.38, 15.15}, {16.85, 16.62}, {16.85, 
                   18.44}, {16.85, 20.26}, {15.38, 21.73}, {13.56, 
                   21.73}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQLd/6OnCHnLaDx8MqkXXspg4MINCgA+efPQMCug6H
v2rE9B8ygYgf13MAa3M1gYrrQ8WNHdJAQM3AAcR1V0TwC225ri8uMILzwfqY
DB2qgcoe/tJ1MAaBzfoOMPfA+GBtezXhfIg5GlB1Bg7fQNaXqjsAya8acwwg
5lWpOcyaCQSShhD1H1Qh/jqA4MPcA+ODzbtnDHGXkwbc/+jhAwASgHiO
                   "]}]}}, ImageSize -> {40, Automatic}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{"\"Function\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TagBox[
                   FormBox[
                    RowBox[{"max", "(", 
                    RowBox[{
                    RowBox[{"0.3`", " ", "\"x\""}], ",", 
                    RowBox[{"Ramp", "[", "\"x\"", "]"}]}], ")"}], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"tensor\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014705882352941176`], {
                 RGBColor[0.557, 0.557, 0.557], 
                 RGBColor[0.33, 0.33, 0.33], 
                 Thickness[0.015029411764705883`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 18.5}, {14., 18.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.557, 0.557, 0.557], 
                 Thickness[0.015029411764705883`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{52.5, 18.5}, {44., 18.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.85, 0.85, 0.85], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{22.23,
                   18.5}, {33.5, 29.77}, {44.77, 18.5}, {33.5, 7.23}}}]}, {
                 FaceForm[{
                   RGBColor[0.56, 0.56, 0.56], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{33.5, 30.29}, {21.71, 
                  18.5}, {33.5, 6.71}, {45.29, 18.5}}, {{33.5, 29.25}, {44.25,
                   18.5}, {33.5, 7.75}, {22.75, 18.5}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{53.56, 15.4}, {51.88, 15.4}, {50.52, 16.76}, {
                  50.52, 18.44}, {50.52, 20.12}, {51.88, 21.48}, {53.56, 
                  21.48}, {55.24, 21.48}, {56.6, 20.12}, {56.6, 18.44}, {56.6,
                   16.76}, {55.24, 15.4}, {53.56, 15.4}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {0, 1, 0}}}, {{{53.56, 21.83}, {51.69, 21.83}, {50.17, 
                   20.31}, {50.17, 18.44}, {50.17, 16.57}, {51.69, 15.05}, {
                   53.56, 15.05}, {55.43, 15.05}, {56.95, 16.57}, {56.95, 
                   18.44}, {56.95, 20.31}, {55.43, 21.83}, {53.56, 21.83}}, {{
                   53.56, 21.83}, {53.56, 21.13}, {55.04, 21.13}, {56.25, 
                   19.92}, {56.25, 18.44}, {56.25, 16.96}, {55.04, 15.75}, {
                   53.56, 15.75}, {52.08, 15.75}, {50.87, 16.96}, {50.87, 
                   18.44}, {50.87, 19.92}, {52.08, 21.13}, {53.56, 21.13}, {
                   53.56, 21.83}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{13.56, 15.5}, {11.94, 15.5}, {10.62, 16.82}, {
                  10.62, 18.44}, {10.62, 20.06}, {11.94, 21.38}, {13.56, 
                  21.38}, {15.18, 21.38}, {16.5, 20.06}, {16.5, 18.44}, {16.5,
                   16.82}, {15.18, 15.5}, {13.56, 15.5}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}}}, {{{13.56, 21.73}, {11.74, 21.73}, {10.27, 
                   20.26}, {10.27, 18.44}, {10.27, 16.62}, {11.74, 15.15}, {
                   13.56, 15.15}, {15.38, 15.15}, {16.85, 16.62}, {16.85, 
                   18.44}, {16.85, 20.26}, {15.38, 21.73}, {13.56, 
                   21.73}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQLd/6OnCHnLaDx8MqkXXspg4MINCgA+efPQMCug6H
v2rE9B8ygYgf13MAa3M1gYrrQ8WNHdJAQM3AAcR1V0TwC225ri8uMILzwfqY
DB2qgcoe/tJ1MAaBzfoOMPfA+GBtezXhfIg5GlB1Bg7fQNaXqjsAya8acwwg
5lWpOcyaCQSShhD1H1Qh/jqA4MPcA+ODzbtnDHGXkwbc/+jhAwASgHiO
                   "]}]}}, ImageSize -> {40, Automatic}], 
              GridBox[{{
                 ItemBox[
                  StyleBox["Parameters", Bold]], 
                 ItemBox[""]}, {
                 StyleBox[
                  TemplateBox[{"\"Function\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TagBox[
                   FormBox[
                    RowBox[{"max", "(", 
                    RowBox[{
                    RowBox[{"0.3`", " ", "\"x\""}], ",", 
                    RowBox[{"Ramp", "[", "\"x\"", "]"}]}], ")"}], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                  "SummaryItem"]}, {
                 ItemBox[
                  StyleBox["Ports", Bold], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]], 
                 ItemBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                   "CacheGraphics" -> False], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]]}, {
                 StyleBox[
                  TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"tensor\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"tensor\"", "SummaryItem"]}}, 
               BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 3}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ElementwiseLayer[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.739797397490271*^9, 3.739797417003497*^9}, 
   3.7398008378793354`*^9, 3.7398114105536523`*^9, 3.73991542454438*^9, 
   3.739981457670958*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"95c94cc8-d4dc-4eda-ae3d-761776f5e256"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"encoder", " ", "=", " ", 
   RowBox[{"NetChain", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ConvolutionLayer", "[", 
       RowBox[{"64", ",", " ", "4", ",", " ", 
        RowBox[{"\"\<Stride\>\"", "\[Rule]", "2"}], ",", " ", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", "2"}]}], "]"}], ",", 
      "\[IndentingNewLine]", "lrelu", ",", "\[IndentingNewLine]", 
      RowBox[{"DropoutLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ConvolutionLayer", "[", 
       RowBox[{"64", ",", " ", "4", ",", " ", 
        RowBox[{"\"\<Stride\>\"", "\[Rule]", "2"}], ",", " ", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", "2"}]}], "]"}], ",", 
      "\[IndentingNewLine]", "lrelu", ",", "\[IndentingNewLine]", 
      RowBox[{"DropoutLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ConvolutionLayer", "[", 
       RowBox[{"64", ",", " ", "4", ",", " ", 
        RowBox[{"\"\<Stride\>\"", "\[Rule]", "1"}], ",", " ", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", "2"}]}], "]"}], ",", 
      "\[IndentingNewLine]", "lrelu", ",", "\[IndentingNewLine]", 
      RowBox[{"DropoutLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"FlattenLayer", "[", "]"}]}], "\[IndentingNewLine]", "}"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7395491087158737`*^9, 3.73954917811176*^9}, {
   3.739549218210209*^9, 3.7395492956660833`*^9}, {3.7395493546752667`*^9, 
   3.7395493694767766`*^9}, {3.739550100213616*^9, 3.7395501005517516`*^9}, 
   3.7395506987487946`*^9, {3.739550763158961*^9, 3.7395507829405527`*^9}, {
   3.7395513101844034`*^9, 3.7395513112562037`*^9}, {3.739553041169927*^9, 
   3.7395530814694223`*^9}, {3.7396427053090143`*^9, 
   3.7396427062149363`*^9}, {3.7397064531160984`*^9, 3.7397064556743484`*^9}, 
   3.739716288881195*^9, {3.7397197436824937`*^9, 3.73971974511782*^9}, {
   3.7397382200078974`*^9, 3.739738237032915*^9}, {3.7397386776756477`*^9, 
   3.7397387248926487`*^9}, {3.739738764458597*^9, 3.7397388295626097`*^9}, {
   3.739738946903629*^9, 3.7397389531816115`*^9}, {3.739739030868601*^9, 
   3.7397390745136156`*^9}, {3.73973918457199*^9, 3.739739184768979*^9}, {
   3.739739235728995*^9, 3.7397392421189823`*^9}, {3.7397393644694333`*^9, 
   3.7397393798952384`*^9}, {3.739756551760101*^9, 3.739756555321489*^9}, {
   3.7397569889289956`*^9, 3.739756995272276*^9}, {3.7397573111038747`*^9, 
   3.739757319776167*^9}, {3.739796901869957*^9, 3.7397969077870407`*^9}, {
   3.73979740163824*^9, 3.739797405355241*^9}, {3.7398000923253517`*^9, 
   3.7398001425868797`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"b61fd62d-6249-4276-95f6-4e6f7dbc912f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Middle Trick Z layer", "Subsection",
 CellChangeTimes->{{3.739551687254616*^9, 
  3.7395516940382557`*^9}},ExpressionUUID->"1d510bfb-5494-494c-a291-\
1cda52559c0d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mn", " ", "=", " ", 
   RowBox[{"LinearLayer", "[", "nlatent", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sd", "=", " ", 
   RowBox[{"NetChain", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"LinearLayer", "[", "nlatent", "]"}], ",", 
      RowBox[{"ElementwiseLayer", "[", 
       RowBox[{
        RowBox[{"#", "*", "0.5"}], "&"}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"expSd", " ", "=", " ", 
   RowBox[{"ElementwiseLayer", "[", 
    RowBox[{
     RowBox[{"Exp", "[", "#", "]"}], "&"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z", " ", "=", 
   RowBox[{"TotalLayer", "[", "]"}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7395491087158737`*^9, 3.73954917811176*^9}, {
   3.739549218210209*^9, 3.7395492956660833`*^9}, {3.7395493546752667`*^9, 
   3.7395493694767766`*^9}, {3.739550100213616*^9, 3.7395501005517516`*^9}, {
   3.7395506987487946`*^9, 3.739550715179901*^9}, {3.7395512449249754`*^9, 
   3.739551276851375*^9}, 3.7395513375830107`*^9, {3.7395515781816907`*^9, 
   3.7395515847436523`*^9}, {3.7395529647125893`*^9, 
   3.7395529676392713`*^9}, {3.739553158868684*^9, 3.7395532248187704`*^9}, {
   3.739553457330779*^9, 3.739553521142729*^9}, {3.739553908178919*^9, 
   3.739553930029264*^9}, {3.739554079763504*^9, 3.7395540897121577`*^9}, {
   3.739554133563135*^9, 3.7395542311423635`*^9}, {3.7395546155509634`*^9, 
   3.7395546362187023`*^9}, {3.7395546795450125`*^9, 3.739554687174427*^9}, {
   3.739554745978673*^9, 3.7395547579545517`*^9}, {3.7395550832738695`*^9, 
   3.7395550911013155`*^9}, {3.739563601684586*^9, 3.739563634298044*^9}, {
   3.7395779331005144`*^9, 3.7395779348582907`*^9}, {3.7395801891391616`*^9, 
   3.739580189373973*^9}, {3.739653171873227*^9, 3.739653173339471*^9}, {
   3.739653666217244*^9, 3.7396536862047267`*^9}, {3.739658054893764*^9, 
   3.7396580554502954`*^9}, {3.739800365648552*^9, 3.739800368103361*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"5ffd5e94-746f-4af8-ba2d-32f494356219"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Decoder", "Subsection",
 CellChangeTimes->{{3.7395516987804565`*^9, 
  3.7395517004113936`*^9}},ExpressionUUID->"b8773a27-cd1e-48ec-8d51-\
81bf6ff63b4b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"decoder", " ", "=", " ", 
   RowBox[{"NetChain", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
     "25", ",", "\[IndentingNewLine]", "lrelu", ",", "\[IndentingNewLine]", 
      "49", ",", " ", "\[IndentingNewLine]", "lrelu", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ReshapeLayer", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "7", ",", "7"}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"DeconvolutionLayer", "[", 
       RowBox[{"64", ",", " ", "4", ",", " ", 
        RowBox[{"\"\<Stride\>\"", "\[Rule]", "2"}], ",", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", "2"}]}], "]"}], ",", 
      "\[IndentingNewLine]", "Ramp", ",", "\[IndentingNewLine]", 
      RowBox[{"DropoutLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"DeconvolutionLayer", "[", 
       RowBox[{"64", ",", " ", "4", ",", " ", 
        RowBox[{"\"\<Stride\>\"", "\[Rule]", "1"}], ",", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", "2"}]}], "]"}], ",", 
      "\[IndentingNewLine]", "Ramp", ",", "\[IndentingNewLine]", 
      RowBox[{"DropoutLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"DeconvolutionLayer", "[", 
       RowBox[{"64", ",", " ", "4", ",", " ", 
        RowBox[{"\"\<Stride\>\"", "\[Rule]", "1"}], ",", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", "2"}]}], "]"}], ",", 
      "\[IndentingNewLine]", "Ramp", ",", "\[IndentingNewLine]", 
      RowBox[{"FlattenLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"28", "*", "28"}], ",", "\[IndentingNewLine]", 
      "LogisticSigmoid", ",", "\[IndentingNewLine]", 
      RowBox[{"ReshapeLayer", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "28", ",", "28"}], "}"}], "]"}]}], 
     "\[IndentingNewLine]", "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7395494974551506`*^9, 3.7395495046283197`*^9}, {
   3.7395510248368125`*^9, 3.7395510310459833`*^9}, {3.7395530865320435`*^9, 
   3.7395530890187006`*^9}, {3.739574426986454*^9, 3.7395744331238127`*^9}, {
   3.739574497367547*^9, 3.7395744993428903`*^9}, 3.7396531773926125`*^9, {
   3.739706461019185*^9, 3.7397064632360244`*^9}, {3.7397162948216295`*^9, 
   3.73971630056956*^9}, {3.739719747686528*^9, 3.739719749966364*^9}, {
   3.739738264288909*^9, 3.7397382739389133`*^9}, {3.739738853730604*^9, 
   3.7397389720616074`*^9}, {3.73973938318534*^9, 3.739739384977476*^9}, {
   3.739739420803893*^9, 3.739739443681853*^9}, {3.7397396218078933`*^9, 
   3.7397396313349075`*^9}, {3.7397396799720216`*^9, 3.739739681793908*^9}, {
   3.7397397124359007`*^9, 3.739739730399901*^9}, {3.739739814692984*^9, 
   3.73973981614898*^9}, {3.739739865804993*^9, 3.7397398829687643`*^9}, {
   3.7397566218803396`*^9, 3.739756681167693*^9}, {3.739756759474098*^9, 
   3.739756837663678*^9}, {3.73975693884508*^9, 3.7397569632685223`*^9}, {
   3.7397573254543333`*^9, 3.7397573339639964`*^9}, {3.739793536041973*^9, 
   3.739793542061054*^9}, {3.7397944858854265`*^9, 3.739794489394738*^9}, {
   3.7397969140676365`*^9, 3.7397969186518593`*^9}, {3.739800489331607*^9, 
   3.7398005375078735`*^9}, {3.7398006155175943`*^9, 
   3.7398006279111056`*^9}, {3.7398008319336505`*^9, 3.73980083207866*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"edbf0ee2-cf30-4d82-9dab-f9b0c346225e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["ImageLoss", "Subsection",
 CellChangeTimes->{{3.7396580504733496`*^9, 
  3.739658066790998*^9}},ExpressionUUID->"1510df37-b6e3-4059-8d8a-\
68933a55834f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Assume", " ", "input", " ", "is", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", "28", ",", "28"}], "}"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "output", " ", "the", " ", "real", " ", "number", " ", "as", " ", "wll"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"imageLoss", " ", "=", " ", 
   RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ElementwiseLayer", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "*", "#"}], " ", "&"}], "]"}], ",", " ", 
       RowBox[{"TotalLayer", "[", "]"}], ",", " ", 
       RowBox[{"ElementwiseLayer", "[", 
        RowBox[{
         RowBox[{"#", "^", "2"}], "&"}], "]"}], ",", " ", 
       RowBox[{"SummationLayer", "[", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<inDec\>\"", "]"}], "\[Rule]", 
        RowBox[{"1", "->", "2"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<inInput\>\"", "]"}], "\[Rule]", "2"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"2", "\[Rule]", 
        RowBox[{"3", "\[Rule]", "4"}]}]}], "\[IndentingNewLine]", "}"}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7396580504733496`*^9, 3.7396580704733276`*^9}, {
   3.739658183848325*^9, 3.739658231838282*^9}, {3.7396582697827425`*^9, 
   3.7396582776903963`*^9}, {3.739658334942755*^9, 3.739658339791144*^9}, {
   3.7396589960878963`*^9, 3.739658999169059*^9}, {3.7396598749534454`*^9, 
   3.7396598778682594`*^9}, {3.739659999094411*^9, 3.739659999297686*^9}, {
   3.739660029523304*^9, 3.73966003873488*^9}, {3.739660095430449*^9, 
   3.7396601408837013`*^9}, {3.73966033166679*^9, 3.739660332402121*^9}, {
   3.739660371402605*^9, 3.739660372759054*^9}, {3.739801871719342*^9, 
   3.7398018874229064`*^9}, {3.7398027411215754`*^9, 
   3.7398027730066285`*^9}, {3.739803124346739*^9, 3.739803152802951*^9}, 
   3.739803211448743*^9, {3.739803623768796*^9, 3.739803641118581*^9}, 
   3.739803682781166*^9, {3.739803715240907*^9, 3.739803716062747*^9}, {
   3.7398038647194386`*^9, 3.739803865080753*^9}, {3.739804183405492*^9, 
   3.739804183776039*^9}, {3.7398042395820026`*^9, 3.739804250000084*^9}, {
   3.7398044941909447`*^9, 3.7398045212432337`*^9}, {3.739804905798359*^9, 
   3.739804958637001*^9}, {3.739805080714749*^9, 3.7398050831231155`*^9}, {
   3.7398075943133726`*^9, 3.739807629214981*^9}, {3.739807748553124*^9, 
   3.7398077671812134`*^9}, {3.739807829325135*^9, 3.7398078337119646`*^9}, {
   3.739808060318533*^9, 3.739808060482891*^9}, {3.739808111369532*^9, 
   3.73980811410174*^9}, {3.739808196752138*^9, 3.739808196923518*^9}, {
   3.739808436809472*^9, 3.73980844868378*^9}, {3.7398085609394836`*^9, 
   3.7398085610534115`*^9}, {3.739808666071518*^9, 3.739808670784358*^9}, 
   3.7398090468229074`*^9, {3.739809202091514*^9, 3.7398092193793154`*^9}, {
   3.7398093821562147`*^9, 3.739809382282889*^9}, {3.739809414304573*^9, 
   3.739809421663409*^9}, {3.7398094899230976`*^9, 3.739809607759758*^9}, {
   3.7398096408717833`*^9, 3.739809694435369*^9}, {3.7398099356477766`*^9, 
   3.7398099479985595`*^9}, {3.739810026899426*^9, 3.7398100296190786`*^9}, {
   3.7398100999142323`*^9, 3.7398101076445475`*^9}, {3.739810145297225*^9, 
   3.73981016437331*^9}, {3.739915434894289*^9, 3.73991547693605*^9}, {
   3.739917009501216*^9, 3.739917016333226*^9}, {3.739918398086446*^9, 
   3.7399184090230455`*^9}, 3.739981711030979*^9, {3.73998174979245*^9, 
   3.7399817691333237`*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"f0396d21-c023-4886-859b-4555aa089e09"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["4", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], {
                    
                    LineBox[{{-5., 3.061616997868383*^-16}, {-4., 
                    2.4492935982947064`*^-16}}], 
                    
                    LineBox[{{-4., 2.4492935982947064`*^-16}, {-3., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-4., 1.0000000000000002`}, {-3., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-3., 1.0000000000000002`}, {-2., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-2., 1.0000000000000002`}, {-0.9999999999999999,
                     1.}}], 
                    
                    LineBox[{{-0.9999999999999999, 1.}, {
                    6.123233995736766*^-17, 1.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-4.4, 
                    2.694222958124177*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-3.4, 
                    0.6000000000000002}, {-0.25, 0}, 
                    Offset[8], {1., 1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-3.4, 
                    1.0000000000000002`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, 
                    1.0000000000000002`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    1.}, {-0.25, 0}, 
                    Offset[8], {1., -2.220446049250313*^-16}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-0.3999999999999999, 1.}, {-0.25, 0}, 
                    Offset[8], {1., 0.}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-5., 3.061616997868383*^-16}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"inDec\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["inDec", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-4., 2.4492935982947064`*^-16}], 
                    Offset[{10, 10}, {-4., 2.4492935982947064`*^-16}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], TraditionalForm]], {-4., 
                    2.4492935982947064`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Slot", "[", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "]"}]}], "&"}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["1", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[Minus[#]& , {4, 3}]]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-3., 1.0000000000000002`}], 
                    Offset[{10, 10}, {-3., 1.0000000000000002`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"+\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-3., 1.0000000000000002`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"TotalLayer", "[", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["2", Bold], 
                    Style[
                    HoldForm[
                    TotalLayer["Inputs" -> {Automatic, Automatic}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-4., 1.0000000000000002`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"inInput\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["inInput", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-2., 1.0000000000000002`}], 
                    Offset[{10, 10}, {-2., 1.0000000000000002`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], TraditionalForm]], {-2., 
                    1.0000000000000002`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"3\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"Slot", "[", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "]"}], "2"], "&"}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["3", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[#^2& , {4, 3}]]], FontFamily -> "Source Code Pro",
                     ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-0.9999999999999999, 1.}], 
                    Offset[{10, 10}, {-0.9999999999999999, 1.}]]}, 
                    InsetBox[
                    FormBox["\"S\"", TraditionalForm], 
                    Offset[{0, -1}, {-0.9999999999999999, 1.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"4\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"SummationLayer", "[", "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["4", Bold], 
                    Style[
                    HoldForm[
                    SummationLayer[]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{6.123233995736766*^-17, 1.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    StyleBox[{{
                    InsetBox[
                    FormBox["\"inDec\"", TraditionalForm], 
                    Offset[{0, -7}, {-5., 3.061616997868383*^-16}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    Offset[{0, -13}, {-4., 2.4492935982947064`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    Offset[{0, -13}, {-3., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"inInput\"", TraditionalForm], 
                    Offset[{0, -7}, {-4., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{0, -13}, {-2., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    Offset[{0, -13}, {-0.9999999999999999, 1.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    Offset[{0, -7}, {6.123233995736766*^-17, 1.}], {0, 1.}, 
                    Automatic, {1, 0}]}}, FontColor -> GrayLevel[0.5], 
                    StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-4.4, 
                    2.694222958124177*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{-3.889087296526011, 3.889087296526011}, {-3.4, 
                    0.6000000000000002}], {0., -0.17}, Automatic, {
                    0.7071067811865475, 0.7071067811865475}], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-3.4, 1.0000000000000002`}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0., 5.5}, {-2.4000000000000004`, 
                    1.0000000000000002`}], {0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"\[DottedSquare]\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{1.2212453270876722`*^-15, 5.5}, {-1.4, 1.}], {
                    0., -0.17}, Automatic, {1., -2.220446049250313*^-16}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-0.3999999999999999, 1.}], {0., -0.17},
                     Automatic, {1., 0.}]}, FontColor -> GrayLevel[0.7], 
                    FontSize -> 8, FontWeight -> "Thin", StripOnInput -> 
                    False]}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    Part[{{-5., 3.061616997868383*^-16}, {-4., 
                    2.4492935982947064`*^-16}, {-3., 
                    1.0000000000000002`}, {-4., 1.0000000000000002`}, {-2., 
                    1.0000000000000002`}, {-0.9999999999999999, 1.}, {
                    6.123233995736766*^-17, 1.}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 20, 20, 8, 20, 20, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, ImageSize -> {325.5, 96.}, AspectRatio -> 
                    Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{24., 26.5}, {27., 14.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "inDec"], 
                    NeuralNetworks`NetPath["Nodes", "1"], 
                    NeuralNetworks`NetPath["Nodes", "2"], 
                    NeuralNetworks`NetPath["Inputs", "inInput"], 
                    NeuralNetworks`NetPath["Nodes", "3"], 
                    NeuralNetworks`NetPath["Nodes", "4"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association["inDec" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT], "inInput" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    Association[
                    "1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Power, 
                    NeuralNetworks`Private`ScalarSymbol[1], 2.}]]], 
                    "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{NeuralNetworks`SizeT}, 
                    NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]]], "4" -> 
                    Association[
                    "Type" -> "Summation", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{NeuralNetworks`SizeT}, 
                    NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]]]]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"inDec\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"tensor\"", "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{"\"inInput\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"tensor\"", "SummaryItem"], "", "", "", ""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.7399154623567705`*^9, 3.7399154841591644`*^9}, 
   3.7399181767859435`*^9, 3.739981462243232*^9, {3.739981745065756*^9, 
   3.7399817716408205`*^9}},
 CellLabel->"Out[51]=",ExpressionUUID->"5922d144-8d84-42c2-ab1e-263096e728bd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7398079772824926`*^9, 3.739808011739949*^9}, 
   3.7398080585236807`*^9},ExpressionUUID->"cd8471b6-4cdc-45fd-b167-\
bbeeefcad251"],

Cell[BoxData[
 RowBox[{"{", "0.`", "}"}]], "Output",
 CellChangeTimes->{{3.7398080073826513`*^9, 3.739808012300243*^9}},
 CellLabel->
  "Out[1312]=",ExpressionUUID->"c279ac73-f6f2-4001-a6ae-ff3a34cb8a18"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Latent Loss", "Subsection",
 CellChangeTimes->{{3.7396580504733496`*^9, 3.7396580704733276`*^9}, {
  3.739658183848325*^9, 3.7396581867788134`*^9}, {3.7396607866514063`*^9, 
  3.739660791490347*^9}},ExpressionUUID->"1de5c636-2c07-4bc9-98bb-\
1e273b057422"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Assume", " ", "input", " ", "is", " ", 
     RowBox[{"{", "8", "}"}]}], ",", " ", 
    RowBox[{"{", "8", "}"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"latentLoss", " ", "=", " ", 
   RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ElementwiseLayer", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "0.5"}], "*", "#"}], "&"}], "]"}], ",", " ", 
       RowBox[{"TotalLayer", "[", "]"}], ",", " ", 
       RowBox[{"ElementwiseLayer", "[", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"#", "^", "2"}], ")"}]}], "&"}], "]"}], ",", " ", 
       RowBox[{"ElementwiseLayer", "[", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Exp", "[", 
           RowBox[{"2", "*", "#"}], "]"}]}], "&"}], "]"}], ",", " ", 
       RowBox[{"ElementwiseLayer", "[", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"2", "*", "#"}]}], "&"}], "]"}], ",", 
       RowBox[{"SummationLayer", "[", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<mn\>\"", "]"}], "\[Rule]", "3"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<sd\>\"", "]"}], "\[Rule]", "4"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<sd\>\"", "]"}], "\[Rule]", "5"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"3", "\[Rule]", "2"}], ",", "\[IndentingNewLine]", 
       RowBox[{"4", "\[Rule]", "2"}], ",", "\[IndentingNewLine]", 
       RowBox[{"5", "\[Rule]", "2"}], ",", "\[IndentingNewLine]", 
       RowBox[{"2", "\[Rule]", "6"}], ",", "\[IndentingNewLine]", 
       RowBox[{"6", "\[Rule]", "1"}]}], "\[IndentingNewLine]", "}"}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7396580504733496`*^9, 3.7396580704733276`*^9}, {
   3.739658183848325*^9, 3.7396581867788134`*^9}, {3.7396607866514063`*^9, 
   3.7396608011688447`*^9}, {3.739661785555604*^9, 3.73966179277761*^9}, {
   3.739661875765953*^9, 3.739662019573432*^9}, {3.739662169718382*^9, 
   3.7396623039581375`*^9}, {3.739662471213227*^9, 3.739662489242158*^9}, {
   3.739662676125009*^9, 3.7396626768218703`*^9}, {3.739662716331247*^9, 
   3.739662765525912*^9}, {3.7396629501185417`*^9, 3.7396629508067074`*^9}, {
   3.739738308445907*^9, 3.739738311391897*^9}, {3.739801684337245*^9, 
   3.7398016966389213`*^9}, {3.739801777185547*^9, 3.739801783970646*^9}, {
   3.7398029610184975`*^9, 3.7398029663454523`*^9}, {3.7398032169269686`*^9, 
   3.739803227170117*^9}, {3.739808120429064*^9, 3.739808122342973*^9}, 
   3.739808194907878*^9, {3.7398083916319027`*^9, 3.739808397133438*^9}, {
   3.739808431454223*^9, 3.739808451609259*^9}, {3.7398085573416867`*^9, 
   3.7398085717260637`*^9}, {3.7398086417986193`*^9, 3.739808659401613*^9}, {
   3.739808986907992*^9, 3.7398089922877884`*^9}, {3.7398092276350017`*^9, 
   3.739809254920138*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"a483c109-1890-41a9-a395-427c3de3b8fa"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["6", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], {
                    
                    LineBox[{{-5., 3.061616997868383*^-16}, {-4., 
                    2.4492935982947064`*^-16}}], 
                    
                    LineBox[{{-4., 2.4492935982947064`*^-16}, {-3., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-5., 1.0000000000000002`}, {-4., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-5., 2.0000000000000004`}, {-4., 
                    2.0000000000000004`}}], 
                    
                    LineBox[{{-4., 1.0000000000000002`}, {-3., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-4., 2.0000000000000004`}, {-3., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-3., 1.0000000000000002`}, {-2., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-2., 1.0000000000000002`}, {-0.9999999999999999,
                     1.}}], 
                    
                    LineBox[{{-0.9999999999999999, 1.}, {
                    6.123233995736766*^-17, 1.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-4.4, 
                    2.694222958124177*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-3.4, 
                    0.6000000000000002}, {-0.25, 0}, 
                    Offset[8], {1., 1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-4.4, 
                    1.0000000000000002`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-4.4, 
                    2.0000000000000004`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-3.4, 
                    1.0000000000000002`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-3.4, 
                    1.4000000000000004`}, {-0.25, 0}, 
                    Offset[8], {1., -1.0000000000000002`}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, 
                    1.0000000000000002`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    1.}, {-0.25, 0}, 
                    Offset[8], {1., -2.220446049250313*^-16}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-0.3999999999999999, 1.}, {-0.25, 0}, 
                    Offset[8], {1., 0.}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-5., 3.061616997868383*^-16}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"mn\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["mn", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-4., 2.4492935982947064`*^-16}], 
                    Offset[{10, 10}, {-4., 2.4492935982947064`*^-16}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], TraditionalForm]], {-4., 
                    2.4492935982947064`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"3\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Power", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}]}], "&"}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["3", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[Minus[#^2]& , {4, 3}]]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-3., 1.0000000000000002`}], 
                    Offset[{10, 10}, {-3., 1.0000000000000002`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"+\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-3., 1.0000000000000002`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"TotalLayer", "[", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", "Automatic", ",", "Automatic"}],
                     "}"}]}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["2", Bold], 
                    Style[
                    HoldForm[
                    TotalLayer[
                    "Inputs" -> {Automatic, Automatic, Automatic}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-5., 1.0000000000000002`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"sd\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["sd", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-4., 1.0000000000000002`}], 
                    Offset[{10, 10}, {-4., 1.0000000000000002`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], TraditionalForm]], {-4., 
                    1.0000000000000002`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"4\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "]"}]}], "&"}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["4", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[Minus[
                    Exp[2 #]]& , {4, 3}]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-4., 2.0000000000000004`}], 
                    Offset[{10, 10}, {-4., 2.0000000000000004`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], TraditionalForm]], {-4., 
                    2.0000000000000004`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"5\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    RowBox[{"1", "+", 
                    RowBox[{"Times", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}]}], "&"}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["5", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[1 + 2 #& , {4, 3}]]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-2., 1.0000000000000002`}], 
                    Offset[{10, 10}, {-2., 1.0000000000000002`}]]}, 
                    InsetBox[
                    FormBox["\"S\"", TraditionalForm], 
                    Offset[{0, -1}, {-2., 1.0000000000000002`}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"6\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"SummationLayer", "[", "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["6", Bold], 
                    Style[
                    HoldForm[
                    SummationLayer[]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-0.9999999999999999, 1.}], 
                    Offset[{10, 10}, {-0.9999999999999999, 1.}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], 
                    TraditionalForm]], {-0.9999999999999999, 1.}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "0.5`"}], " ", 
                    RowBox[{"Slot", "[", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "]"}]}], "&"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "\"Real\""}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["1", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[(-0.5) #& , {4, 3}], "Input" -> "Real"]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{6.123233995736766*^-17, 1.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-5., 2.0000000000000004`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"sd\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["sd", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    StyleBox[{{
                    InsetBox[
                    FormBox["\"mn\"", TraditionalForm], 
                    Offset[{0, -7}, {-5., 3.061616997868383*^-16}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{0, -13}, {-4., 2.4492935982947064`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    Offset[{0, -13}, {-3., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"sd\"", TraditionalForm], 
                    Offset[{0, -7}, {-5., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    Offset[{0, -13}, {-4., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    Offset[{0, -13}, {-4., 2.0000000000000004`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"6\"", TraditionalForm], 
                    Offset[{0, -13}, {-2., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    Offset[{0, -13}, {-0.9999999999999999, 1.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    Offset[{0, -7}, {6.123233995736766*^-17, 1.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"sd\"", TraditionalForm], 
                    Offset[{0, -7}, {-5., 2.0000000000000004`}], {0, 1.}, 
                    Automatic, {1, 0}]}}, FontColor -> GrayLevel[0.5], 
                    StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-4.4, 
                    2.694222958124177*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{-3.889087296526011, 3.889087296526011}, {-3.4, 
                    0.6000000000000002}], {0., -0.17}, Automatic, {
                    0.7071067811865475, 0.7071067811865475}], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-4.4, 1.0000000000000002`}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-4.4, 2.0000000000000004`}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-3.4, 1.0000000000000002`}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{3.8890872965260117`, 3.889087296526011}, {-3.4, 
                    1.4000000000000004`}], {0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865476}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"\[DottedSquare]\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{0., 5.5}, {-2.4000000000000004`, 
                    1.0000000000000002`}], {0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    Offset[{1.2212453270876722`*^-15, 5.5}, {-1.4, 1.}], {
                    0., -0.17}, Automatic, {1., -2.220446049250313*^-16}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-0.3999999999999999, 1.}], {0., -0.17},
                     Automatic, {1., 0.}]}, FontColor -> GrayLevel[0.7], 
                    FontSize -> 8, FontWeight -> "Thin", StripOnInput -> 
                    False]}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    Part[{{-5., 3.061616997868383*^-16}, {-4., 
                    2.4492935982947064`*^-16}, {-3., 
                    1.0000000000000002`}, {-5., 1.0000000000000002`}, {-4., 
                    1.0000000000000002`}, {-4., 2.0000000000000004`}, {-2., 
                    1.0000000000000002`}, {-0.9999999999999999, 1.}, {
                    6.123233995736766*^-17, 1.}, {-5., 2.0000000000000004`}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 20, 20, 8, 20, 20, 20, 20, 8, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, ImageSize -> {325.5, 151.}, AspectRatio -> 
                    Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{24., 26.5}, {27., 14.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "mn"], 
                    NeuralNetworks`NetPath["Nodes", "3"], 
                    NeuralNetworks`NetPath["Nodes", "2"], 
                    NeuralNetworks`NetPath["Inputs", "sd"], 
                    NeuralNetworks`NetPath["Nodes", "4"], 
                    NeuralNetworks`NetPath["Nodes", "5"], 
                    NeuralNetworks`NetPath["Nodes", "6"], 
                    NeuralNetworks`NetPath["Nodes", "1"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association["mn" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT], "sd" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    Association[
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Power, 
                    NeuralNetworks`Private`ScalarSymbol[1], 2.}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 2., 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[2]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 2., 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Plus, 1., 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT], "3" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{NeuralNetworks`SizeT}, 
                    NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]]], "6" -> 
                    Association[
                    "Type" -> "Summation", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{NeuralNetworks`SizeT}, 
                    NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]]], "1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[NeuralNetworks`Private`ScalarSymbol[2] -> {
                    Times, -0.5, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]]]]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"mn\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"tensor\"", "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{"\"sd\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"tensor\"", "SummaryItem"], "", "", "", ""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7396622608373156`*^9, 3.7396623048376093`*^9, 3.739662490138748*^9, 
   3.739662677868455*^9, {3.7396627190934453`*^9, 3.739662766685849*^9}, 
   3.739662951665894*^9, 3.7396688808984756`*^9, 3.7397059847251883`*^9, 
   3.739715928031291*^9, 3.7397163059861856`*^9, 3.73971819227499*^9, 
   3.739719258063177*^9, 3.7397197586233573`*^9, 3.7397379954984074`*^9, {
   3.7397382835968947`*^9, 3.739738311949894*^9}, 3.7397390042925987`*^9, 
   3.739739343693228*^9, 3.739757006512022*^9, 3.739792669931624*^9, 
   3.7397969432157946`*^9, 3.7397974238974595`*^9, 3.7398008508822117`*^9, {
   3.7398017857464714`*^9, 3.739801814774091*^9}, 3.7398025810910163`*^9, {
   3.7398027829341545`*^9, 3.7398028054091625`*^9}, {3.739802941170739*^9, 
   3.7398029671645093`*^9}, 3.7398031317302675`*^9, {3.7398032242020454`*^9, 
   3.739803227678946*^9}, 3.7398036281841745`*^9, 3.7398042540998487`*^9, 
   3.7398049448813276`*^9, 3.7398078603269715`*^9, {3.739807928556408*^9, 
   3.739807937586903*^9}, 3.7398080723619013`*^9, 3.7398081227473497`*^9, 
   3.7398081990217247`*^9, {3.7398084195206194`*^9, 3.7398084521997447`*^9}, {
   3.7398085639273005`*^9, 3.7398085722241597`*^9}, {3.739808653565483*^9, 
   3.7398086600603933`*^9}, 3.7398089937459397`*^9, {3.7398092395429955`*^9, 
   3.739809264205038*^9}, 3.7398093573145304`*^9, 3.7398094245657187`*^9, 
   3.739809614962909*^9, 3.739809647076957*^9, 3.739810072267169*^9, 
   3.73981021302682*^9, 3.7398114198866787`*^9, 3.739915487456744*^9, {
   3.7399181577939234`*^9, 3.7399181837330804`*^9}, 3.7399814669089746`*^9, 
   3.7399817739437094`*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"b6a1ef13-78d1-4f3c-b625-e66d786ccf9c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Loss", "Subsection",
 CellChangeTimes->{{3.7398013789742985`*^9, 
  3.7398013902722845`*^9}},ExpressionUUID->"ad5e5560-d72d-44fd-87ec-\
5a9600863698"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"loss", " ", "=", " ", 
  RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"ReplicateLayer", "[", "28", "]"}], ",", " ", 
      RowBox[{"TotalLayer", "[", "]"}], " ", ",", " ", 
      RowBox[{"ReshapeLayer", "[", 
       RowBox[{"{", "28", "}"}], "]"}], ",", " ", 
      RowBox[{"AggregationLayer", "[", 
       RowBox[{"Mean", ",", " ", "All"}], "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"NetPort", "[", "\"\<latentReal\>\"", "]"}], "\[Rule]", 
       RowBox[{"1", "\[Rule]", "2"}]}], ",", " ", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"NetPort", "[", "\"\<imageVector\>\"", "]"}], "\[Rule]", "2"}],
       ",", "\[IndentingNewLine]", 
      RowBox[{"2", "\[Rule]", 
       RowBox[{"3", "\[Rule]", "4"}]}]}], "\[IndentingNewLine]", "}"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7398013789742985`*^9, 3.7398014089810576`*^9}, {
   3.7398014472325907`*^9, 3.7398014544359026`*^9}, {3.739801502096683*^9, 
   3.7398015059698453`*^9}, {3.7398015947256336`*^9, 
   3.7398015948416057`*^9}, {3.739802786636153*^9, 3.7398027883371468`*^9}, {
   3.7398078755079536`*^9, 3.7398079036247773`*^9}, {3.7398079418822684`*^9, 
   3.739807942665143*^9}, {3.739808134814577*^9, 3.7398081355421376`*^9}, {
   3.7398081786517525`*^9, 3.7398081810198183`*^9}, {3.7398102907862372`*^9, 
   3.739810311839627*^9}, 3.739810379373747*^9, {3.7398104790237556`*^9, 
   3.739810550371975*^9}, {3.739810691196947*^9, 3.739810692833015*^9}, {
   3.739810748270138*^9, 3.7398107973240585`*^9}, {3.739811042899146*^9, 
   3.739811056034383*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"7d2529f9-03da-4c54-9557-09b8b5cee6ea"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["4", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], {
                    
                    LineBox[{{-5., 3.061616997868383*^-16}, {-4., 
                    2.4492935982947064`*^-16}}], 
                    
                    LineBox[{{-4., 2.4492935982947064`*^-16}, {-3., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-4., 1.0000000000000002`}, {-3., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-3., 1.0000000000000002`}, {-2., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-2., 1.0000000000000002`}, {-0.9999999999999999,
                     1.}}], 
                    
                    LineBox[{{-0.9999999999999999, 1.}, {
                    6.123233995736766*^-17, 1.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-4.4, 
                    2.694222958124177*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-3.4, 
                    0.6000000000000002}, {-0.25, 0}, 
                    Offset[8], {1., 1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-3.4, 
                    1.0000000000000002`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, 
                    1.0000000000000002`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    1.}, {-0.25, 0}, 
                    Offset[8], {1., -2.220446049250313*^-16}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-0.3999999999999999, 1.}, {-0.25, 0}, 
                    Offset[8], {1., 0.}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-5., 3.061616997868383*^-16}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"latentReal\"", Bold, StripOnInput -> False]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["latentReal", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-4., 2.4492935982947064`*^-16}], 
                    Offset[{10, 10}, {-4., 2.4492935982947064`*^-16}]]}, 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\[VerticalEllipsis]\"", 10, StripOnInput -> False], 
                    TraditionalForm], 
                    Offset[{0, -1}, {-4., 2.4492935982947064`*^-16}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ReplicateLayer", "[", "28", "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["1", Bold], 
                    Style[
                    HoldForm[
                    ReplicateLayer[28]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-3., 1.0000000000000002`}], 
                    Offset[{10, 10}, {-3., 1.0000000000000002`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"+\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-3., 1.0000000000000002`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"TotalLayer", "[", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["2", Bold], 
                    Style[
                    HoldForm[
                    TotalLayer["Inputs" -> {Automatic, Automatic}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-4., 1.0000000000000002`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"imageVector\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["imageVector", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-2., 1.0000000000000002`}], 
                    Offset[{10, 10}, {-2., 1.0000000000000002`}]]}, 
                    InsetBox[
                    FormBox["\"R\"", TraditionalForm], 
                    Offset[{0, -1}, {-2., 1.0000000000000002`}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"3\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ReshapeLayer", "[", 
                    RowBox[{"{", "28", "}"}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["3", Bold], 
                    Style[
                    HoldForm[
                    ReshapeLayer[{28}]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-0.9999999999999999, 1.}], 
                    Offset[{10, 10}, {-0.9999999999999999, 1.}]]}, 
                    InsetBox[
                    FormBox["\"A\"", TraditionalForm], 
                    Offset[{0, -1}, {-0.9999999999999999, 1.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"4\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"AggregationLayer", "[", 
                    RowBox[{"Mean", ",", "All", ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "28"}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["4", Bold], 
                    Style[
                    HoldForm[
                    AggregationLayer[Mean, All, "Input" -> 28]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{6.123233995736766*^-17, 1.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    StyleBox[{{
                    InsetBox[
                    FormBox["\"latentReal\"", TraditionalForm], 
                    Offset[{0, -7}, {-5., 3.061616997868383*^-16}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    Offset[{0, -13}, {-4., 2.4492935982947064`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    Offset[{0, -13}, {-3., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"imageVect..\"", "\"imageVector\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "imageVector", "Tooltip"]& ], 
                    TraditionalForm], 
                    Offset[{0, -7}, {-4., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{0, -13}, {-2., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    Offset[{0, -13}, {-0.9999999999999999, 1.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    Offset[{0, -7}, {6.123233995736766*^-17, 1.}], {0, 1.}, 
                    Automatic, {1, 0}]}}, FontColor -> GrayLevel[0.5], 
                    StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-4.4, 
                    2.694222958124177*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{-3.889087296526011, 3.889087296526011}, {-3.4, 
                    0.6000000000000002}], {0., -0.17}, Automatic, {
                    0.7071067811865475, 0.7071067811865475}], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-3.4, 1.0000000000000002`}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0., 5.5}, {-2.4000000000000004`, 
                    1.0000000000000002`}], {0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"28\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{1.2212453270876722`*^-15, 5.5}, {-1.4, 1.}], {
                    0., -0.17}, Automatic, {1., -2.220446049250313*^-16}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-0.3999999999999999, 1.}], {0., -0.17},
                     Automatic, {1., 0.}]}, FontColor -> GrayLevel[0.7], 
                    FontSize -> 8, FontWeight -> "Thin", StripOnInput -> 
                    False]}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    Part[{{-5., 3.061616997868383*^-16}, {-4., 
                    2.4492935982947064`*^-16}, {-3., 
                    1.0000000000000002`}, {-4., 1.0000000000000002`}, {-2., 
                    1.0000000000000002`}, {-0.9999999999999999, 1.}, {
                    6.123233995736766*^-17, 1.}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 20, 20, 8, 20, 20, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, ImageSize -> {340., 96.}, AspectRatio -> Full,
                     PlotRangePadding -> 0, 
                    ImagePadding -> {{38.499999999999986`, 26.5}, {27., 14.}},
                     ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "latentReal"], 
                    NeuralNetworks`NetPath["Nodes", "1"], 
                    NeuralNetworks`NetPath["Nodes", "2"], 
                    NeuralNetworks`NetPath["Inputs", "imageVector"], 
                    NeuralNetworks`NetPath["Nodes", "3"], 
                    NeuralNetworks`NetPath["Nodes", "4"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association["latentReal" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT], "imageVector" -> 
                    NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    Association[
                    "1" -> Association[
                    "Type" -> "Replicate", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[28], 
                    "Level" -> 1], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Reshape", "Arrays" -> Association[], 
                    "Parameters" -> Association["Dimensions" -> {28}], 
                    "Inputs" -> Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{28}, NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Aggregation", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> Mean, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[All]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]]]]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"latentReal\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"tensor\"", "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{"\"imageVector\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"tensor\"", "SummaryItem"], "", "", "", ""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7398015066310177`*^9, 3.7398015954316654`*^9, 3.7398027889380555`*^9, 
   3.7398032319508896`*^9, 3.7398079043414307`*^9, {3.7398079396560135`*^9, 
   3.7398079435324974`*^9}, 3.7398081360533247`*^9, 3.739808181587595*^9, 
   3.739810381543517*^9, 3.7398105552332664`*^9, 3.739810693417615*^9, {
   3.73981074901476*^9, 3.7398108278640184`*^9}, {3.739811048543202*^9, 
   3.739811056667161*^9}, 3.739811359004665*^9, 3.739811422278698*^9, 
   3.739981469847633*^9, 3.739981776077286*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"2d4958b1-c8c4-4a57-a878-8791d14aab06"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["", "Subsection"]], "Section",
 CellChangeTimes->{{3.7396580504733496`*^9, 3.7396580704733276`*^9}, {
  3.739658183848325*^9, 3.7396581867788134`*^9}, {3.7396607866514063`*^9, 
  3.7396607908372393`*^9}, {3.739801371376523*^9, 
  3.739801373024659*^9}},ExpressionUUID->"1625ce47-7e38-4ccf-93bd-\
d49aa95d21db"],

Cell[CellGroupData[{

Cell["Further AssemBling", "Subsection",
 CellChangeTimes->{{3.7395517151356115`*^9, 
  3.7395517185883427`*^9}},ExpressionUUID->"0cd985cc-3af6-4533-854e-\
e0be71215472"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vaeNet", " ", "=", " ", 
  RowBox[{"NetInitialize", "[", 
   RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<enc\>\"", "->", "encoder"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<mn\>\"", "->", "mn"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<sd\>\"", "->", " ", "sd"}], ",", 
       RowBox[{"\"\<expSd\>\"", "\[Rule]", "expSd"}], ",", 
       RowBox[{"\"\<sdEpsilon\>\"", "\[Rule]", 
        RowBox[{"ThreadingLayer", "[", "Times", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<z\>\"", "->", 
        RowBox[{"TotalLayer", "[", "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<dec\>\"", "->", "decoder"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<imageLoss\>\"", "\[Rule]", "imageLoss"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<latentLoss\>\"", "\[Rule]", "latentLoss"}]}], 
      "\[IndentingNewLine]", "|>"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
        "\"\<enc\>\""}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<enc\>\"", "\[Rule]", "\"\<mn\>\""}], ",", 
       "\[IndentingNewLine]", " ", 
       RowBox[{"\"\<enc\>\"", "\[Rule]", "\"\<sd\>\""}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<sd\>\"", "\[Rule]", "\"\<expSd\>\""}], ",", 
       RowBox[{"\"\<expSd\>\"", "\[Rule]", "\"\<sdEpsilon\>\""}], ",", " ", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<random\>\"", "]"}], " ", "\[Rule]", 
        "\"\<sdEpsilon\>\""}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<mn\>\"", "\[Rule]", "\"\<z\>\""}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<sdEpsilon\>\"", "\[Rule]", "\"\<z\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<z\>\"", "\[Rule]", "\"\<dec\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<dec\>\"", "\[Rule]", 
        RowBox[{"NetPort", "[", "\"\<Output\>\"", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"latent", " ", "loss"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\"\<sd\>\"", "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<latentLoss\>\"", ",", "\"\<sd\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<mn\>\"", "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<latentLoss\>\"", ",", "\"\<mn\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"image", " ", "loss"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\"\<dec\>\"", "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<imageLoss\>\"", ",", " ", "\"\<inDec\>\""}], "]"}]}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<imageLoss\>\"", ",", " ", "\"\<inInput\>\""}], "]"}]}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"image", " ", "loss8"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\"\<latentLoss\>\"", "\[Rule]", 
        RowBox[{"NetPort", "[", "\"\<latentLoss\>\"", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<imageLoss\>\"", "\[Rule]", 
        RowBox[{"NetPort", "[", "\"\<imageLoss\>\"", "]"}]}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Output\>\"", "->", 
      RowBox[{"NetDecoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Image\>\"", ",", " ", "\"\<Grayscale\>\""}], "}"}], 
       "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", 
      RowBox[{"NetEncoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Image\>\"", ",", " ", 
         RowBox[{"{", 
          RowBox[{"28", ",", "28"}], "}"}], ",", " ", "\"\<Grayscale\>\""}], 
        "}"}], "]"}]}]}], "\[IndentingNewLine]", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7395667951751738`*^9, 3.739566823119445*^9}, {
   3.739574834995954*^9, 3.7395748652310114`*^9}, {3.73957491718008*^9, 
   3.739574917426771*^9}, {3.739575282194539*^9, 3.7395753031761303`*^9}, {
   3.7395753720648174`*^9, 3.7395754054285545`*^9}, {3.739575753558014*^9, 
   3.739575818615221*^9}, {3.739575923773177*^9, 3.739576032295744*^9}, {
   3.73957615725283*^9, 3.739576173140894*^9}, {3.7395779455852795`*^9, 
   3.7395780210064535`*^9}, {3.739578073895379*^9, 3.739578083263719*^9}, {
   3.739578120244849*^9, 3.7395781445247774`*^9}, {3.7395798772539005`*^9, 
   3.739579955987113*^9}, {3.7395799869009967`*^9, 3.7395800066441164`*^9}, {
   3.739580051114643*^9, 3.739580061781546*^9}, {3.7395800954997687`*^9, 
   3.739580113756624*^9}, {3.7395801730651765`*^9, 3.7395801734785357`*^9}, {
   3.73958040387289*^9, 3.739580415517378*^9}, {3.739642073118585*^9, 
   3.739642075307708*^9}, {3.7396422885419416`*^9, 3.7396423085812283`*^9}, {
   3.739653107913578*^9, 3.739653156395689*^9}, {3.7396536936749983`*^9, 
   3.739653721150965*^9}, {3.739653832160608*^9, 3.7396538531965933`*^9}, {
   3.739654031706568*^9, 3.7396540386932983`*^9}, {3.739654494399378*^9, 
   3.739654507330639*^9}, {3.7396556160251646`*^9, 3.739655622666688*^9}, {
   3.739655676499963*^9, 3.739655695158108*^9}, {3.739659126358765*^9, 
   3.7396592334493318`*^9}, {3.739659496978977*^9, 3.7396595181507273`*^9}, {
   3.7396603267595463`*^9, 3.739660327091504*^9}, {3.7396603759149466`*^9, 
   3.7396603902156286`*^9}, {3.7396604372275276`*^9, 3.739660485491572*^9}, {
   3.73966051816661*^9, 3.739660533257409*^9}, {3.739660566399602*^9, 
   3.739660592820536*^9}, {3.7396606785559244`*^9, 3.7396607348536077`*^9}, {
   3.739660770010747*^9, 3.7396607786615324`*^9}, {3.7396612178446693`*^9, 
   3.7396612550095005`*^9}, {3.739662334945963*^9, 3.7396623706221595`*^9}, {
   3.7396624291338043`*^9, 3.7396624649212823`*^9}, {3.7396625144474583`*^9, 
   3.739662523829752*^9}, {3.739662608901328*^9, 3.73966270439748*^9}, {
   3.7396627454343853`*^9, 3.7396627463531523`*^9}, {3.7396629139929028`*^9, 
   3.7396629310823264`*^9}, {3.739662961278787*^9, 3.739663026674754*^9}, 
   3.7397188827808523`*^9, {3.739718970465977*^9, 3.7397189767068577`*^9}, {
   3.7397191806097207`*^9, 3.7397192406211147`*^9}, 3.7398014597348666`*^9, {
   3.7398034656582584`*^9, 3.739803490613632*^9}, {3.7398035244403687`*^9, 
   3.7398035402987995`*^9}, {3.7398036929205694`*^9, 
   3.7398037088200207`*^9}, {3.739803945479252*^9, 3.7398039707659965`*^9}, {
   3.7398040228689985`*^9, 3.7398040257403917`*^9}, {3.739804370291984*^9, 
   3.739804370764393*^9}, 3.7398049621003094`*^9, {3.7398060601874127`*^9, 
   3.739806113406682*^9}, {3.7398071373402176`*^9, 3.7398071524626684`*^9}, {
   3.7398072721425514`*^9, 3.7398072788674555`*^9}, {3.7398076612231283`*^9, 
   3.7398076776800346`*^9}, {3.7398077150159154`*^9, 
   3.7398077215323224`*^9}, {3.7398077789631224`*^9, 
   3.7398077900835953`*^9}, {3.7398082170684934`*^9, 
   3.7398082243783016`*^9}, {3.7398082778213615`*^9, 
   3.7398083143248377`*^9}, {3.7398083516687603`*^9, 3.739808358203776*^9}, {
   3.7398094608180203`*^9, 3.73980947990317*^9}, {3.7398102237285357`*^9, 
   3.7398102555987115`*^9}, {3.7399153818513737`*^9, 
   3.7399154159782753`*^9}, {3.739917022557266*^9, 3.739917025949258*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"31419281-fdd4-4dbc-8105-f2287a04b63a"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of outputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["3", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["9", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], {
                    
                    LineBox[{{-8., 4.898587196589413*^-16}, {-7., 
                    4.286263797015736*^-16}}], 
                    
                    LineBox[{{-2., -0.9999999999999999}, {-1., \
-0.9999999999999999}}], 
                    
                    LineBox[{{-7., 4.286263797015736*^-16}, {-6., 
                    3.6739403974420594`*^-16}}], 
                    
                    LineBox[{{-7., 
                    4.286263797015736*^-16}, {-6., -0.9999999999999997}}], 
                    
                    LineBox[{{-6., 
                    3.6739403974420594`*^-16}, {-5., -0.9999999999999997}}], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQDQESB7i65vlYVu6yWZn+5tHX8+IHylZJbbJ22WUT
uYTH5u4s8QNvu1yVVnHusuHZlsC9LUH8QKG2/NyWkzttDs95EdCgKH7gb/dy
pdPNO23qI0AaxA7MWHNvU63FThv7l5PtXk4WO2Dbe8R3zvMdNiz+25+1u4od
eKsb+Vlt4g6bs518rBKfRA+s7JuzWNZ0h82smSAgeqBgfV9cw+XtNmDtdqIH
bAxuyEnmb7ex7Hts0fdY5ADXRsX7G7m223R2gIDIgWuG2fO9lm2zudmke6NJ
V+TA4k1b4h87brPRqL2kXntJ+EC+8T/5mrtbbSrKQUD4gM0W9wcilVttjhfK
AJHwAU7TiQvWimy1Ec85KJZzUOjAta23Etw2bIG6R/BA3oyTF79lbrZ5BXaP
4AErSeFJ/ayboe4ROMAxKyZIY+Emmy6wewQOXJVaJnTQZpPNDbB7BA4smP3+
UuSNjTYBv5b4/1rCfyBPxnLyp+KNNh/egQDfAau5TcHd/BttwMZZ8B1glzsj
rLJ6g40e2ADeA1fmiV7Z47bB5uwZEOA54GC/T2P1kfU24OiS5jlwpmHRvALG
9Ta/EicafSjhPuDmpPk/1nOdTQvI+htcB5Y1B3kVz1kLDX+uA+9c5Bo2/Fpj
U31ML+7/Hs4DSm09C0RT1kD9x3nAzn3u6kU3VtuAlZ/iOODSEbAwPGK1zRoD
dSuRBI4DRp7LGk0er7KBpB8OaPpZZQMA47MdMg==
                    "]], 
                    
                    LineBox[{{-6., -0.9999999999999997}, {-5., \
-2.9999999999999996`}}], 
                    
                    LineBox[{{-6., -0.9999999999999997}, {-5., \
-0.9999999999999997}}], 
                    
                    LineBox[{{-5., -2.9999999999999996`}, {-4., \
-1.9999999999999998`}}], 
                    
                    LineBox[{{-5., -1.9999999999999998`}, {-4., \
-1.9999999999999998`}}], 
                    
                    LineBox[{{-4., -1.9999999999999998`}, {-3., 
                    1.8369701987210297`*^-16}}], 
                    
                    LineBox[{{-3., 1.8369701987210297`*^-16}, {-2., 
                    1.2246467991473532`*^-16}}], 
                    
                    LineBox[{{-2., 1.2246467991473532`*^-16}, {-1., 
                    6.123233995736766*^-17}}], 
                    
                    LineBox[{{-2., 
                    1.2246467991473532`*^-16}, {-1., -0.9999999999999999}}], 
                    
                    LineBox[{{-1., -0.9999999999999999}, \
{-6.123233995736766*^-17, -1.}}], 
                    
                    LineBox[{{-5., -0.9999999999999997}, {-4., \
-0.9999999999999998}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-7.4, 
                    4.531193156845207*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-1.4, -0.9999999999999998}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-6.4, 
                    3.9188697572715305`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-6.4, -0.5999999999999995}, {-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-5.4, -0.5999999999999996}, {-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-4.355555555555556, 
                    2.667008584809791*^-16}, {-0.25, 0}, 
                    Offset[8], {
                    0.08888888888888857, -5.442874662877157*^-18}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-5.417705098312485, -2.164589803375031}, {-0.25,
                     0}, 
                    Offset[8], {1., -2.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-5.4, -0.9999999999999997}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-4.4, -2.3999999999999995`}, {-0.25, 0}, 
                    Offset[8], {1., 0.9999999999999998}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-4.4, -1.9999999999999996`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-3.417705098312484, -0.8354101966249685}, \
{-0.25, 0}, 
                    Offset[8], {1., 2.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, 1.4695761589768238`*^-16},
                     {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736765*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    8.572527594031473*^-17}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736766*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-1.4, -0.5999999999999999}, {-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-0.4000000000000001, -1.}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999999, -1.1102230246251565`*^-16}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-4.4, -0.9999999999999998}, {-0.25, 0}, 
                    Offset[8], {1., -1.1102230246251565`*^-16}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-8., 4.898587196589413*^-16}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-7., 4.286263797015736*^-16}], 
                    Offset[{12, 12}, {-7., 4.286263797015736*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-7., 4.286263797015736*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"enc\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "10", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["enc", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[10]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-1., -0.9999999999999999}], 
                    Offset[{12, 12}, {-1., -0.9999999999999999}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 0.,
                     BaseStyle -> GrayLevel[
                    0.4]], {-1., -0.9999999999999999}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"imageLoss\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "4", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "6", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["imageLoss", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[4], 
                    Skeleton[6]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-6., 3.6739403974420594`*^-16}], 
                    Offset[{10, 10}, {-6., 3.6739403974420594`*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[
                    
                    GraphicsComplexBox[{{0.1, 0}, {-0.3, 1}, {0.5, 1}, {
                    1.3, 1}, {0.9, 0}}, {{
                    Opacity[0.2], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[3.5], 
                    RGBColor[0.33, 0.33, 0.33], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 18], {-6., 
                    3.6739403974420594`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"mn\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"LinearLayer", "[", 
                    RowBox[{
                    RowBox[{"{", "8", "}"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "5184"}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["mn", Bold], 
                    Style[
                    HoldForm[
                    LinearLayer[{8}, "Input" -> 5184]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-6., -0.9999999999999997}], 
                    Offset[{12, 12}, {-6., -0.9999999999999997}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-6., -0.9999999999999997}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"sd\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["sd", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[2]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-5., -0.9999999999999997}], 
                    Offset[{12, 12}, {-5., -0.9999999999999997}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 0.,
                     BaseStyle -> GrayLevel[
                    0.4]], {-5., -0.9999999999999997}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"latentLoss\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "6", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["latentLoss", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[6], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-3., 1.8369701987210297`*^-16}], 
                    Offset[{10, 10}, {-3., 1.8369701987210297`*^-16}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"+\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-3., 1.8369701987210297`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"z\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"TotalLayer", "[", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"8", ",", "8"}], "}"}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["z", Bold], 
                    Style[
                    HoldForm[
                    TotalLayer["Inputs" -> {8, 8}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-5., -2.9999999999999996`}], 
                    Offset[{10, 10}, {-5., -2.9999999999999996`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], 
                    TraditionalForm]], {-5., -2.9999999999999996`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"expSd\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"Slot", "[", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "]"}], "]"}], "&"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "8"}]}], "]"}], HoldForm],
                     FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["expSd", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[Exp[#]& , {4, 3}], "Input" -> 8]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-4., -1.9999999999999998`}], 
                    Offset[{10, 10}, {-4., -1.9999999999999998`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[Times]\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-4., -1.9999999999999998`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"sdEpsilon\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{"Times", ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"8", ",", "8"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["sdEpsilon", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[Times, "Inputs" -> {8, 8}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-5., -1.9999999999999998`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"random\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["random", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 10), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-2., 1.2246467991473532`*^-16}], 
                    Offset[{12, 12}, {-2., 1.2246467991473532`*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-2., 
                    1.2246467991473532`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"dec\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "17", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["dec", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[17]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 11), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1., 6.123233995736766*^-17}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 12), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-6.123233995736766*^-17, -1.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"imageLoss\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["imageLoss", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 13), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-4., -0.9999999999999998}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"latentLoss\"", Bold, StripOnInput -> False]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["latentLoss", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 14), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-2., -0.9999999999999999}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    StyleBox[{{
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    Offset[{0, -7}, {-8., 4.898587196589413*^-16}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"enc\"", TraditionalForm], 
                    Offset[{0, -15}, {-7., 4.286263797015736*^-16}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"imageLoss\"", TraditionalForm], 
                    Offset[{0, -15}, {-1., -0.9999999999999999}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"mn\"", TraditionalForm], 
                    Offset[{0, -13}, {-6., 3.6739403974420594`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"sd\"", TraditionalForm], 
                    Offset[{0, -15}, {-6., -0.9999999999999997}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"latentLoss\"", TraditionalForm], 
                    Offset[{0, -15}, {-5., -0.9999999999999997}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"z\"", TraditionalForm], 
                    Offset[{0, -13}, {-3., 1.8369701987210297`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"expSd\"", TraditionalForm], 
                    Offset[{0, -13}, {-5., -2.9999999999999996`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"sdEpsilon\"", TraditionalForm], 
                    Offset[{0, -13}, {-4., -1.9999999999999998`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"random\"", TraditionalForm], 
                    Offset[{0, -7}, {-5., -1.9999999999999998`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"dec\"", TraditionalForm], 
                    Offset[{0, -15}, {-2., 1.2246467991473532`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    Offset[{0, -7}, {-1., 6.123233995736766*^-17}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"imageLoss\"", TraditionalForm], 
                    Offset[{0, -7}, {-6.123233995736766*^-17, -1.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"latentLoss\"", TraditionalForm], 
                    Offset[{0, -7}, {-4., -0.9999999999999998}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    Offset[{0, -7}, {-2., -0.9999999999999999}], {0, 1.}, 
                    Automatic, {1, 0}]}}, FontColor -> GrayLevel[0.5], 
                    StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-7.4, 
                    4.531193156845207*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{0., 5.5}, {-1.4, -0.9999999999999998}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"5184\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-6.4, 
                    3.9188697572715305`*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"5184\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.889087296526011, 
                    3.889087296526011}, {-6.4, -0.5999999999999995}], {
                    0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.889087296526011, 
                    3.889087296526011}, {-5.4, -0.5999999999999996}], {
                    0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.367778697655253*^-16, 5.5}, {-4.355555555555556,
                     2.667008584809791*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736824*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{4.919349550499537, 
                    2.4596747752497685`}, {-5.417705098312485, \
-2.164589803375031}], {0., -0.17}, Automatic, {
                    0.4472135954999579, -0.8944271909999159}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{0., 5.5}, {-5.4, -0.9999999999999997}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{-3.889087296526011, 
                    3.8890872965260117`}, {-4.4, -2.3999999999999995`}], {
                    0., -0.17}, Automatic, {0.7071067811865476, 
                    0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{0., 5.5}, {-4.4, -1.9999999999999996`}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-4.919349550499537, 
                    2.4596747752497685`}, {-3.417705098312484, \
-0.8354101966249685}], {0., -0.17}, Automatic, {0.4472135954999579, 
                    0.8944271909999159}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.3677786976552205`*^-16, 
                    5.5}, {-2.4000000000000004`, 1.4695761589768238`*^-16}], {
                    0., -0.17}, Automatic, {1., -6.123233995736765*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.3677786976552215`*^-16, 5.5}, {-1.4, 
                    8.572527594031473*^-17}], {0., -0.17}, Automatic, {
                    1., -6.123233995736766*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.889087296526011, 
                    3.889087296526011}, {-1.4, -0.5999999999999999}], {
                    0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    
                    Offset[{6.106226635438362*^-16, 
                    5.5}, {-0.4000000000000001, -1.}], {0., -0.17}, 
                    Automatic, {1., -1.1102230246251568`*^-16}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    
                    Offset[{6.106226635438361*^-16, 
                    5.5}, {-4.4, -0.9999999999999998}], {0., -0.17}, 
                    Automatic, {1., -1.1102230246251565`*^-16}]}, FontColor -> 
                    GrayLevel[0.7], FontSize -> 8, FontWeight -> "Thin", 
                    StripOnInput -> False]}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    Part[{{-8., 4.898587196589413*^-16}, {-7., 
                    4.286263797015736*^-16}, {-1., -0.9999999999999999}, {-6.,
                     3.6739403974420594`*^-16}, {-6., -0.9999999999999997}, \
{-5., -0.9999999999999997}, {-3., 
                    1.8369701987210297`*^-16}, {-5., -2.9999999999999996`}, \
{-4., -1.9999999999999998`}, {-5., -1.9999999999999998`}, {-2., 
                    1.2246467991473532`*^-16}, {-1., 
                    6.123233995736766*^-17}, {-6.123233995736766*^-17, -1.}, \
{-4., -0.9999999999999998}, {-2., -0.9999999999999999}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 24, 24, 20, 24, 24, 20, 20, 20, 8, 24, 8, 8, 8, 
                    8}, NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, ImageSize -> {503.5, 211.}, AspectRatio -> 
                    Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{28., 35.5}, {28., 18.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "enc"], 
                    NeuralNetworks`NetPath["Nodes", "imageLoss"], 
                    NeuralNetworks`NetPath["Nodes", "mn"], 
                    NeuralNetworks`NetPath["Nodes", "sd"], 
                    NeuralNetworks`NetPath["Nodes", "latentLoss"], 
                    NeuralNetworks`NetPath["Nodes", "z"], 
                    NeuralNetworks`NetPath["Nodes", "expSd"], 
                    NeuralNetworks`NetPath["Nodes", "sdEpsilon"], 
                    NeuralNetworks`NetPath["Inputs", "random"], 
                    NeuralNetworks`NetPath["Nodes", "dec"], 
                    NeuralNetworks`NetPath["Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "imageLoss"], 
                    NeuralNetworks`NetPath["Outputs", "latentLoss"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association["Input" -> NetEncoder["Image", 
                    Association[
                    "ImageSize" -> {28, 28}, "ColorSpace" -> "Grayscale", 
                    "ColorChannels" -> 1, "MeanImage" -> None, 
                    "VarianceImage" -> None], 
                    
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "random" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    Association["Output" -> NetDecoder["Image", 
                    Association[
                    "ColorSpace" -> "Grayscale", "MeanImage" -> None, 
                    "VarianceImage" -> None, "$Dimensions" -> {28, 28}, 
                    "$Channels" -> 1], 
                    
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "latentLoss" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT], 
                    "imageLoss" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    Association[
                    "enc" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{64, 1, 
                    4, 4}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {4, 4}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {2, 2}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 1, 
                    "$GroupNumber" -> 1, "$InputSize" -> {28, 28}, 
                    "$OutputSize" -> {15, 15}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Max, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {64, 15, 15}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{64, 64,
                     4, 4}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {4, 4}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {2, 2}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 64, 
                    "$GroupNumber" -> 1, "$InputSize" -> {15, 15}, 
                    "$OutputSize" -> {8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Max, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {64, 8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{64, 64,
                     4, 4}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {4, 4}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {2, 2}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 64, 
                    "$GroupNumber" -> 1, "$InputSize" -> {8, 8}, 
                    "$OutputSize" -> {9, 9}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]]], "8" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Max, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {64, 9, 9}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]]], "9" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]]], "10" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{5184}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{5184}, NeuralNetworks`RealT]]], 
                    "mn" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{8, 5184}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{8}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {8}, "$OutputSize" -> 8, 
                    "$InputSize" -> 5184, "$InputDimensions" -> {5184}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{5184}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], "sd" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{8, 
                    5184}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{8}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {8}, "$OutputSize" -> 8, 
                    "$InputSize" -> 5184, "$InputDimensions" -> {5184}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{5184}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 0.5, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{5184}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], 
                    "expSd" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], 
                    "sdEpsilon" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], "z" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], 
                    "dec" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{25, 
                    8}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{25}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {25}, "$OutputSize" -> 25, 
                    "$InputSize" -> 8, "$InputDimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{25}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Max, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {25}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{25}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{25}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{49, 
                    25}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{49}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {49}, "$OutputSize" -> 49, 
                    "$InputSize" -> 25, "$InputDimensions" -> {25}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{25}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{49}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Max, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {49}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{49}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{49}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Reshape", "Arrays" -> Association[], 
                    "Parameters" -> Association["Dimensions" -> {1, 7, 7}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{49}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1, 7, 7}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Deconvolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{1, 64, 
                    4, 4}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {4, 4}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {2, 2}, 
                    "Interleaving" -> False, "$InputChannels" -> 1, 
                    "$GroupNumber" -> 1, "$InputSize" -> {7, 7}, 
                    "$OutputSize" -> {12, 12}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 12, 12}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]]], "8" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]]], "9" -> 
                    Association[
                    "Type" -> "Deconvolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{64, 64,
                     4, 4}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {4, 4}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {2, 2}, 
                    "Interleaving" -> False, "$InputChannels" -> 64, 
                    "$GroupNumber" -> 1, "$InputSize" -> {12, 12}, 
                    "$OutputSize" -> {11, 11}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]]], "10" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 11, 11}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]]], "11" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]]], "12" -> 
                    Association[
                    "Type" -> "Deconvolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{64, 64,
                     4, 4}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {4, 4}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {2, 2}, 
                    "Interleaving" -> False, "$InputChannels" -> 64, 
                    "$GroupNumber" -> 1, "$InputSize" -> {11, 11}, 
                    "$OutputSize" -> {10, 10}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 10, 10}, 
                    NeuralNetworks`RealT]]], "13" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 10, 10}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 10, 10}, 
                    NeuralNetworks`RealT]]], "14" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{6400}, 
                    NeuralNetworks`RealT]]], "15" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{784, 
                    6400}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{784}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {784}, "$OutputSize" -> 784, 
                    "$InputSize" -> 6400, "$InputDimensions" -> {6400}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{6400}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "16" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid], "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "17" -> 
                    Association[
                    "Type" -> "Reshape", "Arrays" -> Association[], 
                    "Parameters" -> Association["Dimensions" -> {1, 28, 28}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "13", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "12", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "14", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "13", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "15", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "14", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "16", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "15", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "17", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "16", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "17", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], "imageLoss" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "inDec" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT], "inInput" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[NeuralNetworks`Private`ScalarSymbol[2] -> {
                    Power, 
                    NeuralNetworks`Private`ScalarSymbol[1], 2.}]]], 
                    "$Dimensions" -> {1, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Summation", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "inDec"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "inInput"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}], "latentLoss" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "mn" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT],
                     "sd" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    "Nodes" -> 
                    Association[
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Power, 
                    NeuralNetworks`Private`ScalarSymbol[1], 2.}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 2., 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[2]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 2., 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Plus, 1., 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "3" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Summation", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]], "1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, -0.5, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "mn"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "sd"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "sd"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "3"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}]]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"image\"", "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"image\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{"\"random\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"latentLoss\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}, {"", "", "", "", 
                    StyleBox[
                    TemplateBox[{"\"imageLoss\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7397059898827744`*^9, {3.7397060243717384`*^9, 3.7397060325200596`*^9}, 
   3.7397064717663097`*^9, 3.739715932985835*^9, 3.739716309028764*^9, 
   3.7397182007031107`*^9, 3.7397189027664604`*^9, 3.739718978364338*^9, 
   3.7397192226596165`*^9, 3.7397192604948125`*^9, 3.739719760995125*^9, 
   3.739738001307364*^9, {3.739738288255085*^9, 3.7397383141818953`*^9}, {
   3.739738995760598*^9, 3.739739013670602*^9}, 3.7397390820806007`*^9, 
   3.7397392467749796`*^9, 3.7397393467802362`*^9, 3.739739394182849*^9, 
   3.7397570103611116`*^9, 3.7397573401157465`*^9, 3.7397927577513638`*^9, 
   3.739794496775937*^9, 3.7397969460912013`*^9, 3.739797426127496*^9, 
   3.7398008529359493`*^9, 3.7398027906709976`*^9, {3.73980294509167*^9, 
   3.739802969303913*^9}, {3.7398031333063283`*^9, 3.739803155511769*^9}, 
   3.7398032330853415`*^9, {3.7398034872109966`*^9, 3.7398034912801237`*^9}, 
   3.739803541457939*^9, {3.7398036304990053`*^9, 3.7398036441836843`*^9}, {
   3.739803687951827*^9, 3.7398037094103765`*^9}, {3.7398039735637393`*^9, 
   3.7398039776353655`*^9}, 3.739804026334425*^9, {3.7398042555291214`*^9, 
   3.7398042571874003`*^9}, 3.7398043714886045`*^9, {3.7398045398386097`*^9, 
   3.7398045410411763`*^9}, 3.739804661603113*^9, 3.7398047694674644`*^9, {
   3.7398049461771836`*^9, 3.7398049642554445`*^9}, 3.739805332268571*^9, {
   3.739806103664843*^9, 3.739806114631145*^9}, 3.7398075288293934`*^9, {
   3.73980777484153*^9, 3.7398077906449237`*^9}, 3.7398079067250957`*^9, 
   3.7398079454826117`*^9, 3.739808074065237*^9, {3.7398081259709644`*^9, 
   3.739808137365765*^9}, {3.7398081840965247`*^9, 3.739808200864462*^9}, 
   3.7398082860685167`*^9, {3.739808360036936*^9, 3.739808379010332*^9}, {
   3.739808441394072*^9, 3.7398084563777204`*^9}, {3.739808565907055*^9, 
   3.7398085743385754`*^9}, 3.739808685666136*^9, {3.739809368903793*^9, 
   3.739809385543846*^9}, {3.739809416823183*^9, 3.739809426158105*^9}, 
   3.739809617449951*^9, {3.7398096485251923`*^9, 3.7398096981050415`*^9}, 
   3.739810075819624*^9, 3.7398101161104517`*^9, 3.7398101736964674`*^9, 
   3.7398102108652825`*^9, 3.7398110745736246`*^9, 3.7398113933406563`*^9, 
   3.739811424949652*^9, {3.739915410994813*^9, 3.739915417136042*^9}, 
   3.7399154948845973`*^9, 3.739918186593193*^9, 3.7399814732834425`*^9, 
   3.7399817798487363`*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"78a2de90-f5d2-473b-838e-78731d95e92a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Training", "Subsection",
 CellChangeTimes->{{3.7395663013480153`*^9, 3.739566307299842*^9}, {
  3.739566381757985*^9, 3.739566386357066*^9}, {3.739580286905179*^9, 
  3.7395802885074787`*^9}, {3.7396461037904787`*^9, 
  3.7396461048373337`*^9}},ExpressionUUID->"4d8708ae-94a3-460d-b70f-\
ce3a512d387e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mnistDigits", " ", "=", " ", 
   RowBox[{"Parallelize", "[", 
    RowBox[{"First", "/@", 
     RowBox[{"(", 
      RowBox[{"RandomSample", "[", 
       RowBox[{"ResourceData", "[", "\"\<MNIST\>\"", "]"}], "]"}], ")"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.739642590626321*^9, 3.739642610253044*^9}, 
   3.7396427252545133`*^9, 3.7396436122988987`*^9, {3.739663190903102*^9, 
   3.739663215293248*^9}, {3.739664960933978*^9, 3.739664979468237*^9}, {
   3.739665017215391*^9, 3.739665046251326*^9}, {3.739665167789925*^9, 
   3.7396651916921415`*^9}, {3.7396664762716713`*^9, 3.739666476925453*^9}, {
   3.739670020116852*^9, 3.7396700467427545`*^9}, {3.7397061599148703`*^9, 
   3.7397061648762484`*^9}, {3.7397064793461494`*^9, 3.739706482907383*^9}, {
   3.7397148403478346`*^9, 3.7397148626315994`*^9}, {3.739716315324668*^9, 
   3.739716316004016*^9}, {3.7397166637162633`*^9, 3.7397166640941877`*^9}, 
   3.739717186538661*^9, {3.7397185402413063`*^9, 3.7397185645914183`*^9}, {
   3.739718686586492*^9, 3.739718737952986*^9}, {3.7397187815150456`*^9, 
   3.7397187829606915`*^9}, {3.739718871908619*^9, 3.7397188766390915`*^9}, {
   3.7397575240459805`*^9, 3.739757527538845*^9}, {3.7397577796114044`*^9, 
   3.7397578129131603`*^9}, {3.739792841010005*^9, 3.7397928444728394`*^9}, {
   3.739792893798551*^9, 3.7397928967030106`*^9}, {3.7397929335461316`*^9, 
   3.739792935138728*^9}, {3.739793216078777*^9, 3.739793223269508*^9}, 
   3.7397932795072117`*^9, {3.7397933234179935`*^9, 3.739793325644786*^9}, {
   3.7397975243209834`*^9, 3.739797525464043*^9}, {3.7397998687980537`*^9, 
   3.7397998818072977`*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"a7c64f03-a37b-4ff4-8fa9-4bfc6c4beb84"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"trainingData", " ", "=", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<random\>\"", "\[Rule]", 
      RowBox[{"RandomVariate", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Length", "@", "mnistDigits"}], ",", "nlatent"}], "}"}]}], 
       "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", "mnistDigits"}]}], 
    "|>"}]}]}]], "Input",
 CellChangeTimes->{{3.7395663013480153`*^9, 3.739566307299842*^9}, {
   3.739566381757985*^9, 3.739566386357066*^9}, {3.739580286905179*^9, 
   3.7395803539419622`*^9}, 3.7395804634373894`*^9, 3.739580557204153*^9, {
   3.7396423400539384`*^9, 3.7396423438215675`*^9}, {3.739643233598317*^9, 
   3.7396432490887737`*^9}, {3.739643349560803*^9, 3.7396433755308723`*^9}, {
   3.739643475800774*^9, 3.7396434841699104`*^9}, {3.739714865813456*^9, 
   3.73971486901542*^9}, {3.7397159371170444`*^9, 3.7397159893040023`*^9}, {
   3.7397160224638925`*^9, 3.7397160306296997`*^9}, {3.7397171892988234`*^9, 
   3.739717191015141*^9}, {3.7397184579718*^9, 3.7397184863056498`*^9}, {
   3.739718530047224*^9, 3.739718538937173*^9}, 3.7397185701808057`*^9, {
   3.7397193149761944`*^9, 3.7397193231060047`*^9}, 3.7397380099403787`*^9, {
   3.7397575305396905`*^9, 3.739757533510538*^9}, 3.7397932542311463`*^9},
 CellLabel->"In[56]:=",ExpressionUUID->"bc184bf2-cdcb-4b06-8822-87c061f3da92"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"random\"\>", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "0.13342512323260552`", ",", "0.016979697161307372`", ",", 
                RowBox[{"-", "0.5759705251532244`"}], ",", 
                "0.11647761895337207`", ",", "0.23927228521378757`", ",", 
                "1.2528811289242532`", ",", "0.3577636701675421`", ",", 
                RowBox[{"-", "1.868015135235941`"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1.1610665191442662`", ",", "0.4033801539295597`", ",", 
                RowBox[{"-", "1.2562544991033275`"}], ",", 
                "0.5188218274517465`", ",", 
                RowBox[{"-", "0.3158637942421063`"}], ",", 
                "0.23822771849007315`", ",", "1.7780064264240492`", ",", 
                "0.6686410036497915`"}], "}"}], ",", 
              TemplateBox[{"59996"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"{", 
               RowBox[{"2.0340246671818702`", ",", 
                RowBox[{"-", "0.3855703797379101`"}], ",", 
                "0.9205323295531475`", ",", "0.4254640029407233`", ",", 
                "0.20524718545878362`", ",", 
                RowBox[{"-", "0.15649453410931483`"}], ",", 
                "1.8588393833834131`", ",", 
                RowBox[{"-", "0.9004715840668`"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "0.113819240681518`"}], ",", 
                RowBox[{"-", "0.7270439667257022`"}], ",", 
                RowBox[{"-", "0.4827710963091832`"}], ",", 
                RowBox[{"-", "0.0006332075536409056`"}], ",", 
                "2.1865169177520243`", ",", 
                RowBox[{"-", "0.2563100825681949`"}], ",", 
                "1.6656912244356803`", ",", 
                RowBox[{"-", "0.9878529348087153`"}]}], "}"}]}], "}"}]}], ",", 
           RowBox[{"\<\"Input\"\>", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJzNkk0OgjAQhduGhUsP4E+8hdCVS7cY2zVEJG4wKRDjIXoR4BxwDznIOK3u
GHYu7ASS9vXjzZuwS+/xVTDGygW+4uRxMCZ5npa4ORflLS+yy7Gosjwz+9Rd
W30f+MPVG8FEOJKaFgGWVAOhKS7BhoILRXEdwChFsJmSircAr4jkBjmCjdCT
MgQw6LamJes61aTUoJersOlJ6lOTThUyUmmlHTvJV7d+YhWSpKmfK06Ilrbo
2NGay2hnPolUTZ37hJKmfLoZLz7boUsm6X/il+sNGQKnEA==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+M4O20bDOPbKFs++zsK19QpV5aMDEDAYQwOoMid1+Bidn71b6GxsbG
UC5mBVSNd5KZTV9BmBuZuY6jSj7zZK6HsH6YM69Gd46YzDMwfYWJ6xy6nBVz
G9RM4VfocmuYuTOB1Eku5rXoUudNmZkFrv5/78oU9gNNaj0v0GvCt066Mqui
+f1/MyNT3J1qBlUuJgd0A1fzMqX9+v9flZk57Baa1FpOZpDU/zPMGF57KcTs
CfEaptwqZuYjuOQcmIIhjI1MaegucWRuBxtdz8SMESJezBzOL2c1mDKzdv1F
l3usDYlWi53oMkDwMEeEiTllE3pYUR8AANC7myA=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+S4Ha2B5PMM0zxs22OjrxMzMzMmzDluIDCzCC5HEw5oLBu3upirHJR
aqUf//9fxcx8BJdrHJh47uCQ2i3EnIZLWzIz71UcUjuYmCtxabNlYu6s3oAh
/FaXCQgYQMQUdDk3JojfA4syn6DLHWRiFmFmVrjwF5tdeWmPmZmn4nJJGjPz
QRxSq5iYVuLS1sYc9gWH1AMlnEHyP5tZApfU/6uyLjjlSAMAZ4a+fA==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9AsNUrTgyH1HsLRkbW6djlVjICQS0eOf8vuOUYH+KWc/1Inn15v8mz
D4fcXS3y9IHlfD5T1S37BEFyu7HK/XdlAMq54ZBjxC2XBpSSzsMu98m7b/YZ
7FJ0AQAtQriY
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+s4M/bid4MpXuxSd0PZQIB3pOYUifVmJi0zdmYmMIxpNazMPGmftjB
zqQdeg9NapsMk8ma/48NmZimYmhbxsTU//+/JxOT3WcMuYtCTBzZd+WZmL5i
ceUFDrArff5g88IiEZDcVWxS//8fBskVYZfrBslJ/8YmtVCYKSGeiekXFqnz
HEwaP35EM0VhSgH9wJTx//8CJj5MOaDfZW/8/x+NTS6SiQ0oVS/AtAJD6jQf
U9z/L9lC2NyyHeh6M10mJsUD/zDkroADhcl/PhYf/J/HxORSMRmrx6kJAM+r
oHQ=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6ctmMbkjEvqtgyzBC45EyZmRRxSVwSYJM7gkJvMzNSMQ+q3B5PkExxy
H+SZa3C55K8/96n//3++rI/1aVjzDVXuJbPak/8fHJmZmIGg8D2aHPPU/3uZ
IXJMU1DlmJj+n+ViYuLw//ZEiiEcXd//NmZmNaCl/3WYJN6jyf22Yea48B8s
x/wKTW4XM3Psf4ic9Q80uWxmkY9A1rdqTiY0+5iYdJmEgXL3s4EOmofuFqDz
3VflCgH9gCr1/0sS1GtAPOM/GnglB5GT8F79EV3u/50cT2bZnJyTGBKDAgAA
jk2XiA==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9gwOCAU2o/A0M9LjkH3HL1QF/tJ13bfwbccg54jARK4fQCnvCtxyPn
gNvI/XhcUo/HJfXkefw/futw+gCPkfvxBooDTpfQCQAArRbYXA==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6c5uNepz3wIu1QFPyMjYy1WqUpWRhxyvxuYGAXmumCVm8TIaHf4fyQ2
uUdajOzr/v9fjUXukQYj4zYg/bF5P4ZcNyNjwz/sru9kZ+z4hF3qiRyj7Bvs
Uv/nMnJP/////LkVLv2Tzk3bc+4DkpwLo8X/Z5FMjAxACAJhXxByIowWb4zZ
2S0mgkAUOxPjfBQ5ZCuqcMvdVUeW62ZUewLnrNdkDELyzysFRosDD0CsH3vM
mRlD3iPb4MPFyKjuDQTOjIyCi1Ck/v+fIcQDdj2f5PxjGN5/f7Kri7+w6xqG
xOAAALqIoB0=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+CYLk2IwNjMTaZy2ZMjLz+2kwrMaXeGjNqLPrx/6NtLqZcJKPlWxC9
TBpD6gaXMljq/xSuG+hyKxk7IIxqxgJ0ua2M/WD6hw5jDbrcabbQ50BDn0Uz
8j7EsNCMUUTC31+YkTEJ051fo3XZGTl0uRix+AEIbl25/VOXcQtWOSCYyij+
BZdcPKMzLqn/BoxFuKTeybDMwiYO8tZ0RgWcRjYyxuORK8Mp58a4AaecJx45
4gEAQz3O8A==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9iQKcYyvi4C0MuWQ7K8GA6gy5nJANlqHBdR5O6zgaXk3iLJreU0RPC
+CqHIZfPWAJhTGZURbdOhTHjyZMnb/7/kMCQu8XDCALCdvqMmPq82BiZWBgZ
QAow5P7f3LDt2IYNMyKbscjBwDpGFZxyx/HoO0W2HNsl3HJ8d3HLMZ7GJXcE
j1wxI/89XHITGJ1xSRENAPMXzNE=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/M4LE9I8MW7FKvvZiYmLZil7sJlGLfgVXq/AwmJoE5WKVOaQO1zcIq
9WcKUIr/PVa5R0ApptXYHVIElHK4i1Wqjp2JSfklVqn7TkBt+VilPjuAbHuC
Ve48UEZg/h+scgZAuUTsbpwvyMQkegqr1IdYJib5q9i1bQaaOAO71A8z3HJf
Qe6fiV3uVyRuff9fhzE5PcUhR00AADeoxy4=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+04HZTUwYjEPh1oklckWZnY4KBXlS5xUwI4PETVS4PLCqelVX95s13
VKkSViamgJSjr7G5Q5qJSe4eDicKMTFNxuH8aUC7BPQCsBo5DeJAjYW45Zj4
sEg+8bTN2LfPm4lJFauxQPDGgIlpNQ65/y1MTIE4pPaJMzE1YJe6IMaEaWba
q/8fX+xMdgdK6dxHk2PXzzThB/tBG13qvxcscnj2YFjUywOWYdF6iMUVJ/2Z
DFtaluFwPvUAAPoTlKw=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+UoFqIQWvmB+xypYxAoL3qNza5He1btiSwMxbgNPikiNBbnJJljM9w
yuVKfcQltZKzBofMuw5Ojp3YJB5uqpJiZJyGReaIHg/If4w6VzHlpjEysodP
WG3Nzn0AQ+5sW9tGEN3C7oPLnf//e3Pi9nycwHtcUnNZQnHIfJogKngam8SW
L30yjIwLsUmtY+VmZBTo/otNDhi3fAkXsdtlzdPxB5cLqQcAFgfScQ==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/k4M+P31jFf39qL3NlLPyHReq0DyMYbMaUOiUOkWI0wZA6KQESlwmR
ZmREk/neIAmUUZjw5X8fI1p4fc8FyihP+ABk9qHpO+MMlOK7BGZbosr98ARK
6Z4EszezMUYiSZ21AelaBWY/M2GUu4WQ+iAFcuB0MPupCSPjDITU7yyQlM97
EPuAKaPC/j9IXmZkNOqTWQ9i7uVkVJiJZNk5EUaHd/8fffz//7mbLKMPstT/
nYwQd+1ZCHS84gsUr3kzWu4HyjRxMjLKdb9GDRFjRvEprRJAGemT7/6jgRpI
2PsVXkCX+f9/R7kJo2fnZ+yR/f/Pz7/YJagOAFTFkhg=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cW+Osl8BKX3GJGqdc4pP6kMPbg0jabUf4FDqmXyoydOKTepjB6fMch
l8pocxuH1E5GhYM4pC6qMNbgcoc2o90f7FJ/Mxjknvz///svFrmljGzr/n+u
0vR6hSH1SpMx//RqTUZGxhZ0qZ8pjIxqjExONRWMCehya4EaGM1n/f//TlL7
J6rUD1NGRr7pH4BGz+XUfo8qd4+RV2wv0K1LNRm1j6MZOZnR+MHepYESjIwp
n9Ct28fIwsvIKOnduv83hg8+hzGKhCy4g8XbQwAAALYxw/s=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x964MPkUh6GGdhkXk5UYWZmZhK+jCHzpl+DiZlZhpNJ4ha61E1lZmau
kkuPnJmYd6HLXWBmNn8FpLuxyMUyzQXTpxiYatDl4pgrfoEZTMwe6HIbmZlP
ghmKzKL70OQeyjCLrwIx5jEzx6NrPC/OzJJ0////zVjk/v9P5GZSLC1lYGJi
eoEpecjQUEFXWpiZ+QqmHBA8+3kf6KpwrHJA8M2amXkBLsn1zMy+V3FJWjIx
pOKSuyvIJIzufzjoYWIWvYdLMoGZ+RIuuU9huOWIAQDl9rYU
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x84MDGTiYmBKWsSpsypFCZmZmYQVl10AE3Oi5mJr3/H9h3eQHml96hy
8ZMnbwLRt0B6J2O3FSQnfBC73EagnAZ2qVPiQDkb7HIpILfuwC6nCvSjN1aZ
q6oczMyKl7BJ/YwHul+iCas2kPslLqIILZw06eD9B///bwPapXgNVQpoh5CM
TGWFDNCNJ1BNegAUY4aGc+pXNGsq4XLhmG54ZcDEBIo7plD02AGC13N9fHx0
gHoFH2L1wP8HNnzMTFlfsEv+3zg5lDkVhxwdAACSSpbc
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cOeM7ohkvqQwKT7BnsUpt8mJg8sMrc72dlYmKqxyb10hgoI3LoBzYp
M6CUznSsJi5hYuIJf4FVaoUQE9NEHC4EOkPvHlapK9xAu2AG3u6p3hjyACb1
NYGJSfsOkPH9+Rw/P22go5h6YXIBTEz6YIXpTHAAk2NkYooH0V2scCkdJLnI
9z/+fy4FCrJVrpYGUpNgcgwglX4/3ECURne3GJDyRNIHBKo8CNs2f4DJpbMw
IQMWvsXvEP6rRJLhzEMNn2+XLu3qcRRkMrGwSL6CNXS2zfmGVXywAwDNgnLm

                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+K4MN8b2uOVGwyV4qZGRkYGXKwSC3hY2S0m7AgjGU5htRUNgbfE3/+
//+iOhddKprJ4tgfMGvS0/8vUKR6mSy+Inj5rSh2ZT5B8I4rxCA47wVz/yJ4
x7SYtiN4GxhPIjifUxnZkAzJ6IBpe7W61oKBeQWSdRm+198Dqe/X16ozMgpy
eSK7cikjg4y+vr46MFTU5x/jz0SWOwwMEiCQ9i7b/eV/thWqz++UhoQ0r/wO
Ztt4/8cFjvH34JTLNnmHS+qzkhFObYt4D+CUyy3AKfXZzgKnHNEAALplweA=

                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8wIMlQ0LQUh5w0ExMTs+YSnHJMTKyai7HKBb5JB8nm3ESTuaLCwhT+
//sRkG7l5ahSUkCxViCjEGwwsq1XJYGqT/wEsr6tAUlqIsk1AfnnIcyvjkC2
KKqcxVkouwQoJ7ALVV8KhHnNEGxjM4rcMgjzFNibTOoocrKd/4/V/P//YYcd
kKN2Dy43kxnIj/3//DjIpW5A9kQkx7CD5UDgWx4Tqtw7NiA/D8T6vgHkEt3r
CLnzrECR8Fv////YgO71///jQBaqXHm9HiQVeR1F7n8EEwywpM9Hlfo/iQ0q
xVzxHwOcaQkFy1VhStELAADXiGXT
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9m4FObIwMTE1M3qujFKSr8/Px8zMxMzMzMWo9R5KYwQwFIjnkvdjkN
dgy5DbrMFm5ubpNPPeZnZhY9h2rhs70fIQygnBsWZ/64dj7oGi82ue8nAqFu
kTn45DmqXD7CnczMfAeRpa7IIMtFnEWWWwcMENn/lcBw0aiaimbdBUmpk18+
cTIxaz/CdOWr1///HwCamYjFB0DwQhgo14Vd7gnQLfJvsMudAMpdwC71Px4Y
ll+wSz1VZWZux6HtJgczMw6p//+XBnbglEMHAGwjixg=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9q4Pb8+bdtGZiAwGb+eTQ5TRYWbRYmFiBgYlG+giK1HioMIkQaF6LI
dThJOzs7Ozk7n33AJH0f3cIjUHo2E0sjdiedr2RSKcUm8XqxoxKLxA1sUveN
QG4JwiqlC3EnNrkGFtxyEBDDZPMcl9x+FqaDuOQKWIwe4JDqZ2dJxCH12ogF
h9zh+ZpGiUdQxZ47Xvn/+f79EGkmAwy77rMoNzQoA72GxRnbgcK83CrOy95g
2uPIwpK+YOEFHO4jGQAAN/WolA==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+04MP5fOHs7d+xSb2yZmQCghNYpN7aMDGmhDExeX3DkPrXHy3D3DGN
14BJFENuNZP/jab/zQkLmXgx5PRUbv7/fyrkwQLFiehSlczGQPLn71368Rja
LJgigeTnS1zpL9Gl3qkz6f3/fymYqfUFhrb7kkzsSkr88rPPYvHd/1BGBkbF
u/+5l2NKnTLmdSm9+/8/TxSG1F5ls9tgBk8qutRL1vCfEO0c69HlLjAVg+nL
5pXoUncUdD+D6DPeKj/Q5WYzmf/5///3ZI3c+xgumc3EVHapz40Jw0AgeKoN
jFN+fwxngMGTAofSJ1hlqAsADKe5Sg==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+OYH89usfqHfYDPctQ7wAiGfajyEHEYKAexSAG3HL1qHIoZoIEHOrr
YSagW+eAMAHVKXB370e3DSSJZPj+/1hBPRZtyF7BLgUOAQfc2nBI4XMIARNx
OaSegFw9HjkcLgHa54BLCgsAANPnlxo=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/E4IcYQxguuX4mJnlcclq45Y7yMDE54pDrYGIyfY1dagYHE9NWHNr8
mJhs/mCXuqPMxPQCu9TvACYmu2/Y5Z4zMTHVYJf6m8XEZPsVu9wZoDZ/HI5s
YmKSuYJd6hcf0Egc2qYw4ZR75wSU68IutwwopfAKu9wbCSamIBzW/fdlYlqI
S+5Ymf8PXHLUAwA/zNR8
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x84cH2TbTyP97yHWKQ28zIxqWtIMimvwJD67syUevz//xf9XOyz/6HJ
vWFy+QRm3BVguoUm917AEcoqY0pBN/TebbgJ1jjdi1+O5TYuuYdMxj9RRX4s
6HZ2XvAFyMphWowqdUKYEQgY+FtfbmcU/4Eidd1Caunjxwe8RJhE+Xguokj9
y2DZC2ZcsWFiikc1cRuTIYRxUpSJyQRVLoVpD4h6O0WUpdudBSWwH/A4/AZS
B80ZpWb938cUjix3k8kPSM7gZfIHevo8k/RPNLllnsyci0G6X8sxrUSS+2nD
q87JE34BwutCDc+9Skxhl2GcX/NO/h8QAAAcIK7S
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+s4H1kVNEn7FJP65mZmZdjlXqkyyQW3oldly4z3xEclrUz8Z3BIfVG
jrkElxsfMZMn98mWyaQRl+RlfmbusJpj2N1zOZkJ6HeO4DdYZa+XSDMzMSfj
Mvn/I6ZwnHLTmRfhlJNiPo5LahZu+w7zMXCcxS71SY9ZdB92qa/BzJqzcZi4
gZl5KU5HUgcAAD+22p4=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+koImBkROXnCQTExc5cvp45PLINJOAHMc13HJMqTjkdgDlXF9hl9sL
lGPah13umgYTk+Z1HIYm47YPr9xDdibRU7gkOZmYsvDISZMjZ4lH7pEZUysu
OeoAANdDz+s=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+EYKcy1y6cckxMXGBGg+I0LHJMYIYmE9NmNLnpTEwqYIYkE9MiNDkl
RsZyEH2Ji5ERTWoVI5P4TxSzEWARI1PqfxxyCYxMZSB6dygTkxuanBsjY34c
IwTEoclVMgLNguJ4NLnVEHF7JSxy/9OB/ovb9MkdKLcQXe7/bhDxw5iRUeAZ
hhwYPAea64Nd6v9eJqhfsABPJkbhk9ilPikxMmTj0HYB6I8eHHJPxZk4buGQ
+7/PthOXFJUAAHykpP0=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJzNULENwjAQPFFRMgAu2AKXlLRBHiARIaIJ0gcJMcQP4kU8yC8S3iGisOUU
iIKTbMk+3/35ds2tuqwADGvdqvpxIKqfp40eXD9cu749H/t727W0b+Kz7bzG
34DKTm5hinKmQPkFmap8gWKgRIlWUXLkhSYA+k5mS1QARPN4ci6knNVG2GKC
ZJasE93EJZmiZRSE0Zv0mwwjc1BOOacXBibGEIRUB1YhglDeHD7I25F3REvp
B/4fL8P+sMY=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+M4EBv3zOsEo9W+fIzMUvI5Z7HlOtiZmZmAmJmqczLaFKLeYDC/P6r
V8fJsYlt+YQiB9ISdADMnK3E7FT0AUmOgYkpFs6ZzMRgiOQqQ2bm1XDOYScm
ZovHcO4zC7jcm2MuIFf1IDQ+Xg1V+MgL4mJ9TL9sAHuEiVn5FrrMUwMmoKuY
mIoWYuqaDjbO5wmmzP89/EA5sZVvsEj99wUFzg5sMv8PALUxH8Aq9R/sDOxS
kEBdtWovFqn7UK8JWHXcR5drlFMAAjk2oAL1sCOPHmHRPrsfCnDYTCkAAJeS
j2Y=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+EYCOjTScY2McyJk1GlctgQgLiqHL3/fz8BKyABBumHAicfff//xMe
JibuyZhy////7tVm4lWZhE3qUSwTE38cdse2A+36hF2qnpmJyXXCBywyN0rZ
wR5we4MplwPznecrDDklJk2j2obdqkxMWzDNXPYORN0WxyIHA8oocj0rcMuJ
svXilEvi5+yGc/TYUO2bysRpf+AvmDmXlcn4PbLci2n8TExtVx88uNqmwcS/
Es1xq0WBnpaRBhJiazBc/qO7WwAoE9j9E6fnqAIAEbuZyw==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cl+NXMxWCx4R9Wuf1M7BxMTIv+YpNbwJT1sIeJqfgZFrkvplInfm7n
ZirCaeseAZEnOCXtmJbglJvGVEqeHCNuuWis+rYtBPr7nxFTGabUJ3mm9Cf/
zzIJPMSUe8XEzmT5v5gpG4uRK5iqvPkXsjAtxCLXxti8iZeRSeALFrmzTM3/
JzExTcTm+Lc8XndcGJm4t/3EIhnAxMSk7MXEmIrFobfjZe0e/V0sxMSRrPEG
Q/YliLhTqsyk+BmbrQMKAEK4wz4=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9hYMtDrMKvQ1hYEoSZWUDAuegostRmSUZkIIwkdQooxR4evrQsHASm
bn+LJHeQkTH3Gw5H3Jdk1HuCy4UXzRm1n+GS/FXGqPkdl+RDScbXuOT+5zFO
wCXVwcK4EFN0j2PN5+MlTIwsHzHlFCBhwbYci2nGYCnOBmw2HRZkZGT2Pofd
GV+WLDmPy4l0AwCqv8ek
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              TemplateBox[{"59932"},
               "OutputSizeLimit`Skeleton"], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9IcDta5cFf7FIPFBgZGXuwS54SZgVK9v7BrrOXjYOVcToOGzfuXqOm
/gGngxYyXkEX+rE3PDz8IEgrWza63AFGLmNjly9AlrnSLVSpfmmuOf//H3sP
1liIaqI3SAoKJFDkfmYzevzHIfeG0e41Lrl2RoSJ/+8LIsv9sESWm82Ioq8A
Se6OqsYjHHJ3VBln/0eV04ay7qoy9qFGxGt9ofkg+kGfCrrU///r9Jh4eHg8
ORnVFmLG7e9VGQyMjEoLf2PI0A8AAIIOwy4=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+K4FGRLAPDSqxSvUD/PuoNxS4Veuz//5XY9B1jAOlYaYnNLlmwqCU2
uV6wIyCa0UGoJVgzVrki2Ucgh2L1wjGguGxvEXbvHSsCClsyPMImBwZ4InQl
AzYvwOSwhhhBOexeh4BHeOVkccoB/YDbf6EMRbgdI4s9SZAEAGXy3iQ=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+M4KHUBZxyn1RD/4IZn2/+QJc7z8S5AURf1JQ9gCm3BazL0/QnhplQ
uSUsWzDtg8oFmWFxC0TuAlfH/3mzscslc+/0NXmJIcey5///L/xiuoYvMMxc
w/f4//8FjEw6GLr+/y8SARLODEavsLilXujmET9Oo+dYpP5fZGECgiXYpP7/
3+znx8uEXQoE1EXwyCXgkVv0/z5OuZRD3rjkjAT4N+OSuyo9CyPOqQwAUdjZ
rQ==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+E4N3xZakpqdaMoakpq56iSk1XZEIA9fsocipMnM7OznXLgGCOCFMM
itymaQ9hzMeajKhycPBrBjeT5iYsEj+3p0kwMZkdwaYpGegQyXWvsMgsUmdi
cpz0BZumvaxMTKzbsLvirz0v0MiEW9hlb+5yZGbif4pd8v//NdxMDrjk/q9i
47+OUzKMKQiX1DZulg2oIhsboIw3MkyJqFI/tYXBXn7VKcAU8xJV7o8Lk57v
0qWRMkxMBmhS///P4wDFKSOTWi6WwLywEBjO6guwBiZVAQB5srD7
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/ycG/AiqxSk3hdEUl9Q5fsZwXHLxjIzzcEg9VWaM+ItDbi4H41VcRgYz
Mj7CIfXbG7fcbUZGyy845PYzMpbhsi6VkXENLrkTjIxRYMbW+SaamprTkeUW
Q+S2W7MxggDbLCS5OyyMTI++FTKBZVgZGUOQNQL9N8GGkZGBq2nKzPVocsXK
YC2M9t///3/IyCh7CVnyJA9E0sbd3R5IpaE4dRUXIxLoQfWHD0LGq+cXqtxR
W5BwqjNbxVE0maEMAIgTlro=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+c4NfEYAbFur/YpH4bMPHyMDHlYpNLZ5Kq02Zi4r6MRU6JiYkJqI/J
FlNqPYfX+nP3ToYzaWPKmRs8A9tqxHkXQ06rF0JbM13DJfdBClPuiQBY7lco
U/EfTH3a3////xPMZPQW0y31jG5LlpgxMh7DlPr/IRjoN0YmpoQ3WCQ3MGnm
Lq7nYMKm8SjTXCDZgy1c/n8RnQAkn2ELl///49Ve45RbzjYZp9x/da7zv2KY
urDKTWDR1GDiuYNV7v8KGSZVbFFLRQAA1rm7VA==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9AML/TgJGRseIZhsTZecqsTGDghS5VL8oEAzwH0OQyQKJaxsw1h6SZ
fNDkjqmozF/78tv6//+VmbRxuohMuUuiuOWmMzEtwyVXzGTyEYfUYlYmBxxS
/0qZmGbikPrIxGT6HLvcY2Dg3MVhZCITk85rDNGza9SUPTx4mbSeYEhd8YdG
Qh2G1A0pYCTIAqXYb6BL/chlEpv/JwAox7L4L5pcJhPTjP+H+cCGFrzF4U7a
AwDHw6lp
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+kYLMpo3X/F2wy7x1YmZgYmXw+Y0o9kWZiUm1wY2XKx5D6IMjIlAvU
MlOI9wG63GomRk2wVelM29HlIhgZzoIZ9epP0eW8mRjfgvVLYNo3iYkRZM8X
OSxuucnEmAOk+pmYtmHIfZZhFAJaFMPEdBLTf3MZGPliYhgYGbHI/Z/JxgQK
F6ZSLHL/TzVEqeszYXELFMSQK8fICJQ7gkffEqrKXdBnWo9LjioAAAnsuAk=

                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJzNkTEOwjAMRS0mRg6AB25BRkbWohygFaFiKVKKhDhEDuKL5CC5SIjVVkDi
bAxYiuPoJbZ/vOtuzWUFAOM6uaZ9HKxtn6dNOuhhvPaDOR+Hu+mN3Xd8bTuv
+J/mLQKglYhOXavkdE6CTcBxgOAzhoBuijRkWRXoEGvMLRFBkfMDOZn41JGk
IQZiFRAERAxYvABt0heix1I7F1ueS1knU0BVVmj/YlLBCvPvfyrqoZp2IlX0
CfNc2fI2SSutGFNtCL+yF+KZuRY=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8M4NeNn1hE5/d+2JrpZstogyl12ZVRiokRBDDlzBghgDcaQ+oaH1jG
NeEChtS/ZKAEa8mhX1gc8g4opXYYu9PLGBk51mKXWgd0IVNs4ytsftvFCnFk
9FcskpOgPqhHElsIc+fKpgZVoFz8P6x2LgRrRPXEbQMgMM+f4wuSqkPW962R
kxEOmBv/IuvKhAozgJAFqi1uCF2MGs9R5XqgPmPkiVz+B915Pe5CQBnl+PNY
Hf/45s2bb7DK0A8AAKRMigk=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+C4MtaA0ZGl6fYpA6ZM3G6uNgJ3cSUyhdi0l3x///vy18xpByYWLNe
Y7frkAhLNw5nvBVhSsHlxBdMTDX45W5cak059x5d7r0Mk6KzMxcDExOT6zt0
yYuSQGEm+4ICNqYMTGNnTpjwAUhxM0Thsvg/DxM+uVZcUt+42c7ikpvNFIjT
yNlMy3HKTWMqximnyyR+CpdcPRNuP3zikrqE01AiAQAc/c/O
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+c4KZiwllccquYmYXwyDHjktvMycy8AJekFTOzyQcccpZMTAxPcOtj
wiW3HCh3BIfcMaBcBA65Z0a45f6HMTGE45TDp48WckwMhs9wyLUyMzGfwCH3
I4qJeQUuQy8wMdvgkvsfyNyJU44qAABHMdfd
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+c4EynFCPDROxyE5iAQPDs/9Xb0GVOaYUIgCRFtdh5DqBK1UgxhR1y
YYKALahywUxMBf8P269NUFEJXPscVW4ZO5Pee1yuzABqfIZD7h3QHp2H2OX+
zmVhYurCZWoFExN3F6bO43lA4mGXKtBYDDt3y5wEUc9tmZh0n6NLOvkcBFGv
mlmZ0v6hG8rE2fQHxMhnYpqFJvdnijZTOYixjIkpFMM5j0OFlJVtH/3SYbI6
gCH5v4+DiUnVehknE/8RTMk9ltjjAQyeWnOCpNh3YZH7/38z0Ie4Q44KAABA
CaHn
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+UYJIIg1pT0x1sUheFmUCATX42plwKExSwFGDIxTExNbx58+ZiVlbu
WXQ5aSamS7icgl/O6wduuXBcUkA5++2TKqa9wmEfCGgHv8QqJ2JrK8jE5Iip
1cvMbPv//6u1mZjccVl7RZ1J9i0uyYtMTPNwyR3ALffTHafch91MTKLXMcV/
ff3/xR4YR4VY9KxUK5MBRm4RNvOuSjIxKbTcxOVI6gAA8tm4jw==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+cYFOy9HVccoWMjPLPcMv5fcQhd16a0Wg/LkPbGRntvuOQu8rIGPoH
t1zcP9xyjC/IkWNgZCBTn8oH3PoScEjhlZvLQJ4+AnIib3HIPZVnZNyAS+Nu
Rt1PuOSoBABrs95P
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x964M/KUG8pp5U/sUg9d2FiEmViYkrFlNotw+Sw6cWeCUxBGFL7VJjK
PwLpn3FNGHL6jNl/IEb31F1ClVrIyH0dytRkKEOVK2SaDWWdZ2M+gS63HsL4
FsRk+R9dzg5MPw5iYlqAJreVnSn8+s710dxMTL4Y7gxkYAQCELEPQ+5/Z2GS
WeHyXCaj35hyYPDHhakRh9T/90xMe3HJdTPp/8Ulx8CYjEtqJyNTKC45S0aO
U7hcwsuohEvbMibGubjkSAEA8FjCZg==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8u4CcjI6NLLgQYM+j+QZb77WfKhAR+oer8cqukJFeupKTEg4nJ6M9/
7GAuE9MVXFZXM4k9wiH1R5/JHZe2dUzs+3DJhTPJ4pL6ossUhEuuh4lpPi45
QSZ/XJ47z8mUi0tbJxPTeRxSl3iYYr7hkNvLxLIJh9QvVyZjXLYdYmJaj0uu
lIn3Iy45MSazH7jkXCUv4JLCBAB1h863
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9O4MPbmnIYUGS4giz1RJMJGaQhSR0UAwoomHcGyZmbguS2IaQOg6Q8
HwFZD/9vYGISKfiGkEsFSjX9BTMXMTMx5SDbBpRr+g1hxjIxTfmOLPc8VfM5
hJXFzCR8CatHfh4WZuK4gN2TQHcwKWKX+mrDxBR4C7tcNROT/BXsUt+A2g5j
l/rjxcSk8gK73DZgqK3ELvWJm4nJG7vU/ylMTLJPsEu9sGBiasChzYOJiXM/
DjkDJpbVOKT+pzPZ45LCBgAur62D
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9Y8GOHpfQP7FLn7RkZGSOeYJPaa8UIAmKHMGROO4owQkAIutQFUZCw
xrRwRkaBR6hSF0GaFHOe/F/RaM9YjCL1RxEoFXUHzN7BmIbi9nhGRr6FUM4m
VLkljIyiZTCOO4rcXqBlM/4j5HYgyQUzMpb/gXFuCTp+R0g94GNkhDv7szcj
30OE3DJGxja4tjVAB99ByKUyuv+DsTcwMTIG/UOW84AxK5gYGMXmIzllE0zu
Vg4HI5vBUWTfPREzu/L/wN6V7oKMjEr9/1FBMKOwKTM4CtQeo0n9P+cJiRz5
tIfoUv//3/ADSRV8xpShIwAADMmSZw==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+S4IH1ZShrcgea1PMw0V9gxr+rigJocl1M98D06z4m4X5UqW/isq+A
1Mo4VSaLPWja+pj8/39epsXEabzhG7pLWpkUUhiZhDPuYHFlChMTk27OdWwe
aGRhUl7wAYvEsTRGHiFGPywyN/c4M+luvcRkjeGG//+FmTTzP/z/Gwz1Hwpg
YF8Eos4xXcWUY5Q8dQ5IXWLSwJTbKSPOYWGRocfEhMUxH17W19SIcTNxY5GD
gLdzPuGUG8QAAHHGzk4=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6c1eLPZYd8P7FKfNJiZmItwaFNhLmP2wCp104Bb9zkz/3osUl/smHW3
fNJhNv2CKfeciWMhiF6Viym3l3kihCG5FV3qPhPzLqicBbpcN5PmJ6icwF0M
OUMoq5GpAE3Oh7kCporBAFVqHbckpglQYMAMd4EFUyCqXBRzOIwpybQYVW4R
szKUVc7KcxZVbhWL2DcQ/euEGJMEmjOhJj0tZ2ZmTkKXy2XScy8MVGRmltlw
H13ulQ5QBzBuZc6iywDBpytKzMz1L99jkRoEAABz1Lsi
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8w8PH8toyMjMXnuSvRZXbmaDIyasYLMzIyCr1G1ZPOrJT38uvP/98X
MTJaf0aWeu/E2PUTwtzEyH0ORdt5RsaNENYZbsatqJZ9cGOQ6gIzXBmlvqC5
5HMeN4tt78/3jozSFzF98KhIl9GKn1HyOlb/fZ4JdL+A1UR0M8F2STLqz/Fi
ZORd+wRd6osrY/S3//93p7AxSlV9RJXLZRT4C2a8KxZj5H2PLDWblbEZxn6Q
wqhxB0nOmVH9A5yzm5HxIopc1n8kOaH7CN49dlioAcEGYbZZSNr2wUP0/75C
TuFyZKeUMzKuBVI/TlerMLPYHUbxwUdtRum4uDgVRkbR2fv+o4F+Y2CIMWdm
nn+ILkM/AADY7p3g
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9QcNyfwfk0Vpm3FeyMjIys37FI7RdllG5/GsT4DVPqnBZj9puHdxdi
kftqyej0+zY3dzUWuWWMSk//f25nZmS8giEXxLIWRE1lZExElzrE5Aym/+2U
ZLqAJtfIWAFlXWeTe4Ui9U2XcQ+M7cE4F9VIRvnPMPZnYfEXyHKljIUIjjjj
OZxykYx9OOVOMk5EllvNGIUsh2LmLwvm9XBOKqrc/61cQiegzE4Wlecocv/b
GYUW/f3//+8jf2ZBVG3///+MZWO0tre3ZmRUu/MfA6yNBkY7R/S0P5hS9AEA
Fpy5eA==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9AkCZyFadcOqPeOVxyuUyMs//hklRlZHyCR64Kj5w6teWs8Mg9YmSU
OIZbjjGTjnL78Mip4pabzI1bLh0opfoLt1wTDutAcjjjjw4AADfz0jU=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+84MdeBwaTH1il2l2YmZmYazEl3rRYMTGD5ERfokt9sgWJg7DfH3S5
IiYmJoHMZ/8PLP///5o60wwUOaCe5WDWpSSgflNkuVNAuWVA+nw8P9Bc+TfI
cu81mJn7/i/T4gPZmYEi9f//GQ4mRqCdjEwSTZiesAK7UzHkDabUWpA9zH7P
MGX++/OA/NaA4bf//79Kge2ywqLpJsQuJmtMqfPB0PCahClXxAyR8/2GKWcM
9heT9Bks1vmC9YlhxA3MTG6jg9ik/m8oKbn+7BNWKSoDAGWfirE=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+04JKg9gIcUmc4GRkZgx5ik3ptziAuycGgjU2ymzH0x/8zSoylmFIP
BaXAtAHnZQy5/YwTwPSn/lPbe9Hk5jHuApLv1kRKMfIvR5O7AJR7Fy7CyBi2
6ym6mT2M7XWcjFINV7E48wLQc1w117HIgOUULmKV+f80mZExA7vU//mM7MKS
H7BKreLkWl7J2IxN6k8AY/L/d4LSr7DILWE0/vH//05GbI4JYIwHkm28d7E4
UoyxZX+JIWMxFm3f1IEeZxTq/Y3NLYGMUvm73mD1AVUBAMdwvxY=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+k4O/bmWVlTlXfMWXuL4hmBAPPT2gy7zO4GOXNOtesWWMh3vwBVW47
o3zjIwjzdP0ZdLlFON2xnZH3MC6531mMzj9x6sxi4t6PW5JR4Bwuub/ZjGZN
uCR/VkkIpf/AJVvJyLAbp85sRu6juCRvhjPV4ZL7/1+cGz2okeSYV6ALlbqf
hsqxn0WX2yYgnr8aCOpZeTDN2mENiVnGYiwWfX9dURETU/H4G253UgEAAKE6
0AU=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9IUMgwGaecL2PBqBxWOX1cUt8NGQXw6MMtl8nI8wKX3FpGxhpccuuY
GP1wGsrPKPsZl1whI+MbXHIPbet/4TSU5gAAZprqBg==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+84Et1+kPsMq8KtZiZarDJnLFjZAJCrbVY5OyYtbQzdmbYm2CRO/ga
Qs/E4x6F6zilZnLjkcNmHxTEFOKUusZzCIX/4Ew6EIiCiB1Bwa9Q5OyYmZCg
gonHzGsIOSZRcChu72dkKpw500MUGD4wuTPiTNpAMWBoiu0E8R+eXXIWYWqL
CQMTN49JK3b3nT17Hbefhy4AALnrzIU=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cYrO/HKXVHOhynXDkTTrmvNkzLccltZBK+hUPqsSiTN25tTMW45JKY
mA7jkHrBxWT5E8SY2CYpabYRRe4ZE5Pd///TJHgZmYCAdTqy3HNWRrv/c4LZ
eAWreFnZGBlnI0vmgvRdPQhiblvMy5SMLNcPkoNZHooqt1NTbONXGMeWKeAX
suQ5JtWTCDmm58hyd8SY7L5AmGsFmFb8RPFGEROT9rxLQMY6fiY5FG3//39L
BvpMWCU7mJdJ7sJ/NPCjVZCJCez3HehSQPC11dGaiUly+h8scoMZAADPE7Em

                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cL+LbOzHEfdqkfHYw2OHT9imRk3Yld6p4Yo/lr7FKboxh9j+BwhjOz
8TfsUg/EGatxOOOiAWPrS+xSP+tZzI7i0DaV0eQpDqn/jozzcEntUrD8iUPq
70LGXFzafmswTsQl94ufkc+6bd3jt9j0KTIu+39HlCEWi9y/Zkav//+v+woc
xiL50shsy/f/MxhbsNk4VY0xYUcy43msznmhxcjolosjHgYaAABwsd0Q
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9y4GOpCoND5ktsUl89mUBAqeMnhtTnmUwsDr1+EkxMdRhyq5mYjIHU
U3UmrlPoco1MTDdA9CMdpoD+J7+RpZ6aMtV+BZvtC7TU8Auy3C0m8Y9gxlWg
FPPS/6hyHLOA1KcDPkA5g/9ocgLr503sVwJ5w/UVuhwcaD1Gc+YLF5Bw6OKl
zEwdGP77+2HSpOv/vjUxMc3EkIOAU0xMk39jl3pvymSGQ+q/BxPTXRxS+9iY
rP9gl/rlxMR/E4e2I8CowKHt/1om5uo3OOQ2MrXhkCERAAABpa/m
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/s4Mfrz7ik9oQxKWCVuNUjwsrEZI5F5pQNOxMjE1PObXSJ+/PUGIEg
6BSGloM5IiAtdTcwZA758zExgeQi32K4gB0oLKFVoiXLJIhu5HM7xtijT4CM
t4JMc7H7DAisGCtwSa3lYSrEIfXdiIlpKbLAKrhPv0ZwME38jiwn4fUQygph
YlL8iGKQOCNj9hEgyJJgYDRC0QX0QCQH2NtMTGzeTzCccHJjOqMik27ZYewu
fPP5zTccjh8MAADDNrxh
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9QMNuGUegEVpntTmxMjExKWGT+NDGyp5ZJsrAdw5RbwiS9H0itFw7D
kDohJD0TzGhiXIQuJcJUAGF90dD8hCL1LZQpCybizzgHRa6B0Q2ueBFjD7LU
BynGpXDOXVS550wWXxA8xv3IcnOYkN3G+ABZzhNZDs1MfcanCE4GqpwBkr6X
HKhmNiPJbWVK+Y3qzgYY850805H/KMCNYQqE8caYcQaq1P+zQmx9wID5tV6I
qfYnmtz/5aJMykUG2kwC87+hS/3/f7MDGOc69c8wZegGANdEwKk=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}]}], "}"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {1., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 56, 24700931498630835818, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{58., {1., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 56, 24700931498630835818, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{43., {1., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{43., {1., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 56, 24700931498630835818, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{72., {1., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[24700931498630835818 === $SessionID, 
   Out[56], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{
  3.739793256928838*^9, {3.739793320292508*^9, 3.739793336128813*^9}, 
   3.7397969532318215`*^9, 3.7397974330724916`*^9, 3.7397975758969884`*^9, 
   3.739800019616311*^9, 3.7399155444386406`*^9, 3.7399155826318817`*^9, 
   3.7399815506446915`*^9, 3.7399816178442492`*^9, 3.7399818191619096`*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"21a6521a-a309-496f-91a2-9da95e573e4f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "here", " ", "we", " ", "need", " ", "to", " ", "adding", " ", "scaled", 
     " ", "784"}], ",", " ", 
    RowBox[{
    "as", " ", "in", " ", "python", " ", "implementation", " ", "that", " ", 
     "array", " ", "has", " ", "been", " ", "flatten"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.7399169597412405`*^9, 3.7399169897612233`*^9}, {
  3.7399180939266267`*^9, 
  3.7399181061945915`*^9}},ExpressionUUID->"428efe7e-29c3-462a-8c93-\
0313a0eddbc5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trainedVae", " ", "=", " ", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"vaeNet", ",", " ", "trainingData", ",", " ", 
    RowBox[{"LossFunction", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<latentLoss\>\"", "\[Rule]", 
        RowBox[{"Scaled", "[", "1", "]"}]}], ",", " ", 
       RowBox[{"\"\<imageLoss\>\"", "\[Rule]", 
        RowBox[{"Scaled", "[", "784", "]"}]}]}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"MaxTrainingRounds", "\[Rule]", "1000"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"TrainingProgressReporting", "\[Rule]", "\"\<Panel\>\""}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Method", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<ADAM\>\"", ",", " ", 
       RowBox[{"\"\<LearningRate\>\"", "\[Rule]", "0.0005"}]}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"TargetDevice", "\[Rule]", "\"\<GPU\>\""}], ",", " ", 
    RowBox[{"BatchSize", "\[Rule]", "64"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.739640917406395*^9, 3.7396409365306387`*^9}, {
   3.739641234230517*^9, 3.739641267372436*^9}, 3.739641484990506*^9, {
   3.739641598182274*^9, 3.739641602211731*^9}, {3.739641826613477*^9, 
   3.739641842161272*^9}, {3.7396419344073505`*^9, 3.7396419543255787`*^9}, {
   3.7396421349665666`*^9, 3.7396421387829113`*^9}, {3.739643564377947*^9, 
   3.7396435646719217`*^9}, 3.7396465019788446`*^9, {3.7396594070129886`*^9, 
   3.739659422753173*^9}, {3.7396630845636253`*^9, 3.7396630850627346`*^9}, {
   3.7396642974209285`*^9, 3.739664299792666*^9}, 3.739665092777877*^9, 
   3.739668632595425*^9, {3.739706542575757*^9, 3.739706543416222*^9}, {
   3.739706643936159*^9, 3.739706644262807*^9}, {3.7397160374637423`*^9, 
   3.7397160410045133`*^9}, {3.739716266336693*^9, 3.739716266843546*^9}, {
   3.7397163290405035`*^9, 3.7397163291394672`*^9}, {3.739716679089787*^9, 
   3.7397166798979435`*^9}, {3.739720714284532*^9, 3.7397207153305655`*^9}, 
   3.739721476889398*^9, {3.7397383492058954`*^9, 3.739738384863912*^9}, {
   3.739757249279292*^9, 3.739757267130204*^9}, {3.73975741031142*^9, 
   3.7397574174190454`*^9}, {3.739797532594019*^9, 3.73979753273199*^9}, {
   3.7397987690635576`*^9, 3.739798769268255*^9}, {3.739799836384035*^9, 
   3.7397998375504875`*^9}, {3.7398108032932243`*^9, 3.739810805684041*^9}, {
   3.739812358284381*^9, 3.739812375087082*^9}, {3.7398124328150425`*^9, 
   3.739812432987008*^9}, {3.739812554844903*^9, 3.739812555405939*^9}, {
   3.739812650425634*^9, 3.739812651136638*^9}, 3.7398167404695654`*^9, {
   3.7399155057860126`*^9, 3.739915536538898*^9}, {3.739917888759632*^9, 
   3.739917889336051*^9}, {3.739917990162097*^9, 3.739917993343772*^9}, {
   3.7399815835654397`*^9, 3.739981588060896*^9}, 3.7399816749952364`*^9, {
   3.7399817330230904`*^9, 3.7399817337155666`*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"8fceabf9-ec10-47c1-a295-9b3b7892aa3b"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of outputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["3", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["9", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], {
                    
                    LineBox[{{-8., 4.898587196589413*^-16}, {-7., 
                    4.286263797015736*^-16}}], 
                    
                    LineBox[{{-2., -0.9999999999999999}, {-1., \
-0.9999999999999999}}], 
                    
                    LineBox[{{-7., 4.286263797015736*^-16}, {-6., 
                    3.6739403974420594`*^-16}}], 
                    
                    LineBox[{{-7., 
                    4.286263797015736*^-16}, {-6., -0.9999999999999997}}], 
                    
                    LineBox[{{-6., 
                    3.6739403974420594`*^-16}, {-5., -0.9999999999999997}}], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQDQESB7i65vlYVu6yWZn+5tHX8+IHylZJbbJ22WUT
uYTH5u4s8QNvu1yVVnHusuHZlsC9LUH8QKG2/NyWkzttDs95EdCgKH7gb/dy
pdPNO23qI0AaxA7MWHNvU63FThv7l5PtXk4WO2Dbe8R3zvMdNiz+25+1u4od
eKsb+Vlt4g6bs518rBKfRA+s7JuzWNZ0h82smSAgeqBgfV9cw+XtNmDtdqIH
bAxuyEnmb7ex7Hts0fdY5ADXRsX7G7m223R2gIDIgWuG2fO9lm2zudmke6NJ
V+TA4k1b4h87brPRqL2kXntJ+EC+8T/5mrtbbSrKQUD4gM0W9wcilVttjhfK
AJHwAU7TiQvWimy1Ec85KJZzUOjAta23Etw2bIG6R/BA3oyTF79lbrZ5BXaP
4AErSeFJ/ayboe4ROMAxKyZIY+Emmy6wewQOXJVaJnTQZpPNDbB7BA4smP3+
UuSNjTYBv5b4/1rCfyBPxnLyp+KNNh/egQDfAau5TcHd/BttwMZZ8B1glzsj
rLJ6g40e2ADeA1fmiV7Z47bB5uwZEOA54GC/T2P1kfU24OiS5jlwpmHRvALG
9Ta/EicafSjhPuDmpPk/1nOdTQvI+htcB5Y1B3kVz1kLDX+uA+9c5Bo2/Fpj
U31ML+7/Hs4DSm09C0RT1kD9x3nAzn3u6kU3VtuAlZ/iOODSEbAwPGK1zRoD
dSuRBI4DRp7LGk0er7KBpB8OaPpZZQMA47MdMg==
                    "]], 
                    
                    LineBox[{{-6., -0.9999999999999997}, {-5., \
-2.9999999999999996`}}], 
                    
                    LineBox[{{-6., -0.9999999999999997}, {-5., \
-0.9999999999999997}}], 
                    
                    LineBox[{{-5., -2.9999999999999996`}, {-4., \
-1.9999999999999998`}}], 
                    
                    LineBox[{{-5., -1.9999999999999998`}, {-4., \
-1.9999999999999998`}}], 
                    
                    LineBox[{{-4., -1.9999999999999998`}, {-3., 
                    1.8369701987210297`*^-16}}], 
                    
                    LineBox[{{-3., 1.8369701987210297`*^-16}, {-2., 
                    1.2246467991473532`*^-16}}], 
                    
                    LineBox[{{-2., 1.2246467991473532`*^-16}, {-1., 
                    6.123233995736766*^-17}}], 
                    
                    LineBox[{{-2., 
                    1.2246467991473532`*^-16}, {-1., -0.9999999999999999}}], 
                    
                    LineBox[{{-1., -0.9999999999999999}, \
{-6.123233995736766*^-17, -1.}}], 
                    
                    LineBox[{{-5., -0.9999999999999997}, {-4., \
-0.9999999999999998}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-7.4, 
                    4.531193156845207*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-1.4, -0.9999999999999998}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-6.4, 
                    3.9188697572715305`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-6.4, -0.5999999999999995}, {-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-5.4, -0.5999999999999996}, {-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-4.355555555555556, 
                    2.667008584809791*^-16}, {-0.25, 0}, 
                    Offset[8], {
                    0.08888888888888857, -5.442874662877157*^-18}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-5.417705098312485, -2.164589803375031}, {-0.25,
                     0}, 
                    Offset[8], {1., -2.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-5.4, -0.9999999999999997}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-4.4, -2.3999999999999995`}, {-0.25, 0}, 
                    Offset[8], {1., 0.9999999999999998}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-4.4, -1.9999999999999996`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-3.417705098312484, -0.8354101966249685}, \
{-0.25, 0}, 
                    Offset[8], {1., 2.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, 1.4695761589768238`*^-16},
                     {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736765*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    8.572527594031473*^-17}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736766*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-1.4, -0.5999999999999999}, {-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-0.4000000000000001, -1.}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999999, -1.1102230246251565`*^-16}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-4.4, -0.9999999999999998}, {-0.25, 0}, 
                    Offset[8], {1., -1.1102230246251565`*^-16}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-8., 4.898587196589413*^-16}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-7., 4.286263797015736*^-16}], 
                    Offset[{12, 12}, {-7., 4.286263797015736*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-7., 4.286263797015736*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"enc\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "10", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["enc", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[10]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-1., -0.9999999999999999}], 
                    Offset[{12, 12}, {-1., -0.9999999999999999}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 0.,
                     BaseStyle -> GrayLevel[
                    0.4]], {-1., -0.9999999999999999}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"imageLoss\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "4", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "6", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["imageLoss", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[4], 
                    Skeleton[6]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-6., 3.6739403974420594`*^-16}], 
                    Offset[{10, 10}, {-6., 3.6739403974420594`*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[
                    
                    GraphicsComplexBox[{{0.1, 0}, {-0.3, 1}, {0.5, 1}, {
                    1.3, 1}, {0.9, 0}}, {{
                    Opacity[0.2], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[3.5], 
                    RGBColor[0.33, 0.33, 0.33], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 18], {-6., 
                    3.6739403974420594`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"mn\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"LinearLayer", "[", 
                    RowBox[{
                    RowBox[{"{", "8", "}"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "5184"}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["mn", Bold], 
                    Style[
                    HoldForm[
                    LinearLayer[{8}, "Input" -> 5184]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-6., -0.9999999999999997}], 
                    Offset[{12, 12}, {-6., -0.9999999999999997}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-6., -0.9999999999999997}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"sd\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["sd", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[2]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-5., -0.9999999999999997}], 
                    Offset[{12, 12}, {-5., -0.9999999999999997}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 0.,
                     BaseStyle -> GrayLevel[
                    0.4]], {-5., -0.9999999999999997}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"latentLoss\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "6", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["latentLoss", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[6], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-3., 1.8369701987210297`*^-16}], 
                    Offset[{10, 10}, {-3., 1.8369701987210297`*^-16}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"+\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-3., 1.8369701987210297`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"z\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"TotalLayer", "[", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"8", ",", "8"}], "}"}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["z", Bold], 
                    Style[
                    HoldForm[
                    TotalLayer["Inputs" -> {8, 8}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-5., -2.9999999999999996`}], 
                    Offset[{10, 10}, {-5., -2.9999999999999996`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], 
                    TraditionalForm]], {-5., -2.9999999999999996`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"expSd\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"Slot", "[", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "]"}], "]"}], "&"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "8"}]}], "]"}], HoldForm],
                     FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["expSd", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[Exp[#]& , {4, 3}], "Input" -> 8]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-4., -1.9999999999999998`}], 
                    Offset[{10, 10}, {-4., -1.9999999999999998`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[Times]\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-4., -1.9999999999999998`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"sdEpsilon\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{"Times", ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"8", ",", "8"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["sdEpsilon", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[Times, "Inputs" -> {8, 8}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-5., -1.9999999999999998`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"random\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["random", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 10), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-2., 1.2246467991473532`*^-16}], 
                    Offset[{12, 12}, {-2., 1.2246467991473532`*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-2., 
                    1.2246467991473532`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"dec\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "17", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["dec", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[17]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 11), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1., 6.123233995736766*^-17}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 12), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-6.123233995736766*^-17, -1.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"imageLoss\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["imageLoss", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 13), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-4., -0.9999999999999998}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"latentLoss\"", Bold, StripOnInput -> False]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["latentLoss", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 14), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-2., -0.9999999999999999}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    StyleBox[{{
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    Offset[{0, -7}, {-8., 4.898587196589413*^-16}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"enc\"", TraditionalForm], 
                    Offset[{0, -15}, {-7., 4.286263797015736*^-16}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"imageLoss\"", TraditionalForm], 
                    Offset[{0, -15}, {-1., -0.9999999999999999}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"mn\"", TraditionalForm], 
                    Offset[{0, -13}, {-6., 3.6739403974420594`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"sd\"", TraditionalForm], 
                    Offset[{0, -15}, {-6., -0.9999999999999997}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"latentLoss\"", TraditionalForm], 
                    Offset[{0, -15}, {-5., -0.9999999999999997}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"z\"", TraditionalForm], 
                    Offset[{0, -13}, {-3., 1.8369701987210297`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"expSd\"", TraditionalForm], 
                    Offset[{0, -13}, {-5., -2.9999999999999996`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"sdEpsilon\"", TraditionalForm], 
                    Offset[{0, -13}, {-4., -1.9999999999999998`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"random\"", TraditionalForm], 
                    Offset[{0, -7}, {-5., -1.9999999999999998`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"dec\"", TraditionalForm], 
                    Offset[{0, -15}, {-2., 1.2246467991473532`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    Offset[{0, -7}, {-1., 6.123233995736766*^-17}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"imageLoss\"", TraditionalForm], 
                    Offset[{0, -7}, {-6.123233995736766*^-17, -1.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"latentLoss\"", TraditionalForm], 
                    Offset[{0, -7}, {-4., -0.9999999999999998}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    Offset[{0, -7}, {-2., -0.9999999999999999}], {0, 1.}, 
                    Automatic, {1, 0}]}}, FontColor -> GrayLevel[0.5], 
                    StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-7.4, 
                    4.531193156845207*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{0., 5.5}, {-1.4, -0.9999999999999998}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"5184\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-6.4, 
                    3.9188697572715305`*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"5184\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.889087296526011, 
                    3.889087296526011}, {-6.4, -0.5999999999999995}], {
                    0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.889087296526011, 
                    3.889087296526011}, {-5.4, -0.5999999999999996}], {
                    0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.367778697655253*^-16, 5.5}, {-4.355555555555556,
                     2.667008584809791*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736824*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{4.919349550499537, 
                    2.4596747752497685`}, {-5.417705098312485, \
-2.164589803375031}], {0., -0.17}, Automatic, {
                    0.4472135954999579, -0.8944271909999159}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{0., 5.5}, {-5.4, -0.9999999999999997}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{-3.889087296526011, 
                    3.8890872965260117`}, {-4.4, -2.3999999999999995`}], {
                    0., -0.17}, Automatic, {0.7071067811865476, 
                    0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{0., 5.5}, {-4.4, -1.9999999999999996`}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-4.919349550499537, 
                    2.4596747752497685`}, {-3.417705098312484, \
-0.8354101966249685}], {0., -0.17}, Automatic, {0.4472135954999579, 
                    0.8944271909999159}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.3677786976552205`*^-16, 
                    5.5}, {-2.4000000000000004`, 1.4695761589768238`*^-16}], {
                    0., -0.17}, Automatic, {1., -6.123233995736765*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.3677786976552215`*^-16, 5.5}, {-1.4, 
                    8.572527594031473*^-17}], {0., -0.17}, Automatic, {
                    1., -6.123233995736766*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.889087296526011, 
                    3.889087296526011}, {-1.4, -0.5999999999999999}], {
                    0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    
                    Offset[{6.106226635438362*^-16, 
                    5.5}, {-0.4000000000000001, -1.}], {0., -0.17}, 
                    Automatic, {1., -1.1102230246251568`*^-16}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    
                    Offset[{6.106226635438361*^-16, 
                    5.5}, {-4.4, -0.9999999999999998}], {0., -0.17}, 
                    Automatic, {1., -1.1102230246251565`*^-16}]}, FontColor -> 
                    GrayLevel[0.7], FontSize -> 8, FontWeight -> "Thin", 
                    StripOnInput -> False]}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    Part[{{-8., 4.898587196589413*^-16}, {-7., 
                    4.286263797015736*^-16}, {-1., -0.9999999999999999}, {-6.,
                     3.6739403974420594`*^-16}, {-6., -0.9999999999999997}, \
{-5., -0.9999999999999997}, {-3., 
                    1.8369701987210297`*^-16}, {-5., -2.9999999999999996`}, \
{-4., -1.9999999999999998`}, {-5., -1.9999999999999998`}, {-2., 
                    1.2246467991473532`*^-16}, {-1., 
                    6.123233995736766*^-17}, {-6.123233995736766*^-17, -1.}, \
{-4., -0.9999999999999998}, {-2., -0.9999999999999999}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 24, 24, 20, 24, 24, 20, 20, 20, 8, 24, 8, 8, 8, 
                    8}, NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, ImageSize -> {503.5, 211.}, AspectRatio -> 
                    Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{28., 35.5}, {28., 18.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "enc"], 
                    NeuralNetworks`NetPath["Nodes", "imageLoss"], 
                    NeuralNetworks`NetPath["Nodes", "mn"], 
                    NeuralNetworks`NetPath["Nodes", "sd"], 
                    NeuralNetworks`NetPath["Nodes", "latentLoss"], 
                    NeuralNetworks`NetPath["Nodes", "z"], 
                    NeuralNetworks`NetPath["Nodes", "expSd"], 
                    NeuralNetworks`NetPath["Nodes", "sdEpsilon"], 
                    NeuralNetworks`NetPath["Inputs", "random"], 
                    NeuralNetworks`NetPath["Nodes", "dec"], 
                    NeuralNetworks`NetPath["Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "imageLoss"], 
                    NeuralNetworks`NetPath["Outputs", "latentLoss"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association["Input" -> NetEncoder["Image", 
                    Association[
                    "ImageSize" -> {28, 28}, "ColorSpace" -> "Grayscale", 
                    "ColorChannels" -> 1, "MeanImage" -> None, 
                    "VarianceImage" -> None], 
                    
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "random" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    Association["Output" -> NetDecoder["Image", 
                    Association[
                    "ColorSpace" -> "Grayscale", "MeanImage" -> None, 
                    "VarianceImage" -> None, "$Dimensions" -> {28, 28}, 
                    "$Channels" -> 1], 
                    
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "latentLoss" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT], 
                    "imageLoss" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    Association[
                    "enc" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{64, 1, 
                    4, 4}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {4, 4}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {2, 2}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 1, 
                    "$GroupNumber" -> 1, "$InputSize" -> {28, 28}, 
                    "$OutputSize" -> {15, 15}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Max, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {64, 15, 15}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{64, 64,
                     4, 4}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {4, 4}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {2, 2}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 64, 
                    "$GroupNumber" -> 1, "$InputSize" -> {15, 15}, 
                    "$OutputSize" -> {8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Max, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {64, 8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{64, 64,
                     4, 4}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {4, 4}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {2, 2}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 64, 
                    "$GroupNumber" -> 1, "$InputSize" -> {8, 8}, 
                    "$OutputSize" -> {9, 9}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]]], "8" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Max, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {64, 9, 9}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]]], "9" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]]], "10" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{5184}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{5184}, NeuralNetworks`RealT]]], 
                    "mn" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{8, 5184}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{8}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {8}, "$OutputSize" -> 8, 
                    "$InputSize" -> 5184, "$InputDimensions" -> {5184}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{5184}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], "sd" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{8, 
                    5184}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{8}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {8}, "$OutputSize" -> 8, 
                    "$InputSize" -> 5184, "$InputDimensions" -> {5184}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{5184}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 0.5, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{5184}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], 
                    "expSd" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], 
                    "sdEpsilon" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], "z" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], 
                    "dec" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{25, 
                    8}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{25}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {25}, "$OutputSize" -> 25, 
                    "$InputSize" -> 8, "$InputDimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{25}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Max, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {25}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{25}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{25}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{49, 
                    25}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{49}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {49}, "$OutputSize" -> 49, 
                    "$InputSize" -> 25, "$InputDimensions" -> {25}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{25}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{49}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Max, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {49}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{49}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{49}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Reshape", "Arrays" -> Association[], 
                    "Parameters" -> Association["Dimensions" -> {1, 7, 7}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{49}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1, 7, 7}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Deconvolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{1, 64, 
                    4, 4}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {4, 4}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {2, 2}, 
                    "Interleaving" -> False, "$InputChannels" -> 1, 
                    "$GroupNumber" -> 1, "$InputSize" -> {7, 7}, 
                    "$OutputSize" -> {12, 12}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 12, 12}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]]], "8" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]]], "9" -> 
                    Association[
                    "Type" -> "Deconvolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{64, 64,
                     4, 4}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {4, 4}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {2, 2}, 
                    "Interleaving" -> False, "$InputChannels" -> 64, 
                    "$GroupNumber" -> 1, "$InputSize" -> {12, 12}, 
                    "$OutputSize" -> {11, 11}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]]], "10" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 11, 11}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]]], "11" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]]], "12" -> 
                    Association[
                    "Type" -> "Deconvolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{64, 64,
                     4, 4}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {4, 4}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {2, 2}, 
                    "Interleaving" -> False, "$InputChannels" -> 64, 
                    "$GroupNumber" -> 1, "$InputSize" -> {11, 11}, 
                    "$OutputSize" -> {10, 10}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 10, 10}, 
                    NeuralNetworks`RealT]]], "13" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 10, 10}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 10, 10}, 
                    NeuralNetworks`RealT]]], "14" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{6400}, 
                    NeuralNetworks`RealT]]], "15" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{784, 
                    6400}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{784}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {784}, "$OutputSize" -> 784, 
                    "$InputSize" -> 6400, "$InputDimensions" -> {6400}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{6400}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "16" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid], "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "17" -> 
                    Association[
                    "Type" -> "Reshape", "Arrays" -> Association[], 
                    "Parameters" -> Association["Dimensions" -> {1, 28, 28}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "13", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "12", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "14", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "13", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "15", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "14", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "16", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "15", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "17", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "16", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "17", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], "imageLoss" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "inDec" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT], "inInput" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[NeuralNetworks`Private`ScalarSymbol[2] -> {
                    Power, 
                    NeuralNetworks`Private`ScalarSymbol[1], 2.}]]], 
                    "$Dimensions" -> {1, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Summation", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "inDec"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "inInput"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}], "latentLoss" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "mn" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT],
                     "sd" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    "Nodes" -> 
                    Association[
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Power, 
                    NeuralNetworks`Private`ScalarSymbol[1], 2.}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 2., 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[2]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 2., 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Plus, 1., 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "3" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Summation", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]], "1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, -0.5, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "mn"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "sd"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "sd"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "3"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}]]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"image\"", "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"image\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{"\"random\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"latentLoss\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}, {"", "", "", "", 
                    StyleBox[
                    TemplateBox[{"\"imageLoss\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.73998157720234*^9, 3.739981589420198*^9}, 
   3.7399816733076963`*^9, 3.7399817277707095`*^9, 3.739981853615266*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"c7ef1657-0286-4061-99dc-d945702d79f0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generating", "Subsection",
 CellChangeTimes->{{3.739646118558402*^9, 
  3.739646127619317*^9}},ExpressionUUID->"2a188410-2540-4cfd-b762-\
b5b3e6ba0374"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "newImage", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearAll", "[", "initial", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initial", " ", "=", " ", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "nlatent"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"decc", " ", "=", " ", 
   RowBox[{"NetExtract", "[", 
    RowBox[{"trainedVae", ",", " ", "\"\<dec\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"newImage", " ", "=", " ", 
   RowBox[{"decc", "[", "initial", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", " ", "=", " ", 
   RowBox[{"NetDecoder", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<Image\>\"", ",", " ", "\"\<Grayscale\>\""}], "}"}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"Magnify", "[", 
  RowBox[{
   RowBox[{"a", "[", "newImage", "]"}], ",", "4"}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7396457684933586`*^9, 3.739645778227761*^9}, {
   3.7396458241028724`*^9, 3.7396458796974587`*^9}, {3.739646045256716*^9, 
   3.739646090525081*^9}, {3.739646131275936*^9, 3.739646144087335*^9}, {
   3.7396462320989513`*^9, 3.739646256418172*^9}, {3.7396463003376403`*^9, 
   3.7396463216834593`*^9}, {3.7396464449774623`*^9, 3.7396464524496183`*^9}, 
   3.7396465119526854`*^9, {3.739650975049708*^9, 3.7396509789702554`*^9}, {
   3.739663243587756*^9, 3.739663248978575*^9}, {3.739664925660292*^9, 
   3.7396649575294285`*^9}, {3.739706113203579*^9, 3.73970614661347*^9}, 
   3.7397068904832497`*^9, {3.739706951361699*^9, 3.739706958591832*^9}, {
   3.7397069979669313`*^9, 3.73970701256983*^9}, {3.7397128445409555`*^9, 
   3.7397128447093997`*^9}, 3.7397128868143215`*^9, {3.7397158805128565`*^9, 
   3.7397158970904713`*^9}, {3.739716050159375*^9, 3.739716176521705*^9}, {
   3.7397162066325617`*^9, 3.739716256790491*^9}, {3.73971688064563*^9, 
   3.7397168857913694`*^9}, {3.739716932101802*^9, 3.7397169640094924`*^9}, {
   3.7397193934390154`*^9, 3.7397194692175612`*^9}, {3.739719572325448*^9, 
   3.739719572819581*^9}, {3.73971963989671*^9, 3.7397197260123224`*^9}, {
   3.739720600586546*^9, 3.739720605026532*^9}, {3.739720700904532*^9, 
   3.7397207036425333`*^9}, {3.73975739059271*^9, 3.7397573965718684`*^9}, {
   3.739793414885888*^9, 3.739793424960888*^9}, {3.739793656814999*^9, 
   3.7397936955678744`*^9}, {3.7397938262079773`*^9, 
   3.7397938821451683`*^9}, {3.739793950744464*^9, 3.739793958360307*^9}, {
   3.7397942141883173`*^9, 3.739794219743436*^9}, {3.739794278931448*^9, 
   3.7397943073979473`*^9}, {3.739794454473952*^9, 3.7397944546302004`*^9}, {
   3.7397945365135117`*^9, 3.739794539019004*^9}, {3.739796442970791*^9, 
   3.7397964506809855`*^9}, {3.739797055856947*^9, 3.7397970806651216`*^9}, {
   3.7397996551261187`*^9, 3.739799656415143*^9}, {3.7398125264236803`*^9, 
   3.7398125279207134`*^9}, {3.7399157494944944`*^9, 3.739915760742523*^9}, {
   3.739916950773209*^9, 3.7399169513892093`*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"b9810408-eec2-4e6e-bc82-b51ac6a95600"],

Cell[BoxData[
 StyleBox[
  RowBox[{"{", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxVmHlYF9Uaxwf1Kup1zbWsxmvFdcPdNPI6UopLaaKGltCIQIqkAeKCoIMJ
uGGA4pJW45LdzC0XDAEbNfNqJm7gFjiCIuJCbmFiT9n7OfePeJ4f73POnPOe
9/vu57QOnuIfVk3TtGjPJ//8x03vFxU1buaImn8NQsdF9Owe+tfHVur35M/I
SK3o+4Saq6DOvvnQ0CChemWCUDtjFvMrFwk1Xkxj35D3GY//gHH1hexLCGdf
65lCtStzhVr3J0HzVrE+/UPoI4t9bT9ifVgc83km/IP5rl2fLNQ9z7n2y2pd
z9lKXs5xP5/BeH8i57Vkv2VxrnURPlrzSPZ/mcT8nijOa5PO/rXow/SN4bw6
ip8X+O0x7zGejzx6jzmMwwKh3uC3kxIVTiXvYtbpFdPQa3O+28vjoZEfg6MY
/Wi/Iq+9bQF894LTXAMfd8NUxp3AY8eC3ziN/px0cLg+2MmJY2xVLYb/4QjG
hw6y7tghpactfG96jvnd1+E/oJLvkQ8492QZ4/ZXWFe7kPFo8Nq7wOV8Dl67
I/7kZk1nfgV6snqBW1uB3xk1lF+tnMj3IGWXB+OgN2JZlxum/IdzrAW+8O2o
5gd8wVj/mnHfw/BteIzx6TPw6Qs+q/415Juvxnk3kSuoiPE9qH7hAnzL9jGu
9x3fh06Bf0vONxpjJ7stdjOeQi9Wb+Wni5RfRC/l3B8Vrmxlry74gVHyFvs6
ZrP+EHGmey+6LfItOnFLzumwXsZGoilUb7iU78fPC7Ur+7A/VPmzP/5jvRYN
Tk/ygXETfVm/4gfmdnAagz6FHgrgezT5wlpInLmh8LPfw57G+hSlF3BYw99R
8eiD/GkrWW9CrRqRt+GTdUP2b0spk3W1Rwh1d3S4LvOpYUJN7WlZZ7XRbwqf
oDih2umxog/3XwFCnbCrQvVNaehhRxPkvT8aOh59GB7kCX17MriVnxrl+K9V
iH2s29jZ/ShS+SfUaKDyZtxw5ucFQ/O7YpexY67J94+OXRK6eeo5mb93pEho
wcjLIn/ig2LZd9f/isjfN/2qyLUyplTkOjFJ+FgzFkFHLxH92IPeFn1o/5gk
etC3anKupY0Uan4cCP7Za9Dzq8pfZw7C3wJUnrXBaf9GXrdy8Q872E/FSx3W
36yFXke+I/JZDcpOy7rGj/KEvlx4XL5PzTol36vmCV6r+6ZCOee6v+A2l/m6
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
d96JyGno+Js+UL3Lu9wP3PefnPsn2WL6Cg==
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
4gykfjH7Pbk3/Bf/l96L
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxVmHlYV1Uaxy+OgbspaA5YXg1yQcuUYUxFL9K4iynhinpRAU1xAzSN8Cog
brmi5JbXJVFMUzExZZoruVKWu6GINzUdkBiXSS2Xsvdz5o/heX68zzn3nPe8
33c/p/HIif1jK2mallDl+b/+0dNCp0yJnh7h+ecgJnp8cFDMnx8bqt/zP7tT
5n86P6fm5VVC3UrzhVo7Jwm1Q+cJNewPoV8uE6pdWML6lLHMR7LPufcR+5bN
4vviKfDPSmacM4b9sfDVjUTGm+cyjvyA9ff57vZjv313OvwvrIVeZ5/ZMYXv
06MZv5TG+LPlrAtR8tdELm3NZtZ9Mgra531oJ77rl9IZfzuD9QvhZ4zIYLwE
OawTFvz3TYWWs96OYp3eDH3Z1cCl5SbBJ0Tx09CXXoR8pvcc+C4Av1Gwjn3n
Z8NnDTiNWeDS+7PPSoGPMX8p+jqKXaxnit/5eObXIZfbPRV+bbGDnfIx55R0
h0+/XPa1yuO7/k/2bboEztBrrD9+h+9FNxl7nmTf8E/Bs6AN+ypXrRB5H0Uw
f30E53TDP6xAZe9u+Ifjv5B99ZHTbYMerRvowbq0kf2Jyh8zWWf1T1Z+Bi6n
ZifkW9SM8YJp6M1T2b/tKWjOGfjUK+P77PvQEeByGlyG/5z9rP9eneMfxbr/
BoF/TpHg1BqWCXXCQlnXIpJ1J8Fp1Vd48vEz7fZCJaeyywrkM9ZhT+0J65yG
yn9G3BL+xoqR8K/7UMZWWGQF+l0h1L1fV9ndFz4xQ+DfTflbdeJe75gFrazi
9L12nLO1P/uH4ddmKno1d3Rlfmoj9j0JVX6IX+u58HObqrh7R+E+ShzYp7G7
3Rs92kPfYf2TROQ/8kCoPfxxuex/Mua20OwGZaKHgBIZO0ZoOX6bIdRt1O5n
GQ/3Yf8gT/zui40yb+Sf+pl46MM5pzexrscNxod90NPcwcjVpgNyPw5G/3vJ
F1oX8oU2NhZ8vpORPwm7mu2JO9OdrOIXXFq1CORptQE50v1vyry/93X0ly7U
fbOXzNv1cm8J/yqL/y3nV24q1P2lB/Pnx8s6K+O4UCf2gcxrvXaJnrRmMehv
1zahzuEFcq6eYAt101KEOtWuQIeU4jcHeoL/Gvnf+mWc8nfyitlZxWXHAeBb
nAq/+JNyjj5gjshhFTcslnGbRxfkuzb2B5nf/OiK0PZv/Cjzt9tdk/GwnCKR
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
rt7Xmyl7bn+urz8AAFLZhQ==
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
yt8ysKN7Qb3bfvk0n/wfkULvvQ==
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxVmHl4D+cWx8eauLZKSaltCKppKZrkItTYiyZ2ktQysZVWSxK7hEksQS1F
LRWpsbuWEJFoq2pqC6K0iRAq6cQSIrHUrsW9ej7vP9fzxHnO+zvvmfN9z/q+
9YaN6zOqpKZpUZ6v/usTPrl9ZGT41L5l/2FGho8N8Bv5z4+11N+rf0b+orvt
XlFr6zKh5sYJQp2scPj6sULd5iZ89eXI584UameFIT/gC9bjLej4T4Xq06cJ
NXbMYf0Fcu5q9OiXo+D78ruzczbyz0fDf/cZ3ykej1zaXNa38bvVNo7fJ4xi
34poodrySdAY9JlnZ8F/BE4tETu01ZPR03AJ+t9l3awMPqNODHIb0W9dn8H3
y6PXqh8JbYqcM0x9p4WybzDr9lfzwGtwvuZE5Oydar8f5+Z0i0AuBjsdz1Dk
vUegN1h9pza4nX7wuoteYxnnadjg17M5Nz0Ku/Vy4HNSx4G3HHr0kr6sz1d2
pMTz3fCN/F4hB3t9Cllv9BC+9m3sen5BndNp6IYT6G/SA3t+mM66hT3W4c/R
s5Y40X6ZglyK8u/f2GkcmMh3Usci32899CRxYeXjP+M4VA/i/Ow9DZHzqcTv
bkvsyWsOP3Upcr+koGcG9jstwafty0NfZjbycZnwfrugCQfRP+wn6AOb/dpu
da4qvjL6sT8K3p4/SeHGH8aRqfADv8SORQnouQmvV1yA3DHw2S+rsL5hprJ3
6x3hbw+6Ld99klss8n5dZN2ITLtDXhcJtUqUQ0+jAeipR5wZr6Ffewo1/6Py
pMo28CTthdbfz3enbGL/t6oubBoKLaPifyd1xVhKHGl7weMGjwHnaPZZU/yV
3/C/83Ak9GBFwaOZ39yS32953BB9+Rtuyr4lMbJuvxdbJHJaiOC2IirLPrOV
C19tF7z/PaHO4FlyDvb+w5xHhaach1cINEbhmpSMHRMV/irUQae1qgtjiGPz
d+LaHkSds/rjT30weWT0agKN7qh+Pyh2GB8+KxC+c+N80Zu4+bLoM7pcETxh
XtdEb/RngttM+ERwOy87g3/gaVm3rj0V3tDuFwpfxU/Ow97bCNwzhgu1O70r
eLUD88E/dx/8y2Shrh9+MV3y1fakfhkR4HROLWT9A1W/e3QBzxYf/Jt5Ss7b
qXj2uqzvjLggdNrNLNG7zUOocy9J1rW4OX8Ijex6VeQO/yq4jcKZch7m4H2u
/P6sh8gZ9wfJujuiSM5FD59zE78+uEVc75Hv66eSiZvICPw9azHxb1C/naet
wVWAP80e4DNqqb51izjU+z4lrw4GQwOC5Tva7tJil3llQobQlJKnZd+Jn87I
+dTwED9qRxvJOTjp/cXP7uXNwut7osR+c+Qe0WON8MiTfR6Zvws/5jPZ7y61
OQ+veYLTTS9bhD/vCU47wBB8+vBE8j6UPuyep287MW3AU0ydc9pvwE+v03e1
Fn3xZ4dq5MGq5uRX7crZwo9cKfi0+9dPkkc78GcJW/DoJ5dKvLledcjD1Rfh
cz4VPfruePGr3rqi+E/vnyD4tJkZl8SetYm5sm9ob5EzB34l+9w9juhzs/IF
p3lqvdjneFFf9DIGtDt9waxM3GpFxKdV2Bl/Vv+a8zi+gnjv21fsNqcE5hDv
a84K3943U/Rd6Sl2OPOCOOeLN4gnsxJ59GeirLuVRol9Zqun18jrA+JHvXIZ
8aNea6v4Tz8Db7S/K3Fr+L4h8u7dE8Ttjx9Rn4YQj1qEF/beZ65wFjIv2EdV
/xswBLyz4PVl+Nk+HU/+vnmI+BrVm3NdsOqc0Bdhct56w37iH3tiPnnxjjf5
37kX9WjMXOro4TmF0G5yXtqLcPIzaiv0+lricl0AuDKThFrpj2XdXJGPHUcL
qUf/rYPd7f4Nrq5qrvRRc0rBx+C4zPyix1NPrVTi0/imJvjsEZx3ZDTnPM9X
/KgXdRS77P1fEi9uS+T79ScvWsQLLsd7OHUy/X1wXesqdtp/lRXeabpC4s+Z
GkQc5i+T342t1YjjIenU5UPRwrtNYkWf7l1AfUmin1orxv9fv3N2fwM+m77h
VqZPuE8qI3dY1anv0qn3R6dRF8bXoi9M+ZF4Ca1NHU+dRH3LK0k96jdP7DSX
LSaPjn1OHPdfLfqc8s+ws1MCeXWvJ/7NbiY47QPR1OsOmdSr5snUq3EPOZ+p
HTjHtD/Jo0fUUW06/cEeRh3VRqr+mEY+urmlWJ95nPiKGUa/K7Fe7NP8Q9Dv
kyV2OYGB4AolL8zRK8jXus/l3K1Rb9IXKgThDz0B3Lk+1J/h08BX9gj1crwv
fTPwL/zt207Wbc+B0PSq1LGLR8jDdtQZcyvzij6RPHOTqSf2ZuYw/RBzq/Mt
ce0uGUJ/ON+J71aJQP/m7+WcjQ+n0hcP1SAuL+6Fjx9EPs4IB4e9BPpyslC3
fEX6fIM2+D+pOX6c7k9+LT9BvDRrRb19lAvODYeF1wLn49/O1yT+jQ7MH8Zy
6ooWpfp9a+qm6XxF/D5W/d2nOjhzVuP3+k845w6Z4PLQqJMVOT/nSn3iuJwH
9NZ7fPfcGvpCpQHE3QtwG683oD6kPSTfgvOIw5r7xL/G4qnE8fDz5Ofo0sTD
9neug7Mr+3Z1YN71SQJXtPLPOTU/Zw7Hf/W45xiH1BzuHczvgyzwTfGnTsz1
xC8bSoG32yXi835f+V1fVZc6Oa8VfeDAZPGLlmFRX8Id7FqXjb1ZP4Br0X7y
8Vgm+HI8iOsLPswzzUaTF+ubCK95rgV3RnXyfvc+7PVU9j8g//R/qX7xlPlF
mzZCzaVrWfcJon92HUF+PA5gjrzjR7ycuUFe5gRS/xbXJA5TelLvno6VvLMD
2mJvsD994NIF6u7HD6mHV99irkndLvL6F62Z3wZkwucPpT/cy8GvDX7mnErF
Ul+qUR/NE9z/rCR1/52o7iVtyUs7lz7obuZ+ob0xG3xX36ZuZC8kH1okcM4L
NtKfPLOZ21Y+lv7stBp3UfRlxEkfMeLKMl/GVQfftUj6tZ4Bf6wmfllSQH2+
v5N6tGYX9Sj8DOeU15S+OPuIxJHT8iPq3051z2un3hPeUffvLdxXrSvErV3+
A/zqJEJnNGbfHW/mvVIliMsqS4mnHel8V6sKvs61pd9rW6rLvG39dVnmOb19
puA2gvzxR+336RedVooe62ol4rR7Cn787nv6wfYw7hlfF1OvO1SAH76APKjP
fOXorcBTg7jU3lXvI8X0BSNe3Q/vqvnUXY3cFT9wf86crnfzJ97DiqkT/67L
ud/tLvFjl5gAzhcTz4uewmKZS+3QO4LbDcnIZV8ofhlah3jf5oU/HvSS8zPO
LocfVVqoed4PXI/XCq8XbALfb0+Yk273UvnH+5Ldh/nSSFPvV42JTydOvc+E
4U+tWV3oo2fgqxOBvthU6lZwIt9/OJd6n1aNvuReJd+cFOJp4H7yp0Qv/PDB
z+BKTuP+46vuu0tvMKe6XYRagYOIl/GNqFefhCI/pTT97m3uv06xiscW4HF+
5T3M3ASv/6reLcaSp1ZH3m2sP+kn5o6q7D98g/vEugPU1cTm4H3Tl/iNDWCu
vnSGelrYm/r6ZTZ2PsrDzq97ITemOfHQoBn9M5b5x+pxivWEeuCeEcK9d+VR
1keOQL4G84q+Q81fK9U71HOomUdfsLLAryVPUvO2ej90VJ9Iwa/uenW/DyIe
tDNvsf5egJoLeG+yF8ZwDlYO+R+Shd07bnOfKNhO3ozlPccu04B42tcIfW24
F9hhPXnHiSsDnuSfOc/v6yHfHjm3zzDs+QH7rE3M1Wa6evcLYH6x79MX7VP4
z+6OnLGR+dW8x3uf5afea6K2wPucRb7LGvSldkN+US72LOP9RKu6mPW2acg1
yWL/kXPsj2Tdrss91AkZiHybMnyvWm34usz/bh73AtuYr/q4eletyhytl2Xd
WAdu58kK7ChNfdE/UX0xkL5oHETO3UP+2o15pzQaFvDdq0XoX3uV/aG8Z+rz
TqL/5DXo7IvIJ56B//s4+jpyTtZrvGe7u//Af0HMIeaMMNXnqCP6k1XIbyD+
rGTi0eyj3rv/UPPo39QTPVPlYU/eQ/UezG3m68SnUQ9cmvdg7Jqg7pFPeFcz
vdT+pbw7G5NVPN/G/8Yo7HLn8I5n9UbeCkWP+5a6bz9T78Tn+N0oUnP/b8zN
WrD63hv0cXca/UCfQH+3o1/57X+nYu6w
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
+bTlCvn45WH824Z4sSvPpo43cTk3iXuRdly9G66NVvO06gs71ftiMe8y+j7m
aut79W7ZkTy1OvJdey8IeqwquE/wbmHWegT+/cmsV3hh19cqcx995W/m0Jl/
MAdUW849I6Mn/A0aMJff453A3rSX718PBkfbMcwpXebznpDFeVYD7kN6MfcC
05P6ryfw3ZjLu5rZTcVrGe+9+jrsYl0gru1l1B2jpwWuC/QZK129e3T7QtVd
Jb/hQ/y8s5T+csHF3yWdOS9sE/JC0pF38wznr+Kdza3PO7K+qyXrWxfB/XF1
1k3Q317BO6aWCb+7gPcJuxvf3TL0ddur+FwZq/DSF6356j1ZvYe6HupdK0vN
d/1+hK7NYd8TF73Cs6Dv8Y7pDD6u7JwPX+XLyIkEn9EnA77f2a/V531QP4Kf
NM+34Y9W77kD8Yv7Bvob51XdqMicok2gz+mTqaNme9UfAtS7WS79RC9nn9tX
UT/1rjxBvfP+w34nUL0LlxL37lj1bpdLPLgxxIHxjXp/rave02O4Zxs/qvdu
D5UXoepd8h31PnRFzckdBqHXKHXfKaTumw+Qa81V7/zfPuvv/wNSLuhI
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
J8yKxt7jbGiNjtCYD7jvV1hNPc4okf5qpK1njumey9yWXJd5evE8vu9czNwZ
8TH33ZhuxN0Q1Q9+BIddin+0fmouK6fe6aqrfFzGfGN3CwTvfzapuVvh3a3y
dwt11pkymnXNutCexZxf7Tl2TisDfWs796Tpn4odtMkF8t3OW4XeTUZTxz4I
JN8712FfQIjqw+fp594+6PGhH3q9il56FfTSNoHTXa3eI5bRH6wY3ruMQu7F
lqo77n71Ptfme3A35j7pBqt3v9d5F9Mj+W4dxt/68Wvk/xFwu4W8QxpRzLnO
O+qdd7rSSx/Cvscl1O30y9Arq6hzRTXge6buCw94zzNnM5c4Bvceu4eKw1Dl
ryDV/3qqd7XrvFtZWeDSE6k7bop6X+7+Nd/H3oQ/p5jvnlBjKu+a9rt34DsI
n+ZVyDr0KvLPnIE2TYf6q/fCxeq92+8e9jmAvZ1F1Ef9LPc73d6FXqm8t9he
3BecG+CzQ9S7/Fz1Hp+8VOnHPVjzVf4tA3XL8w7ltlHvymPmqnPUO+oTFec5
6p13mbqHVcfOLxsu39PC1Tn40Wqs5sSRKk7CtiI3Xb23bsG/1iLus5o31Nmv
9O2vaC30s7xe1pf/AY6o+fM=
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJw1mAl0D9cex0caQioauiQiYrRFE2rf1yEiCEosQYtJSEpE1VZrmIQsYm1o
VCxvqFdLPe1RJZYnozTSqLa2CLGMfReKaKiep7/PfTnnn9+5d+7y+97vb7u3
dsz4yDgPTdMmVXz5LzJ6aueJE6On96/wTyM2OqFl89h/Pgaq38s/M2VsSaeX
Un8cJ1L7ehTtJ/1E2qU9kd8Opb9yIu0RjHd2dGJeg458/4P1tMeRjNuk5p2b
ItJoN4h5P88SabaKQFbrz/e4j2hnD0Gu6C3SihrAuglRSIvv7mb0NWowT08a
z7xAxtl7YujfxTircDhyEuvqsxXe6eocan6MvBbPOiVqXllf5Ifj0D9nAuO6
qf5o9nOL0cMe3AQ9u7COvZHzMrzB6YRG0/5pIOOShzGuF+vZPU36fWmbH7Ku
1h9pPFL9VZjvBH2AnA0+dyvnr3XroeaBz7yl9Funzrcv/NgrmoLj0pes0xRp
XFjBON8j9H99lfXnPqT9I21tcAHjXslT532I/tEtWb8EfYz76O3u4hytmO6M
C/+U77+Ax5iCXob/YL57dqFdZyHrHWU9t2cs/UEf0l+ec9TSX9yX/l6VGDe5
PftV9keG9GHcXGWvY9YyP/8n5OF94Gn7Pe3kfObdXEZ/7Gz23bMAvF5z+L4y
le93lF0fDWf/A+Cy+uJPVoHyjxDswXxnDOv5zON71QTm5Sq7Kq/8LGS14NLW
3kWmZd6Tefu33RZZNeqWjPdfdkfW2ZQt0vCoe1f2sR1kvVyZZ2ZO4ZzWIJ2y
L0TqL26x/mXOzZ4zAv22JoF3UQZ63+iMXjngcjaCywkeid5jGG/5TVD+EaH8
XPlNJfgwjLOyn5s1nP1jy4Fnb/Q12f9xL1f6V44R6Xr7XWHfSyLdQZsZt3n5
DdHrj4SbMr9JoJyHWWsncuJfch56o0dyDs7WePB39wDH2/ChtVug/GAlcidx
RZ+seJ0HX9Y1eLEr409GQ+Kbm0Mcsb/LlfXtrPdEWskHBZeelCc4tIExx2T9
+p5HZP7zpidF+j46g17hMs6KHHlZxhWdEmmdLhBpf3H0kqyzI07aZtkEOQfj
wErBa93oAP/LxwvfVuEWkXrNNPQpXodstwh9m+NnZmv8zkglfpgPiSvOf1V8
qedNu9qrMt8ckSW4nN070fd4w3yZXz3soIxvOk/aZt7q47J/08xiGdctGr3H
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
d1lfu0A8MbzwK630ZTz5Hyrbwko=
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
fEegU2UNeVy+g+hnvVNAni2ZJnXFLTku9crwfUYelh7Ez0OeUr829mf+CWqD
PN0rIXf8PPSszv3OepW53yxhnnF7kJd6J+qn+Xtl9X0T+vjPRP74BOrqpaXU
kYxS9F/zI98vNkLvJXOw74NsiV/ddz71p+UK+sVXEfhtZi+p/5pvmdRlq04b
qcv2uQzRz4rcR37+OB1/HyHf3e+IJ336y8i/PF3VS/JPi8JPjsk86XZlrddV
8XsQPd026KUl5FIH52/DbhV+Ix6XjUOvXc2xw//tEuy9nXiulc+cdat7Efk8
ibhd+pz86ush/U/To+k38TWkD+pDW4t+7s3GYgfNXCRQX3Cd+uITzLxqncK+
o/bgt+bqHnGVeVvbqe6lHswvehb3Bncd/na3+nN+KnXG+mMu8E3sZ15U8+if
U5S+cfhrRyb1Meldsbt5rx1+6DVaoBZAX7C9WtO/ffdLvzNaxgt0h+dLHppP
ZlB/DizDf50OM8f41YXvhHSRzw2Yi/ybmaOtywno2YT4dEaq9wcfdW//Qc3r
4XH4JXwR/qgQgPwVorgvpA+RtdZkEX29Zhb5ds8bPa50Evnd0Hv08X2R1MMP
auGXpsukr+nn6hGPCRHMtyk9mG9iLfSps7UQOdcz1zcczP3jciz2j+d+bjUk
Pp1V6t7+fCZwnLpXvM69Vruo3g/8Uog/v03Ya94e0ctueVz8Y406Rh/w3Ev9
2EY9d98+LXOmU+DHHPI0WOYQN0/Nk58qf1YuBP/CYmBRN+JwTqDoYSYWCR87
pxv8wk5jP6907Dwf+2updfFfKvc6p1jdxyNVn/8Q/bUtzKd68wD2vx+C/zyY
Z61y4VInjMAbYlf7xbb4Y+x08Y8+8Sn51CeWe4NXf+a5c19TH9uXiJ56/534
d+V45tJ2i8jLvedFD/2Fe2pejaGexCaLvlp2MPo96Ug/vnaU+DzM3KVPoW7q
vT5An8/o89Ys+oTVSr2nXF+M33o2ov9tbE++7WhBXPz0Of36WiHx5/WQe03d
JdS/mJlyHzCzNKkXbtVyl7DPWebYQVWQd21b+lr/j9HDM0nWWvgN/HZnLPNR
aRn6vtSFuaL4KfIk8h6gRav3lGoq37Z+hh5z6ReGxvuYGcx7hT3LD7hqHfGd
UYf8eymZ/hrhz5y115P7QLon99WKQfgp5oTobRd4Sn5ZNaKZT6p0BN/jW+QP
8KK+Fkcxx8XWBE4rwz+vRpMPP+8pIv5DmDs9OmD/aN45zFZqfk4ewHoe/jI8
VVyOVe8xFXgH0Uvxrz6ZOdRI7U3fW3iGvtNe6Vm5G/fDoCXYOXk39l3hII//
R3wfn0eeTq+I/N8nUZd8hjK39jhH36mYRx96uxN5cX4a38PT+O6zhnhsWA19
KrUEjmJO03pQ//V89LB/5t5u+3/K9wT1vniLfmHdb8t6NHOCdoB+o/vfpx8U
nYTvf07Ct/5+YIOtfB+TS5+qTh67425yvgV5bzblPcU+CzQj1Ttu3z5q/Rrr
F84zT2zwZH9gV3Uv+Def1DvSMNXnAtS9Qr1bu5fVu9Ms3k3dWOLX3KbeZx9A
T/uiIfsb6OvGJvi7fdLY986A3xHePa219CWn7VL4lstkncHcb2+0wY89Cv7N
LParU+fcnDvotZF7t53aDTqvqP41bDHnFhCHeiD3WC1Uvfe25J1Jyxih7Akd
y1Dvfn70SWs18Wr9qt7xxhIP7hHs5bZTc0E68e/2VPx81Pvs9S6cnw499yL4
hpd6T22t5PVX75Oq/jnN/r1vUxeM24MVHfxmD4SePmucOs89SS8/427nvwA5
6NW4
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJw1mAl8T1cWx18xsUQZLaJjyRNrKoPSIFQ8SykJOkhT+wtiiSTWQWp7Ipqk
tgpi51FDVFFLqSBeWmOrRJGIJZEXtYZao4imHT3fO/l8/jmfe9+9557f2e+t
O2xcn5GlNE2bVO71vz5hUztOnBgW09fjr0F4WGSr98P/+lhL/V7/mYsWPuzw
Fw34XKj26zSh1uyBQt3kKUKdo9FC9UHzhNr+Xwo19oSxv2gq34/Hsm/DYOa/
Hsf40mz4BjDvDEpifXEEfH6Dv7mC843PGLuF4axvytj4YybrfDlPazGD+doT
kes28rrPOdcoo+Spz/n27GTGW0Yy7st5WkOF3595o+Zczq0Gf6cEOe2yMez3
UXoYEsn4sTrvPfZpicOh9zhfH8V6beUE9PB2PPOd/s38OCXfK/jb7yyFrxvF
+Wlj4d9jOnQBOLUr6MEq5rs7AaqtQh/m4BHML4O/c5Lz9TuKlkU+y2cA61/u
Yhx9EDlSjrCu9zXO3feEdd1fMt/xGeOMAs5pn814Zwbrd4dCjdHwHcF55jnk
t7Yilx6h7J70BfNzld+VR06jMX5mTd0Evuv4hf3mZNat+gyagp9Yi+uzrnIQ
ck3fwLkfbWc8NIdzw6/AZ+dd9lV8yr6wB6yvcYf13fnuRJxk/cETrIs6xnzR
ZugvW9n3BfJpceB3y2IXq8wozo23WH9W2cFb2SFsFfuKsLN9CPs6/1J6OO3L
fAUVf+tvP5B9kTd+lXmfpF+Rf5bMGyEr+N58H3TSC+ardEPOv+GXxgXkMzvg
f/pPiznnvY3ItQC9aUE7+f54vdK7iu9A/N3agrxmJPjcbfCx4hawXhvGeaf6
Qg+1gW9mb/Yt6an0kXpfxv677hI/zW4Jv4J6t4XPzMw7sq/xOmjpi7LOGXum
UOiltfeIlwTho3fwFL04zc4KdXuORQ/DK3P+V8jhbkAfVgg47QMpyFNAfjCq
Q+1t5AP3Y/zPqIX/aQ2ilP2Ib634iZzjjr0q1L64VeQxXqRcF3mWzL8k/J0e
WXLuqQ1XZL7rqlxZV3Wri50eC9U+nFYg89vHCLXsgF9kvNTvhvBvXyD6MYNL
CX4zrDX4M/eAO62NyGHmDxHq1JmDfNUVDs8Q8M0jD1qlVN6OxZ7mozHQPYGs
DxvF/m9SRe9a09xr+K1+Cr+ccFzGcyJOCm2y46ys9+6SLXzufyt4jcT9F2X/
xroy7864dUHml807j35HM187I0/wDGonePXY98X+ju8b4L14UPDawWUFrzVz
M3gDVX3qE6TyOfYy5mIvtyV+b61U+XzpAfxjfThxdS9A9KpVShJ5tFa5h2U+
2UhHT40Fn/lsmNjTPvYA+z5fIFR7z0fs5Yan58u83+dXhX5UTtabCejDHVgI
7egtON3ctTeFv1f0XfTwSHC6vx0WnFqpg+DMVvn7kKloc2grlSfGr8Qf2+O/
+vGmjPO82H//MvJ6xYrdtFdZjszn/eOEzH9aDT/tfFDi0Fo8WORxfx5NfJY0
FjtYE2bKd3udB355OFn82E00cmTs0QM7x8XKWJ9eW/Rirs0SnPqxD/CjvRXB
N3QHdnhCfXB3+IMnUuX/VtQVp5Oqs2+T1/TURdAWxcR9h42Czw1ccA7cPc4I
zWkn+rZr1hN/ckcuEP3aXfZx/tcXhFrvbmI+k/xi33rM+uYr88FbX/xY75kt
enLPfX5Zzl3QQOLWXb5E9GGdWyv60uocIi6Lx2OnoC4qD9M/GJn4p5nLd+PR
IPBPon/Sc8i7dv01xPWfcYLPPDtPznV/GIAftSqWeNSiQ+Vc81aorDdiTwg1
c0YI1Ytu41c1MsijVfqJHbWrOeSZw6WFamvKCD9zY4n4pzOsnMzrVpLg074Z
hT/sSxJ87mnsZjfEH/XtKn+kkm/cLR+Dr7Pq65az3uwNXn1oe+Q73EL4m35d
5XzLZ7ro297jLXawojJFfmthLdY3ekfOdxLaybxzNE/i1w0rLbhMj12yz2jf
Uvi640MY57SFJr0QfeqTHgk+JymU881s2e/03wn//aqOv+pK/sikTtvZyh9v
EH/m//stH6WPh7WYL8mkziUGUN+qHSW/5wwiXwSEE1d3b1DP8p6DJ6mIOphi
gf+Xt/Dva+Ow06vd7Pc+QVxtrQv+eE/it46v7DPHmtSNeimyzl32lpxnxw8k
DvMzyJ8tGoCvteoTKqt+3BP8Wn36ZO2qug/8WEH1V6vxz+u5wteN6cY5m5qI
HLpnHep1zQeCS+t3hDyX2xC7tG5L/NRsI35tT3uCP0d+Bc60Adhj0tvgqlER
PJ944o9zSoi7wK18v1uBvDU1nDjsG0hfpGv4Y7Tq79fhj9on9CnmwETwRqm+
dUV77Bg4jPwUXKsQvRwWvrZXIxnrHTPA1TWLuvRGQ/R6uL/owXmSJvisd9fh
18tXUe+Da4vcevlm6CEjQuxrXRhO/FV10Mu4o/jr6P74weA95N+ZJ4nj1RPp
B6ORW2+XAJ5g1U/3UPe/RfirMUXVP89K0NGLqO8D65Gvgouw1+TF+GPQdfLk
D/PA98qfPHnnTery6M3gLI9/Of4bqWendex2Kgj7+O2lLravRN+TGEW/03Y+
+L44JOucNeEy1qrowl9P6E0+G3kU+Q3k18bil9ZdFXe91b1jJvlU20F+cX4I
B99+8Jjt1uEXh2YLTitjBThnTOO7/0/otbSJP6f3wp/neIAn7gzyeedgv3qR
1NUpS7FryjXo74FC9TPz+D4rlXi9tlrGxo1Q+O0PAV+TveAw1X12BfYzhmI/
owH9tVGO+55eL17F6ffY/89e+GPuNpHbrN+LPvGPRBkbFzwEl7WtOflxbwJ5
v/+XYherXQTyzq1Efkr1Jx+GFBBnHR3qve9V4nJGIX4d0FLw2OGpMrZjHgk1
nqZRX55OBl9HlT86z4I24n3AvUa+sf+j7rkHqX/GTb6b39QgfmOqkxc9bhPn
jzchz7dj8J8o6pP1dDXnV2gs+cQ6Eyr9iFNSDXzVKqL/B7uJp2/T8Ftf8ouZ
9hx7dY1n3ZRk4WvPGSP10CraLX2dlRwr+tUn+1KPhqv3hWXc9w2TOqhncc/T
d0Gtr/rxPYb7pNEkiz79/QHEX57K+x8Poz5VPY/ffLoWfQcPF1x69lXpU92f
O0gfoMVXpG8eF0qdKB5F/+L6wW9Fd6jXM8FrD3mBH2+IRG/D78F/zTpw3/8e
/5/vhf5PNARHOeq5+SF2NFImQReSd6wI7n9OOvdK08cDO1ffRZ1osVnsqFcO
od8eQt/hri+L/5RuLPo1L3tLH2d6zZB7k/PzevrTDQslf1huV+rABW/6nnEh
+HfLtvj7/CHkoRrj8ZOHB4jLhj7UxeQg6q7f2Qfw7Y4f9sBubs350JPqvSec
emGNpS9zhvSBpnLvMx9y3zQLk/H3xifJLwkZN/H/RdxnnkYQP7f98KOCYure
1gmS9/VeTfG/NiPwx2ahxHPWFvJS1F7iqkG08DXvrAHP78/gP6gn+6Yf4B46
tby6F/HeZ23k3cjK5x3CLVbvbG25B2qdqPtO8BDGL9GHFsN9yT7QC319/RN9
9wdx1IXu6eSfB5vI292OkH8iZtOfBP9InF57xXjEFOwfEEE/cK818d2qBHuW
nUofHn+LOJs1nP6pzt/pp5Y3Q46+vCdo29U722X1ftYCuW1L3Ss6q3fIZ3x3
nqv3M99g6FzyqplHH2RsPgbeghnU/y1TGE+sS7yOKESOKtuRO3Yy/WnRNvy7
2hr0svIe+WFuOfyjjCf8JrdA/uLB9Jnp2cR/f3Vvz/NS+YI+xHiJPfQYVee7
cQ90Q3jP0Ifhr0YAcehMY717lTpodurB+DL+bK5kbAXz3YjjvccsRC/OWzeR
Y+c/ob1vgT+f+5edz3ub3jMTeua/zHfZwv626nyLPtHZdoU8Uqcu50R1V/0x
dnOqxrG/t3rnTFX3phzktWbNUXoAp157maofSh/HP4VG8E6lv6ne4/IPsG8a
75fmR7fxkwA1XsU7pt3yuNLjDfZVusB3v9PQJ+fYt/KS6rOox2ZQgeDSvhvK
fC/eH/QlyGX0515u/cF9SB+k8mYb3gmNRtQN8yny6qvpb0wNan9CP+CMV+9t
p4hTI5P1TnnG7nnuyXoy+J3ZKk+1Ue86OcS//Q7+YfTju36euNDbIJeZpfZ9
p+RcjBxWuvKjwdjVOaLupwPom61o9c5bFpxa8utz/gfO4eXd
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}]}], "}"}],
  StripOnInput->False,
  Magnification->4 Inherited]], "Output",
 CellChangeTimes->{{3.739811234693652*^9, 3.739811238471654*^9}, {
   3.7398113057066545`*^9, 3.7398113113066587`*^9}, 3.7398114035416527`*^9, {
   3.7398123458803415`*^9, 3.7398123537693424`*^9}, {3.739812387172079*^9, 
   3.73981240415008*^9}, {3.7398125162916813`*^9, 3.7398125284106874`*^9}, 
   3.739812645727603*^9, {3.7398167233396544`*^9, 3.739816735836159*^9}, 
   3.7398248010308933`*^9, {3.7399157358104873`*^9, 3.7399157706464877`*^9}, {
   3.7399158216105194`*^9, 3.7399158292864914`*^9}, {3.7399169315092096`*^9, 
   3.739916952125207*^9}, {3.739918361683551*^9, 3.7399183674163733`*^9}, {
   3.739918412466813*^9, 3.7399184165299644`*^9}, {3.739918682540408*^9, 
   3.739918685523666*^9}, {3.739918725729963*^9, 3.7399187355024767`*^9}, {
   3.7399817293190536`*^9, 3.739981730740874*^9}, {3.7399818577913074`*^9, 
   3.7399818611715617`*^9}},
 CellLabel->"Out[78]=",ExpressionUUID->"638f0fdc-be4c-4043-b0e5-123574aa3015"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test Ground", "Section",
 CellChangeTimes->{{3.7395514835995884`*^9, 
  3.739551487936183*^9}},ExpressionUUID->"8cb255c6-e198-432c-bcb4-\
a09c4f1145ee"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetDecoder", "[", "\"\<Vector\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.739805960524727*^9, 3.7398059669183073`*^9}},
 CellLabel->
  "In[1260]:=",ExpressionUUID->"02ae2d9c-4198-41b0-abc8-3fe2a4951c59"],

Cell[BoxData[
 TemplateBox[{
  "NetDecoder","badtype",
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"Vector\\\\\\\"\\\"}]\\) is not a valid \
NetDecoder type.\"",2,1260,94,24699694172489704377,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739805967380761*^9},
 CellLabel->
  "During evaluation of \
In[1260]:=",ExpressionUUID->"d4766890-aa89-44bf-aceb-61395bb7cd09"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.739805967380761*^9},
 CellLabel->
  "Out[1260]=",ExpressionUUID->"3d6184f6-f3c1-45c1-98a6-e7bec394037f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Dimensions", "@", 
  RowBox[{"ImageData", "[", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/E4CBjBk45DyZ7XFJ9TIw1uOT6mZnO4pLTZCrEJbWWifk1DqkvQYxM
uLRVMzNp45JLZ2JcgkvOjlnrKy45RiYPXFItTMyHcEh90WK0x6VtMTMTznAO
YuK+jkuOidkEl9R/BtxhCdQ3E4++GTjldojj8h0VAQD9peZT
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "@", 
  RowBox[{"(", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "5"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "4"}], "}"}]}], "}"}], ")"}]}]}], "Input",
 CellChangeTimes->{{3.73964627061879*^9, 3.7396462864776597`*^9}, {
  3.739646370780693*^9, 3.739646383493784*^9}, {3.7398030104134445`*^9, 
  3.739803102142319*^9}},
 CellLabel->
  "In[1050]:=",ExpressionUUID->"216453e6-ca3d-4ef4-bff5-4e2813f0fc08"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"28", ",", "28"}], "}"}]], "Output",
 CellChangeTimes->{{3.7398030839272833`*^9, 3.7398031025657363`*^9}},
 CellLabel->
  "Out[1050]=",ExpressionUUID->"0fa5af2a-8ec3-4434-b08b-47a96874a4f1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{{3.7398030839272833`*^9, 3.7398031025810924`*^9}},
 CellLabel->
  "Out[1051]=",ExpressionUUID->"7878fb20-1921-42ce-a7b9-2a8cdaf93e1e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"m", "=", 
  RowBox[{"Partition", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Range", "[", "25", "]"}], "^", "2"}], ",", "5"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Head", "@", "m"}]}], "Input",
 CellChangeTimes->{{3.7398052619701886`*^9, 3.7398052768164454`*^9}},
 CellLabel->
  "In[1252]:=",ExpressionUUID->"8d392152-0404-41b5-be45-9b5b294fcae0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "9", ",", "16", ",", "25"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"36", ",", "49", ",", "64", ",", "81", ",", "100"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"121", ",", "144", ",", "169", ",", "196", ",", "225"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"256", ",", "289", ",", "324", ",", "361", ",", "400"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"441", ",", "484", ",", "529", ",", "576", ",", "625"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.739805269765497*^9, 3.739805277622357*^9}},
 CellLabel->
  "Out[1252]=",ExpressionUUID->"288abf6d-57ce-46b0-a8a9-9b3cb803c788"],

Cell[BoxData["List"], "Output",
 CellChangeTimes->{{3.739805269765497*^9, 3.739805277624425*^9}},
 CellLabel->
  "Out[1253]=",ExpressionUUID->"d3994e05-9de3-4558-bec9-cc0b56e094ed"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Dimensions", " ", "@", 
  RowBox[{"b", "[", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/E4CBjBk45DyZ7XFJ9TIw1uOT6mZnO4pLTZCrEJbWWifk1DqkvQYxM
uLRVMzNp45JLZ2JcgkvOjlnrKy45RiYPXFItTMyHcEh90WK0x6VtMTMTznAO
YuK+jkuOidkEl9R/BtxhCdQ3E4++GTjldojj8h0VAQD9peZT
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Head", "@", 
  RowBox[{"ArrayReshape", "[", 
   RowBox[{
    RowBox[{"b", "[", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/E4CBjBk45DyZ7XFJ9TIw1uOT6mZnO4pLTZCrEJbWWifk1DqkvQYxM
uLRVMzNp45JLZ2JcgkvOjlnrKy45RiYPXFItTMyHcEh90WK0x6VtMTMTznAO
YuK+jkuOidkEl9R/BtxhCdQ3E4++GTjldojj8h0VAQD9peZT
        "], {{0, 28}, {28, 0}}, {0, 255},
        ColorFunction->GrayLevel],
       BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{28, 28},
      PlotRange->{{0, 28}, {0, 28}}], "]"}], ",", " ", 
    RowBox[{"{", "2828", "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"loss", "=", 
  RowBox[{"MeanSquaredLossLayer", "[", 
   RowBox[{"\"\<Input\>\"", "\[Rule]", "\"\<Varying\>\""}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"loss", "[", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<Input\>\"", "\[Rule]", 
     RowBox[{"First", "@", 
      RowBox[{"b", "[", 
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/E4CBjBk45DyZ7XFJ9TIw1uOT6mZnO4pLTZCrEJbWWifk1DqkvQYxM
uLRVMzNp45JLZ2JcgkvOjlnrKy45RiYPXFItTMyHcEh90WK0x6VtMTMTznAO
YuK+jkuOidkEl9R/BtxhCdQ3E4++GTjldojj8h0VAQD9peZT
          "], {{0, 28}, {28, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{28, 28},
        PlotRange->{{0, 28}, {0, 28}}], "]"}]}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"28", ",", "28"}], "}"}], ",", " ", 
    RowBox[{"\"\<Target\>\"", "\[Rule]", 
     RowBox[{"ArrayReshape", "[", 
      RowBox[{
       RowBox[{"b", "[", 
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/E4CBjBk45DyZ7XFJ9TIw1uOT6mZnO4pLTZCrEJbWWifk1DqkvQYxM
uLRVMzNp45JLZ2JcgkvOjlnrKy45RiYPXFItTMyHcEh90WK0x6VtMTMTznAO
YuK+jkuOidkEl9R/BtxhCdQ3E4++GTjldojj8h0VAQD9peZT
           "], {{0, 28}, {28, 0}}, {0, 255},
           ColorFunction->GrayLevel],
          BoxForm`ImageTag[
          "Byte", ColorSpace -> Automatic, Interleaving -> None],
          Selectable->False],
         DefaultBaseStyle->"ImageGraphics",
         ImageSizeRaw->{28, 28},
         PlotRange->{{0, 28}, {0, 28}}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"28", ",", "28"}], "}"}]}], "]"}]}]}], "|>"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "@", "%"}]}], "Input",
 CellChangeTimes->{{3.7398031645987444`*^9, 3.739803198390415*^9}, {
   3.7398036077179565`*^9, 3.7398036105937023`*^9}, {3.7398036648099613`*^9, 
   3.7398036690257964`*^9}, 3.7398041973048763`*^9, {3.739804314657527*^9, 
   3.7398043587840233`*^9}, {3.7398044205160737`*^9, 
   3.7398044839135604`*^9}, {3.739804549795489*^9, 3.739804583934817*^9}, {
   3.7398049736350303`*^9, 3.7398049740076256`*^9}, 3.7398050395042744`*^9, {
   3.7398050993954926`*^9, 3.739805125329423*^9}, {3.7398052062373877`*^9, 
   3.7398052115498447`*^9}, {3.7398071913320556`*^9, 3.739807233284705*^9}},
 CellLabel->
  "In[1209]:=",ExpressionUUID->"1818bb40-bce0-4eec-a21f-dd904e6f070a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "28", ",", "28"}], "}"}]], "Output",
 CellChangeTimes->{3.7398072237886634`*^9},
 CellLabel->
  "Out[1282]=",ExpressionUUID->"78bea722-04ab-4bf9-895e-f9fc311b0fb2"],

Cell[BoxData["List"], "Output",
 CellChangeTimes->{3.7398072237911067`*^9},
 CellLabel->
  "Out[1283]=",ExpressionUUID->"76392810-6e9f-41e0-9453-d0cc9ffc2fb6"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["MeanSquaredLossLayer", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014705882352941176`], {
                 RGBColor[0.557, 0.557, 0.557], 
                 RGBColor[0.33, 0.33, 0.33], 
                 Thickness[0.015029411764705883`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 18.5}, {14., 18.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.557, 0.557, 0.557], 
                 Thickness[0.015029411764705883`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{52.5, 18.5}, {44., 18.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.85, 0.85, 0.85], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{22.23,
                   18.5}, {33.5, 29.77}, {44.77, 18.5}, {33.5, 7.23}}}]}, {
                 FaceForm[{
                   RGBColor[0.56, 0.56, 0.56], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{33.5, 30.29}, {21.71, 
                  18.5}, {33.5, 6.71}, {45.29, 18.5}}, {{33.5, 29.25}, {44.25,
                   18.5}, {33.5, 7.75}, {22.75, 18.5}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{53.56, 15.4}, {51.88, 15.4}, {50.52, 16.76}, {
                  50.52, 18.44}, {50.52, 20.12}, {51.88, 21.48}, {53.56, 
                  21.48}, {55.24, 21.48}, {56.6, 20.12}, {56.6, 18.44}, {56.6,
                   16.76}, {55.24, 15.4}, {53.56, 15.4}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {0, 1, 0}}}, {{{53.56, 21.83}, {51.69, 21.83}, {50.17, 
                   20.31}, {50.17, 18.44}, {50.17, 16.57}, {51.69, 15.05}, {
                   53.56, 15.05}, {55.43, 15.05}, {56.95, 16.57}, {56.95, 
                   18.44}, {56.95, 20.31}, {55.43, 21.83}, {53.56, 21.83}}, {{
                   53.56, 21.83}, {53.56, 21.13}, {55.04, 21.13}, {56.25, 
                   19.92}, {56.25, 18.44}, {56.25, 16.96}, {55.04, 15.75}, {
                   53.56, 15.75}, {52.08, 15.75}, {50.87, 16.96}, {50.87, 
                   18.44}, {50.87, 19.92}, {52.08, 21.13}, {53.56, 21.13}, {
                   53.56, 21.83}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{13.56, 15.5}, {11.94, 15.5}, {10.62, 16.82}, {
                  10.62, 18.44}, {10.62, 20.06}, {11.94, 21.38}, {13.56, 
                  21.38}, {15.18, 21.38}, {16.5, 20.06}, {16.5, 18.44}, {16.5,
                   16.82}, {15.18, 15.5}, {13.56, 15.5}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}}}, {{{13.56, 21.73}, {11.74, 21.73}, {10.27, 
                   20.26}, {10.27, 18.44}, {10.27, 16.62}, {11.74, 15.15}, {
                   13.56, 15.15}, {15.38, 15.15}, {16.85, 16.62}, {16.85, 
                   18.44}, {16.85, 20.26}, {15.38, 21.73}, {13.56, 
                   21.73}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQLd/6OnCHnLaDx8MqkXXspg4MINCgA+efPQMCug6H
v2rE9B8ygYgf13MAa3M1gYrrQ8WNHdJAQM3AAcR1V0TwC225ri8uMILzwfqY
DB2qgcoe/tJ1MAaBzfoOMPfA+GBtezXhfIg5GlB1Bg7fQNaXqjsAya8acwwg
5lWpOcyaCQSShhD1H1Qh/jqA4MPcA+ODzbtnDHGXkwbc/+jhAwASgHiO
                   "]}]}}, ImageSize -> {40, Automatic}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"seq. of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], "\" \"",
                     "\"reals\""}, "RowDefault"], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Target\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"seq. of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], "\" \"",
                     "\"reals\""}, "RowDefault"], "SummaryItem"]}}, 
               BaselinePosition -> Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014705882352941176`], {
                 RGBColor[0.557, 0.557, 0.557], 
                 RGBColor[0.33, 0.33, 0.33], 
                 Thickness[0.015029411764705883`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 18.5}, {14., 18.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.557, 0.557, 0.557], 
                 Thickness[0.015029411764705883`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{52.5, 18.5}, {44., 18.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.85, 0.85, 0.85], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{22.23,
                   18.5}, {33.5, 29.77}, {44.77, 18.5}, {33.5, 7.23}}}]}, {
                 FaceForm[{
                   RGBColor[0.56, 0.56, 0.56], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{33.5, 30.29}, {21.71, 
                  18.5}, {33.5, 6.71}, {45.29, 18.5}}, {{33.5, 29.25}, {44.25,
                   18.5}, {33.5, 7.75}, {22.75, 18.5}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{53.56, 15.4}, {51.88, 15.4}, {50.52, 16.76}, {
                  50.52, 18.44}, {50.52, 20.12}, {51.88, 21.48}, {53.56, 
                  21.48}, {55.24, 21.48}, {56.6, 20.12}, {56.6, 18.44}, {56.6,
                   16.76}, {55.24, 15.4}, {53.56, 15.4}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {0, 1, 0}}}, {{{53.56, 21.83}, {51.69, 21.83}, {50.17, 
                   20.31}, {50.17, 18.44}, {50.17, 16.57}, {51.69, 15.05}, {
                   53.56, 15.05}, {55.43, 15.05}, {56.95, 16.57}, {56.95, 
                   18.44}, {56.95, 20.31}, {55.43, 21.83}, {53.56, 21.83}}, {{
                   53.56, 21.83}, {53.56, 21.13}, {55.04, 21.13}, {56.25, 
                   19.92}, {56.25, 18.44}, {56.25, 16.96}, {55.04, 15.75}, {
                   53.56, 15.75}, {52.08, 15.75}, {50.87, 16.96}, {50.87, 
                   18.44}, {50.87, 19.92}, {52.08, 21.13}, {53.56, 21.13}, {
                   53.56, 21.83}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{13.56, 15.5}, {11.94, 15.5}, {10.62, 16.82}, {
                  10.62, 18.44}, {10.62, 20.06}, {11.94, 21.38}, {13.56, 
                  21.38}, {15.18, 21.38}, {16.5, 20.06}, {16.5, 18.44}, {16.5,
                   16.82}, {15.18, 15.5}, {13.56, 15.5}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}}}, {{{13.56, 21.73}, {11.74, 21.73}, {10.27, 
                   20.26}, {10.27, 18.44}, {10.27, 16.62}, {11.74, 15.15}, {
                   13.56, 15.15}, {15.38, 15.15}, {16.85, 16.62}, {16.85, 
                   18.44}, {16.85, 20.26}, {15.38, 21.73}, {13.56, 
                   21.73}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQLd/6OnCHnLaDx8MqkXXspg4MINCgA+efPQMCug6H
v2rE9B8ygYgf13MAa3M1gYrrQ8WNHdJAQM3AAcR1V0TwC225ri8uMILzwfqY
DB2qgcoe/tJ1MAaBzfoOMPfA+GBtezXhfIg5GlB1Bg7fQNaXqjsAya8acwwg
5lWpOcyaCQSShhD1H1Qh/jqA4MPcA+ODzbtnDHGXkwbc/+jhAwASgHiO
                   "]}]}}, ImageSize -> {40, Automatic}], 
              GridBox[{{
                 ItemBox[
                  StyleBox["Ports", Bold]], 
                 ItemBox[""]}, {
                 StyleBox[
                  TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"seq. of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], "\" \"",
                     "\"reals\""}, "RowDefault"], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Target\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"seq. of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], "\" \"",
                     "\"reals\""}, "RowDefault"], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Loss\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}}, 
               BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 3}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("MeanSquaredLossLayer[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7398072238165464`*^9},
 CellLabel->
  "Out[1284]=",ExpressionUUID->"67aca7a1-c163-4a91-9f8d-e01953df2b5b"],

Cell[BoxData[
 TemplateBox[{
  "MeanSquaredLossLayer","invargc",
   "\"\\!\\(\\*RowBox[{\\\"1\\\"}]\\) inputs provided, \\!\\(\\*RowBox[{\\\"2\
\\\"}]\\) were expected.\"",2,1285,113,24699694172489704377,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739807223838518*^9},
 CellLabel->
  "During evaluation of \
In[1282]:=",ExpressionUUID->"10dc1839-e7c7-4e29-ac38-73a669586da4"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.7398072238571033`*^9},
 CellLabel->
  "Out[1285]=",ExpressionUUID->"ba6ce336-1426-4cb4-9d88-d783314351af"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.739807223859064*^9},
 CellLabel->
  "Out[1286]=",ExpressionUUID->"22571734-5f03-4daf-97da-4cecb5e640f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"28", ",", "28"}], "}"}]], "Input",
 CellChangeTimes->{3.739803075764016*^9},
 CellLabel->
  "In[1043]:=",ExpressionUUID->"babf0536-5d41-47b8-9a89-787eacd04a58"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"28", ",", "28"}], "}"}]], "Output",
 CellChangeTimes->{{3.7398030184307985`*^9, 3.739803025866808*^9}, {
  3.7398030609760685`*^9, 3.739803075866352*^9}},
 CellLabel->
  "Out[1043]=",ExpressionUUID->"79a31074-9cc4-4ec1-8d80-c7e5fef8dedb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"a", " ", "=", " ", 
  RowBox[{"NetDecoder", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<Image\>\"", ",", " ", "\"\<Grayscale\>\""}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"b", " ", "=", " ", 
  RowBox[{"NetEncoder", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<Image\>\"", ",", " ", 
     RowBox[{"{", 
      RowBox[{"28", ",", "28"}], "}"}], ",", " ", "\"\<Grayscale\>\""}], 
    "}"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.73964627061879*^9, 3.7396462864776597`*^9}, {
  3.739646370780693*^9, 3.739646383493784*^9}, {3.7398030104134445`*^9, 
  3.73980301344127*^9}},
 CellLabel->
  "In[1108]:=",ExpressionUUID->"fa010b29-8bc5-4b3a-937d-69d188f16a56"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetDecoder", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      PanelBox[
       GridBox[{{
          GridBox[{{
             StyleBox[
              TemplateBox[{"\"Type\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox["\"Image\"", "SummaryItem"]}, {
             StyleBox[
              TemplateBox[{"\"Color space\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox["\"Grayscale\"", "SummaryItem"]}, {
             StyleBox[
              TemplateBox[{"\"Mean image\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox["None", "SummaryItem"]}, {
             StyleBox[
              TemplateBox[{"\"Variance image\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox["None", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
           GridBoxAlignment -> {
            "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
        GridBoxAlignment -> {"Rows" -> {{Top}}}, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}], 
       BaselinePosition -> Baseline, 
       BaseStyle -> {
        ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
         3, ShowSyntaxStyles -> False}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetDecoder[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7396462867432675`*^9, 3.739646383885127*^9, 
  3.739804329574935*^9},
 CellLabel->
  "Out[1108]=",ExpressionUUID->"d164ac55-0091-4ced-b4bc-48542245da97"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetEncoder", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      PanelBox[
       GridBox[{{
          GridBox[{{
             StyleBox[
              TemplateBox[{"\"Type\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox["\"Image\"", "SummaryItem"]}, {
             StyleBox[
              TemplateBox[{"\"Image size\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox[
              RowBox[{"{", 
                RowBox[{"28", ",", "28"}], "}"}], "SummaryItem"]}, {
             StyleBox[
              TemplateBox[{"\"Color space\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox["\"Grayscale\"", "SummaryItem"]}, {
             StyleBox[
              TemplateBox[{"\"Color channels\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox["1", "SummaryItem"]}, {
             StyleBox[
              TemplateBox[{"\"Mean image\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox["None", "SummaryItem"]}, {
             StyleBox[
              TemplateBox[{"\"Variance image\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox["None", "SummaryItem"]}, {
             StyleBox[
              TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox[
              TemplateBox[{"\"3-tensor\"", "\" \"", 
                StyleBox[
                 
                 TemplateBox[{
                  "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                   "\" \"", 
                   
                   TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                  "RowDefault"], 
                 GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
              "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
           GridBoxAlignment -> {
            "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
        GridBoxAlignment -> {"Rows" -> {{Top}}}, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}], 
       BaselinePosition -> Baseline, 
       BaseStyle -> {
        ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
         3, ShowSyntaxStyles -> False}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetEncoder[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7396462867432675`*^9, 3.739646383885127*^9, 
  3.739804329602499*^9},
 CellLabel->
  "Out[1109]=",ExpressionUUID->"2a409afa-9a74-4e29-ad94-572492011b1c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "[", 
  RowBox[{"ArrayReshape", "[", 
   RowBox[{
    RowBox[{"ConstantArray", "[", 
     RowBox[{"0.5", ",", 
      RowBox[{"28", "*", "28"}]}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", "28", ",", "28"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7396459677435527`*^9, 3.739645978571994*^9}, {
  3.7396460679306936`*^9, 3.739646072385008*^9}, {3.7396461562435613`*^9, 
  3.739646170150709*^9}, {3.739646217674387*^9, 3.739646252478238*^9}, {
  3.739646289836887*^9, 3.7396462935395536`*^9}, {3.739646431071356*^9, 
  3.7396464324476624`*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"77a3d246-4ba2-4719-8c73-74f4892462b6"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztyUEKQFAUBdCfgSzCxB5kKltgBV8xUuobyG4tBbEEw/Pq3tPtVePaz1kI
YSvu6uPepRSPIX/GFJemnp5n+eW9syVJkiRJkiRJkvzLCwbOd1Q=
    "], {{0, 28}, {28, 0}}, {0., 1.},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag["Real", ColorSpace -> "Grayscale", Interleaving -> None],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{28, 28},
  PlotRange->{{0, 28}, {0, 28}}]], "Output",
 CellChangeTimes->{{3.7396459718696184`*^9, 3.739645978899598*^9}, 
   3.7396460727546277`*^9, {3.7396461580090246`*^9, 3.739646170572424*^9}, {
   3.7396462142122064`*^9, 3.7396462529615793`*^9}, {3.739646290262314*^9, 
   3.7396462939285192`*^9}, {3.739646425384534*^9, 3.7396464328848705`*^9}},
 CellLabel->"Out[95]=",ExpressionUUID->"c9cc56fb-dfbe-45e2-aa40-96b58c53c4ba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"b", "[", 
  RowBox[{"First", " ", "@", " ", "mnistDigits"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"a", "[", "%", "]"}]}], "Input",
 CellChangeTimes->{{3.7396459334309883`*^9, 3.739645961385113*^9}, {
  3.7396461819817514`*^9, 3.739646201774161*^9}, {3.739646329765486*^9, 
  3.739646416102643*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"67c62aa0-7153-4db5-a1c4-690aab0bd398"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "0.800000011920929`", ",", 
      "0.3764705955982208`", ",", "0.007843137718737125`", ",", 
      "0.3764705955982208`", ",", "0.8039215803146362`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "0.8117647171020508`", ",", 
      "0.06666667014360428`", ",", "0.0117647061124444`", ",", 
      "0.0117647061124444`", ",", "0.0117647061124444`", ",", 
      "0.07058823853731155`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "0.7882353067398071`", ",", "0.10980392247438431`", ",", 
      "0.007843137718737125`", ",", "0.0117647061124444`", ",", 
      "0.062745101749897`", ",", "0.08627451211214066`", ",", 
      "0.0117647061124444`", ",", "0.7764706015586853`", ",", 
      "0.9764705896377563`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "0.9607843160629272`", ",", "0.7647058963775635`", ",", 
      "0.12156862765550613`", ",", "0.0117647061124444`", ",", 
      "0.007843137718737125`", ",", "0.0117647061124444`", ",", 
      "0.2078431397676468`", ",", "0.6705882549285889`", ",", 
      "0.0117647061124444`", ",", "0.007843137718737125`", ",", 
      "0.5215686559677124`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "0.3607843220233917`", ",", "0.0117647061124444`", ",", 
      "0.0117647061124444`", ",", "0.0117647061124444`", ",", 
      "0.007843137718737125`", ",", "0.0117647061124444`", ",", 
      "0.0117647061124444`", ",", "0.6235294342041016`", ",", 
      "0.25882354378700256`", ",", "0.007843137718737125`", ",", 
      "0.3450980484485626`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "0.800000011920929`", 
      ",", "0.06666667014360428`", ",", "0.007843137718737125`", ",", 
      "0.007843137718737125`", ",", "0.2549019753932953`", ",", 
      "0.5529412031173706`", ",", "0.007843137718737125`", ",", 
      "0.10588235408067703`", ",", "0.8156862854957581`", ",", 
      "0.6901960968971252`", ",", "0.`", ",", "0.34117648005485535`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "0.8117647171020508`", ",", 
      "0.06666667014360428`", ",", "0.0117647061124444`", ",", 
      "0.0117647061124444`", ",", "0.2980392277240753`", ",", 
      "0.9529411792755127`", ",", "0.7058823704719543`", ",", 
      "0.5254902243614197`", ",", "0.9176470637321472`", ",", "1.`", ",", 
      "1.`", ",", "0.007843137718737125`", ",", "0.0470588244497776`", ",", 
      "0.8039215803146362`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "0.8509804010391235`", ",", 
      "0.3529411852359772`", ",", "0.007843137718737125`", ",", 
      "0.08627451211214066`", ",", "0.18431372940540314`", ",", 
      "0.6705882549285889`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "0.007843137718737125`", ",", 
      "0.0117647061124444`", ",", "0.3529411852359772`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "0.9725490212440491`", ",", "0.3019607961177826`", ",", 
      "0.0117647061124444`", ",", "0.05882352963089943`", ",", 
      "0.7215686440467834`", ",", "0.9254902005195618`", ",", 
      "0.8901960849761963`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "0.007843137718737125`", ",", 
      "0.0117647061124444`", ",", "0.23529411852359772`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "0.7764706015586853`", ",", "0.0117647061124444`", ",", 
      "0.0117647061124444`", ",", "0.7529411911964417`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "0.007843137718737125`", ",", 
      "0.0117647061124444`", ",", "0.23529411852359772`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "0.2235294133424759`", ",", "0.007843137718737125`", ",", 
      "0.2549019753932953`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "0.`", ",", "0.007843137718737125`", ",", "0.23137255012989044`", 
      ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "0.7019608020782471`", ",", "0.03529411926865578`", ",", 
      "0.0117647061124444`", ",", "0.5607843399047852`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "0.007843137718737125`", ",", 
      "0.0117647061124444`", ",", "0.41960784792900085`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "0.6666666865348816`", ",", "0.0117647061124444`", ",", 
      "0.09803921729326248`", ",", "0.9019607901573181`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "0.9725490212440491`", ",", "0.47058823704719543`", ",", 
      "0.007843137718737125`", ",", "0.2705882489681244`", ",", 
      "0.9529411792755127`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "0.6666666865348816`", ",", "0.0117647061124444`", ",", 
      "0.125490203499794`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "0.9725490212440491`", ",", "0.48627451062202454`", ",", 
      "0.0117647061124444`", ",", "0.11764705926179886`", ",", 
      "0.7215686440467834`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "0.6666666865348816`", ",", "0.0117647061124444`", ",", 
      "0.4313725531101227`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "1.`", ",", "0.8117647171020508`", ",", 
      "0.3529411852359772`", ",", "0.0117647061124444`", ",", 
      "0.32156863808631897`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "0.6627451181411743`", ",", "0.007843137718737125`", ",", 
      "0.11764705926179886`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "0.5529412031173706`", ",", 
      "0.06666667014360428`", ",", "0.007843137718737125`", ",", 
      "0.364705890417099`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "0.6666666865348816`", ",", "0.0117647061124444`", ",", 
      "0.0235294122248888`", ",", "0.4274509847164154`", ",", 
      "0.8117647171020508`", ",", "0.886274516582489`", ",", 
      "0.6666666865348816`", ",", "0.3019607961177826`", ",", 
      "0.11764705926179886`", ",", "0.007843137718737125`", ",", 
      "0.125490203499794`", ",", "0.3450980484485626`", ",", 
      "0.7803921699523926`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "0.6666666865348816`", ",", "0.0117647061124444`", ",", 
      "0.0117647061124444`", ",", "0.0117647061124444`", ",", 
      "0.10196078568696976`", ",", "0.1568627506494522`", ",", 
      "0.0117647061124444`", ",", "0.0117647061124444`", ",", 
      "0.0117647061124444`", ",", "0.23137255012989044`", ",", 
      "0.4901960790157318`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "0.8901960849761963`", ",", "0.21960784494876862`", ",", 
      "0.0117647061124444`", ",", "0.0117647061124444`", ",", 
      "0.007843137718737125`", ",", "0.0117647061124444`", ",", 
      "0.0117647061124444`", ",", "0.08627451211214066`", ",", 
      "0.4313725531101227`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "0.9019607901573181`", ",", "0.49803921580314636`", ",", 
      "0.0117647061124444`", ",", "0.007843137718737125`", ",", 
      "0.0117647061124444`", ",", "0.4470588266849518`", ",", 
      "0.8549019694328308`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
      ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.739646188899716*^9, 3.739646202118474*^9}, 
   3.739646244180478*^9, {3.739646331071579*^9, 3.7396464164464245`*^9}},
 CellLabel->"Out[91]=",ExpressionUUID->"5fe2eb57-2300-4a03-9a82-09618d20217d"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOmUkqSFIGiiHgg/0oPUqP
0iOKXjBz5ksQrSAhcQNMCwg0IPMP7Nz5cjC4k2T610+IvwQFN0L904GVFhLa
NCjcSyTtYGkJ8ZeMzB60+OqA8jeAaTGxbcjiD27ceAHWb2//fjD4A0Yf2Lfv
HYhuqKgAu09BXn4/mn9Q/Ldg1qxTYPWlpU+xqTuwYcODweAvGK0gLn4db/pD
jz8ozfDl82OwfydMuICiTkzs2mDwF7zcgOUvmPugdEJAANjdBzZufIgiLy29
G0xLSb2C+ucZ1FwweHD16tUB9R+hckNY+DI4/dXVgdPtgmnTwO5/cOECON0l
xMa+xZoOEPG8AhwudC5XHaytX0Pdew0tPYHLiQXTpx9Hzlekmo+RT6H20Npf
wPICXJ4lBAdfRoknObl10Pz3HOyeuXPB8dJQU/OGGv4Dmn+OHv6DldtYyo8X
VA3HAfLfgjlzziDbDys3aGAfGMDsAaaHs7T0V0NZGbhcALYvFiGHK8Onjw9p
kg/Q4u/BrVu3aOm/hNBQ1PpXUnIn2N47d8jKXxj+geZrYDq8h5I+AgMvgsMX
Wv7SzX8CAgeo6i95+fto+W0fmIaWV7TyFy7/LZg9+zZF5kLrTXj9AjN3ypQr
9PAPOu1gavoUJV9Aw5dUc+DtF7R2TkJ4+PWB8BeMxkifEhIzwOLR0beR4yMh
JuYNsnp4PQlLb4h2Gzh9w9uXP39QtX6hgv9QaSmpXWBaROQIPnWwcj4hPv7+
QPoHnYa1Q4D9uDNY3Y+jXwBvr1GaX+lEw+qDB/fv38fnP2A74A40/b4eDO4e
pUfpUZpONACIeg7J
    "], {{0, 28}, {28, 0}}, {0., 1.},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag["Real", ColorSpace -> "Grayscale", Interleaving -> None],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{283., Automatic},
  ImageSizeRaw->{28, 28},
  PlotRange->{{0, 28}, {0, 28}}]], "Output",
 CellChangeTimes->{{3.739646188899716*^9, 3.739646202118474*^9}, 
   3.739646244180478*^9, {3.739646331071579*^9, 3.7396464164464245`*^9}},
 CellLabel->"Out[92]=",ExpressionUUID->"bdd57797-6397-412b-92ae-4e5717c64fd7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomVariate", "[", 
  RowBox[{
   RowBox[{"NormalDistribution", "[", "]"}], ",", "nlatent"}], "]"}]], "Input",
 CellChangeTimes->{{3.7395514835995884`*^9, 3.7395515761183033`*^9}, {
  3.7395553679723654`*^9, 3.739555372051862*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"ce1618ae-157d-4bbc-956c-d07e5a884f1a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1.1500749388821876`"}], ",", 
   RowBox[{"-", "1.0895390325304017`"}], ",", "0.611584971678216`", ",", 
   RowBox[{"-", "0.4643912233589231`"}], ",", 
   RowBox[{"-", "0.35339602460989245`"}], ",", 
   RowBox[{"-", "0.8399505035812386`"}], ",", "1.1450024092869175`", ",", 
   RowBox[{"-", "1.7747706063630981`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.739555372451578*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"a34444bf-85ce-4679-b810-1bf8e6d4d9d5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetChain", "[", 
  RowBox[{"{", 
   RowBox[{"8", ",", " ", 
    RowBox[{"ElementwiseLayer", "[", 
     RowBox[{
      RowBox[{"#", "*", "0.5"}], "&"}], "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7395503880041895`*^9, 3.739550398609557*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"0de0b708-e4c7-4aae-ba9c-6fc372259861"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, BaseStyle -> GrayLevel[0.6], 
                 ImageMargins -> 0, ImageSize -> {36, Automatic}, 
                 PlotRangePadding -> 0], 
                StyleBox[
                "uninitialized", LineColor -> RGBColor[0.66, 0, 0], 
                 FrontFaceColor -> RGBColor[0.66, 0, 0], BackFaceColor -> 
                 RGBColor[0.66, 0, 0], GraphicsColor -> RGBColor[0.66, 0, 0], 
                 FontFamily -> "Roboto", FontSize -> 8, FontColor -> 
                 RGBColor[0.66, 0, 0], Background -> GrayLevel[1, 0.65]]}, 
               Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"tensor\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}, "RowsIndexed" -> {}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, BaseStyle -> GrayLevel[0.6], 
                 ImageMargins -> 0, ImageSize -> {36, Automatic}, 
                 PlotRangePadding -> 0], 
                StyleBox[
                "uninitialized", LineColor -> RGBColor[0.66, 0, 0], 
                 FrontFaceColor -> RGBColor[0.66, 0, 0], BackFaceColor -> 
                 RGBColor[0.66, 0, 0], GraphicsColor -> RGBColor[0.66, 0, 0], 
                 FontFamily -> "Roboto", FontSize -> 8, FontColor -> 
                 RGBColor[0.66, 0, 0], Background -> GrayLevel[1, 0.65]]}, 
               Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{8, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {8}, "$OutputSize" -> 8, 
                    "$InputSize" -> NeuralNetworks`SizeT, "$InputDimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 0.5, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"tensor\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"0.5`", " ", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False]}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   ImageSizeCache -> {169., {29., 35.}}, 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}, "RowsIndexed" -> {}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7395504005961494`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"ccb29947-de04-493e-8fe6-5f6a6b9d806b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "NetGraph"}]], "Input",
 CellChangeTimes->{{3.7395526841539993`*^9, 3.7395526992318234`*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"2cf0169d-bd9c-48b5-884f-0b62076b158e"],

Cell[BoxData[
 RowBox[{"\<\"\\!\\(\\*RowBox[{\\\"NetGraph\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"layer\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"layer\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{SubscriptBox[StyleBox[\\\"m\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\"\[Rule]\\\", \
SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]]}], \\\",\\\", RowBox[{SubscriptBox[StyleBox[\\\"m\\\", \
\\\"TI\\\"], \\\"2\\\"], \\\"\[Rule]\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\
\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) specifies a \
neural net defined by a graph in which the output of layer \
\\!\\(\\*SubscriptBox[StyleBox[\\\"m\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \\\
\"TI\\\"]]\\) is given as input to layer \\!\\(\\*SubscriptBox[StyleBox[\\\"n\
\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\
\"NetGraph\\\", \\\"[\\\", RowBox[{RowBox[{\\\"\[LeftAssociation]\\\", \
RowBox[{RowBox[{SubscriptBox[StyleBox[\\\"name\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\"\[Rule]\\\", \
SubscriptBox[StyleBox[\\\"layer\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]]}], \\\",\\\", RowBox[{SubscriptBox[StyleBox[\\\"name\\\", \\\"TI\
\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\"\[Rule]\\\", \
SubscriptBox[StyleBox[\\\"layer\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]]}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"\
\[RightAssociation]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{SubscriptBox[StyleBox[\\\"name\\\", \\\"TI\\\"], \
StyleBox[\\\"m1\\\", \\\"TI\\\"]], \\\"\[Rule]\\\", \
SubscriptBox[StyleBox[\\\"name\\\", \\\"TI\\\"], StyleBox[\\\"n1\\\", \
\\\"TI\\\"]]}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\
\\\"}]}], \\\"]\\\"}]\\) specifies a net with explicitly named layers.\"\>", 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/NetGraph"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.739552699899799*^9},
 CellTags->
  "Info633739538299-1323769",ExpressionUUID->"646dcfd2-b7c5-4ed0-ada0-\
4ae05019658e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"LinearLayer", "[", "8", "]"}]], "Input",
 CellChangeTimes->{{3.739552948161874*^9, 3.7395529511883698`*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"e48b707b-c47e-4d16-8acb-7fad2f20b1ee"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"scale", "=", 
  RowBox[{"ConstantTimesLayer", "[", 
   RowBox[{
    RowBox[{"\"\<Scaling\>\"", "\[Rule]", 
     RowBox[{"{", "0.5", "}"}]}], ",", 
    RowBox[{"\"\<Input\>\"", "\[Rule]", 
     RowBox[{"NetEncoder", "[", "\"\<Scalar\>\"", "]"}]}], ",", 
    RowBox[{"\"\<Output\>\"", "\[Rule]", 
     RowBox[{"NetDecoder", "[", "\"\<Scalar\>\"", "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"scale", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7395535354947248`*^9, 3.739553542220421*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"1a1466f4-0e1e-4065-b012-91a2d8a6af48"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ConstantTimesLayer", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[
               
               GraphicsComplexBox[{{0, 0}, {-0.5, 1}, {0.5, 1}, {1.5, 1}, {1, 
                 0}}, {{
                  Opacity[0.3], 
                  LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 4}}]}, {
                  AbsolutePointSize[5], 
                  RGBColor[0.33, 0.33, 0.33], 
                  PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 37], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{"\"Dimensions\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  
                  TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                   "RowWithSeparators"], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"scalar\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[
               
               GraphicsComplexBox[{{0, 0}, {-0.5, 1}, {0.5, 1}, {1.5, 1}, {1, 
                 0}}, {{
                  Opacity[0.3], 
                  LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 4}}]}, {
                  AbsolutePointSize[5], 
                  RGBColor[0.33, 0.33, 0.33], 
                  PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 37], 
              GridBox[{{
                 ItemBox[
                  StyleBox["Parameters", Bold]], 
                 ItemBox[""]}, {
                 StyleBox[
                  TemplateBox[{"\"Dimensions\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  
                  TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"1\""}, 
                   "RowWithSeparators"], "SummaryItem"]}, {
                 ItemBox[
                  StyleBox["Arrays", Bold], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]], 
                 ItemBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                   "CacheGraphics" -> False], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]]}, {
                 StyleBox[
                  TemplateBox[{"\"Scaling\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 ItemBox[
                  StyleBox["Ports", Bold], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]], 
                 ItemBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                   "CacheGraphics" -> False], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]]}, {
                 StyleBox[
                  TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"scalar\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"scalar\"", "SummaryItem"]}}, 
               BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 3}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ConstantTimesLayer[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.739553536963663*^9, 3.739553542560365*^9}},
 CellLabel->"Out[68]=",ExpressionUUID->"c0dca769-0cf8-465a-8442-8bf2243a7064"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.5`", ",", "1.`", ",", "1.5`"}], "}"}]], "Output",
 CellChangeTimes->{{3.739553536963663*^9, 3.7395535428073683`*^9}},
 CellLabel->"Out[69]=",ExpressionUUID->"aaefcfd2-7d0f-471f-839c-f2558687df55"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"elem", "=", 
  RowBox[{"ElementwiseLayer", "[", 
   RowBox[{
    RowBox[{"#", "*", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "&"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7395551901539154`*^9, 3.739555195664076*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"13a9a81f-ae02-4ad8-876b-99cf6015df85"],

Cell[BoxData[
 TemplateBox[{
  "ElementwiseLayer","invscf",
   "\"\\!\\(\\*RowBox[{RowBox[{\\\"#1\\\", \\\" \\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \\\"3\\\"}], \
\\\"}\\\"}]}], \\\"&\\\"}]\\) could not be symbolically evaluated as a \\!\\(\
\\*RowBox[{\\\"\\\\\\\"unary\\\\\\\"\\\"}]\\) scalar function.\"",2,110,30,
   24697668008397269180,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7395551968783965`*^9},
 CellLabel->
  "During evaluation of \
In[110]:=",ExpressionUUID->"5fd3dd66-724b-4a86-9a8f-0e231285c7e9"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.7395551968949056`*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"d2681ea3-20ae-4ee5-b218-fc0e33d7474a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "*", "{"}]], "Input",
 CellChangeTimes->{{3.7395555758141074`*^9, 
  3.739555578436471*^9}},ExpressionUUID->"fed3c233-4f38-479a-b72d-\
5f5d14bfe5f4"]
}, Open  ]]
},
WindowSize->{1500, 917},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>0.9 Inherited,
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 7, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info633739538299-1323769"->{
  Cell[633195, 12624, 2465, 41, 30, "Print",ExpressionUUID->"646dcfd2-b7c5-4ed0-ada0-4ae05019658e",
   CellTags->"Info633739538299-1323769"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info633739538299-1323769", 645598, 12907}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[583, 22, 163, 3, 48, "Subsection",ExpressionUUID->"a97b6548-7444-4f52-8385-55f7e3aac111"],
Cell[749, 27, 441, 8, 45, "Input",ExpressionUUID->"d8eb4aa3-ea91-4560-a5e4-89e2aa5ad890"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1227, 40, 230, 4, 48, "Subsection",ExpressionUUID->"8fef335a-119a-4684-9c73-4161c696fc69"],
Cell[CellGroupData[{
Cell[1482, 48, 468, 10, 26, "Input",ExpressionUUID->"37b3c95e-cf6e-4345-8213-2834e7838772"],
Cell[1953, 60, 14754, 294, 65, "Output",ExpressionUUID->"95c94cc8-d4dc-4eda-ae3d-761776f5e256"]
}, Open  ]],
Cell[16722, 357, 2697, 44, 225, "Input",ExpressionUUID->"b61fd62d-6249-4276-95f6-4e6f7dbc912f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19456, 406, 170, 3, 48, "Subsection",ExpressionUUID->"1d510bfb-5494-494c-a291-1cda52559c0d"],
Cell[19629, 411, 2091, 41, 99, "Input",ExpressionUUID->"5ffd5e94-746f-4af8-ba2d-32f494356219"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21757, 457, 159, 3, 48, "Subsection",ExpressionUUID->"b8773a27-cd1e-48ec-8d51-81bf6ff63b4b"],
Cell[21919, 462, 3312, 56, 351, "Input",ExpressionUUID->"edbf0ee2-cf30-4d82-9dab-f9b0c346225e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25268, 523, 159, 3, 48, "Subsection",ExpressionUUID->"1510df37-b6e3-4059-8d8a-68933a55834f"],
Cell[CellGroupData[{
Cell[25452, 530, 3768, 69, 189, "Input",ExpressionUUID->"f0396d21-c023-4886-859b-4555aa089e09"],
Cell[29223, 601, 39277, 795, 77, "Output",ExpressionUUID->"5922d144-8d84-42c2-ab1e-263096e728bd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68537, 1401, 179, 3, 26, "Input",ExpressionUUID->"cd8471b6-4cdc-45fd-b167-bbeeefcad251"],
Cell[68719, 1406, 204, 4, 30, "Output",ExpressionUUID->"c279ac73-f6f2-4001-a6ae-ff3a34cb8a18"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[68972, 1416, 262, 4, 48, "Subsection",ExpressionUUID->"1de5c636-2c07-4bc9-98bb-1e273b057422"],
Cell[CellGroupData[{
Cell[69259, 1424, 3184, 66, 261, "Input",ExpressionUUID->"a483c109-1890-41a9-a395-427c3de3b8fa"],
Cell[72446, 1492, 53191, 1065, 77, "Output",ExpressionUUID->"b6a1ef13-78d1-4f3c-b625-e66d786ccf9c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[125686, 2563, 156, 3, 48, "Subsection",ExpressionUUID->"ad5e5560-d72d-44fd-87ec-5a9600863698"],
Cell[CellGroupData[{
Cell[125867, 2570, 1818, 35, 153, "Input",ExpressionUUID->"7d2529f9-03da-4c54-9557-09b8b5cee6ea"],
Cell[127688, 2607, 37738, 765, 77, "Output",ExpressionUUID->"2d4958b1-c8c4-4a57-a878-8791d14aab06"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[165475, 3378, 333, 5, 51, "Section",ExpressionUUID->"1625ce47-7e38-4ccf-93bd-d49aa95d21db"],
Cell[CellGroupData[{
Cell[165833, 3387, 170, 3, 48, "Subsection",ExpressionUUID->"0cd985cc-3af6-4533-854e-e0be71215472"],
Cell[CellGroupData[{
Cell[166028, 3394, 7497, 132, 585, "Input",ExpressionUUID->"31419281-fdd4-4dbc-8105-f2287a04b63a"],
Cell[173528, 3528, 129874, 2527, 77, "Output",ExpressionUUID->"78a2de90-f5d2-473b-838e-78731d95e92a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[303451, 6061, 308, 5, 48, "Subsection",ExpressionUUID->"4d8708ae-94a3-460d-b70f-ce3a512d387e"],
Cell[303762, 6068, 1751, 28, 26, "Input",ExpressionUUID->"a7c64f03-a37b-4ff4-8fa9-4bfc6c4beb84"],
Cell[CellGroupData[{
Cell[305538, 6100, 1496, 27, 63, "Input",ExpressionUUID->"bc184bf2-cdcb-4b06-8822-87c061f3da92"],
Cell[307037, 6129, 62649, 1315, 176, "Output",ExpressionUUID->"21a6521a-a309-496f-91a2-9da95e573e4f"]
}, Open  ]],
Cell[369701, 7447, 549, 13, 45, "Input",ExpressionUUID->"428efe7e-29c3-462a-8c93-0313a0eddbc5"],
Cell[CellGroupData[{
Cell[370275, 7464, 2906, 48, 99, "Input",ExpressionUUID->"8fceabf9-ec10-47c1-a295-9b3b7892aa3b"],
Cell[373184, 7514, 127646, 2496, 77, "Output",ExpressionUUID->"c7ef1657-0286-4061-99dc-d945702d79f0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[500879, 10016, 158, 3, 48, "Subsection",ExpressionUUID->"2a188410-2540-4cfd-b762-b5b3e6ba0374"],
Cell[CellGroupData[{
Cell[501062, 10023, 3215, 59, 153, "Input",ExpressionUUID->"b9810408-eec2-4e6e-bc82-b51ac6a95600"],
Cell[504280, 10084, 56461, 981, 279, "Output",ExpressionUUID->"638f0fdc-be4c-4043-b0e5-123574aa3015"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[560802, 11072, 158, 3, 60, "Section",ExpressionUUID->"8cb255c6-e198-432c-bcb4-a09c4f1145ee"],
Cell[CellGroupData[{
Cell[560985, 11079, 228, 4, 26, "Input",ExpressionUUID->"02ae2d9c-4198-41b0-abc8-3fe2a4951c59"],
Cell[561216, 11085, 381, 9, 20, "Message",ExpressionUUID->"d4766890-aa89-44bf-aceb-61395bb7cd09"],
Cell[561600, 11096, 160, 3, 30, "Output",ExpressionUUID->"3d6184f6-f3c1-45c1-98a6-e7bec394037f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[561797, 11104, 1172, 28, 58, "Input",ExpressionUUID->"216453e6-ca3d-4ef4-bff5-4e2813f0fc08"],
Cell[562972, 11134, 229, 5, 30, "Output",ExpressionUUID->"0fa5af2a-8ec3-4434-b08b-47a96874a4f1"],
Cell[563204, 11141, 227, 5, 30, "Output",ExpressionUUID->"7878fb20-1921-42ce-a7b9-2a8cdaf93e1e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[563468, 11151, 383, 10, 45, "Input",ExpressionUUID->"8d392152-0404-41b5-be45-9b5b294fcae0"],
Cell[563854, 11163, 697, 18, 30, "Output",ExpressionUUID->"288abf6d-57ce-46b0-a8a9-9b3cb803c788"],
Cell[564554, 11183, 181, 3, 30, "Output",ExpressionUUID->"d3994e05-9de3-4558-bec9-cc0b56e094ed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[564772, 11191, 4029, 91, 139, "Input",ExpressionUUID->"1818bb40-bce0-4eec-a21f-dd904e6f070a"],
Cell[568804, 11284, 213, 5, 30, "Output",ExpressionUUID->"78bea722-04ab-4bf9-895e-f9fc311b0fb2"],
Cell[569020, 11291, 159, 3, 24, "Output",ExpressionUUID->"76392810-6e9f-41e0-9453-d0cc9ffc2fb6"],
Cell[569182, 11296, 14096, 278, 51, "Output",ExpressionUUID->"67aca7a1-c163-4a91-9f8d-e01953df2b5b"],
Cell[583281, 11576, 403, 9, 16, "Message",ExpressionUUID->"10dc1839-e7c7-4e29-ac38-73a669586da4"],
Cell[583687, 11587, 162, 3, 24, "Output",ExpressionUUID->"ba6ce336-1426-4cb4-9d88-d783314351af"],
Cell[583852, 11592, 171, 4, 24, "Output",ExpressionUUID->"22571734-5f03-4daf-97da-4cecb5e640f0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[584060, 11601, 200, 5, 21, "Input",ExpressionUUID->"babf0536-5d41-47b8-9a89-787eacd04a58"],
Cell[584263, 11608, 278, 6, 24, "Output",ExpressionUUID->"79a31074-9cc4-4ec1-8d80-c7e5fef8dedb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[584578, 11619, 688, 17, 36, "Input",ExpressionUUID->"fa010b29-8bc5-4b3a-937d-69d188f16a56"],
Cell[585269, 11638, 2111, 50, 73, "Output",ExpressionUUID->"d164ac55-0091-4ced-b4bc-48542245da97"],
Cell[587383, 11690, 3285, 77, 110, "Output",ExpressionUUID->"2a409afa-9a74-4e29-ad94-572492011b1c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[590705, 11772, 681, 14, 12, "Input",ExpressionUUID->"77a3d246-4ba2-4719-8c73-74f4892462b6"],
Cell[591389, 11788, 834, 16, 20, "Output",ExpressionUUID->"c9cc56fb-dfbe-45e2-aa40-96b58c53c4ba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[592260, 11809, 408, 8, 21, "Input",ExpressionUUID->"67c62aa0-7153-4db5-a1c4-690aab0bd398"],
Cell[592671, 11819, 15074, 263, 208, "Output",ExpressionUUID->"5fe2eb57-2300-4a03-9a82-09618d20217d"],
Cell[607748, 12084, 1465, 28, 139, "Output",ExpressionUUID->"bdd57797-6397-412b-92ae-4e5717c64fd7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[609250, 12117, 340, 7, 12, "Input",ExpressionUUID->"ce1618ae-157d-4bbc-956c-d07e5a884f1a"],
Cell[609593, 12126, 516, 11, 14, "Output",ExpressionUUID->"a34444bf-85ce-4679-b810-1bf8e6d4d9d5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[610146, 12142, 355, 8, 12, "Input",ExpressionUUID->"0de0b708-e4c7-4aae-ba9c-6fc372259861"],
Cell[610504, 12152, 22451, 462, 41, "Output",ExpressionUUID->"ccb29947-de04-493e-8fe6-5f6a6b9d806b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[632992, 12619, 200, 3, 12, "Input",ExpressionUUID->"2cf0169d-bd9c-48b5-884f-0b62076b158e"],
Cell[633195, 12624, 2465, 41, 30, "Print",ExpressionUUID->"646dcfd2-b7c5-4ed0-ada0-4ae05019658e",
 CellTags->"Info633739538299-1323769"]
}, Open  ]],
Cell[635675, 12668, 211, 3, 12, "Input",ExpressionUUID->"e48b707b-c47e-4d16-8acb-7fad2f20b1ee"],
Cell[CellGroupData[{
Cell[635911, 12675, 667, 15, 21, "Input",ExpressionUUID->"1a1466f4-0e1e-4065-b012-91a2d8a6af48"],
Cell[636581, 12692, 7034, 153, 34, "Output",ExpressionUUID->"c0dca769-0cf8-465a-8442-8bf2243a7064"],
Cell[643618, 12847, 238, 4, 14, "Output",ExpressionUUID->"aaefcfd2-7d0f-471f-839c-f2558687df55"]
}, Open  ]],
Cell[CellGroupData[{
Cell[643893, 12856, 353, 9, 12, "Input",ExpressionUUID->"13a9a81f-ae02-4ad8-876b-99cf6015df85"],
Cell[644249, 12867, 581, 12, 9, "Message",ExpressionUUID->"5fd3dd66-724b-4a86-9a8f-0e231285c7e9"],
Cell[644833, 12881, 161, 3, 14, "Output",ExpressionUUID->"d2681ea3-20ae-4ee5-b218-fc0e33d7474a"]
}, Open  ]],
Cell[645009, 12887, 234, 6, 12, "Input",ExpressionUUID->"fed3c233-4f38-479a-b72d-5f5d14bfe5f4"]
}, Open  ]]
}
]
*)

